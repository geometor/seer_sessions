objects:
  - name: input_grid
    properties:
      - type: 2D array of integers
      - dimensions: variable (NxM, where N>=2, M>=2)
      - cell_values: single digits (0-9)
      - width: M (number of columns)
      - width_parity: derived property (even or odd based on M)
  - name: output_grid
    properties:
      - type: 2D array of integers
      - dimensions: fixed (2x2)
      - cell_values: single digits (0-9)

actions:
  - name: check_width_parity
    actor: system
    input: input_grid.width
    output: width_parity (even/odd)
    details: Determines if the number of columns in the input grid is even or odd.
  - name: extract_subgrid_conditional
    actor: system
    input:
      - input_grid
      - width_parity
    output: output_grid
    details: Selects a 2x2 subgrid based on the width_parity.
      - If width_parity is odd, selects the top-left 2x2 subgrid (rows 0-1, columns 0-1).
      - If width_parity is even, selects the top-right 2x2 subgrid (rows 0-1, columns M-2 to M-1).

relationships:
  - type: conditional_selection
    source: input_grid
    target: output_grid
    condition: width_parity
    details: >
      The output_grid is formed by selecting elements from the first two rows (row index 0 and 1) of the input_grid.
      The columns selected depend on the parity of the input_grid's width (M).
      If M is odd, columns 0 and 1 are selected.
      If M is even, columns M-2 and M-1 are selected.
    mapping_odd_width:
      - input_cell: input_grid[0][0]
        output_cell: output_grid[0][0]
      - input_cell: input_grid[0][1]
        output_cell: output_grid[0][1]
      - input_cell: input_grid[1][0]
        output_cell: output_grid[1][0]
      - input_cell: input_grid[1][1]
        output_cell: output_grid[1][1]
    mapping_even_width:
      - input_cell: input_grid[0][M-2]
        output_cell: output_grid[0][0]
      - input_cell: input_grid[0][M-1]
        output_cell: output_grid[0][1]
      - input_cell: input_grid[1][M-2]
        output_cell: output_grid[1][0]
      - input_cell: input_grid[1][M-1]
        output_cell: output_grid[1][1]