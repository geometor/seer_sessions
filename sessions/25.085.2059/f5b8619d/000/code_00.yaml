elements:
  - item: input_grid
    description: A 2D grid of pixels with colors represented by integers 0-9. Contains white (0) background pixels and one or more non-white colored pixels.
  - item: output_grid
    description: A 2D grid of pixels, always 2 times the height and 2 times the width of the input_grid.
  - item: non_white_pixel
    description: Any pixel in the input_grid with a value other than 0. These pixels define the "objects" or "shapes".
  - item: white_pixel
    description: A pixel in the input_grid with the value 0. Represents the background.
  - item: azure_pixel
    description: A pixel with the value 8. Used in the output grid.
  - item: unit_pattern
    description: An intermediate grid with the same dimensions as the input_grid. It forms the basis for the final output.
  - item: adjacency
    description: The relationship between a pixel and its 8 neighbours (horizontal, vertical, and diagonal).

transformation:
  - step: 1
    action: Identify non_white_pixels in the input_grid.
  - step: 2
    action: Create the unit_pattern grid, initially identical to the input_grid.
  - step: 3
    action: Iterate through each white_pixel in the input_grid.
  - step: 4
    condition: If a white_pixel is adjacent (including diagonals) to any non_white_pixel in the input_grid.
    result: Change the corresponding pixel in the unit_pattern to azure_pixel (8).
  - step: 5
    action: Construct the output_grid by tiling the unit_pattern 2x2.

relationships:
  - output_grid dimensions are 2x width and 2x height of input_grid dimensions.
  - output_grid is composed of four identical copies (tiling) of the unit_pattern.
  - unit_pattern dimensions are identical to input_grid dimensions.
  - Pixels in the unit_pattern retain the color of corresponding non_white_pixels from the input_grid.
  - White_pixels in the input_grid may become azure_pixels (8) or remain white_pixels (0) in the unit_pattern based on adjacency to non_white_pixels.