task_type: pattern_generation
grid_properties:
  - input_dimensions: variable width (W), fixed height (H=10 in examples)
  - output_dimensions: same as input (W x H)
background_color:
  - input: white (0)
  - output: replaced entirely
objects:
  - type: single pixel
    color: blue (1)
    location:
      input: fixed at (H-1, 0)
      output: generated pattern, one per row
  - type: background filler
    color: azure (8)
    location:
      output: all cells in a row except the one with the blue pixel
transformation_rule:
  - name: generate_column_pattern
    based_on: grid_width (W)
    pattern_type: reflection or bounce
    sequence:
      - starts at column 0 for the bottom row (H-1)
      - moves right (column index increases) one step per row upwards
      - reaches column W-1
      - moves left (column index decreases) one step per row upwards
      - reaches column 1
      - repeats from column 0 if necessary
    periodicity: (W - 1) * 2  (for W > 1), or 1 (for W = 1)
output_composition:
  - for each row 'r' from 0 to H-1:
    - calculate the target column 'c' based on the bounce pattern sequence and the row's position relative to the bottom row (H-1-r).
    - set pixel (r, c) to blue (1)
    - set all other pixels (r, c') where c' != c to azure (8)