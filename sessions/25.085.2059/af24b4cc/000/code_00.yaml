task_type: transformation

input_grid:
  size: 9x10
  structure:
    - type: grid_partition
      separators:
        horizontal: [0, 4, 8] # row indices
        vertical: [0, 3, 7] # column indices
      result: Creates 6 subgrids arranged in 2 rows and 3 columns.
  subgrids:
    - coordinates: # (row_start:row_end, col_start:col_end), python slicing convention
        - [(1, 4), (1, 3)]
        - [(1, 4), (4, 7)]
        - [(1, 4), (8, 10)]
        - [(5, 8), (1, 3)]
        - [(5, 8), (4, 7)]
        - [(5, 8), (8, 10)]
    - content: Mix of colors, including white (0).

output_grid:
  size: 4x5
  structure:
    - type: border
      color: white (0)
      thickness: 1
    - type: central_area
      size: 2x3
      coordinates: (1:3, 1:4) # (row_start:row_end, col_start:col_end)

transformation:
  mapping:
    - type: spatial
      from: input subgrid at logical position (row_idx, col_idx)
      to: output cell at (row_idx + 1, col_idx + 1)
      relation: one-to-one between 6 input subgrids and 6 output cells in the central area.
  rule:
    - description: Determine the color for each output cell in the central area.
    - steps:
        - For the corresponding input subgrid:
          - Identify all non-white pixels.
          - Count the frequency of each unique non-white color.
          - Select the color with the highest frequency.
        - Assign the selected color to the output cell.
    - assumption: No ties occur for the most frequent non-white color.