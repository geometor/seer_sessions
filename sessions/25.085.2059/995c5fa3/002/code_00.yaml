task_structure:
  input_grid_size: 4x14
  output_grid_size: 3x3
  input_partitioning:
    type: column_based
    separator: white (0) columns at index 4 and 9
    resulting_objects: three 4x4 blocks
    block_definitions:
      - name: block_1
        location: rows 0-3, columns 0-3
      - name: block_2
        location: rows 0-3, columns 5-8
      - name: block_3
        location: rows 0-3, columns 10-13
  output_construction:
    row_mapping:
      - output_row: 0
        source: block_1 characteristic color
      - output_row: 1
        source: block_2 characteristic color
      - output_row: 2
        source: block_3 characteristic color
    fill_method: Fill entire row with the characteristic color

block_analysis:
  - condition: Block contains only gray (5) pixels.
    pattern_name: All Gray
    output_color: red (2)
    observed_in: [Ex1-Blk2, Ex2-Blk3, Ex3-Blk1, Ex3-Blk3, Ex4-Blk1]
  - condition: Block contains only gray (5) and white (0) pixels.
    sub_conditions:
      - pattern: White pixels form a 2x2 square at rows 1,2 and columns 1,2.
        pattern_name: Gray+White (Square Center)
        output_color: azure (8)
        observed_in: [Ex1-Blk1, Ex4-Blk2]
      - pattern: White pixels form a 2x2 square at rows 2,3 and columns 1,2.
        pattern_name: Gray+White (Square Bottom)
        output_color: yellow (4)
        observed_in: [Ex1-Blk3, Ex2-Blk2, Ex3-Blk2]
      - pattern: White pixels are only at (1,0), (2,0), (1,3), (2,3).
        pattern_name: Gray+White (Non-Square)
        output_color: green (3)
        observed_in: [Ex2-Blk1, Ex4-Blk3]
  - condition: Block contains exactly one unique color C other than gray (5) and white (0). # Hypothetical
    output_color: C
    observed_in: []