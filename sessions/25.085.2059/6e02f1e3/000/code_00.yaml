task_type: transformation
grid_properties:
  input_size: 3x3
  output_size: 3x3
  input_colors: [2, 3, 4] # red, green, yellow
  output_colors: [0, 5]   # white, gray
objects:
  - type: grid
    description: The entire input and output structures.
  - type: pixel_groups
    description: Collections of pixels based on color.
relationships:
  - type: dependency
    description: The pattern of gray pixels in the output depends on the number of distinct non-white colors in the input.
actions:
  - action: count_distinct_colors
    input: input_grid
    description: Determine the number of unique non-white colors present in the input grid.
    output: color_count (integer: 1, 2, or 3)
  - action: generate_output_pattern
    input: color_count
    description: Create a specific 3x3 output grid pattern based on the color_count.
    conditions:
      - if: color_count == 1
        output_pattern: Top row gray (5), rest white (0).
      - if: color_count == 2
        output_pattern: Main diagonal gray (5) (top-left to bottom-right), rest white (0).
      - if: color_count == 3
        output_pattern: Anti-diagonal gray (5) (top-right to bottom-left), rest white (0).
constants:
  - name: gray_color
    value: 5
  - name: white_color
    value: 0
  - name: target_grid_size
    value: (3, 3)