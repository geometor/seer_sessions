task_description: "Generate a colored pattern based on the properties of a vertical orange line in the input."

input_grid:
  objects:
    - object_type: vertical_line
      color: orange (7)
      properties:
        - location: Defined by its top-leftmost pixel (seed_pixel).
        - height: Number of contiguous orange pixels downwards from the seed_pixel.
        - may_contain_other_colors: True (other colors might exist but don't affect the primary rule)
    - object_type: background
      color: white (0)

output_grid:
  properties:
    - dimensions: Same as input_grid.
  objects:
    - object_type: pattern
      colors: [orange (7), azure (8), white (0)]
      generation_rule:
        - step: Find seed_pixel (top-leftmost orange pixel in input).
        - step: Calculate H (height of the vertical orange line starting at seed_pixel).
        - step: For each pixel (r, c) in the output grid:
            - Calculate Manhattan distance d = abs(r - seed_r) + abs(c - seed_c) from seed_pixel.
            - Condition: If d < H:
                - If d is even: Set pixel color to azure (8).
                - If d is odd: Set pixel color to orange (7).
            - Else: Set pixel color to white (0).
    - object_type: background
      color: white (0) (default, unless overwritten by the pattern)

constants:
  colors:
    orange: 7
    azure: 8
    white: 0