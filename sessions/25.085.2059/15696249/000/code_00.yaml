task_type: grid_transformation
input_grid_size: 3x3
output_grid_size: 9x9
background_color: 0 # white
transformation: tiling
tiling_factor: 3
elements:
  - object: input_grid
    properties:
      - dimensions: 3x3
      - contains: pixels
      - may_contain: uniform_row (all pixels in a row have the same color)
      - may_contain: uniform_column (all pixels in a column have the same color)
  - object: output_grid
    properties:
      - dimensions: 9x9
      - contains: pixels
      - background: color 0 (white)
relationship:
  - rule: The input_grid is tiled 3 times to form a pattern within the output_grid.
  - condition: If a uniform_row exists in the input_grid:
    action:
      - orientation: horizontal_tiling (input | input | input) forming a 3x9 block.
      - placement: The 3x9 block is placed in the output_grid vertically aligned with the position of the uniform_row (top row -> top placement, middle row -> middle placement, bottom row -> bottom placement).
  - condition: Else if a uniform_column exists in the input_grid:
    action:
      - orientation: vertical_tiling (input stacked on input stacked on input) forming a 9x3 block.
      - placement: The 9x3 block is placed in the output_grid horizontally aligned with the position of the uniform_column (left column -> left placement, middle column -> middle placement, right column -> right placement).
  - default_action: Fill the remaining areas of the output_grid with the background_color.
assumptions:
  - Exactly one uniform row or column exists in each input grid.