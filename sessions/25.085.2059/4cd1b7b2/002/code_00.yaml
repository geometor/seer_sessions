task_description: Fill white pixels in each row to ensure the row contains all colors from the set {blue, red, green, yellow}.
grid_properties:
  - transformation_scope: row-independent
  - background_color: white (0)
objects:
  - object_type: pixel
    properties:
      - color: integer 0-9 (white, blue, red, green, yellow are relevant)
      - position: (row, column)
  - object_type: row
    properties:
      - pixels: list of pixels in the row
      - present_colors: set of colors {blue, red, green, yellow} found in the row
      - missing_colors: set of colors {blue, red, green, yellow} NOT found in the row
      - white_pixels: list of pixels with color white(0), identified by column index
actions:
  - action: process_grid
    actor: system
    input: input_grid
    output: output_grid
    steps:
      - For each row in the input_grid:
          - Identify present_colors (from {1, 2, 3, 4}).
          - Identify missing_colors (from {1, 2, 3, 4}).
          - Identify white_pixels (by column index).
          - Calculate sum_present = sum(present_colors).
          - Calculate sum_missing = sum(missing_colors).
          - Determine assignment_order:
              - IF sum_missing < sum_present THEN order = descending
              - ELSE order = ascending
          - Sort missing_colors according to assignment_order.
          - Sort white_pixels by column index (ascending).
          - Assign the sorted missing_colors to the sorted white_pixel positions.
          - Keep non-white pixels unchanged.
      - Construct the output_grid from the modified rows.
target_colors: [blue (1), red (2), green (3), yellow (4)]