task_description: |
  Extract all non-white pixels from the input grid and arrange them sequentially into a 3x3 output grid. The extraction order is column by column, top to bottom. The placement order into the 3x3 grid follows a specific pattern: the first row is filled left-to-right, the second row is filled right-to-left, and the third row is filled left-to-right. If fewer than 9 non-white pixels exist, the remaining cells in the 3x3 grid are filled with white (0).

grid_properties:
  - input_grid:
      variable_size: true
      max_dimensions: (30, 30)
      pixels: integers 0-9 (colors)
  - output_grid:
      fixed_size: (3, 3)
      pixels: integers 0-9 (colors)
      background: 0 (white)

objects:
  - object: pixel
    properties:
      color: integer value 0-9
      is_white: property where color == 0
      is_non_white: property where color != 0
    count: variable (up to input_height * input_width)

actions:
  - action: scan_input
    description: Iterate through the input grid column by column, from left to right. Within each column, iterate row by row, from top to bottom.
    input: input_grid
    output: ordered_list_of_non_white_pixels

  - action: create_output_grid
    description: Initialize a 3x3 grid filled with white pixels (0).
    output: output_grid

  - action: fill_output_grid
    description: |
      Place pixels from the ordered_list_of_non_white_pixels into the output_grid according to a specific sequence:
      - Place pixels 1, 2, 3 into output cells (0,0), (0,1), (0,2) respectively.
      - Place pixels 4, 5, 6 into output cells (1,2), (1,1), (1,0) respectively (reversed order for row 1).
      - Place pixels 7, 8, 9 into output cells (2,0), (2,1), (2,2) respectively.
      If the list runs out of pixels, subsequent cells remain white (0).
    input:
      - ordered_list_of_non_white_pixels
      - output_grid (initialized)
    output: output_grid (filled)

sequence:
  1. scan_input
  2. create_output_grid
  3. fill_output_grid