task_description: Determine the output color (blue or orange) based on the connectivity and symmetry of red pixels in the input grid.
input_features:
  - grid: A 2D array of pixels (0-9).
  - target_pixels: Pixels with value 2 (red).

objects:
  - name: red_component
    description: A group of connected red pixels (using 8-way adjacency).
    properties:
      - count: The number of distinct red components in the grid.
      - shape: For single components, the minimal bounding box containing the red pixels, represented as a 2D array (red pixels = 2, background = 0).
      - horizontal_symmetry: Boolean indicating if the shape is symmetrical when flipped top-to-bottom.
      - vertical_symmetry: Boolean indicating if the shape is symmetrical when flipped left-to-right.

actions:
  - name: find_connected_components
    input: grid, target_color (red=2)
    output: list of red_components
    description: Identifies all distinct groups of connected red pixels using 8-way adjacency.
  - name: count_components
    input: list of red_components
    output: integer count
  - name: extract_shape
    input: red_component (if count is 1)
    output: shape (2D array)
    description: Creates the minimal bounding box representation of the component.
  - name: check_horizontal_symmetry
    input: shape
    output: boolean
  - name: check_vertical_symmetry
    input: shape
    output: boolean
  - name: determine_output_color
    input: component_count, horizontal_symmetry (optional), vertical_symmetry (optional)
    output: color (blue=1 or orange=7)
    description: >
      Applies the core logic:
      If component_count > 1, output blue.
      If component_count == 1:
        If horizontal_symmetry OR vertical_symmetry is True, output blue.
        Else, output orange.
      If component_count == 0, output blue (default assumption).

output_features:
  - grid: A 1x1 grid containing a single pixel.
  - value: Either 1 (blue) or 7 (orange).

examples_summary:
  - example: 1
    component_count: 2
    output: 1 (blue) - Correct
  - example: 2
    component_count: 1
    H_symmetry: False
    V_symmetry: False
    output: 7 (orange) - Correct (Revised Logic)
  - example: 3
    component_count: 1
    H_symmetry: False
    V_symmetry: False
    output: 7 (orange) - Correct
  - example: 4
    component_count: 1
    H_symmetry: False
    V_symmetry: False
    output: 7 (orange) - Correct
  - example: 5
    component_count: 2
    output: 1 (blue) - Correct
  - example: 6
    component_count: 1
    H_symmetry: True
    V_symmetry: True
    output: 1 (blue) - Correct