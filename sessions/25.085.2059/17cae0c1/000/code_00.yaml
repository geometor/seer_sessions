task_dimensionality: 2D
grid_size_input: [3, 9]
grid_size_output: [3, 9]
input_colors: [white, gray]
output_colors: [blue, green, yellow, magenta, maroon] # Based on observed examples

components:
  - type: grid_division
    scope: input
    method: horizontal
    count: 3
    subgrid_size: [3, 3]
    description: The input grid is divided into three adjacent 3x3 subgrids.

  - type: subgrid_pattern
    description: An object representing the configuration of gray pixels within a 3x3 input subgrid. White pixels define the background.
    properties:
      - configuration: The specific arrangement of gray (5) pixels.

  - type: output_block
    description: A 3x3 grid filled entirely with a single color.
    properties:
      - color: The fill color.
      - size: [3, 3]

relationships:
  - type: mapping
    from: subgrid_pattern (input)
    to: output_block color (output)
    rule: Each unique input subgrid pattern maps to a specific output color.
    instances:
      - input_pattern: [[5, 5, 5], [0, 0, 0], [0, 0, 0]] -> output_color: magenta (6)
      - input_pattern: [[5, 0, 5], [5, 0, 5], [5, 5, 5]] -> output_color: green (3)
      - input_pattern: [[5, 5, 5], [5, 0, 5], [5, 5, 5]] -> output_color: green (3)
      - input_pattern: [[0, 0, 0], [0, 0, 0], [5, 5, 5]] -> output_color: blue (1)
      - input_pattern: [[0, 0, 5], [0, 5, 0], [5, 0, 0]] -> output_color: maroon (9)
      - input_pattern: [[0, 0, 0], [0, 5, 0], [0, 0, 0]] -> output_color: yellow (4)

  - type: positional_correspondence
    from: input 3x3 subgrid at column index `3*i`
    to: output 3x3 block at column index `3*i`
    description: The i-th input subgrid (from left to right, starting at 0) determines the color of the i-th output block.

actions:
  - name: identify_pattern
    input: 3x3 input subgrid
    output: unique pattern identifier (based on gray pixel locations)
  - name: map_pattern_to_color
    input: unique pattern identifier
    output: specific color value
  - name: create_output_block
    input: color value
    output: 3x3 grid filled with the input color
  - name: assemble_output
    input: sequence of 3 output blocks
    output: final 3x9 output grid by horizontal concatenation
