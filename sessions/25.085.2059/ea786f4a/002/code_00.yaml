task_description: Transform an input grid based on the Manhattan distance and relative position to a single white anchor pixel.
grid_properties:
  - Input and output grids have the same dimensions.
  - Input grids contain exactly one white pixel (color 0), acting as an anchor.
  - All other pixels in the input grid have the same, non-white color (e.g., red, blue, green).
  - Output grids contain only white (0) and the non-white color from the input.
objects:
  - type: pixel
    properties:
      - color: integer (0-9)
      - coordinates: (row, column)
      - manhattan_distance_from_anchor: integer >= 0
      - is_anchor: boolean (true if color is 0)
      - shares_row_or_col_with_anchor: boolean
transformation_rule_elements:
  - anchor_pixel: The single pixel with color 0 in the input grid. Coordinates (r0, c0).
  - target_pixel: Any pixel in the grid at coordinates (r, c) with original color C.
  - distance: Manhattan distance `d = abs(r - r0) + abs(c - c0)`.
  - condition_distance_parity: Check if `d` is even or odd.
  - condition_position: Check if `r == r0` or `c == c0`.
actions:
  - find: Locate the anchor pixel (r0, c0).
  - iterate: Process each pixel (r, c) in the input grid.
  - calculate: Compute the Manhattan distance `d`.
  - conditional_change: Modify the color of the pixel based on distance and position relative to the anchor.
    - Keep original color if:
      - `d == 0` (anchor pixel)
      - `d` is odd
      - `d` is even AND (`r == r0` OR `c == c0`)
    - Change color to white (0) if:
      - `d` is even AND `d > 0` AND (`r != r0` AND `c != c0`)