observations:
  - task_type: transformation
  - grid_properties:
      - dimensions: variable square grids (3x3, 5x5, 7x7 in examples)
      - colors: Multiple colors possible (white, blue, red, green in examples).
      - background_color: A single dominant color (blue, red, or green in examples) fills most of the grid initially.
  - objects:
      - type: anchor_pixel
        count: 1 per input grid
        color: white (0)
        property: Always present.
        location: Variable, appears central in examples.
        role: Defines the center/origin for the transformation pattern.
      - type: other_pixels
        color: Any color other than white (0). Initially, mostly one background color.
        role: Pixels subject to potential color change based on position relative to the anchor.
  - transformation_rule: positional_relative_to_anchor
  - geometry: The transformation creates a pattern based on diagonals centered on the anchor pixel.
  - conditions_for_change:
      - identify the anchor pixel coordinates (r0, c0).
      - for each pixel (r, c):
          - calculate row difference relative to anchor: dr = r - r0
          - calculate column difference relative to anchor: dc = c - c0
          - evaluate condition: Is the absolute row difference equal to the absolute column difference? `abs(dr) == abs(dc)`
  - action_if_condition_met:
      - change pixel color at (r, c) to white (0).
  - action_if_condition_not_met:
      - pixel at (r, c) retains its original color from the input grid.
  - output_grid:
      - dimensions: same as input grid.
      - content: Contains pixels turned white along the diagonals passing through the original anchor location, with other pixels retaining their input color.