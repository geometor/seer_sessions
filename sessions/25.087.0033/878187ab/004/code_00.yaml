Input_Grid:
  Properties:
    - Height: H
    - Width: W
    - Pixels: Each cell has a color value (0-9).
  Objects:
    - Background: Defined by the color orange (7).
    - Foreground_Pixels: Any pixel with a color different from orange (7).

Output_Grid:
  Properties:
    - Height: H'
    - Width: W'
    - Pixels: Each cell has a color value (0-9).
  Objects:
    - Background: Filled with the color orange (7).
    - Pattern: A specific shape drawn if the condition is met.

Transformation_Rule:
  Condition:
    - Check if the Input_Grid contains any Foreground_Pixels.
  Actions:
    - If Condition is False:
        - Output_Grid is identical to Input_Grid. (H'=H, W'=W)
    - If Condition is True:
        - Determine Output Dimensions:
            - H' = 16
            - W' = W
        - Initialize Output_Grid: Create a grid of size H' x W' filled with orange (7).
        - Calculate Pattern Width (PW):
            - If W is even, PW = W - 6.
            - If W is odd, PW = W - 8.
            - Ensure PW >= 1.
        - Define Pattern Properties:
            - Height: 5 rows.
            - Width: PW columns.
            - Colors: Red (2) and Yellow (4).
            - Placement: Bottom-left corner of Output_Grid (starts at row H' - 5, column 0).
        - Draw Pattern:
            - Iterate through the 5 x PW area.
            - Set color to Yellow (4) for cells on two diagonals:
                - Diagonal 1 (relative coords): `col == (5 - 1) - row`
                - Diagonal 2 (relative coords): `col == (PW - 1) - ((5 - 1) - row)`
            - Set color to Red (2) for all other cells within the 5 x PW area.
        - Result: The Output_Grid contains the background and the drawn pattern.