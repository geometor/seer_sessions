background_color: orange # Value 7
foreground_colors: [azure, magenta, yellow, gray] # Values 8, 6, 4, 5 observed in examples (any non-orange triggers the transformation)
transformation_condition:
  property: grid_content
  check: contains_any_pixel_not_equal_to_background_color
action_if_condition_false:
  type: no_change
  description: Return the input grid unmodified.
action_if_condition_true:
  type: pattern_generation
  output_grid:
    properties:
      height: max(16, input_height)
      width: input_width
      initial_fill: background_color
  pattern:
    properties:
      height: 5
      width:
        calculation: |
          if input_width is even: PW = input_width - 6
          if input_width is odd:  PW = input_width - 8
          PW = max(1, PW) # Ensure positive width
      colors: [red, yellow] # Values 2, 4
      location: bottom-left corner of output grid
      placement_origin: bottom-left cell of pattern aligns with cell (output_height - 5, 0) of output grid
      internal_structure:
        default_color: red # Value 2
        special_color: yellow # Value 4
        special_color_condition: |
          Within the pattern's 5xPW area, let pr be the relative row (0 to 4) and pc be the relative column (0 to PW-1).
          A cell (pr, pc) is yellow if:
          pc == (5 - 1) - pr  OR  pc == (PW - 1) - ((5 - 1) - pr)
          Otherwise, the cell is red.