# Global properties
background_color: 7 # orange

# Example 1 Analysis (train_1)
example_1:
  input:
    grid_size: [16, 16] # height, width
    background_color: 7
    foreground_pixels: # pixels that are not background
      count: 12
      colors: [6, 8] # magenta, azure
      locations: varied
  output:
    grid_size: [16, 16]
    background_color: 7
    pattern:
      present: true
      location: bottom-left corner (rows 11-15, cols 0-9)
      size: [5, 10] # height, width
      colors: [2, 4] # red, yellow
      structure: specific V/diamond shape based on width 10

# Example 2 Analysis (train_2)
example_2:
  input:
    grid_size: [15, 15] # height, width
    background_color: 7
    foreground_pixels:
      count: 11
      colors: [4, 5] # yellow, gray
      locations: varied
  output:
    grid_size: [16, 15] # Note height change
    background_color: 7
    pattern:
      present: true
      location: bottom-left corner (rows 11-15, cols 0-6)
      size: [5, 7] # height, width
      colors: [2, 4] # red, yellow
      structure: specific V/diamond shape based on width 7

# Transformation Rules Derived
transformation:
  trigger: Presence of any non-background pixel in the input grid.
  input_properties_used:
    - grid_width: determines pattern width
    - grid_height: may influence output height
    - background_color: used for output background
    - presence_of_foreground_pixels: triggers pattern drawing
  output_properties:
    - output_height: seems to be max(16, input_height)
    - output_width: matches input_width
    - background: filled with input background_color
    - pattern_drawing:
        - conditional: only if foreground pixels existed in input
        - fixed_height: 5 rows
        - variable_width (PW): dependent on input_width (e.g., 16 -> 10, 15 -> 7)
        - location: bottom-left corner, starting at row index output_height - 5
        - colors: red (2) and yellow (4)
        - yellow_rule: cell(pr, pc) is yellow if pc == 4 - pr or pc == (PW - 1) - (4 - pr)
        - red_rule: cell(pr, pc) is red otherwise within the pattern bounds
  fallback: If no foreground pixels in input, output equals input (assumed).
