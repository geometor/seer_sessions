task_description: Transforms a grid by applying a shear transformation to the single non-white object. The object is shifted left, but the amount of shift decreases for rows further down the object.

examples:
  - id: 1
    input_grid_shape: [11, 13]
    output_grid_shape: [11, 13]
    object:
      color: red (2)
      shape_description: C-like shape
      bounding_box: {min_row: 3, min_col: 4, max_row: 8, max_col: 9}
    properties:
      gap_before: 4
      gap_after: 3 # 13 - 1 - 9
    transformation:
      type: shear_left
      max_shift: 4 # min(4, 3*2) = 4
      pixel_shift_rule: h_shift = max(0, 4 - (r - 3))
      # r=3, shift=4; r=4, shift=3; r=5, shift=2; r=6, shift=1; r=7, shift=0; r=8, shift=0

  - id: 2
    input_grid_shape: [10, 11]
    output_grid_shape: [10, 11]
    object:
      color: magenta (6)
      shape_description: Hollow rectangle
      bounding_box: {min_row: 3, min_col: 4, max_row: 7, max_col: 6}
    properties:
      gap_before: 4
      gap_after: 4 # 11 - 1 - 6
    transformation:
      type: shear_left
      max_shift: 4 # min(4, 4*2) = 4
      pixel_shift_rule: h_shift = max(0, 4 - (r - 3))
      # r=3, shift=4; r=4, shift=3; r=5, shift=2; r=6, shift=1; r=7, shift=0

  - id: 3
    input_grid_shape: [10, 13]
    output_grid_shape: [10, 13]
    object:
      color: green (3)
      shape_description: Irregular block shape
      bounding_box: {min_row: 3, min_col: 6, max_row: 7, max_col: 10}
    properties:
      gap_before: 6
      gap_after: 2 # 13 - 1 - 10
    transformation:
      type: shear_left
      max_shift: 4 # min(6, 2*2) = 4
      pixel_shift_rule: h_shift = max(0, 4 - (r - 3))
      # r=3, shift=4; r=4, shift=3; r=5, shift=2; r=6, shift=1; r=7, shift=0

  - id: 4
    input_grid_shape: [7, 7]
    output_grid_shape: [7, 7]
    object:
      color: azure (8)
      shape_description: Solid rectangle
      bounding_box: {min_row: 1, min_col: 1, max_row: 2, max_col: 3}
    properties:
      gap_before: 1
      gap_after: 3 # 7 - 1 - 3
    transformation:
      type: shear_left
      max_shift: 1 # min(1, 3*2) = 1
      pixel_shift_rule: h_shift = max(0, 1 - (r - 1))
      # r=1, shift=1; r=2, shift=0

  - id: 5
    input_grid_shape: [10, 11]
    output_grid_shape: [10, 11]
    object:
      color: azure (8)
      shape_description: Hollow rectangle
      bounding_box: {min_row: 2, min_col: 2, max_row: 6, max_col: 6}
    properties:
      gap_before: 2
      gap_after: 4 # 11 - 1 - 6
    transformation:
      type: shear_left
      max_shift: 2 # min(2, 4*2) = 2
      pixel_shift_rule: h_shift = max(0, 2 - (r - 2))
      # r=2, shift=2; r=3, shift=1; r=4, shift=0; r=5, shift=0; r=6, shift=0