task_description: Recolor blue pixels based on their distance to the background.

grid_properties:
  - background_color: 0 (white)
  - foreground_objects_color: 1 (blue)

objects:
  - type: contiguous_shape
    color: 1 (blue)
    description: One or more shapes composed of blue pixels, surrounded by the background color (white).
  - type: background
    color: 0 (white)
    description: The area surrounding the blue shapes.

actions:
  - identify_pixels:
      target_color: 1 (blue)
  - for_each: identified blue pixel (r, c)
    - calculate: min_manhattan_distance (d) from (r, c) to the nearest pixel that is NOT blue (color != 1).
    - determine_new_color:
        conditions:
          - if d == 0: # This case shouldn't happen for a blue pixel if non-blue exist
              new_color: 1 # Hypothetical, based on observation distance 1 pixel is color 1
          - if d > 0:
              sequence: [1, 2, 3, 2] # Blue, Red, Green, Red
              index: (d - 1) % 4
              new_color: sequence[index]
    - update_pixel: at (r, c) with the new_color in the output grid.
  - keep_pixels:
      target_color: not 1 (non-blue)
      action: Retain their original color in the output grid.

constraints:
  - Grid size varies.
  - Number and shape of blue objects vary.
  - Manhattan distance is used.
  - The color sequence [1, 2, 3, 2] repeats every 4 distance units, starting effectively from distance 1.

derived_properties:
  - distance_layers: The recoloring creates concentric layers within the blue shapes based on distance from the edge.
  - border_preservation: Blue pixels adjacent to non-blue pixels (distance 1) remain blue.