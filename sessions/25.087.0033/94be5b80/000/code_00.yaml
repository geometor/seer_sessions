task_type: object_transformation_and_arrangement

elements:
  - type: palette
    description: A horizontal, multi-row bar of unique, non-white pixels near the top. Defines an ordered sequence of colors.
    properties:
      - colors: [orange, red, blue, green] in train_1
      - colors: [yellow, blue, magenta] in train_2
      - order: determined by left-to-right position
    action: removed_in_output

  - type: template_shapes
    description: Multiple instances of the same geometric shape structure, differing only in color, located elsewhere in the grid.
    properties:
      - shape_structure: unique geometric form (e.g., 'T' shape)
      - height: H pixels
      - width: W pixels
      - colors_present_in_input: a subset of palette colors
      - common_start_column: all instances share the same leftmost column index
      - minimum_start_row: the row index of the topmost instance

relationships:
  - type: color_mapping
    description: The set of all colors used for the final output shapes is exactly the set of colors present in the input palette.
  - type: order_dependence
    description: The vertical order of shapes in the output stack matches the left-to-right order of colors in the input palette.
  - type: spatial_alignment
    description:
      - horizontal: The output stack of shapes aligns horizontally (uses the same starting column) with the original template shapes.
      - vertical: The stack is positioned so that the shape corresponding to the color of the *top-most original* template shape appears at the *same row* where that top-most original shape started. Shapes in the stack are placed contiguously, with no vertical gap.

actions:
  - identify_palette_colors_and_order
  - identify_template_shape_structure_and_dimensions
  - identify_original_template_shapes_position_and_colors
  - determine_anchor_shape (the topmost original shape)
  - calculate_output_stack_start_position (based on anchor shape color, its index in palette, and its original row)
  - generate_output_grid:
      - remove palette
      - draw the complete stack of shapes (one for each palette color in order) at the calculated position.

derived_properties:
  - stack_height: number_of_palette_colors * template_shape_height