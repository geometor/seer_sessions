task_elements:
  - element: input_grid
    description: A 2D grid of pixels with integer values 0-9 representing colors.
  - element: output_grid
    description: A 2D grid of pixels, representing a subgrid extracted from the input_grid.
  - element: vertical_line
    description: An object within the input_grid consisting of a contiguous column of identical non-white pixels spanning the full height of the grid.
    properties:
      - color: The single color of the pixels forming the line.
      - column_index: The index of the column containing the line.
      - extent: Spans the full height of the grid.
    count: Exactly 2, with distinct colors and distinct column indices.
  - element: horizontal_line
    description: An object within the input_grid consisting of a contiguous row of identical non-white pixels spanning the full width of the grid.
    properties:
      - color: The single color of the pixels forming the line.
      - row_index: The index of the row containing the line.
      - extent: Spans the full width of the grid.
    count: Exactly 2, with distinct colors and distinct row indices.
  - element: bounding_box
    description: An implicit rectangular region defined by the intersection of the rows and columns marked by the identified lines.
    properties:
      - top_row: The minimum row index of the two horizontal lines.
      - bottom_row: The maximum row index of the two horizontal lines.
      - left_col: The minimum column index of the two vertical lines.
      - right_col: The maximum column index of the two vertical lines.

transformation:
  action: extract_subgrid
  input: input_grid
  output: output_grid
  logic: The output_grid is formed by extracting the pixels from the input_grid located within the bounding_box, inclusive of the boundaries.
  steps:
    - Identify the two vertical_lines in the input_grid.
    - Determine their column_indices (col1, col2).
    - Identify the two horizontal_lines in the input_grid.
    - Determine their row_indices (row1, row2).
    - Define the bounding_box using min/max of these indices: top=min(row1, row2), bottom=max(row1, row2), left=min(col1, col2), right=max(col1, col2).
    - Extract the subgrid from input_grid[top:bottom+1, left:right+1].