task_context:
  description: Transforms a single input object into two output objects with specific placement and conditional color modification.
  grid_properties:
    - background_color: 8 (Azure)
    - grid_size: Constant (input and output have same dimensions)

input_elements:
  - element: primary_object
    description: The single contiguous non-background shape in the input grid.
    properties:
      - colors: Set of colors comprising the object.
      - location: Defined by its top-left bounding box corner (min_row, min_col).
      - pixel_coordinates: List of (row, col) relative to the top-left corner.

transformation:
  actions:
    - action: identify_object
      target: primary_object
      details: Find the single non-Azure object, its colors, and top-left position.
    - action: determine_color_swap
      condition: Check if colors of primary_object include both 1 (Blue) and 2 (Red).
      variable: needs_swap (boolean)
    - action: create_output_grid
      properties:
        - dimensions: Same as input grid.
        - initial_fill: 8 (Azure)
    - action: create_copy_A
      source: primary_object
      target_location: Calculated by adding shift_A=(4, -1) to the source object's top-left corner.
      color_modification:
        - If needs_swap is true, swap Blue(1) and Red(2) pixels.
        - Otherwise, use original colors.
      placement: Draw the (potentially color-modified) object pixels relative to the target location onto the output grid.
    - action: create_copy_B
      source: primary_object
      target_location: Calculated by adding shift_B=(0, 5) to the source object's top-left corner.
      color_modification:
        - If needs_swap is true, swap Blue(1) and Red(2) pixels.
        - Otherwise, use original colors.
      placement: Draw the (potentially color-modified) object pixels relative to the target location onto the output grid.

output_elements:
  - element: output_grid
    description: The final grid containing the two transformed copies.
    properties:
      - background_color: 8 (Azure)
      - content: Contains Copy A and Copy B placed according to the rules. Pixels outside the copies retain the background color. Overlapping pixels are determined by the draw order (though overlap doesn't seem to occur in examples). Pixels drawn outside grid boundaries are ignored.