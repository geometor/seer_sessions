task_context:
  problem_type: object_selection_and_extraction
  input_features:
    - grid: 2D array of integers (colors)
    - background_color: most frequent color in the grid
    - objects: multiple contiguous regions of non-background colors
    - object_properties:
        - color: the single color composing the object
        - pixels: list of coordinates for each pixel in the object
        - bounding_box: min/max row/col defining the smallest enclosing rectangle
        - holes: count of contiguous regions of background color completely enclosed by the object
  output_features:
    - grid: 2D array (subgrid of input)
    - content: contains exactly one object from the input
    - background: pixels not part of the object retain the original input background color
    - size: determined by the bounding box of the selected object

transformation_rules:
  - step: 1. Identify the background color (most frequent color) of the input grid.
  - step: 2. Identify all distinct contiguous objects composed of non-background colors. Assume 8-way connectivity.
  - step: 3. For each object, determine the number of holes (regions of background color fully enclosed by the object).
  - step: 4. Filter the objects, keeping only those with exactly 1 or 2 holes.
  - step: 5. Selection:
      - If the filtered list contains exactly one object, select it.
      - If the filtered list contains multiple objects:
          - Calculate the absolute difference between each object's color index and the background color index.
          - Select the object with the minimum absolute color difference.
          - (Assumption: No further ties occur in the provided examples).
  - step: 6. Determine the bounding box of the selected object.
  - step: 7. Create the output grid by copying the portion of the input grid defined by the selected object's bounding box.

example_specific_details:
  - example: train_1
    background_color: 2 (red)
    objects:
      - color: 8 (azure), shape: '5', holes: 1
      - color: 3 (green), shape: 'T', holes: 0
      - color: 1 (blue), shape: rects, holes: 0
    filtered_objects (1 or 2 holes): {color: 8}
    selected_object: color 8 (azure)
    output: bounding box of the azure object.
  - example: train_2
    background_color: 8 (azure)
    objects:
      - color: 3 (green), shape: 'H', holes: 2
      - color: 4 (yellow), shape: 'E', holes: 2
      - color: 6 (magenta), shape: 'L's, holes: 0
    filtered_objects (1 or 2 holes): {color: 3, color: 4}
    tie_breaker: |8-3|=5, |8-4|=4. Minimum difference is 4.
    selected_object: color 4 (yellow)
    output: bounding box of the yellow object.
  - example: train_3
    background_color: 1 (blue)
    objects:
      - color: 8 (azure), shape: '8', holes: 2
      - color: 3 (green), shape: 'S', holes: 2
      - color: 2 (red), shape: 'L's, holes: 0
    filtered_objects (1 or 2 holes): {color: 8, color: 3}
    tie_breaker: |1-8|=7, |1-3|=2. Minimum difference is 2.
    selected_object: color 3 (green)
    output: bounding box of the green object.
  - example: train_4
    background_color: 1 (blue)
    objects:
      - color: 2 (red), shape: '4', holes: 1
      - color: 3 (green), shape: 'M', holes: 0
      - color: 8 (azure), shape: 'H's, holes: >2 (likely 3 or 4 depending on connectivity interpretation)
    filtered_objects (1 or 2 holes): {color: 2}
    selected_object: color 2 (red)
    output: bounding box of the red object.
