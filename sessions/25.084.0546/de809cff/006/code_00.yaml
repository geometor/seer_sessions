example_1:
  objects:
    - id: green_region_1
      type: region
      color: 3
      shape: irregular
      boundary: [white_region, yellow_region]
    - id: yellow_region_1
      type: region
      color: 4
      shape: irregular
      boundary: [green_region_1, white_region]
    - id: white_region
      type: region
      color: 0
      shape: irregular
      boundary: [ green_region_1, yellow_region_1]
  actions:
    - subject: green_region_1
      relation: adjacent
      object: yellow_region_1
      result: "pixels on green_region_1 adjacent to yellow_region_1 change to 8 on boundary segments, with white pixels adjacent to the changing pixel acting as a barrier, except when a straight line of white separates two regions"
    - subject: green_region_1
      relation: adjacent
      object: yellow_region_1
      result: "pixels on yellow_region_1 adjacent to green_region_1 change to 8 if adjacent to 3 or more green pixels, _and_ the changed pixel completes a line between two regions"
example_2:
    objects:
    - id: blue_region_1
      type: region
      color: 1
      shape: irregular
      boundary: [white_region, red_region]
    - id: red_region_1
      type: region
      color: 2
      shape: irregular
      boundary: [blue_region_1,white_region]
    - id: white_region
      type: region
      color: 0
      shape: irregular
      boundary: [ blue_region_1, red_region_1]
    actions:
    - subject: red_region_1
      relation: adjacent
      object: blue_region_1
      result: "pixels on the red_region_1 change to 8 if they complete a line of red between regions, and are adjacent to 3 or more blue pixels"
    - subject: blue_region_1
      relation: adjacent
      object: red_region_1
      result: "pixels on the blue_region_1 adjacent to red region_1 change color to azure (8) if the blue pixel would complete a line between regions, and are adjacent to a single red pixel, with adjacent white pixels acting as a barrier"
