{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nCopies colors from \"source pixels\" (white cells with non-blue/non-white colors) to other cells\nwithin the grid, following the checkerboard pattern defined by alternating white (0) and blue (1) cells.\nPropagation extends diagonally in all four directions, maintaining row/column parity.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    # Initialize output_grid as a copy of the input grid\n    output_grid = np.copy(input_grid)\n    rows, cols = input_grid.shape\n\n    # Helper function to determine checkerboard parity\n    def get_parity(r, c):\n        return (r % 2, c % 2)\n\n    # Iterate through the input grid to find source pixels\n    for r in range(rows):\n        for c in range(cols):\n            # Identify Source Pixels: White (0) cells with a non-blue/non-white color\n            if input_grid[r, c] != 1 and input_grid[r, c] != 0:\n                if get_parity(r,c) == (0,1) or get_parity(r,c) == (1,0):\n                    continue # skip if not on a '0'\n                \n                source_color = input_grid[r, c]\n                source_parity = get_parity(r, c)\n\n                # Propagate color to target pixels based on checkerboard parity\n                for r2 in range(rows):\n                    for c2 in range(cols):\n                        target_parity = get_parity(r2, c2)\n                        if target_parity == source_parity:\n                            # check for diagonal\n                            if abs(r-r2) == abs(c-c2) and (r-r2) % 2 == 0:\n                                output_grid[r2, c2] = source_color\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 20837,
    "candidates_token_count": 433,
    "total_token_count": 21270,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 7.664242
}