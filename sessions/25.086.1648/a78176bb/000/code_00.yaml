task_context:
  grid_size: fixed 10x10 for examples, likely variable
  colors_used:
    - white (0): background
    - gray (5): secondary object, acts as a signal/modifier
    - main_color (C): primary object color (varies: 9, 7, 2 in examples)
objects:
  - type: main_object
    color: main_color (C)
    description: Pixels forming the primary shape, often a diagonal line or path.
  - type: secondary_object
    color: gray (5)
    description: Pixels forming a secondary shape, located near the main object. Acts as input for determining the transformation.
relationships:
  - type: relative_position
    object1: secondary_object (specifically its top-leftmost pixel at (gr, gc))
    object2: main_object (specifically its top-leftmost pixel at (mr, mc))
    description: The relationship gc > mc or gc <= mc determines the starting point of the new object.
actions:
  - action: identify_colors
    inputs: input_grid
    outputs: main_color (C)
  - action: locate_pixels
    inputs: input_grid, color
    outputs: list_of_coordinates
  - action: find_top_leftmost
    inputs: list_of_coordinates
    outputs: coordinates (r, c)
  - action: remove_pixels
    inputs: grid, color_to_remove (gray 5)
    outputs: modified_grid (gray pixels become white 0)
  - action: determine_start_point
    inputs: top_left_gray (gr, gc), top_left_main (mr, mc)
    outputs: start_coordinates (sr, sc)
    logic: |
      if gc > mc:
        (sr, sc) = (0, gc)
      else: # gc <= mc
        (sr, sc) = (gr, 0)
  - action: draw_diagonal_line
    inputs: grid, start_coordinates (sr, sc), color (C), direction (down-right)
    outputs: modified_grid
    description: Starting at (sr, sc), paint pixels with color C, incrementing row and column by 1 until the grid boundary is reached. Overwrite existing pixels.
output_generation:
  - step: Initialize output_grid by copying input_grid.
  - step: Perform 'remove_pixels' action for gray (5) on output_grid.
  - step: Identify main_color (C).
  - step: Find top-leftmost gray pixel (gr, gc).
  - step: Find top-leftmost main_color pixel (mr, mc).
  - step: Perform 'determine_start_point' action to get (sr, sc).
  - step: Perform 'draw_diagonal_line' action starting at (sr, sc) with color C on output_grid.