{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3317,
        "candidates": 388,
        "total": 3705,
        "cached": 0
      },
      "response_time": 6.9493
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 3566,
        "candidates": 615,
        "total": 4181,
        "cached": 0
      },
      "response_time": 7.171022
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1865,
        "candidates": 839,
        "total": 2704,
        "cached": 0
      },
      "response_time": 11.631717
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2499,
        "candidates": 772,
        "total": 3271,
        "cached": 0
      },
      "response_time": 7.658772
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2022,
        "candidates": 918,
        "total": 2940,
        "cached": 0
      },
      "response_time": 12.341894
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2734,
        "candidates": 772,
        "total": 3506,
        "cached": 0
      },
      "response_time": 7.000804
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 484,
        "total": 2601,
        "cached": 0
      },
      "response_time": 7.830051
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2458,
        "candidates": 335,
        "total": 2793,
        "cached": 0
      },
      "response_time": 4.112356
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1582,
        "candidates": 1933,
        "total": 3515,
        "cached": 0
      },
      "response_time": 19.797457
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3314,
        "candidates": 389,
        "total": 3703,
        "cached": 0
      },
      "response_time": 4.425948
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1636,
        "candidates": 4680,
        "total": 6316,
        "cached": 0
      },
      "response_time": 40.952162
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 6113,
        "candidates": 539,
        "total": 6652,
        "cached": 0
      },
      "response_time": 5.326668
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 458,
        "total": 2575,
        "cached": 0
      },
      "response_time": 6.904218
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2437,
        "candidates": 784,
        "total": 3221,
        "cached": 0
      },
      "response_time": 8.34038
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2035,
        "candidates": 3905,
        "total": 5940,
        "cached": 0
      },
      "response_time": 36.612944
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 5735,
        "candidates": 558,
        "total": 6293,
        "cached": 0
      },
      "response_time": 4.910626
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1809,
        "candidates": 1842,
        "total": 3651,
        "cached": 0
      },
      "response_time": 18.701433
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3447,
        "candidates": 695,
        "total": 4142,
        "cached": 0
      },
      "response_time": 6.643214
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 8\n0 8 8 8 8 0 0 8 0 8\n0 8 0 0 8 0 0 8 8 8\n0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 8 8 8 8 0\n0 0 0 0 0 8 0 0 8 0\n0 0 0 0 0 8 8 8 8 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 1 1 1\n0 1 1 1 1 0 0 1 0 1\n0 1 0 0 1 0 0 1 1 1\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 2 2 2 2 0\n0 0 0 0 0 2 0 0 2 0\n0 0 0 0 0 2 2 2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 8 8\n0 8 8 8 8 0 0 0 8 8\n0 0 0 8 8 0 0 0 8 8\n0 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0\n0 0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 8 8 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 1 1 1\n0 1 1 1 1 0 0 0 1 1\n0 0 0 1 1 0 0 0 1 1\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 2 2 2 2 0 0 0\n0 0 0 0 0 2 2 0 0 0\n0 0 0 0 0 2 2 2 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 8\n0 8 8 8 8 0 0 8 0 8\n0 8 0 0 8 0 0 8 8 8\n0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 8 8 8 8 0\n0 0 0 0 0 8 0 0 8 0\n0 0 0 0 0 8 8 8 8 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 1 1 1\n0 1 1 1 1 0 0 1 0 1\n0 1 0 0 1 0 0 1 1 1\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 2 2 2 2 0\n0 0 0 0 0 2 0 0 2 0\n0 0 0 0 0 2 2 2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 8 8\n0 8 8 8 8 0 0 0 8 8\n0 0 0 8 8 0 0 0 8 8\n0 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0\n0 0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 8 8 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 1 1 1\n0 1 1 1 1 0 0 0 1 1\n0 0 0 1 1 0 0 0 1 1\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 2 2 2 2 0 0 0\n0 0 0 0 0 2 2 0 0 0\n0 0 0 0 0 2 2 2 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 8\n0 8 8 8 8 0 0 8 0 8\n0 8 0 0 8 0 0 8 8 8\n0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 8 8 8 8 0\n0 0 0 0 0 8 0 0 8 0\n0 0 0 0 0 8 8 8 8 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 1 1 1\n0 1 1 1 1 0 0 1 0 1\n0 1 0 0 1 0 0 1 1 1\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 2 2 2 2 0\n0 0 0 0 0 2 0 0 2 0\n0 0 0 0 0 2 2 2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 8 8\n0 8 8 8 8 0 0 0 8 8\n0 0 0 8 8 0 0 0 8 8\n0 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0\n0 0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 8 8 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 1 1 1\n0 1 1 1 1 0 0 0 1 1\n0 0 0 1 1 0 0 0 1 1\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 2 2 2 2 0 0 0\n0 0 0 0 0 2 2 0 0 0\n0 0 0 0 0 2 2 2 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 8\n0 8 8 8 8 0 0 8 0 8\n0 8 0 0 8 0 0 8 8 8\n0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 8 8 8 8 0\n0 0 0 0 0 8 0 0 8 0\n0 0 0 0 0 8 8 8 8 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 8 8\n0 8 8 8 8 0 0 0 8 8\n0 0 0 8 8 0 0 0 8 8\n0 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0\n0 0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 8 8 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 99.0
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 8\n0 8 8 8 8 0 0 8 0 8\n0 8 0 0 8 0 0 8 8 8\n0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 8 8 8 8 0\n0 0 0 0 0 8 0 0 8 0\n0 0 0 0 0 8 8 8 8 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 1 0 1\n0 1 0 0 1 0 0 1 1 1\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 8 8\n0 8 8 8 8 0 0 0 8 8\n0 0 0 8 8 0 0 0 8 8\n0 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0\n0 0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 8 8 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 1 1\n0 0 0 1 1 0 0 0 1 1\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 96.0
      }
    ],
    "011-py_06-train": [],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 8\n0 8 8 8 8 0 0 8 0 8\n0 8 0 0 8 0 0 8 8 8\n0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 8 8 8 8 0\n0 0 0 0 0 8 0 0 8 0\n0 0 0 0 0 8 8 8 8 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 2 2 2 2 2 2 2 2 2\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 58,
        "percent_correct": 42.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 8 8\n0 8 8 8 8 0 0 0 8 8\n0 0 0 8 8 0 0 0 8 8\n0 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0\n0 0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 8 8 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n0 2 2 2 2 2 2 2 2 2\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 50,
        "percent_correct": 50.0
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 8\n0 8 8 8 8 0 0 8 0 8\n0 8 0 0 8 0 0 8 8 8\n0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 8 8 8 8 0\n0 0 0 0 0 8 0 0 8 0\n0 0 0 0 0 8 8 8 8 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0 0 0 2 2 2\n0 2 2 2 2 0 2 1 1 1\n2 1 1 1 1 2 2 1 2 1\n2 1 2 2 1 2 2 1 1 1\n2 1 1 1 1 2 0 2 2 2\n0 2 2 2 2 0 0 0 0 0\n0 0 0 0 0 2 2 2 2 0\n0 0 0 0 0 1 1 1 1 2\n0 0 0 0 0 1 2 2 1 2\n0 0 0 0 0 1 1 1 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 43,
        "percent_correct": 56.99999999999999
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 8 8\n0 8 8 8 8 0 0 0 8 8\n0 0 0 8 8 0 0 0 8 8\n0 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0\n0 0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 8 8 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 2 2 2 2\n0 2 2 2 2 2 1 1 1 1\n2 1 1 1 1 2 2 2 1 1\n0 2 2 1 1 2 0 2 1 1\n0 0 2 1 1 1 2 0 2 2\n0 0 0 0 0 2 2 0 0 0\n0 0 0 1 1 1 1 2 0 0\n0 0 0 0 0 1 1 2 0 0\n0 0 0 0 0 1 1 1 2 0\n0 0 0 0 0 2 2 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 37,
        "percent_correct": 63.0
      }
    ],
    "015-py_09-train": [],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 8\n0 8 8 8 8 0 0 8 0 8\n0 8 0 0 8 0 0 8 8 8\n0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 8 8 8 8 0\n0 0 0 0 0 8 0 0 8 0\n0 0 0 0 0 8 8 8 8 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0 0 0 2 2 2\n0 2 2 2 2 0 2 1 1 1\n2 1 1 1 1 2 2 1 2 1\n2 1 2 2 1 2 2 1 1 1\n2 1 1 1 1 2 0 2 2 2\n0 2 2 2 2 0 0 0 0 0\n0 0 0 0 0 2 2 2 2 0\n0 0 0 0 2 1 1 1 1 2\n0 0 0 0 2 1 2 2 1 2\n0 0 0 0 2 1 1 1 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 46,
        "percent_correct": 54.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 8 8\n0 8 8 8 8 0 0 0 8 8\n0 0 0 8 8 0 0 0 8 8\n0 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0\n0 0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 8 8 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 2 2 2 2\n0 2 2 2 2 2 1 1 1 1\n2 1 1 1 1 2 2 2 1 1\n0 2 2 1 1 2 0 2 1 1\n0 0 2 1 1 1 2 0 2 2\n0 0 0 2 2 2 2 0 0 0\n0 0 2 1 1 1 1 2 0 0\n0 0 0 2 2 1 1 2 0 0\n0 0 0 0 2 1 1 1 2 0\n0 0 0 0 0 2 2 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 43,
        "percent_correct": 56.99999999999999
      }
    ],
    "017-py_11-train": [],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 8\n0 8 8 8 8 0 0 8 0 8\n0 8 0 0 8 0 0 8 8 8\n0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 8 8 8 8 0\n0 0 0 0 0 8 0 0 8 0\n0 0 0 0 0 8 8 8 8 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 2 2 2\n0 1 1 1 1 0 0 2 0 2\n0 1 0 0 1 0 0 2 2 2\n0 1 1 1 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 1 1 1 0\n0 0 0 0 0 1 0 0 1 0\n0 0 0 0 0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0 0 0 2 2 2\n0 2 2 2 2 0 2 1 1 1\n2 1 1 1 1 2 2 1 2 1\n2 1 2 2 1 2 2 1 1 1\n2 1 1 1 1 2 0 2 2 2\n0 2 2 2 2 0 0 0 0 0\n0 0 0 0 0 2 2 2 2 0\n0 0 0 0 2 1 1 1 1 2\n0 0 0 0 2 1 2 2 1 2\n0 0 0 0 2 1 1 1 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 46,
        "percent_correct": 54.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 8 8\n0 8 8 8 8 0 0 0 8 8\n0 0 0 8 8 0 0 0 8 8\n0 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0\n0 0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 8 8 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 2 2 2 2\n0 1 1 1 1 0 0 0 2 2\n0 0 0 1 1 0 0 0 2 2\n0 0 0 1 1 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0\n0 0 0 0 0 1 1 0 0 0\n0 0 0 0 0 1 1 1 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 2 2 2 2\n0 2 2 2 2 2 1 1 1 1\n2 1 1 1 1 2 2 2 1 1\n0 2 2 1 1 2 0 2 1 1\n0 0 2 1 1 1 2 0 2 2\n0 0 0 2 2 2 2 0 0 0\n0 0 2 1 1 1 1 2 0 0\n0 0 0 2 2 1 1 2 0 0\n0 0 0 0 2 1 1 1 2 0\n0 0 0 0 0 2 2 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 43,
        "percent_correct": 56.99999999999999
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 2
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}