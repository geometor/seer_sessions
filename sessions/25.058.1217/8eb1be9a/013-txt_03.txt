import numpy as np

def analyze_grid(grid):
    grid = np.array(grid)
    height, width = grid.shape
    color_counts = {}
    for color in np.unique(grid):
        color_counts[color] = np.sum(grid == color)
    row_types = []
    for i in range(height):
      row = grid[i]
      unique_colors = np.unique(row)
      if len(unique_colors) == 1:
        row_types.append(f"solid_{unique_colors[0]}")
      elif len(unique_colors) == 2 and (0 in unique_colors) and (2 in unique_colors):
        if np.all(row[::2] == row[0]) and np.all(row[1::2] == row[1]):
          row_types.append("alternating_0_2")
        else:
          row_types.append("mixed")
      else:
          row_types.append("mixed")

    return {
        "height": height,
        "width": width,
        "color_counts": color_counts,
        "row_types": row_types,
    }

def calculate_diff(output, expected_output):
     return np.sum(np.array(output) != np.array(expected_output))
tasks = [
    {
        "input": [
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
        ],
        "output": [
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
        ],
    },
    {
        "input": [
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
        ],
        "output": [
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
            [2, 2, 2, 2, 2, 2, 2, 2, 2],
        ],
    },
    {
        "input": [
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0],
        ],
        "output": [
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
            [0, 2, 0, 2, 0, 2, 0, 2, 0],
        ],
    },
]

from previous_code import transform
results = []
for i, task in enumerate(tasks):
  input_grid = task["input"]
  expected_output = task["output"]
  output_grid = transform(input_grid)
  diff = calculate_diff(output_grid, expected_output)
  results.append(
      {
          "task_index": i,
          "input_analysis": analyze_grid(input_grid),
          "expected_output_analysis": analyze_grid(expected_output),
          "output_analysis": analyze_grid(output_grid),
          "diff": diff,
      }
  )
print(results)