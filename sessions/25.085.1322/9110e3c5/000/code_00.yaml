elements:
  - item: input_grid
    properties:
      - dimensions: 7x7
      - content: pixels with values 0-9 (various colors)
  - item: output_grid
    properties:
      - dimensions: 3x3
      - content: pixels with values 0 (white) and 8 (azure) only
      - type: categorical, one of three predefined patterns
        patterns:
          - name: Pattern A
            grid: [[0, 0, 8], [8, 8, 0], [0, 8, 0]]
          - name: Pattern B
            grid: [[0, 8, 8], [0, 8, 0], [0, 8, 0]]
          - name: Pattern C
            grid: [[0, 0, 0], [8, 8, 8], [0, 0, 0]]
transformation:
  - rule: pattern_selection
    based_on: numerical properties of the input grid
    steps:
      - count total non-white pixels (N)
      - calculate N modulo 9 (M)
      - use M as the primary selector for the output pattern
      - when M results in ambiguity (M=2), use a secondary condition:
          - count red pixels (R)
          - count green pixels (G)
          - compare R and G to resolve ambiguity
relationship:
  - The total count of non-white pixels (N) in the input grid, specifically its value modulo 9, dictates which of the three predefined 3x3 output patterns is produced. A tie-breaking rule based on the relative counts of red and green pixels is used when N modulo 9 equals 2.