task_description: Fill columns vertically with red based on markers in the last row and modifying gray pixels above them.
grid_properties:
  - size: Constant 10x10 for all examples.
  - colors: white (0), red (2), gray (5).
objects:
  - type: marker
    color: red (2)
    location: Single pixels found only in the last row of the input grid.
    role: Trigger for column filling.
  - type: modifier
    color: gray (5)
    location: Single pixels found anywhere in the grid *except* the last row.
    role: Modifies the column filling action if present directly above a marker.
  - type: background
    color: white (0)
    location: Fills the rest of the grid initially.
    role: Can be changed to red during the transformation.
  - type: output_fill
    color: red (2)
    location: Appears in vertical columns in the output grid.
    role: Represents the result of the transformation.
actions:
  - name: identify_markers
    input: input_grid
    output: list of column indices containing red (2) in the last row.
  - name: check_modifier
    input: input_grid, marker_column_index
    output: boolean indicating if any gray (5) pixel exists in the marker_column_index at any row above the last row.
  - name: determine_target_columns
    input: marker_column_index, modifier_present (boolean)
    output: list of column indices to be filled.
    logic: |
      If modifier_present is True, target columns are [marker_column_index, marker_column_index + 1].
      If modifier_present is False, target column is [marker_column_index].
  - name: fill_columns
    input: input_grid, target_column_indices
    output: output_grid
    logic: |
      Create a copy of the input grid.
      For each target_column_index:
        Check if the column index is within the grid bounds (0 to width-1).
        If within bounds, iterate through all rows (0 to height-1) for that column.
        If the pixel at (row, target_column_index) in the original input grid is white (0), change the corresponding pixel in the output grid copy to red (2).
        Otherwise (if the original pixel is not white), leave the pixel in the output grid copy unchanged (preserving existing grays, etc.).