task_context:
  description: Transforms an input grid into a 3-row output grid based on color frequency analysis.
  input_grid_properties:
    height: variable (>= 2 rows observed)
    width: variable
  output_grid_properties:
    height: 3
    width: same as input grid width

objects:
  - name: input_row_0
    description: The first row (index 0) of the input grid.
  - name: input_row_1
    description: The second row (index 1) of the input grid.
  - name: background_area
    description: The portion of the input grid from the second row (index 1) to the bottom row.
  - name: background_color
    description: The dominant color in the 'background_area', determined by frequency analysis with specific tie-breaking rules.
  - name: target_color
    description: The dominant color in 'input_row_0', excluding the 'background_color', determined by frequency analysis.
  - name: replacement_color
    description: A fixed color (magenta, value 6) used for substitution.
  - name: output_row_0
    description: The first row (index 0) of the output grid.
  - name: output_row_1
    description: The second row (index 1) of the output grid.
  - name: output_row_2
    description: The third row (index 2) of the output grid.

actions:
  - name: create_output_grid
    inputs: [input_grid]
    outputs: [output_grid]
    description: Create a new grid with 3 rows and the same width as the input grid.
  - name: copy_row_0
    inputs: [input_row_0]
    outputs: [output_row_0]
    description: Copy the 'input_row_0' to 'output_row_0'.
  - name: copy_row_1
    inputs: [input_row_1]
    outputs: [output_row_1]
    description: Copy the 'input_row_1' to 'output_row_1'.
  - name: determine_background_color
    inputs: [background_area, input_row_0]
    outputs: [background_color]
    description: >
      Calculate color frequencies in the 'background_area'.
      Identify the color(s) with the highest frequency.
      If there's a tie, exclude any tied color that also appears in 'input_row_0'.
      If a unique color remains, it's the 'background_color'.
      If multiple colors remain after exclusion, choose the one with the smallest numerical value.
      If no colors remain after exclusion (all tied colors were in 'input_row_0'), choose the color with the smallest numerical value among the originally tied colors.
      If only one color was most frequent initially, that is the 'background_color'.
      If 'background_area' is empty, 'background_color' is undefined (or None).
  - name: determine_target_color
    inputs: [input_row_0, background_color]
    outputs: [target_color]
    description: >
      Calculate color frequencies in 'input_row_0'.
      Exclude the 'background_color' from the counts.
      Identify the color(s) with the highest frequency among the remaining colors.
      If one or more such colors exist, the 'target_color' is the one with the smallest numerical value.
      If no colors remain after excluding the 'background_color', 'target_color' is undefined (or None).
  - name: generate_output_row_2
    inputs: [input_row_0, target_color, replacement_color]
    outputs: [output_row_2]
    description: >
      Create a copy of 'input_row_0'.
      If a 'target_color' was determined, replace all occurrences of 'target_color' in the copied row with 'replacement_color' (magenta, 6).
      If no 'target_color' was determined, the copied row remains unchanged.
      Assign the resulting row to 'output_row_2'.