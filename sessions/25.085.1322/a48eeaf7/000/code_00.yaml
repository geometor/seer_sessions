task_type: object_transformation
components:
  - role: background
    color: white
    value: 0
  - role: target
    attributes:
      - stationary
      - largest_object (by pixel count, excluding background)
    examples:
      - train_1:
          color: red
          value: 2
          pixels: [[2, 5], [2, 6], [3, 5], [3, 6]]
          shape: square_2x2
      - train_2:
          color: red
          value: 2
          pixels: [[3, 3], [3, 4], [4, 3], [4, 4]]
          shape: square_2x2
  - role: mover
    attributes:
      - mobile
      - smaller_objects (distinct from target and background)
    examples:
      - train_1:
          objects:
            - color: gray
              value: 5
              initial_pixels: [[0, 8]]
              final_pixels: [[1, 7]]
            - color: gray
              value: 5
              initial_pixels: [[3, 1]]
              final_pixels: [[3, 4]]
            - color: gray
              value: 5
              initial_pixels: [[6, 9]]
              final_pixels: [[4, 7]]
            - color: gray
              value: 5
              initial_pixels: [[8, 5]]
              final_pixels: [[4, 5]]
      - train_2:
          objects:
            - color: gray
              value: 5
              initial_pixels: [[0, 3]]
              final_pixels: [[2, 3]]
            - color: gray
              value: 5
              initial_pixels: [[3, 8]]
              final_pixels: [[3, 5]]
            - color: gray
              value: 5
              initial_pixels: [[7, 7]]
              final_pixels: [[5, 5]]
relationships:
  - type: movement_trigger
    subject: mover
    object: target
    details: Movers are attracted towards the target.
  - type: movement_termination
    subject: mover
    object: target
    details: Movement stops when the mover reaches a pixel adjacent (including diagonally) to any pixel of the target.
actions:
  - name: identify_objects
    inputs: input_grid
    outputs: background, target_object, mover_objects
    criteria:
      - Target is the largest contiguous non-background object.
      - Movers are all other contiguous non-background objects.
  - name: calculate_movement
    inputs: mover_object, target_object
    outputs: final_position
    process:
      - Determine the set of pixels belonging to the target object (T).
      - For the mover object M (represented by its pixel(s) P_m), find the pixel p_t in T that has the minimum Manhattan distance to P_m. If M has multiple pixels, consider the one closest to T. If there are multiple closest p_t, any can be chosen (the path logic should resolve).
      - Iteratively move P_m one step towards p_t until P_m is adjacent (including diagonals) to *any* pixel in T.
      - A step involves changing the row and/or column of P_m by -1, 0, or +1 to reduce the Manhattan distance to p_t. Prioritize diagonal moves if both row and column distance can be reduced.
  - name: construct_output
    inputs: input_grid, target_object, final_positions_of_movers
    outputs: output_grid
    process:
      - Start with a white grid of the same dimensions as the input.
      - Place the target object at its original position.
      - Place each mover object at its calculated final position.