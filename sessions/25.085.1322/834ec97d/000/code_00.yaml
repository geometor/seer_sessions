elements:
  - role: background
    type: grid
    color: white (0)
  - role: object
    type: pixel
    count: 1
    properties:
      color: non-white (varies, e.g., magenta(6), red(2), maroon(9))
      location: (row_in, col_in)
  - role: pattern
    type: grid_fill
    properties:
      colors: [yellow (4), white (0)]
      structure: alternating horizontally
      start_color_rule:
        - if: col_in is even
          then: yellow (4)
        - if: col_in is odd
          then: white (0)
      location: rows 0 to row_in (inclusive) in the output grid

transformation:
  - action: identify_object
    input: input_grid
    output: object_color, (row_in, col_in)
  - action: initialize_output
    input: input_grid_dimensions
    output: output_grid (filled with white)
  - action: determine_pattern_start
    input: col_in
    output: pattern_start_color (yellow or white)
  - action: apply_pattern
    input: output_grid, pattern_start_color, row_in
    modifies: output_grid rows 0 to row_in
    details: Fill rows 0..row_in with alternating pattern starting with pattern_start_color.
  - action: move_object
    input: output_grid, object_color, (row_in, col_in)
    modifies: output_grid
    details: Place object_color at (row_in + 1, col_in), overwriting existing pixel if necessary. Ensure target location is within grid bounds.

output:
  - grid: output_grid after all transformations