task_description: Combine three vertically stacked 5x5 input layers into a single 5x5 output grid based on color priority.

input_grid:
  properties:
    height: 15
    width: 5
  structure:
    type: composite
    components:
      - name: layer_1
        rows: 0-4
        cols: 0-4
        colors: [0, 1] # white, blue
      - name: layer_2
        rows: 5-9
        cols: 0-4
        colors: [0, 8] # white, azure
      - name: layer_3
        rows: 10-14
        cols: 0-4
        colors: [0, 6] # white, magenta

output_grid:
  properties:
    height: 5
    width: 5
  colors_present: [0, 1, 6, 8] # white, blue, magenta, azure

transformation:
  type: overlay
  pixel_mapping:
    input_pixels_at: [(r, c), (r+5, c), (r+10, c)] # r from 0-4, c from 0-4
    output_pixel_at: (r, c)
  rule:
    description: Pixel-wise combination based on color priority.
    priority_order: [6, 1, 8, 0] # magenta > blue > azure > white
    logic: |
      For each output cell at (r, c):
      1. Check input cell at (r+10, c) [layer_3]. If it's magenta (6), output is magenta (6).
      2. Else, check input cell at (r, c) [layer_1]. If it's blue (1), output is blue (1).
      3. Else, check input cell at (r+5, c) [layer_2]. If it's azure (8), output is azure (8).
      4. Else, output is white (0).