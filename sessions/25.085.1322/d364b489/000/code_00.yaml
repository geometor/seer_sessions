task_type: pattern_coloring
grid_properties:
  - dimensions: constant (input and output grids have the same height and width)
  - background_color: white (0)
input_objects:
  - object_type: pixel
    color: blue (1)
    shape: single_pixel
    distribution: scattered, non-adjacent in examples
output_objects:
  - object_type: pixel
    color: blue (1)
    origin: copied from input
    location: same as input
  - object_type: pixel pattern
    shape: cross-like (up to 4 pixels orthogonally adjacent to a source blue pixel)
    colors: [red (2), azure (8), orange (7), magenta (6)]
    relationship_to_input_blue:
      - red (2): located 1 step above the blue pixel
      - azure (8): located 1 step below the blue pixel
      - orange (7): located 1 step left of the blue pixel
      - magenta (6): located 1 step right of the blue pixel
transformation_rule:
  - type: local_coloring
  - source: blue (1) pixels in the input
  - target: orthogonal neighbors of the source pixels
  - conditions: target pixel must be within grid boundaries
  - color_assignment: deterministic based on relative position (Up->Red, Down->Azure, Left->Orange, Right->Magenta)
  - preservation: source blue pixels are kept in the output
  - background_handling: background white pixels remain white unless colored by the rule