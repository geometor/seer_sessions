task_description: Reflect non-white pixels from the right side of a vertical gray divider onto the left side.
grid_properties:
  - height: variable (1-30)
  - width: variable (1-30)
  - background_color: white (0)

objects:
  - object: gray_line
    definition: A vertical line of pixels, all with color gray (5), spanning the full height of the input grid.
    properties:
      - column_index: C_gray (integer index)
      - unique: Assumed to be unique in each input based on examples.
      - acts_as: A separator and axis of reflection.
  - object: left_partition
    definition: The portion of the input grid to the left of the gray_line.
    properties:
      - content: Pixels from input grid columns 0 to C_gray - 1.
      - dimensions: Same height as input, width C_gray.
  - object: right_partition
    definition: The portion of the input grid to the right of the gray_line.
    properties:
      - content: Pixels from input grid columns C_gray + 1 to end.
      - dimensions: Same height as input, variable width.
  - object: reflected_pixel
    definition: A non-white pixel originating from the right_partition.
    properties:
      - source_location: (r, c_right) where c_right > C_gray
      - color: The color of the pixel at the source location.
      - target_location: (r, C_gray - (c_right - C_gray)) in the output grid coordinate system.
  - object: output_grid
    definition: The final transformed grid.
    properties:
      - dimensions: Same height as input, width C_gray.
      - content: Derived from left_partition overlaid with reflected_pixels.

actions:
  - action: find_gray_line
    input: input_grid
    output: column_index C_gray
    description: Iterate through columns to find the one composed entirely of gray (5) pixels.
  - action: initialize_output
    input: input_grid, C_gray
    output: initial_output_grid
    description: Create a grid with the same height as the input and width C_gray, copying the content of the left_partition (input[:, :C_gray]).
  - action: reflect_and_overlay
    input: input_grid, C_gray, initial_output_grid
    output: final_output_grid
    description: For each row `r` from 0 to height-1, and for each column `c_right` from C_gray + 1 to width-1, if the pixel `input_grid[r, c_right]` is not white (0), calculate the target column `c_target = C_gray - (c_right - C_gray)`. If `c_target` is within the bounds of the output grid (>= 0), set `output_grid[r, c_target]` to the color `input_grid[r, c_right]`.