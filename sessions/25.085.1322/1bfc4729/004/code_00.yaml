grid_properties:
  - size: All examples use 10x10 grids.
  - background_color: white (0)

objects:
  - type: trigger_pixel
    definition: Any pixel in the input grid that is not white (color 0).
    properties:
      - row: The row index (0-9).
      - column: The column index (0-9).
      - color: The color value (1-9).
      - zone: Derived from the row.
          - top_zone: Rows 0-4.
          - bottom_zone: Rows 5-9.

actions:
  - Initialize output grid: Create a new 10x10 grid filled with white (0).
  - Process trigger pixels: For each trigger pixel identified in the input:
    - determine_zone: Identify if the pixel is in the top_zone (rows 0-4) or bottom_zone (rows 5-9).
    - draw_vertical_lines:
        - target: output grid
        - color: trigger_pixel's color
        - location:
            - Leftmost column (column 0) from min_row to max_row of the zone.
            - Rightmost column (column 9) from min_row to max_row of the zone.
    - draw_trigger_horizontal_line:
        - target: output grid
        - color: trigger_pixel's color
        - location: The full width of the grid at the trigger_pixel's row.
    - draw_zone_boundary_horizontal_line:
        - target: output grid
        - color: trigger_pixel's color
        - condition:
            - If trigger_pixel is in top_zone (rows 0-4): Draw line at row 0.
            - If trigger_pixel is in bottom_zone (rows 5-9): Draw line at row 9.
        - location: The full width of the grid at the specified boundary row (0 or 9).

output_grid_generation:
  - The output grid is built by applying the drawing actions for each trigger pixel.
  - Pixels are overwritten if multiple trigger pixels affect the same location; the last write determines the final color. (This seems consistent with the examples, although not strictly necessary to achieve the correct output pattern shown).