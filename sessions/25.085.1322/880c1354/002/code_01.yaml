task_type: pixel_wise_transformation
details:
  - transformation: conditional_color_mapping
    scope: global # Applies independently to every pixel
    conditions:
      - based_on: set_of_unique_colors_excluding_static
        static_colors: # Colors that are never transformed
          - yellow: 4
          - orange: 7
        dynamic_color_sets: # Specific mappings depend on which dynamic colors are present
          - set: [blue(1), red(2), green(3), magenta(6)]
            mapping: # Cyclic permutation 1 -> 3 -> 2 -> 6 -> 1
              - {input_color: 1, output_color: 3} # blue -> green
              - {input_color: 3, output_color: 2} # green -> red
              - {input_color: 2, output_color: 6} # red -> magenta
              - {input_color: 6, output_color: 1} # magenta -> blue
          - set: [blue(1), magenta(6), maroon(9)]
            mapping: # Cyclic permutation 1 -> 9 -> 6 -> 1
              - {input_color: 1, output_color: 9} # blue -> maroon
              - {input_color: 9, output_color: 6} # maroon -> magenta
              - {input_color: 6, output_color: 1} # magenta -> blue
          - set: [gray(5), magenta(6)]
            mapping: # Swap (Cycle of length 2) 5 -> 6 -> 5
              - {input_color: 5, output_color: 6} # gray -> magenta
              - {input_color: 6, output_color: 5} # magenta -> gray
    default_mapping: # Applied to static colors and any dynamic colors not covered by specific sets
      rule: identity # Color maps to itself
grid_properties:
  size_preservation: True # Output grid dimensions match input grid dimensions
  content: pixels # Grid contains pixels with integer color values [0-9]