task_type: pixel_wise_transformation
details:
  - transformation: color_mapping
    scope: global # Applies to every pixel
    static_colors: # Colors that always map to themselves
      - yellow: 4
      - orange: 7
    dynamic_colors: # Colors whose mapping depends on the set present
      condition_1:
        present_set: [blue(1), red(2), green(3), magenta(6)]
        mapping_rule: cyclic_permutation
        cycle: 1 -> 3 -> 2 -> 6 -> 1 # blue -> green -> red -> magenta -> blue
      condition_2:
        present_set: [blue(1), magenta(6), maroon(9)]
        mapping_rule: cyclic_permutation
        cycle: 1 -> 9 -> 6 -> 1 # blue -> maroon -> magenta -> blue
      condition_3:
        present_set: [gray(5), magenta(6)]
        mapping_rule: swap # A cycle of length 2
        cycle: 5 -> 6 -> 5 # gray -> magenta -> gray
      default: # Implicitly, any other colors (if present) map to themselves
        mapping_rule: identity
grid_properties:
  size_preservation: True # Output grid has the same dimensions as input
  content: # Grid contains pixels with integer color values
    colors: [0-9]