task_structure:
  input_size: 3x3
  output_size: 12x12
  output_composition: 4 quadrants of 6x6
  quadrant_tiling: Each 6x6 quadrant is tiled 2x2 with a 3x3 pattern

quadrant_definitions:
  - quadrant: top_left (rows 0-5, cols 0-5)
    tile_source: Tile A
  - quadrant: top_right (rows 0-5, cols 6-11)
    tile_source: Tile B
  - quadrant: bottom_left (rows 6-11, cols 0-5)
    tile_source: Tile C
  - quadrant: bottom_right (rows 6-11, cols 6-11)
    tile_source: Tile D

tile_transformations:
  description: Transforms the 3x3 input grid (I) into four different 3x3 tiles (A, B, C, D).
  input_indices: |
    [[I(0,0), I(0,1), I(0,2)],
     [I(1,0), I(1,1), I(1,2)],
     [I(2,0), I(2,1), I(2,2)]]
  tile_A:
    operation: Rotate 180 degrees
    result: |
      [[I(2,2), I(2,1), I(2,0)],
       [I(1,2), I(1,1), I(1,0)],
       [I(0,2), I(0,1), I(0,0)]]
  tile_B:
    operation: Custom rearrangement 1
    result: |
      [[I(0,2), I(0,1), I(0,0)],  # Reversed input row 0
       [I(2,1), I(1,1), I(1,0)],  # Pixels H, E, D
       [I(2,2), I(1,2), I(2,0)]]   # Pixels I, F, G
  tile_C:
    operation: Custom rearrangement 2
    result: |
      [[I(2,0), I(1,2), I(2,2)],  # Pixels G, F, I
       [I(1,0), I(1,1), I(2,1)],  # Pixels D, E, H
       [I(0,0), I(0,1), I(0,2)]]   # Input row 0
  tile_D:
    operation: Identity
    result: |
      [[I(0,0), I(0,1), I(0,2)],
       [I(1,0), I(1,1), I(1,2)],
       [I(2,0), I(2,1), I(2,2)]]