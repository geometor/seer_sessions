task_elements:
  - element: grid
    properties:
      - type: input_grid
        attributes:
          - size: variable (e.g., 9x9 in examples)
          - pixels: contain white (0) and gray (5)
      - type: output_grid
        attributes:
          - size: same as input_grid
          - pixels: contain white (0), blue (1), and red (2)

  - element: object
    properties:
      - type: vertical_segment
        definition: A contiguous block of one or more gray (5) pixels within the same column in the input grid.
        attributes:
          - color: gray (5)
          - location: defined by column index and row indices (start_row, end_row)
          - length: number of pixels in the segment (end_row - start_row + 1)

actions:
  - action: identify_segments
    description: Scan each column of the input grid to find all vertical_segments of gray (5) pixels.
    inputs: input_grid
    outputs: list_of_segments (each with location and length)

  - action: find_extreme_length_segments
    description: Determine the maximum and minimum lengths among all identified segments. Identify all segments matching these extreme lengths.
    inputs: list_of_segments
    outputs: 
      - longest_segments: list of segments with maximum length
      - shortest_segments: list of segments with minimum length

  - action: color_output
    description: Create the output grid based on the identified longest and shortest segments.
    steps:
      - Initialize output grid with the same dimensions as the input grid, filled with white (0).
      - For each segment in longest_segments, color the corresponding pixels in the output grid blue (1).
      - For each segment in shortest_segments, color the corresponding pixels in the output grid red (2).
    inputs:
      - input_grid_dimensions
      - longest_segments
      - shortest_segments
    outputs: output_grid

relationships:
  - relationship: mapping
    description: Pixels belonging to the longest vertical gray segment(s) in the input map to blue (1) pixels in the output.
  - relationship: mapping
    description: Pixels belonging to the shortest vertical gray segment(s) in the input map to red (2) pixels in the output.
  - relationship: mapping
    description: All other pixels (original white pixels and gray pixels not part of the longest or shortest segments) map to white (0) pixels in the output.