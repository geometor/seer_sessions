facts:
  - 
    description: Input grids contain multiple discrete objects composed of colored pixels (1-9) on a background (0).
    applies_to: all_train_examples
  - 
    description: Objects can be single-colored or multi-colored.
    applies_to: train_1, train_3
  - 
    description: Objects have various shapes, including lines, squares, L-shapes, T-shapes, and more complex forms.
    applies_to: all_train_examples
  - 
    description: The output grid is always a cropped version of the input grid, containing exactly one object from the input.
    applies_to: all_train_examples
  - 
    property: The selected object is always a solid rectangle (its pixels completely fill its bounding box).
    applies_to: all_train_examples
  - 
    rule: If multiple solid rectangular objects exist, the one with the aspect ratio (minimum dimension / maximum dimension) closest to 1 is chosen.
    applies_to: train_1
  - 
    rule: If multiple solid rectangular objects have the same maximal aspect ratio (tie), the one whose top-left corner has the largest row index is chosen.
    applies_to: train_2
  - 
    rule: If a tie still exists after comparing row indices, the object whose top-left corner has the largest column index is chosen.
    applies_to: train_2 # (Implicitly tested, highest row index was sufficient)
  - 
    action: Identify all contiguous non-background objects.
    order: 1
  - 
    action: Filter objects to keep only those that are solid rectangles.
    order: 2
  - 
    action: If multiple rectangular objects remain, select based on aspect ratio (closest to 1), then by top-left position (max row index, then max column index).
    order: 3
  - 
    action: Crop the input grid to the bounding box of the selected rectangular object.
    order: 4
  - 
    output: The cropped grid containing the selected object.
    order: 5
