task_type: object_movement_with_collision
elements:
  - type: grid
    description: A 2D array of pixels representing colors.
  - type: background
    color: 0 (white)
    description: Fills empty space.
  - type: barrier
    color: 2 (red)
    description: A static object, always located along one edge (left, right, or bottom). Defines the direction of movement.
    properties:
      - position: Determines movement direction (left_edge -> move_left, right_edge -> move_right, bottom_edge -> move_down).
      - shape: Can be a vertical or horizontal line/block.
      - static: Does not move during the transformation.
  - type: movable_object
    color: Any color except 0 (white) and 2 (red).
    description: Contiguous block of non-white, non-red pixels.
    properties:
      - shape: Preserved during movement.
      - color: Preserved during movement.
      - dynamic: Moves towards the barrier.
actions:
  - name: identify_barrier
    description: Locate the red object and determine its edge position (left, right, bottom).
  - name: identify_movable_objects
    description: Find all distinct contiguous objects that are not white or red. Record their shape, color, and initial coordinates.
  - name: determine_movement_direction
    based_on: barrier position
    outputs: direction ('left', 'right', 'down')
  - name: calculate_final_position
    input: movable_object, movement_direction, barrier, other_settled_objects
    description: Simulate moving the object step-by-step in the specified direction until it collides with the barrier or an already placed object in the output grid.
    constraints: Object moves as a whole unit. Collision occurs if any pixel overlaps.
  - name: place_objects
    description: Draw objects in their final calculated positions onto an initially white output grid. Copy the barrier object as well.
relationships:
  - type: collision
    entities: [movable_object, barrier] or [movable_object, settled_movable_object]
    description: Occurs when a moving object attempts to occupy a cell already filled by the barrier or another object that has completed its movement. This stops the object's movement.
  - type: order_dependency
    description: Objects closer to the barrier (along the axis of movement) potentially block objects farther away. Processing objects based on their proximity to the barrier might be necessary for correct collision detection.