{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 518,
        "total": 2335,
        "cached": 0
      },
      "response_time": 7.461282
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2196,
        "candidates": 316,
        "total": 2512,
        "cached": 0
      },
      "response_time": 5.059119
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2657,
        "candidates": 2687,
        "total": 5344,
        "cached": 0
      },
      "response_time": 26.007134
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2861,
        "candidates": 3836,
        "total": 6697,
        "cached": 0
      },
      "response_time": 34.18028
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 6474,
        "candidates": 612,
        "total": 7086,
        "cached": 0
      },
      "response_time": 6.210321
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 5139,
        "candidates": 611,
        "total": 5750,
        "cached": 0
      },
      "response_time": 6.462633
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 648,
        "total": 2465,
        "cached": 0
      },
      "response_time": 9.695178
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2327,
        "candidates": 545,
        "total": 2872,
        "cached": 0
      },
      "response_time": 6.192477
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2886,
        "candidates": 1228,
        "total": 4114,
        "cached": 0
      },
      "response_time": 15.558969
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3909,
        "candidates": 596,
        "total": 4505,
        "cached": 0
      },
      "response_time": 6.153521
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2935,
        "candidates": 1500,
        "total": 4435,
        "cached": 0
      },
      "response_time": 23.238707
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4231,
        "candidates": 1150,
        "total": 5381,
        "cached": 0
      },
      "response_time": 10.268716
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 459,
        "total": 2276,
        "cached": 0
      },
      "response_time": 6.879832
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2138,
        "candidates": 584,
        "total": 2722,
        "cached": 0
      },
      "response_time": 6.857032
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2929,
        "candidates": 872,
        "total": 3801,
        "cached": 0
      },
      "response_time": 9.973705
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3592,
        "candidates": 366,
        "total": 3958,
        "cached": 0
      },
      "response_time": 3.784094
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2711,
        "candidates": 1240,
        "total": 3951,
        "cached": 0
      },
      "response_time": 21.184276
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3745,
        "candidates": 655,
        "total": 4400,
        "cached": 0
      },
      "response_time": 6.183796
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 491,
        "total": 2308,
        "cached": 0
      },
      "response_time": 7.659939
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2168,
        "candidates": 333,
        "total": 2501,
        "cached": 0
      },
      "response_time": 4.663764
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2676,
        "candidates": 1520,
        "total": 4196,
        "cached": 0
      },
      "response_time": 16.073934
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 3991,
        "candidates": 406,
        "total": 4397,
        "cached": 0
      },
      "response_time": 4.027181
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 2750,
        "candidates": 2813,
        "total": 5563,
        "cached": 0
      },
      "response_time": 33.074478
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 5358,
        "candidates": 649,
        "total": 6007,
        "cached": 0
      },
      "response_time": 6.451914
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 535,
        "total": 2352,
        "cached": 0
      },
      "response_time": 8.282674
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2213,
        "candidates": 212,
        "total": 2425,
        "cached": 0
      },
      "response_time": 3.024421
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 2555,
        "candidates": 815,
        "total": 3370,
        "cached": 0
      },
      "response_time": 12.806224
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 3165,
        "candidates": 437,
        "total": 3602,
        "cached": 0
      },
      "response_time": 4.665573
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 2777,
        "candidates": 1252,
        "total": 4029,
        "cached": 0
      },
      "response_time": 17.09808
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 3824,
        "candidates": 350,
        "total": 4174,
        "cached": 0
      },
      "response_time": 3.838812
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 93.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 93.33333333333333
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "004-py_03-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_04-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 40.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n0 0 0\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      }
    ],
    "006-py_05-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 8 0 0\n8 0 0 0 8\n8 8 8 0 8\n8 8 8 8 8\n8 8 8 8 8\n8 8 8 0 8\n8 0 0 0 8\n0 0 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0 0 0\n0 0 8 0 8\n0 8 8 0 8\n8 8 8 8 8\n8 8 8 8 8\n0 8 8 0 8\n0 0 8 0 8\n0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 8 8 0 0\n0 0 0 8 0\n0 0 0 8 8\n8 8 8 8 8\n8 8 8 8 8\n0 0 0 8 8\n0 0 0 8 0\n8 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8 0 8\n8 0 8 8 0\n8 0 8 0 0\n8 8 8 8 8\n8 8 8 8 8\n8 0 8 0 0\n8 0 8 8 0\n0 8 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8 8 8\n8 0 8 0 8\n8 8 8 0 8\n8 8 8 8 8\n8 8 8 8 8\n8 8 8 0 8\n8 0 8 0 8\n0 8 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "008-py_06-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "010-py_07-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 8 8\n1 1 1\n8 8 8\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n1 1 1\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 9\n0 8 9\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 9\n9 8 9\n9 8 9\n0 8 9\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 9\n0 8 0\n0 8 9\n9 8 0\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 8 9\n0 8 9\n9 8 9\n0 8 0\n0 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 0\n0 8 9\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 9\n0 8 9\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 9\n9 8 9\n9 8 9\n0 8 9\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 9\n0 8 0\n0 8 9\n9 8 0\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 8 9\n0 8 9\n9 8 9\n0 8 0\n0 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 0\n0 8 9\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      }
    ],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 9\n0 8 0\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n9 8 9\n9 8 9\n0 8 0\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 8 9\n0 8 0\n9 8 9\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 40.0
      }
    ],
    "020-py_12-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 8\n0 0 0\n8 0 0\n0 0 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n8 0 8\n0 0 8\n0 0 8\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 0 8\n8 0 0\n8 0 0\n0 0 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 8\n8 0 0\n8 0 8\n0 0 0\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 8\n8 0 8\n8 0 8\n8 0 0\n8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      }
    ],
    "022-py_13-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 8\n0 0 0\n8 0 0\n0 0 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n8 0 8\n0 0 8\n0 0 8\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 0 8\n8 0 0\n8 0 0\n0 0 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 8\n8 0 0\n8 0 8\n0 0 0\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 8\n8 0 8\n8 0 8\n8 0 0\n8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      }
    ],
    "023-py_14-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "024-py_15-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 8\n0 0 0\n8 0 0\n0 0 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n8 0 8\n0 0 8\n0 0 8\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 0 8\n8 0 0\n8 0 0\n0 0 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 8\n8 0 0\n8 0 8\n0 0 0\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 8\n8 0 8\n8 0 8\n8 0 0\n8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      }
    ],
    "026-py_16-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 9 9\n0 0 9\n9 0 9\n0 0 8\n0 9 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n9 0 9\n0 9 9\n0 0 8\n0 9 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 40.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "9 0 0\n9 0 0\n9 0 0\n0 9 8\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 9 9\n9 0 0\n9 9 9\n0 9 8\n9 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 9 9\n9 0 9\n9 9 9\n9 0 8\n9 9 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      }
    ],
    "028-py_17-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      }
    ],
    "030-py_18-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}