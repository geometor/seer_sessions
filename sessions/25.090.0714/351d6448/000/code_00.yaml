task_structure:
  input_grid:
    description: Contains multiple sections separated by horizontal gray lines (color 5). Each section above a gray line (or the top section) features a colored object pattern on a white background.
    elements:
      - type: separator
        color: 5 (gray)
        orientation: horizontal
        role: divides the grid into sequential stages or frames
      - type: object
        description: A contiguous sequence of non-white, non-gray pixels in a single row within each section.
        properties:
          - color: Varies (red/green in train_1, blue in train_2)
          - shape/size: Can be constant (train_1) or change (train_2)
          - position: Can change (train_1) or be constant (train_2)
      - type: background
        color: 0 (white)
  output_grid:
    description: A 3-row grid with the same width as the input.
    elements:
      - type: object
        description: The predicted next state of the input object pattern, placed in the middle row.
        properties:
          - derived_from: Extrapolation of the pattern progression observed in the input grid.
          - row_position: Always placed in the middle row (row index 1).
          - horizontal_position: Determined by the extrapolated next step.
      - type: background
        color: 0 (white)
        location: Top row (row index 0) and bottom row (row index 2).

transformation:
  type: sequence_extrapolation
  steps:
    - 1. Identify the sequence of object states presented in the input, using the gray lines as separators between states.
    - 2. Analyze the progression of the object's properties (e.g., position, size) across the sequence.
    - 3. Determine the rule governing this progression (e.g., shift right by 1, increase length by 2).
    - 4. Apply the rule one more time to the last observed object state to predict the next state.
    - 5. Create a 3-row output grid of the same width as the input.
    - 6. Place the predicted next object state into the middle row (row 1) of the output grid, maintaining its predicted horizontal position. Fill the rest of the output grid with the background color (white).