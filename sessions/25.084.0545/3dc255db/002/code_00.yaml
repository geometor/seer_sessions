examples:
  - example_1:
      input:
        objects:
          - color: 4
            shape: rectangle
            adjacent: [6, 0]
          - color: 6
            shape: irregular
            adjacent: [4, 0]
          - color: 3
            shape: rectangle
            adjacent: [7, 0]
          - color: 7
            shape: irregular
            adjacent: [3,0]
        transformations:
          - action: switch
            target: [6,0,0]
            source: 6
            condition: "adjacent to the color 4 object, on border with 0, fill with color 6"
          - action: switch
            target: [7,0]
            source: 7
            condition: "adjacent to 3 object, on border with 0, fill with color 7"
  - example_2:
      input:
        objects:
          - color: 3
            shape: irregular
            adjacent: [9, 0]
          - color: 6
            shape: irregular
            adjacent: [9, 0]
          - color: 9
            shape: irregular
            adjacent: [3, 6, 0]
        transformations:
          - action: remove
            target: 9
            condition: "color 9 adjacent to object of color 3 to its left"
          - action: remove
            target: 9
            condition:  "color 9 adjacent to object of color 6 to its left"

  - example_3:
      input:
        objects:
          - color: 6
            shape: irregular
            adjacent: [7, 0]
          - color: 7
            shape: rectangle
            adjacent: [6, 0]
        transformations:
          - action: switch
            target: [7,7,7,7]
            source: 7
            condition: "color block 7 encompassed by color 6, change every 7 to 6 in this region"
          - action: switch_many
            target:  [[0,0,7],[0,0,7],[0,0,7]]
            source: 7
            condition: "if a vertical line of color 7 touches the top edge, replace with 0"