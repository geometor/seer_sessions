example1:
  input:
    objects:
      - color: 2  # Red
        shape: single pixel
        count: 1
      - color: 3  # Green
        shape: contiguous region
        count: 6  # initially 6 green,
      - color: 6 # grey
        shape: L
        count: many
      - color: 7  # white
        shape: surrounds everything
        count: many
      - color: 9 # maroon
        shape: lines
        count: many
    action:
      - type: flood_fill
        target: 3  # Green
        replacement: 9  # Maroon
        condition: "adjacent to 2 and part of the connected '3' region"
  expected_output:
      - color: 3
        count: 3
      - color: 9
        count: 3 + count(9)
  transformed_output:
    notes: "flood fill was too expansive.  It filled all the green"
  metrics:
      pixels_off: 8
      color_count_correct: False

example2:
  input:
    objects:
      - color: 2
        shape: single pixel
        count: 1
      - color: 3
        shape: contiguous region surrounding 2
        count: 6
      - color: 6
        shape: line
        count: many
      - color: 7
        shape: background
        count: many
      - color: 9
        shape: lines
        count: many

    action:
      - type: flood_fill
        target: 3
        replacement: 9
        condition: adjacent to 2
  expected_output:
      - color: 3
        count: 0
      - color: 9
        count: 6 + count(9 input)

  transformed_output:
      notes: "flood fill correctly replaced all surrounding 3s"

  metrics:
    pixels_off: 10
    color_count_correct: False

example3:
  input:
      objects:
        - color: 2
          shape: single pixel
          count: 1
        - color: 3
          shape: contiguous region surrounding 2
          count: 6
        - color: 7
          shape: background
          count: many
        - color: 9
          shape: single pixel
          count: few
      action:
        - type: flood fill
          target: 3
          replacement: 9
          condition: adjacent to 2
  expected_output:
      notes: "one 3 should not be flood filled because it is not connected by other 3s to the 2"
      - color: 3
        count: 1
      - color: 9
        count: 5 + count(9 input)

  transformed_output:
    notes: "flood fill was too expansive.  It filled all the green"
  metrics:
      pixels_off: 8
      color_count_correct: False