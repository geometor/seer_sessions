example1:
  input_segments:
    - segment1:
        rows: [0, 1, 2, 3, 4]
        objects:
          - color: 4
            positions: [(0, 7), (1, 7), (1, 8), (1, 9), (2, 9), (3, 9), (4, 9)]
          - color: 2
            positions: [(3, 1), (3, 2), (3, 3), (4, 2)]
    - segment2:
        rows: [6, 7, 8, 9, 10]
        objects:
          - color: 1
            positions: [(6, 3), (7, 1), (7, 2), (7, 3), (8, 1), (8, 2), (8, 3), (9, 1), (9, 2), (9, 3)]
          - color: 3
            positions: [(6, 8), (7, 7), (7, 8), (8, 7), (9, 7), (10, 7)]
  divider_rows: [5]
  transformation: "Reverse segment order and stack vertically. keep object coordinates relative to segment origin"

example2:
  input_segments:
    - segment1:
        rows: [0, 1, 2, 3, 4]
        objects:
          - color: 8
            positions: [(1, 2), (1, 3), (2, 2), (2, 3), (3, 0), (3, 1), (3, 2)]
    - segment2:
        rows: [6, 7, 8, 9, 10]
        objects:
            - color: 2
              positions: [(7, 0), (7, 1), (7, 2), (8, 2), (8, 3), (9, 3), (9, 4)]
    - segment3:
        rows: [12, 13, 14, 15, 16]
        objects:
          - color: 9
            positions:  [(13, 1), (13, 3), (13, 4), (14, 1), (14, 2), (14, 3), (15, 1)]
  divider_rows: [5, 11]
  transformation: "Reverse segment order and stack vertically, keep object coordinates relative to segment origin"

example3:
  input_segments:
    - segment1:
      rows: [0,1,2,3,4]
      objects:
        - color: 8
          positions: [(1,1), (1,2), (1,3), (2,2), (3,2), (4,2)]
        - color: 1
          positions: [(0, 8), (1, 8), (2, 8), (3, 8), (4, 8)]
        - color: 9
          positions: [(0, 14), (1, 14), (1, 15), (1, 16)]
  divider_rows: []
  transformation: "stack segments, there are no divider rows so stack all input rows. keep object coordinates relative to segment origin"