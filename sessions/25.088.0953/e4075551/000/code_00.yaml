Grid:
  Properties:
    - type: 2D array
    - cells: integer values 0-9 (colors)
    - background_color: white (0)

Objects:
  - type: Pixel
    properties:
      - color: non-white
      - location: (row, column)
      - count_per_input: 5 (based on examples)
    subtypes:
      - Central_Pixel:
          properties:
            - color: red (2)
            - role: Defines the center of the gray cross
      - Boundary_Pixels:
          properties:
            - color: any non-white, non-red color
            - role: Define the bounding box and the colors/locations of the outer frame lines
            - count: 4 (based on examples)

Relationships:
  - Bounding_Box: Determined by the min/max row/column of all non-white pixels.
  - Frame_Lines:
    - Horizontal Top: At min_row, color from pixel at min_row, spans min_col to max_col.
    - Horizontal Bottom: At max_row, color from pixel at max_row, spans min_col to max_col.
    - Vertical Left: At min_col, color from pixel at min_col, spans min_row+1 to max_row-1.
    - Vertical Right: At max_col, color from pixel at max_col, spans min_row+1 to max_row-1.
  - Central_Cross:
    - Color: gray (5)
    - Center: location of the input red (2) pixel (r_c, c_c)
    - Vertical Arm: At column c_c, spans min_row+1 to max_row-1.
    - Horizontal Arm: At row r_c, spans min_col+1 to max_col-1.

Transformation:
  - Identify the single red (2) pixel and the other four non-white pixels.
  - Calculate the bounding box (min/max row/col) using all five pixels.
  - Draw the outer frame lines using the colors and boundary locations defined by the four non-red pixels.
  - Draw the gray (5) cross centered at the red pixel's original location, extending vertically between the inner edges of the horizontal frame lines and horizontally between the inner edges of the vertical frame lines.
  - The final output grid contains the white background, the colored frame, and the gray cross.