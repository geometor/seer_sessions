Input Grid:
  - Background: White pixels (0).
  - Objects:
    - Type: Solid rectangles.
    - Composition: Blue pixels (1).
    - Count: One or more per grid.
    - Properties: Defined by their position, width, and height.
Transformation:
  - Target: Blue pixels (1) within the input grid.
  - Action: Recolor blue pixels based on their spatial relationship to the background.
  - Rule:
    - Identify all blue pixels (1) in the input.
    - For each blue pixel, calculate its minimum Chebyshev distance 'd' to the nearest non-blue (white, 0) pixel. (Chebyshev distance considers orthogonal and diagonal neighbors as distance 1).
    - Assign a new color to the pixel in the output grid based on the calculated distance 'd'.
    - The color mapping follows a cyclical pattern:
      - If d = 1, color = 1 (blue).
      - If d = 2, color = 2 (red).
      - If d = 3, color = 3 (green).
      - If d = 4, color = 2 (red).
      - This pattern repeats every 4 steps: [1, 2, 3, 2]. The color for distance 'd' is given by the element at index `(d-1) % 4` in the sequence [1, 2, 3, 2].
  - Invariant: Non-blue pixels (white background) remain unchanged in the output grid.
Output Grid:
  - Background: Identical to input background (white, 0).
  - Objects: Original blue rectangles are now filled with layered colors (1, 2, 3) according to the distance-based rule. The outermost layer remains blue (1).