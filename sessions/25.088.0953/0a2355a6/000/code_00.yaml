elements:
  - element: grid
    properties:
      - contains pixels of different colors (0-9)
      - background color is white (0)
  - element: object
    properties:
      - contiguous group of non-background pixels
      - in input grids, objects are composed solely of azure (8) pixels
      - objects often resemble digit shapes but are defined by connectivity
      - objects maintain their shape and position in the output
      - objects are assigned a new color in the output based on a rule
objects:
  - object: azure_shape
    description: A contiguous block of azure (8) pixels in the input grid.
    properties:
      - color: azure (8)
      - shape: preserved in output
      - position: preserved in output
    count: Variable (N per grid, observed N=3, N=4, N=5 in examples)
relationships:
  - type: identity
    description: Each azure object in the input corresponds to exactly one colored object in the output at the same location and with the same shape.
  - type: ordering
    description: Azure objects are implicitly ordered, likely based on their top-most, then left-most coordinate. Let this order be O_1, O_2, ..., O_N.
  - type: color_assignment
    description: The output color assigned to object O_i depends on its index 'i' and the total number of objects 'N'.
    details: Specific color sequences are used based on N.
      - If N=3, the color sequence assigned to (O_1, O_2, O_3) is [blue(1), blue(1), green(3)].
      - If N=4, the color sequence assigned to (O_1, O_2, O_3, O_4) is [red(2), blue(1), green(3), blue(1)].
      - If N=5, the color sequence assigned to (O_1, O_2, O_3, O_4, O_5) is [yellow(4), yellow(4), green(3), red(2), blue(1)].
actions:
  - action: find_objects
    input: input grid
    output: list of distinct azure (8) objects, identified by their pixel coordinates
  - action: count_objects
    input: list of objects
    output: total number of objects (N)
  - action: order_objects
    input: list of objects
    output: ordered list of objects (O_1, ..., O_N), based on top-left coordinate
  - action: select_color_sequence
    input: object count (N)
    output: specific sequence of colors based on N (using predefined mapping for N=3, 4, 5)
  - action: recolor_objects
    input:
      - output grid (initially a copy of input)
      - ordered list of objects (O_1, ..., O_N)
      - color sequence (C_1, ..., C_N)
    output: modified output grid where pixels of object O_i are changed to color C_i