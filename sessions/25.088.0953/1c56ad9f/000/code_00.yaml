Grid:
  Properties:
    - Size: Input and Output grids have identical dimensions.
    - BackgroundColor: Consistently white (0).
Objects:
  - Name: ForegroundObject
    Properties:
      - Type: Single contiguous component.
      - Color: A single non-white color (varies per example: green, red, gray, azure).
      - Structure: Often contains internal white spaces, forming patterns or lattice-like shapes.
      - Location: Occupies a specific region within the grid.
      - BoundingBox: Defined by min/max row and column indices.
    Relationships:
      - ContainsPixels: Composed of all non-white pixels in the input grid.
Transformation:
  Name: RowBasedHorizontalShift
  Input: ForegroundObject from the input grid.
  Output: Modified ForegroundObject placed onto an initially white output grid.
  Rule:
    - For each pixel of the ForegroundObject at (row, col) in the input:
      1. Determine the topmost row index (`object_top_row`) of the ForegroundObject.
      2. Calculate the relative row index: `relative_row = row - object_top_row`.
      3. Calculate the shift pattern index: `shift_index = relative_row % 4`.
      4. Determine the horizontal shift amount (`shift_amount`) using the pattern `[0, -1, 0, 1]` based on `shift_index`.
         - `shift_index` 0 -> `shift_amount` = 0
         - `shift_index` 1 -> `shift_amount` = -1 (left)
         - `shift_index` 2 -> `shift_amount` = 0
         - `shift_index` 3 -> `shift_amount` = +1 (right)
      5. Calculate the target column: `new_col = col + shift_amount`.
      6. Place the object's color at `(row, new_col)` in the output grid, provided `new_col` is within the grid's width boundaries.
  Properties:
    - PreservesVerticalPosition: Pixels stay in their original rows.
    - PreservesColor: The color of the object is unchanged.
    - ModifiesHorizontalPosition: Pixels shift left, right, or stay based on the row pattern.
    - ModifiesShape: The overall shape of the object is altered due to the differential row shifts.