task_description: Overlay non-background elements onto the largest background canvas.

definitions:
  - object: grid
    description: A 2D array of pixels with colors 0-9.
  - object: canvas
    description: The largest contiguous rectangular block of a single non-white color in the input grid. Defines the background color and dimensions of the output grid.
  - object: figure_pixel
    description: Any pixel in the input grid that is not white (0) and is not part of the identified canvas block.

input_properties:
  - contains one canvas object.
  - may contain multiple figure_pixels scattered inside or outside the canvas area.
  - contains white (0) pixels as padding or empty space.

output_properties:
  - dimensions (height, width) match the dimensions of the canvas object found in the input.
  - background color matches the color of the canvas object.
  - contains figure_pixels transferred from the input grid.

transformation:
  - action: identify_canvas
    description: Find the largest contiguous rectangular block of a single non-white color in the input grid. Record its color, top-left coordinates (r, c), height (h), and width (w).
    condition: Must be the rectangle with the absolute maximum area.
  - action: create_output_grid
    description: Create a new grid with dimensions h x w, filled entirely with the canvas color.
  - action: identify_figure_pixels
    description: Iterate through each pixel (in_r, in_c) of the input grid.
    condition: The pixel's color must not be white (0). The pixel must NOT be located within the bounds of the identified canvas (r <= in_r < r+h and c <= in_c < c+w) *and* have the same color as the canvas.
  - action: transfer_figure_pixels
    description: For each identified figure_pixel at input coordinates (in_r, in_c):
      - Calculate its relative position to the canvas origin: out_r = in_r - r, out_c = in_c - c.
      - Check if the relative position (out_r, out_c) is within the bounds of the output grid (0 <= out_r < h and 0 <= out_c < w).
      - If within bounds, set the pixel at output_grid[out_r, out_c] to the figure_pixel's color.

examples_analysis:
  - example: 1
    input_shape: [18, 22]
    output_shape: [12, 11]
    canvas: { color: 1, r: 5, c: 10, h: 12, w: 11 } # Corrected expectation
  - example: 2
    input_shape: [16, 20]
    output_shape: [9, 6]
    canvas: { color: 8, r: 6, c: 1, h: 9, w: 6 } # Corrected expectation
  - example: 3
    input_shape: [16, 18]
    output_shape: [6, 12]
    canvas: { color: 3, r: 1, c: 1, h: 6, w: 12 } # Corrected expectation