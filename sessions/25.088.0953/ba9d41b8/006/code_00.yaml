task_context:
  description: Apply a checkerboard pattern to the interior of large rectangular blocks.
  grid_properties:
    - background_color: White (0) is the background color and is ignored for transformations.
    - object_colors: Various colors (Blue, Red, Green, Yellow, Azure) are used for objects.
  objects:
    - type: Solid Monochromatic Rectangle
    - identification: Find contiguous areas of a single color (not White) that form a perfect rectangle.
    - properties:
        - color: The color of the rectangle (e.g., Red, Blue, Green).
        - bounding_box: Defined by (min_row, min_col, max_row, max_col).
        - height: max_row - min_row + 1
        - width: max_col - min_col + 1
    - role: Target for transformation if dimensions meet criteria.
  actions:
    - name: Apply Checkerboard Pattern
    - input_objects: Solid Monochromatic Rectangles
    - condition: Apply only if `height >= 3` AND `width >= 3`.
    - scope: Apply only to the *interior* pixels of the rectangle. The interior excludes the 1-pixel thick border.
        - interior_min_row: min_row + 1
        - interior_min_col: min_col + 1
        - interior_max_row: max_row - 1
        - interior_max_col: max_col - 1
    - transformation_rule:
        - For each pixel `(r, c)` within the interior:
        - Calculate relative coordinates within the interior:
            - `rel_r = r - interior_min_row` (which is `r - (min_row + 1)`)
            - `rel_c = c - interior_min_col` (which is `c - (min_col + 1)`)
        - Apply pattern based on the sum of relative coordinates:
            - If `(rel_r + rel_c)` is even, change the pixel color to White (0).
            - If `(rel_r + rel_c)` is odd, the pixel retains the original color of the rectangle.
    - unaffected_elements:
        - Background pixels (White).
        - Rectangles smaller than 3x3.
        - Non-rectangular shapes.
        - The 1-pixel border of modified rectangles.
        - Interior pixels where `(rel_r + rel_c)` is odd.