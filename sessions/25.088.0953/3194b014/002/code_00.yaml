task_description: Identify a specific property of objects within the input grid to determine a single color, then create a 3x3 output grid filled with that color.

examples:
  - id: 1
    input_grid_size: [20, 20]
    identified_objects:
      - type: solid_square
        color: 2 # red
        side: 4
      - type: solid_square
        color: 4 # yellow
        side: 5
      - type: other # non-square contiguous blocks
        color: [6, 7, 9] # magenta, orange, maroon
    largest_solid_square:
      color: 4 # yellow
      side: 5
    output_grid_color: 4 # yellow
    output_grid_size: [3, 3]
    rule_match: Largest solid square color determines output.

  - id: 2
    input_grid_size: [20, 20]
    identified_objects: # Based on visual inspection, assuming solidity
      - type: solid_square
        color: 9 # maroon
        side: 4
      - type: solid_square
        color: 5 # gray
        side: 5
      - type: solid_square
        color: 3 # green
        side: 5
      - type: solid_square
        color: 4 # yellow
        side: 6
      - type: other # non-square contiguous blocks
        color: [1, 8] # blue, azure
    largest_solid_square:
      color: 4 # yellow
      side: 6
    output_grid_color: 3 # green
    output_grid_size: [3, 3]
    rule_match: Largest solid square rule FAILS. Expected output color belongs to a 5x5 square, not the largest (6x6).

  - id: 3
    input_grid_size: [20, 20]
    identified_objects: # Based on visual inspection, assuming solidity
      - type: solid_square
        color: 6 # magenta
        side: 6 # approx
      - type: solid_square
        color: 8 # azure
        side: 8 # approx
      - type: other # non-square contiguous blocks
        color: [2, 3, 4, 9] # red, green, yellow, maroon
    largest_solid_square:
      color: 8 # azure
      side: 8
    output_grid_color: 8 # azure
    output_grid_size: [3, 3]
    rule_match: Largest solid square color determines output.

observations:
  - The output is always a 3x3 grid.
  - The output grid is filled with a single color.
  - This color is derived from a property of objects in the input grid.
  - The most prominent candidate property is the color of the largest solid square object (contiguous block of non-background color where height equals width and the bounding box is fully filled with that color).
  - This "largest solid square" rule works for Example 1 and Example 3.
  - Example 2 is an exception where the output color corresponds to a square (Green, 5x5) that is *not* the largest (Yellow, 6x6). The reason for choosing Green is unclear (it's not the smallest color index of max-size squares, nor the smallest color index of all unique squares).
  - Potential issues might exist in the precise definition/detection of "solid square" or a hidden tie-breaking/selection rule specific to Example 2.
