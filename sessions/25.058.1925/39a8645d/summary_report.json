{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4289,
        "candidates": 613,
        "total": 4902,
        "cached": 0
      },
      "response_time": 11.360239
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4764,
        "candidates": 815,
        "total": 5579,
        "cached": 0
      },
      "response_time": 9.683531
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2066,
        "candidates": 3397,
        "total": 5463,
        "cached": 0
      },
      "response_time": 28.790498
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 5259,
        "candidates": 815,
        "total": 6074,
        "cached": 0
      },
      "response_time": 7.482645
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2127,
        "candidates": 549,
        "total": 2676,
        "cached": 0
      },
      "response_time": 8.72372
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2537,
        "candidates": 358,
        "total": 2895,
        "cached": 0
      },
      "response_time": 4.753077
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1609,
        "candidates": 2946,
        "total": 4555,
        "cached": 0
      },
      "response_time": 26.921656
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 4352,
        "candidates": 466,
        "total": 4818,
        "cached": 0
      },
      "response_time": 4.74554
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1717,
        "candidates": 2118,
        "total": 3835,
        "cached": 0
      },
      "response_time": 22.807653
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3645,
        "candidates": 228,
        "total": 3873,
        "cached": 0
      },
      "response_time": 3.612898
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2127,
        "candidates": 571,
        "total": 2698,
        "cached": 0
      },
      "response_time": 10.018714
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2557,
        "candidates": 708,
        "total": 3265,
        "cached": 0
      },
      "response_time": 8.133198
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1951,
        "candidates": 1371,
        "total": 3322,
        "cached": 0
      },
      "response_time": 14.687957
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3123,
        "candidates": 411,
        "total": 3534,
        "cached": 0
      },
      "response_time": 4.940923
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1662,
        "candidates": 1414,
        "total": 3076,
        "cached": 0
      },
      "response_time": 18.350205
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2872,
        "candidates": 1335,
        "total": 4207,
        "cached": 0
      },
      "response_time": 13.226708
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2127,
        "candidates": 616,
        "total": 2743,
        "cached": 0
      },
      "response_time": 9.239042
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2603,
        "candidates": 828,
        "total": 3431,
        "cached": 0
      },
      "response_time": 9.984412
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 2079,
        "candidates": 1131,
        "total": 3210,
        "cached": 0
      },
      "response_time": 14.7763
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 3007,
        "candidates": 1011,
        "total": 4018,
        "cached": 0
      },
      "response_time": 10.887541
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2262,
        "candidates": 1242,
        "total": 3504,
        "cached": 0
      },
      "response_time": 16.113496
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 3299,
        "candidates": 819,
        "total": 4118,
        "cached": 0
      },
      "response_time": 7.804098
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "0 0 0\n0 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "0 0 0\n1 0 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 0\n8 8 8\n0 8 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "0 0 0\n0 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "0 0 0\n1 0 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 0\n8 8 8\n0 8 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "8 8 0\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "8 8 0\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "0\n8\n8\n8\n8\n0\n0\n8\n8\n8\n0\n0\n0\n0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0\n0\n8\n8\n8\n0\n0\n0\n8\n8\n8\n0\n0\n0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "4 4 4\n4 4 0\n4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "4 0 0 0 0 0 0 0 0 0 0 0\n0 4 4 0 0 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 4 4 0 0\n4 0 0 0 0 0 0 4 0 0 0 0\n0 4 4 0 0 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "4 0 0 0 0 0 0 0 0 0 0 0\n0 4 4 0 0 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 4 4 0 0\n4 0 0 0 0 0 0 4 0 0 0 0\n0 4 4 0 0 0 0 0 0 0 0 0\n4 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "0 0 0\n0 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 0\n8 8 8\n0 8 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "022-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 0 8 0 8 0\n0 0 8 0 8 0 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0 2 0 2 0 0\n0 0 0 0 8 0 0 0 0 2 0 2 0 0\n0 0 0 8 0 8 0 0 0 0 2 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 2 0 2 0 0 0 0 0 0 0 0 0 0\n0 0 2 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "8 0 8\n0 8 0\n8 0 8",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 1 0 1 0 0 0 0\n0 0 4 0 0 0 0 1 1 1 0 0 0 0\n0 0 0 4 4 0 0 0 1 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 4 4\n0 0 0 0 0 0 2 0 2 0 0 4 0 0\n0 1 0 1 0 0 0 2 0 0 0 0 0 0\n0 1 1 1 0 0 2 0 2 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 4 4 0 0\n0 0 4 0 0 0 0 0 0 4 0 0 0 0\n0 0 0 4 4 0 0 0 0 0 0 1 0 1\n0 0 4 0 0 0 0 0 0 0 0 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 1 0",
        "expected_output": "4 0 0\n0 4 4\n4 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0 6 6 0 0 0\n0 0 8 8 8 0 0 0 0 6 6 0 0 0\n0 0 0 8 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 6 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}