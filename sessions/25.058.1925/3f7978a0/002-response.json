{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe transformation extracts the smallest rectangular subgrid from the input grid that encloses all non-zero pixels.\n\"\"\"\n\nimport numpy as np\n\ndef find_boundary_indices(grid):\n    # Find rows and columns with non-zero elements\n    non_zero_rows = np.any(grid != 0, axis=1)\n    non_zero_cols = np.any(grid != 0, axis=0)\n\n    # Get indices of the first and last True values\n    rows = np.where(non_zero_rows)[0]\n    cols = np.where(non_zero_cols)[0]\n    \n    if rows.size == 0 or cols.size == 0:  # Handle empty grids\n        return 0, 0, 0, 0\n\n    top = rows[0]\n    bottom = rows[-1]\n    left = cols[0]\n    right = cols[-1]\n\n    return top, bottom, left, right\n\ndef transform(input_grid):\n    \"\"\"\n    Extracts the smallest rectangular subgrid enclosing all non-zero pixels.\n    \"\"\"\n    # Convert input grid to a NumPy array for easier manipulation\n    grid = np.array(input_grid)\n\n    # Find boundary indices\n    top, bottom, left, right = find_boundary_indices(grid)\n\n    # Extract the subgrid\n    output_grid = grid[top:bottom+1, left:right+1]\n\n    return output_grid.tolist()\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 4304,
    "candidates_token_count": 338,
    "total_token_count": 4642,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 6.081322,
  "response_file": "002-response.json"
}