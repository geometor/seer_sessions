import numpy as np

def code_execution(input_grid, output_grid, predicted_grid):
    correct = np.array_equal(output_grid, predicted_grid)
    print(f"Correct: {correct}")

    diff = output_grid != predicted_grid
    if not correct:
        print("Differences:")
        print(diff)

# Example Data (replace with actual data from the task)
#example 1
input_grid1 = np.array([[4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 5, 0, 0], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 5, 0, 0], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 5, 0, 0], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 5, 0, 0], [6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 5, 0, 0], [6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
output_grid1 = np.array([[4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 5, 0, 0], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 5, 0, 0], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 5, 0, 0], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2], [6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 5, 2, 2], [6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 5, 2, 2], [6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
predicted_grid1 = np.array([[4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 0, 0, 0], [4, 4, 4, 4, 4, 4, 0, 0, 0, 0, 5, 0, 0], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 5, 0, 0], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 5, 0, 0], [2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 4, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 2, 2], [6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 5, 2, 2], [6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 5, 2, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 6, 6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
code_execution(input_grid1, output_grid1, predicted_grid1)

#example 2
input_grid2 = np.array([[1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0], [1, 1, 1, 1, 7, 7, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0], [1, 1, 1, 1, 7, 7, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0], [1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 5, 0, 0, 0], [8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 5, 0, 0, 0], [8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 5, 0, 0, 0], [8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
output_grid2 = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 5, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 5, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 5, 8, 8, 8], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
predicted_grid2 = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 7, 7, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0], [8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 5, 0, 0, 0], [8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 5, 0, 0, 0], [8, 8, 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
code_execution(input_grid2, output_grid2, predicted_grid2)

#example 3
input_grid3 = np.array([[3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 5, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 5, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
output_grid3 = np.array([[3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 5, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 5, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 5, 3, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 3, 3], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 3, 3], [0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
predicted_grid3 = np.array([[3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 5, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 5, 0, 0], [3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 9, 9, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
code_execution(input_grid3, output_grid3, predicted_grid3)
