import numpy as np
from collections import Counter

def analyze_grids(task):
    results = []
    for example in task["train"]:
        input_grid = np.array(example['input'])
        output_grid = np.array(example['output'])

        input_counts = Counter(input_grid.flatten())
        output_counts = Counter(output_grid.flatten())

        results.append({
            'input_counts': dict(input_counts),
            'output_counts': dict(output_counts),
        })

    return results

# this is a placeholder for the actual task data
task_data = {
  "train": [
    {
      "input": [
        [4, 4],
        [4, 4]
      ],
      "output": [
        [4, 4, 0, 4, 4, 0, 4, 4, 2],
        [4, 4, 0, 4, 4, 0, 4, 4, 2],
        [0, 0, 0, 0, 0, 0, 0, 0, 2],
        [4, 4, 0, 4, 4, 0, 4, 4, 0],
        [4, 4, 0, 4, 4, 0, 4, 4, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [4, 4, 0, 4, 4, 0, 4, 4, 0],
        [4, 4, 0, 4, 4, 0, 4, 4, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0]
      ]
    },
    {
      "input": [
        [8, 0, 8],
        [0, 5, 0],
        [8, 0, 8]
      ],
      "output": [
        [8, 0, 8, 0, 8, 0, 8, 0, 0, 2],
        [0, 5, 0, 0, 0, 5, 0, 0, 0, 2],
        [8, 0, 8, 0, 8, 0, 8, 0, 0, 2],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 8, 0, 8, 0, 8, 0, 0, 0],
        [0, 5, 0, 0, 0, 5, 0, 0, 0, 0],
        [8, 0, 8, 0, 8, 0, 8, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 8, 0, 8, 0, 8, 0, 0, 2],
        [0, 5, 0, 0, 0, 5, 0, 0, 0, 2],
        [8, 0, 8, 0, 8, 0, 8, 0, 0, 2],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 8, 0, 8, 0, 8, 0, 0, 0],
        [0, 5, 0, 0, 0, 5, 0, 0, 0, 0],
        [8, 0, 8, 0, 8, 0, 8, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      ]
    },
    {
      "input": [
        [1, 0, 0, 0],
        [0, 1, 0, 0],
        [0, 0, 1, 0],
        [0, 0, 0, 1]
      ],
      "output": [
        [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 2],
        [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2],
        [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2],
        [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0],
        [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0],
        [0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0],
        [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],
        [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      ]
    }
  ]
}

results = analyze_grids(task_data)
for i, res in enumerate(results):
    print(f"Example {i+1}:")
    print(f"  Input Counts: {res['input_counts']}")
    print(f"  Output Counts: {res['output_counts']}")