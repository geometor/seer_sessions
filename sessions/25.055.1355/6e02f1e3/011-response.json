{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe transformation rule is as follows:\nIterate through each row of the input grid. If a row contains all identical non-zero values, keep that row unchanged in the output grid.\nIf any row contains a zero or more than one distinct non-zero values change all values on that row to zero.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid according to the specified rule.\n    \"\"\"\n    # Initialize the output grid as a copy of the input grid.\n    output_grid = input_grid.copy()\n    rows = input_grid.shape[0]\n\n    # change output pixels \n    for row_index in range(rows):\n        row = input_grid[row_index]\n         # Find unique non-zero values in the current row\n        unique_non_zero_values = np.unique(row[row != 0])\n        \n        # Check if the row should be all zeros.\n        if len(unique_non_zero_values) != 1:\n            # If there are zero or more than one unique non zero values, set the entire row to 0.\n            output_grid[row_index, :] = 0\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2145,
    "candidates_token_count": 281,
    "total_token_count": 2426,
    "cached_content_token_count": 0
  },
  "response_time": 4.236928,
  "response_file": "011-response.json"
}