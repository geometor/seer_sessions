{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 264,
        "total": 2017,
        "cached": 0
      },
      "response_time": 4.06082
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 1879,
        "candidates": 138,
        "total": 2017,
        "cached": 0
      },
      "response_time": 2.11777
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1389,
        "candidates": 657,
        "total": 2046,
        "cached": 0
      },
      "response_time": 7.471671
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 1841,
        "candidates": 152,
        "total": 1993,
        "cached": 0
      },
      "response_time": 2.046643
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1403,
        "candidates": 840,
        "total": 2243,
        "cached": 0
      },
      "response_time": 11.041178
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2042,
        "candidates": 136,
        "total": 2178,
        "cached": 0
      },
      "response_time": 33.585327
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1781,
        "candidates": 528,
        "total": 2309,
        "cached": 0
      },
      "response_time": 7.579529
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2170,
        "candidates": 561,
        "total": 2731,
        "cached": 0
      },
      "response_time": 5.292537
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1811,
        "candidates": 991,
        "total": 2802,
        "cached": 0
      },
      "response_time": 12.603558
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2596,
        "candidates": 770,
        "total": 3366,
        "cached": 0
      },
      "response_time": 6.500996
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2021,
        "candidates": 1094,
        "total": 3115,
        "cached": 0
      },
      "response_time": 14.09129
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2907,
        "candidates": 635,
        "total": 3542,
        "cached": 0
      },
      "response_time": 13.845465
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 372,
        "total": 2169,
        "cached": 0
      },
      "response_time": 5.910251
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2031,
        "candidates": 190,
        "total": 2221,
        "cached": 0
      },
      "response_time": 2.762902
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1441,
        "candidates": 776,
        "total": 2217,
        "cached": 0
      },
      "response_time": 9.124196
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2012,
        "candidates": 190,
        "total": 2202,
        "cached": 0
      },
      "response_time": 2.201045
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1441,
        "candidates": 1310,
        "total": 2751,
        "cached": 0
      },
      "response_time": 14.402268
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2547,
        "candidates": 190,
        "total": 2737,
        "cached": 0
      },
      "response_time": 22.350044
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 468,
        "total": 2221,
        "cached": 0
      },
      "response_time": 7.32173
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2081,
        "candidates": 444,
        "total": 2525,
        "cached": 0
      },
      "response_time": 5.380567
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1695,
        "candidates": 4665,
        "total": 6360,
        "cached": 0
      },
      "response_time": 35.847728
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 3424,
        "candidates": 573,
        "total": 3997,
        "cached": 0
      },
      "response_time": 7.307479
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 3788,
        "candidates": 373,
        "total": 4161,
        "cached": 0
      },
      "response_time": 3.785994
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 6143,
        "candidates": 456,
        "total": 6599,
        "cached": 0
      },
      "response_time": 4.760919
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "0 2 2\n0 2 2\n1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 0\n0 2 0 0\n0 0 0 2\n1 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n1 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 90.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 0\n2 0 2\n1 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "0 2 2\n0 2 2\n1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 0\n0 2 0 0\n0 0 0 2\n1 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n1 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 90.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 0\n2 0 2\n1 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "1 2 2\n1 2 2\n1 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "1 2 2 0\n1 2 0 0\n1 0 0 2\n1 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "1 2 0 0\n1 2 0 0\n1 2 0 2\n1 0 0 0\n1 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 70.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "1 2 0\n1 0 2\n1 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "1 2 2\n1 2 2\n2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 1\n1 2 0 1\n0 1 1 2\n1 2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 0 0\n1 2 0 1\n2 2 1 2\n0 1 1 1\n1 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 1\n2 1 2\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "1 2 2\n1 2 2\n2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 1\n1 2 1 1\n1 1 1 2\n1 2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 1 1\n1 2 1 1\n2 2 1 2\n1 1 1 1\n1 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 40.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 1\n2 1 2\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "011-py_06-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "1 2 2\n1 2 2\n2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 1\n1 2 1 1\n1 1 1 2\n1 2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 1 1\n1 2 1 1\n2 2 1 2\n1 1 1 1\n1 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 40.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 1\n2 1 2\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "0 2 2\n0 2 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 93.75
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 0\n2 0 2\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "0 2 2\n0 2 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 93.75
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 0\n2 0 2\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "0 2 1\n0 2 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 1 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 1 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 90.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 1 0\n2 0 2\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "1 2 2\n1 2 2\n2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 0\n1 2 1 1\n1 1 1 2\n0 2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 1 0\n1 2 1 0\n2 2 1 2\n1 1 1 1\n0 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 55.00000000000001
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 0\n2 1 2\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "021-py_12-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "1 2 2\n1 2 2\n2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 0\n1 2 1 1\n1 1 1 2\n0 2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 1 0\n1 2 1 0\n2 2 1 2\n1 1 1 1\n0 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 55.00000000000001
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 0\n2 1 2\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "023-py_13-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "0 2 2\n0 2 2\n2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 0\n1 2 1 0\n0 1 0 2\n0 2 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 0 0\n1 2 0 0\n2 2 0 2\n1 1 0 1\n0 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 75.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 0\n2 1 2\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "024-py_14-train": [
      {
        "example": 1,
        "input": "0 2 2\n0 2 2\n2 0 0",
        "expected_output": "0 2 2\n0 2 2\n1 0 0",
        "transformed_output": "0 2 2\n0 2 2\n2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "2 2 2 0\n0 2 0 0\n0 0 0 2\n0 2 0 0",
        "expected_output": "2 2 2 0\n0 2 0 0\n0 0 0 1\n0 1 0 0",
        "transformed_output": "2 2 2 0\n1 2 1 0\n1 1 1 2\n1 2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "2 2 0 0\n0 2 0 0\n2 2 0 2\n0 0 0 0\n0 2 2 2",
        "expected_output": "2 2 0 0\n0 2 0 0\n2 2 0 1\n0 0 0 0\n0 2 2 2",
        "transformed_output": "2 2 0 0\n1 2 0 0\n2 2 0 2\n1 1 0 1\n1 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 70.0
      },
      {
        "example": 4,
        "input": "2 2 0\n2 0 2\n0 2 0",
        "expected_output": "2 2 0\n2 0 1\n0 1 0",
        "transformed_output": "2 2 0\n2 1 2\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 4
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}