from pathlib import Path
import json
import numpy as np

def load_task(task_file):
    with open(task_file, 'r') as f:
        task = json.load(f)
    return task

def find_pixel_by_color(grid, color):
    # Find the coordinates of pixels of the specified color.
    coords = np.argwhere(grid == color)
    if coords.size > 0:
        return coords  # Return all occurrences
    return None

def code_execution(task_file_path_string):
    print(f"TASK: {task_file_path_string}")
    task = load_task(Path(task_file_path_string))
    reports = []
    
    for i, example in enumerate(task["train"]):
        input_grid = np.array(example['input'])
        output_grid = np.array(example['output'])
        
        green_pixels_input = find_pixel_by_color(input_grid, 3)
        green_pixels_output = find_pixel_by_color(output_grid, 3)
        
        report = {
          'example': i,
          'input_grid_shape': input_grid.shape,
          'output_grid_shape': output_grid.shape,
          'green_pixels_input': green_pixels_input.tolist() if green_pixels_input is not None else None,
          'green_pixels_output': green_pixels_output.tolist() if green_pixels_output is not None else None
        }
        reports.append(report)
    return reports
TASK_FILE = "6fa7a44f.json"

reports = code_execution(TASK_FILE)
for report in reports:
  print(report)