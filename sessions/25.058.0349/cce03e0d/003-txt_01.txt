import numpy as np

def compare_grids(grid1, grid2):
    """
    Compares two grids and returns a description of the differences.
    """
    if grid1.shape != grid2.shape:
        return "Different shapes: {} vs {}".format(grid1.shape, grid2.shape)

    differences = []
    for row in range(grid1.shape[0]):
        for col in range(grid1.shape[1]):
            if grid1[row, col] != grid2[row, col]:
                differences.append(
                    "Pixel at ({}, {}): Expected {}, got {}".format(
                        row, col, grid1[row, col], grid2[row, col]
                    )
                )
    if differences:
        return "\n".join(differences)
    else:
        return "Grids are identical"
test_pairs = []
for task in tasks:
    for example in task['train']:
        test_pairs.append((np.array(example['input']), np.array(example['output'])))

for idx, pair in enumerate(test_pairs):
  input_grid, output_grid = pair
  transformed_grid = transform(input_grid)
  comparison_result = compare_grids(output_grid, transformed_grid)
  print(f'pair {idx}:')
  print(comparison_result)
