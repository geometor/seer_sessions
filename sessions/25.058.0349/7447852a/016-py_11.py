import numpy as np
from collections import Counter

task_data = {
    'train': [
        {
            'input': np.array([[8, 0, 8, 0, 8, 0, 8, 0],
       [0, 5, 0, 5, 0, 5, 0, 5],
       [8, 0, 8, 0, 8, 0, 8, 0],
       [0, 5, 0, 5, 0, 5, 0, 5],
       [8, 0, 8, 0, 8, 0, 8, 0],
       [0, 5, 0, 5, 0, 5, 0, 5],
       [8, 0, 8, 0, 8, 0, 8, 0],
       [0, 5, 0, 5, 0, 5, 0, 5]]),
            'output': np.array([[8, 0, 8, 0, 8, 0, 8, 0],
       [0, 5, 0, 5, 0, 5, 0, 5],
       [8, 0, 8, 0, 8, 0, 8, 0],
       [0, 5, 0, 5, 0, 5, 0, 5],
       [8, 0, 8, 0, 8, 0, 8, 0],
       [0, 5, 0, 5, 0, 5, 0, 5],
       [8, 0, 8, 0, 8, 0, 8, 0],
       [0, 5, 0, 5, 0, 5, 0, 5]])
        },
        {
            'input': np.array([[8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 2, 0, 5, 0, 5, 0, 5, 0],
       [8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 5, 0, 2, 0, 5, 0, 5, 0],
       [8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 5, 0, 5, 0, 2, 0, 5, 0],
       [8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 5, 0, 5, 0, 5, 0, 2, 0],
       [8, 0, 8, 0, 8, 0, 8, 0, 8]]),
            'output': np.array([[8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 2, 4, 5, 0, 5, 0, 5, 0],
       [8, 4, 8, 0, 8, 0, 8, 0, 8],
       [0, 5, 0, 2, 4, 5, 0, 5, 0],
       [8, 0, 8, 4, 8, 0, 8, 0, 8],
       [0, 5, 0, 5, 0, 2, 4, 5, 0],
       [8, 0, 8, 0, 8, 4, 8, 0, 8],
       [0, 5, 0, 5, 0, 5, 0, 2, 4],
       [8, 0, 8, 0, 8, 0, 8, 4, 8]])
        },
		{
            'input': np.array([[8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 5, 0, 5, 0, 5, 0, 2, 0],
       [8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 2, 0, 5, 0, 5, 0, 5, 0],
       [8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 5, 0, 2, 0, 5, 0, 5, 0],
       [8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 5, 0, 5, 0, 2, 0, 5, 0],
       [8, 0, 8, 0, 8, 0, 8, 0, 8]]),
            'output': np.array([[8, 0, 8, 0, 8, 0, 8, 0, 8],
       [0, 5, 0, 5, 0, 5, 0, 2, 4],
       [8, 0, 8, 0, 8, 0, 8, 4, 8],
       [0, 2, 4, 5, 0, 5, 0, 5, 0],
       [8, 4, 8, 0, 8, 0, 8, 0, 8],
       [0, 5, 0, 2, 4, 5, 0, 5, 0],
       [8, 0, 8, 4, 8, 0, 8, 0, 8],
       [0, 5, 0, 5, 0, 2, 4, 5, 0],
       [8, 0, 8, 0, 8, 4, 8, 0, 8]])
        },
        {
            'input': np.array([[2, 0, 2, 0, 2, 0, 2, 0],
                [0, 5, 0, 5, 0, 5, 0, 5],
                [2, 0, 2, 0, 2, 0, 2, 0],
                [0, 5, 0, 5, 0, 5, 0, 5],
                [2, 0, 2, 0, 2, 0, 2, 0],
                [0, 5, 0, 5, 0, 5, 0, 5],
                [2, 0, 2, 0, 2, 0, 2, 0],
                [0, 5, 0, 5, 0, 5, 0, 5]]),
            'output': np.array([[2, 4, 2, 4, 2, 4, 2, 4],
                [4, 5, 4, 5, 4, 5, 4, 5],
                [2, 4, 2, 4, 2, 4, 2, 4],
                [4, 5, 4, 5, 4, 5, 4, 5],
                [2, 4, 2, 4, 2, 4, 2, 4],
                [4, 5, 4, 5, 4, 5, 4, 5],
                [2, 4, 2, 4, 2, 4, 2, 4],
                [4, 5, 4, 5, 4, 5, 4, 5]])
        }

    ]
}

def analyze_changes(input_grid, output_grid):
    changes = []
    for r in range(input_grid.shape[0]):
        for c in range(input_grid.shape[1]):
            if input_grid[r, c] != output_grid[r, c]:
                changes.append({
                    'row': r,
                    'col': c,
                    'input_color': int(input_grid[r, c]),
                    'output_color': int(output_grid[r, c]),
                })
    return changes

for example_index, example in enumerate(task_data['train']):
    input_grid = example['input']
    output_grid = example['output']
    changes = analyze_changes(input_grid, output_grid)
    print(f"Example {example_index + 1} Changes:")
    print(changes)
    print("-" * 20)
