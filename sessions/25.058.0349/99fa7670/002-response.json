{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe input grid is transformed into the output grid by expanding each non-zero pixel into a rectangle that extends to the right edge of the grid and downwards until it hits either another rectangle or the edge of the grid.\n\"\"\"\n\nimport numpy as np\n\ndef get_non_zero_pixels(grid):\n    \"\"\"Finds the positions of non-zero pixels in the grid.\"\"\"\n    return np.argwhere(grid != 0)\n\ndef expand_pixel(grid, start_row, start_col, color):\n    \"\"\"Expands a pixel to a rectangle to the right and down.\"\"\"\n    # go to right edge\n    for col in range(start_col, grid.shape[1]):\n        grid[start_row, col] = color\n\n    # check downwards\n    row = start_row + 1\n    while row < grid.shape[0]:\n        if all(grid[row, start_col:] == 0):\n          for col in range(start_col, grid.shape[1]):\n              grid[row, col] = color\n          row += 1\n        else:\n          break\n\n\n\ndef transform(input_grid):\n    \"\"\"Transforms the input grid according to the described rule.\"\"\"\n    output_grid = np.zeros_like(input_grid)\n    non_zero_pixels = get_non_zero_pixels(input_grid)\n\n    for row, col in non_zero_pixels:\n        color = input_grid[row, col]\n        expand_pixel(output_grid, row, col, color)\n    \n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2177,
    "candidates_token_count": 357,
    "total_token_count": 2534,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.497973,
  "response_file": "002-response.json"
}