{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4851,
        "candidates": 585,
        "total": 5436,
        "cached": 0
      },
      "response_time": 7.957891
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 5295,
        "candidates": 456,
        "total": 5751,
        "cached": 0
      },
      "response_time": 4.976689
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 550,
        "total": 2387,
        "cached": 0
      },
      "response_time": 28.734181
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2250,
        "candidates": 245,
        "total": 2495,
        "cached": 0
      },
      "response_time": 2.882672
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1496,
        "candidates": 1885,
        "total": 3381,
        "cached": 0
      },
      "response_time": 18.201909
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3175,
        "candidates": 689,
        "total": 3864,
        "cached": 0
      },
      "response_time": 7.062082
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1940,
        "candidates": 1637,
        "total": 3577,
        "cached": 0
      },
      "response_time": 16.718919
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 3371,
        "candidates": 784,
        "total": 4155,
        "cached": 0
      },
      "response_time": 6.965372
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1849,
        "candidates": 408,
        "total": 2257,
        "cached": 0
      },
      "response_time": 6.057446
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 398,
        "total": 2515,
        "cached": 0
      },
      "response_time": 6.616815
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1649,
        "candidates": 1234,
        "total": 2883,
        "cached": 0
      },
      "response_time": 12.96096
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2660,
        "candidates": 743,
        "total": 3403,
        "cached": 0
      },
      "response_time": 7.471973
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1994,
        "candidates": 905,
        "total": 2899,
        "cached": 0
      },
      "response_time": 10.661712
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2695,
        "candidates": 513,
        "total": 3208,
        "cached": 0
      },
      "response_time": 5.183581
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1849,
        "candidates": 414,
        "total": 2263,
        "cached": 0
      },
      "response_time": 28.412847
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2123,
        "candidates": 368,
        "total": 2491,
        "cached": 0
      },
      "response_time": 3.936522
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1619,
        "candidates": 711,
        "total": 2330,
        "cached": 0
      },
      "response_time": 8.973988
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2125,
        "candidates": 385,
        "total": 2510,
        "cached": 0
      },
      "response_time": 3.627906
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1635,
        "candidates": 829,
        "total": 2464,
        "cached": 0
      },
      "response_time": 9.389928
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2259,
        "candidates": 256,
        "total": 2515,
        "cached": 0
      },
      "response_time": 3.008374
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1873,
        "candidates": 486,
        "total": 2359,
        "cached": 0
      },
      "response_time": 28.211144
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2221,
        "candidates": 405,
        "total": 2626,
        "cached": 0
      },
      "response_time": 4.942272
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1656,
        "candidates": 1970,
        "total": 3626,
        "cached": 0
      },
      "response_time": 18.801644
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 2549,
        "candidates": 752,
        "total": 3301,
        "cached": 0
      },
      "response_time": 9.517166
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 3097,
        "candidates": 421,
        "total": 3518,
        "cached": 0
      },
      "response_time": 4.237556
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 3422,
        "candidates": 256,
        "total": 3678,
        "cached": 0
      },
      "response_time": 3.251441
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 1885,
        "candidates": 415,
        "total": 2300,
        "cached": 0
      },
      "response_time": 6.086091
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 2163,
        "candidates": 238,
        "total": 2401,
        "cached": 0
      },
      "response_time": 3.248984
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 1490,
        "candidates": 723,
        "total": 2213,
        "cached": 0
      },
      "response_time": 8.607139
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 2009,
        "candidates": 273,
        "total": 2282,
        "cached": 0
      },
      "response_time": 3.282018
    },
    {
      "response_file": "031-response.json",
      "token_usage": {
        "prompt": 1525,
        "candidates": 1032,
        "total": 2557,
        "cached": 0
      },
      "response_time": 12.141937
    },
    {
      "response_file": "032-response.json",
      "token_usage": {
        "prompt": 2354,
        "candidates": 400,
        "total": 2754,
        "cached": 0
      },
      "response_time": 4.020232
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.75757575757575
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.75757575757575
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 74.35897435897436
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 76.19047619047619
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n6 4 6 4 6 4 6 4 6 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 56.666666666666664
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "6 4 6 4 6 4 6 4 6 4 6\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 57.57575757575758
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n6 4 6 4 6 4 6 4 6 4 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 57.57575757575758
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n6 4 6 4 6 4 6 4 6 4 6 4 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 56.41025641025641
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "6 4 6 4 6 4 6 4 6 4 6 4 6 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 59.523809523809526
      }
    ],
    "005-py_03-train": [],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 6 4 6 4 6 4 6 4 6\n4 4 4 4 4 4 4 4 4 4\n6 4 6 4 6 4 6 4 6 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 40.0
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "6 4 6 4 6 4 6 4 6 4 6\n4 4 4 4 4 4 4 4 4 4 4\n4 6 4 6 4 6 4 6 4 6 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 42.42424242424242
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 6 4 6 4 6 4 6 4 6 4\n4 4 4 4 4 4 4 4 4 4 4\n6 4 6 4 6 4 6 4 6 4 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 42.42424242424242
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 6 4 6 4 6 4 6 4 6 4 6 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n6 4 6 4 6 4 6 4 6 4 6 4 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 23,
        "percent_correct": 41.02564102564102
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "6 4 6 4 6 4 6 4 6 4 6 4 6 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 6 4 6 4 6 4 6 4 6 4 6 4 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 42.857142857142854
      }
    ],
    "007-py_05-train": [],
    "008-py_06-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.75757575757575
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.75757575757575
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 74.35897435897436
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 76.19047619047619
      }
    ],
    "010-py_07-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0\n6 6 6 6 6 6 6 6 6 6\n0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0\n6 6 6 6 6 6 6 6 6 6 6\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4\n6 6 6 6 6 6 6 6 6 6 6\n0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4 0 4\n6 6 6 6 6 6 6 6 6 6 6 6 6\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n6 6 6 6 6 6 6 6 6 6 6 6 6 6\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 66.66666666666666
      }
    ],
    "011-py_08-train": [],
    "012-py_09-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "6 0 6 0 6 0 6 0 6 0\n6 6 6 6 6 6 6 6 6 6\n0 6 0 6 0 6 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 6 0 6 0 6 0 6 0 6 0\n6 6 6 6 6 6 6 6 6 6 6\n6 0 6 0 6 0 6 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 57.57575757575758
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "6 0 6 0 6 0 6 0 6 0 6\n6 6 6 6 6 6 6 6 6 6 6\n0 6 0 6 0 6 0 6 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 57.57575757575758
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "6 0 6 0 6 0 6 0 6 0 6 0 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n0 6 0 6 0 6 0 6 0 6 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 58.97435897435898
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 6 0 6 0 6 0 6 0 6 0 6 0 6\n6 6 6 6 6 6 6 6 6 6 6 6 6 6\n6 0 6 0 6 0 6 0 6 0 6 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 57.14285714285714
      }
    ],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "6 0 6 0 6 0 6 0 6 0\n6 6 6 6 6 6 6 6 6 6\n0 6 0 6 0 6 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 6 0 6 0 6 0 6 0 6 0\n6 6 6 6 6 6 6 6 6 6 6\n6 0 6 0 6 0 6 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 57.57575757575758
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "6 0 6 0 6 0 6 0 6 0 6\n6 6 6 6 6 6 6 6 6 6 6\n0 6 0 6 0 6 0 6 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 57.57575757575758
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "6 0 6 0 6 0 6 0 6 0 6 0 6\n6 6 6 6 6 6 6 6 6 6 6 6 6\n0 6 0 6 0 6 0 6 0 6 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 58.97435897435898
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 6 0 6 0 6 0 6 0 6 0 6 0 6\n6 6 6 6 6 6 6 6 6 6 6 6 6 6\n6 0 6 0 6 0 6 0 6 0 6 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 57.14285714285714
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 0 6 0 6 0 6 0 6 0\n4 6 6 6 6 6 6 6 6 4\n0 6 0 6 0 6 0 6 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 6 0 6 0 6 0 6 0 6 0\n4 6 6 6 6 6 6 6 6 6 4\n4 0 6 0 6 0 6 0 6 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 57.57575757575758
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 0 6 0 6 0 6 0 6 0 4\n4 6 6 6 6 6 6 6 6 6 4\n0 6 0 6 0 6 0 6 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 57.57575757575758
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 0 6 0 6 0 6 0 6 0 6 0 4\n4 6 6 6 6 6 6 6 6 6 6 6 4\n0 6 0 6 0 6 0 6 0 6 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 48.717948717948715
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 6 0 6 0 6 0 6 0 6 0 6 0 4\n4 6 6 6 6 6 6 6 6 6 6 6 6 4\n4 0 6 0 6 0 6 0 6 0 6 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 57.14285714285714
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 0 6 0 6 0 6 0 6 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 6 0 6 0 6 0 6 0 6 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 72.72727272727273
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 0 6 0 6 0 6 0 6 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 69.6969696969697
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 0 6 0 6 0 6 0 6 0 6 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 6 0 6 0 6 0 6 0 6 0 6 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 71.42857142857143
      }
    ],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "6 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 6 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 72.72727272727273
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "6 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 78.78787878787878
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "6 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 76.92307692307693
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 6 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 73.80952380952381
      }
    ],
    "022-py_14-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "6 0 4 0 6 0 4 0 6 0\n4 6 4 6 4 6 4 6 4 4\n0 4 0 6 0 4 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 6 0 4 0 6 0 4 0\n4 6 4 6 4 6 4 6 4 6 4\n6 0 4 0 6 0 4 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "6 0 4 0 6 0 4 0 6 0 6\n4 6 4 6 4 6 4 6 4 6 4\n0 4 0 6 0 4 0 6 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "6 0 4 0 6 0 4 0 6 0 4 0 6\n4 6 4 6 4 6 4 6 4 6 4 6 4\n0 4 0 6 0 4 0 6 0 4 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 6 0 4 0 6 0 4 0 6 0 6\n4 6 4 6 4 6 4 6 4 6 4 6 4 4\n6 0 4 0 6 0 4 0 6 0 4 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 66.66666666666666
      }
    ],
    "023-py_15-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "6 0 4 0 6 0 4 0 6 0\n4 6 4 6 4 6 4 6 4 4\n0 4 0 6 0 4 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 6 0 4 0 6 0 4 0\n4 6 4 6 4 6 4 6 4 6 4\n6 0 4 0 6 0 4 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "6 0 4 0 6 0 4 0 6 0 6\n4 6 4 6 4 6 4 6 4 6 4\n0 4 0 6 0 4 0 6 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "6 0 4 0 6 0 4 0 6 0 4 0 6\n4 6 4 6 4 6 4 6 4 6 4 6 4\n0 4 0 6 0 4 0 6 0 4 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 6 0 4 0 6 0 4 0 6 0 6\n4 6 4 6 4 6 4 6 4 6 4 6 4 4\n6 0 4 0 6 0 4 0 6 0 4 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 66.66666666666666
      }
    ],
    "025-py_16-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "6 0 4 0 6 0 4 0 6 0\n4 6 4 6 4 6 4 6 4 4\n0 4 0 6 0 4 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 6 0 4 0 6 0 4 0\n4 6 4 6 4 6 4 6 4 6 4\n6 0 4 0 6 0 4 0 6 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "6 0 4 0 6 0 4 0 6 0 6\n4 6 4 6 4 6 4 6 4 6 4\n0 4 0 6 0 4 0 6 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "6 0 4 0 6 0 4 0 6 0 4 0 6\n4 6 4 6 4 6 4 6 4 6 4 6 4\n0 4 0 6 0 4 0 6 0 4 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 6 0 4 0 6 0 4 0 6 0 6\n4 6 4 6 4 6 4 6 4 6 4 6 4 4\n6 0 4 0 6 0 4 0 6 0 4 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 66.66666666666666
      }
    ],
    "026-py_17-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0\n6 6 6 6 6 6 6 6 6 6\n0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0\n6 6 6 6 6 6 6 6 6 6 6\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4\n6 6 6 6 6 6 6 6 6 6 6\n0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4 0 4\n6 6 6 6 6 6 6 6 6 6 6 6 6\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n6 6 6 6 6 6 6 6 6 6 6 6 6 6\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 66.66666666666666
      }
    ],
    "028-py_18-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 6 4 0 4 0 4 6 4 0\n4 4 4 4 6 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 4 6 4 0 4 0 4 0\n4 6 4 4 4 4 4 6 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 6 4 0 4 0 4 6 4 0 4\n4 4 4 4 6 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 6 4 0 4 0 4 6 4 0 4 0 4\n4 4 4 4 6 4 4 4 4 4 6 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 64.1025641025641
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 4 6 4 0 4 0 4 6 4 0 4\n4 6 4 4 4 4 4 6 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 66.66666666666666
      }
    ],
    "029-py_19-train": [],
    "030-py_20-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.75757575757575
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.75757575757575
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 74.35897435897436
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 76.19047619047619
      }
    ],
    "032-py_21-train": [
      {
        "example": 1,
        "input": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "expected_output": "6 0 4 0 4 0 6 0 4 0\n6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 2,
        "input": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0\n6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0\n4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.75757575757575
      },
      {
        "example": 3,
        "input": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4\n0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.75757575757575
      },
      {
        "example": 4,
        "input": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "6 0 4 0 4 0 6 0 4 0 4 0 6\n6 4 4 6 4 4 6 4 4 6 4 4 6\n0 4 0 6 0 4 0 4 0 6 0 4 0",
        "transformed_output": "4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4\n0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 74.35897435897436
      },
      {
        "example": 5,
        "input": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "expected_output": "0 4 0 6 0 4 0 4 0 6 0 4 0 4\n6 4 4 6 4 4 6 4 4 6 4 4 6 4\n6 0 4 0 4 0 6 0 4 0 4 0 6 0",
        "transformed_output": "0 4 0 4 0 4 0 4 0 4 0 4 0 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 0 4 0 4 0 4 0 4 0 4 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 76.19047619047619
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}