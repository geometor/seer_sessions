{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe transformation rule identifies unique rows in the input grid and adds them to the output grid, preserving the order of their first appearance.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid by extracting unique rows, preserving original order.\n\n    Args:\n        input_grid: A 2D numpy array representing the input grid.\n\n    Returns:\n        A 2D numpy array representing the output grid.\n    \"\"\"\n    output_grid = []\n    seen_rows = []\n\n    # Iterate through rows\n    for row in input_grid:\n        # Convert row to a list for easier comparison (np.array_equal is slow)\n        row_list = row.tolist()\n        # Check if the row has been seen before\n        if row_list not in seen_rows:\n            # Add the row to the output and mark it as seen\n            output_grid.append(row_list)\n            seen_rows.append(row_list)\n\n    return np.array(output_grid)\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2285,
    "candidates_token_count": 238,
    "total_token_count": 2523,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 2.689106,
  "response_file": "016-response.json"
}