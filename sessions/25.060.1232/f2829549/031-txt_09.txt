from pathlib import Path
import json
import numpy as np

# Function provided in the prompt
def transform(input_grid):
    input_grid = np.array(input_grid)
    rows = input_grid.shape[0]
    blue_columns = np.where(np.any(input_grid == 1, axis=0))[0]
    if blue_columns.size > 0:
        intermediate_array = input_grid[:, blue_columns]
        output_grid = np.zeros((rows, intermediate_array.shape[1]), dtype=int)
        for i in range(rows):
            for j in range(intermediate_array.shape[1]):
                if intermediate_array[i, j] == 1:
                    output_grid[i, j] = 3
                else:
                    output_grid[i, j] = 0
    else:
        output_grid = np.zeros((rows, 0), dtype=int)
    return output_grid

task_file = Path("7b601054.json")
with open(task_file, 'r') as f:
    task = json.load(f)

train_examples = task['train']

results = []
for i, example in enumerate(train_examples):
    input_grid = example['input']
    calculated_output = transform(input_grid)
    expected_output = example['output']
    comparison = np.array_equal(calculated_output, np.array(expected_output))
    results.append({
        'example': i,
        'input': input_grid,
        'calculated_output': calculated_output.tolist(),
        'expected_output': expected_output,
        'match': comparison
    })

print(json.dumps(results, indent=2))