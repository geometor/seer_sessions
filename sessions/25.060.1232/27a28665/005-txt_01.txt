import numpy as np

def analyze_example(input_grid):
    input_array = np.array(input_grid)
    unique, counts = np.unique(input_array, return_counts=True)
    color_counts = dict(zip(unique, counts))
    print(f"  Color Counts: {color_counts}")
    max_count = 0
    majority_color = None
    for color, count in color_counts.items():
        if count > max_count:
            max_count = count
            majority_color = color
    sum_other_colors = sum(count for color, count in color_counts.items() if color != majority_color)
    print(f" Majority Color: {majority_color}, Count: {max_count}, Sum of other colors: {sum_other_colors}")
    if max_count >= sum_other_colors:
        print(f"  Majority Condition: Met")
    else:
        print(f"  Majority Condition: Not Met")

task_data = {
    "train": [
        {
            "input": [[5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 0]],
            "output": [[1]]
        },
        {
            "input": [[5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5]],
            "output": [[1]]
        },
        {
            "input": [[5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 9]],
            "output": [[1]]
        },
        {
            "input": [[0, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5]],
            "output": [[1]]
        },
		{
            "input": [[5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 1]],
            "output": [[1]]
        },
		{
            "input": [[5, 0, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5]],
            "output": [[1]]
        },
        {
            "input": [[5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5]],
            "output": [[1]]
        }

    ],
    "test": [
        {
            "input": [[5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 5], [5, 5, 5, 5, 2]],
            "output": [[1]]
        }
    ]
}

for i, example in enumerate(task_data['train']):
    print(f"Example {i+1}:")
    analyze_example(example['input'])
    print(f"  Expected Output: {example['output']}")
    print(f"  Actual Output: {transform(example['input'])}\n")
for i, example in enumerate(task_data['test']):
    print(f"Test {i+1}:")
    analyze_example(example['input'])
    print(f"  Expected Output: {example['output']}")
    print(f"  Actual Output: {transform(example['input'])}\n")