import numpy as np

def analyze_example(input_grid, output_grid, predicted_output_grid):
    input_grid = np.array(input_grid)
    output_grid = np.array(output_grid)
    predicted_output_grid = np.array(predicted_output_grid)
    
    input_dims = input_grid.shape
    output_dims = output_grid.shape
    
    input_color_counts = {color: np.count_nonzero(input_grid == color) for color in range(10)}
    output_color_counts = {color: np.count_nonzero(output_grid == color) for color in range(10)}

    match = np.array_equal(output_grid, predicted_output_grid)

    report = {
        "input_dimensions": input_dims,
        "output_dimensions": output_dims,
        "input_color_counts": input_color_counts,
        "output_color_counts": output_color_counts,
        "prediction_match": match
    }
    return report
train_reports = []
for idx, example in enumerate(task["train"]):
  predicted_output = transform(example["input"])
  report = analyze_example(example["input"], example["output"], predicted_output)
  train_reports.append({"example":idx, **report})

print(train_reports)