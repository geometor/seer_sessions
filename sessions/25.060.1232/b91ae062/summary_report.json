{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4989,
        "candidates": 570,
        "total": 5559,
        "cached": 0
      },
      "response_time": 8.404412
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 5421,
        "candidates": 796,
        "total": 6217,
        "cached": 0
      },
      "response_time": 8.843375
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1807,
        "candidates": 479,
        "total": 2286,
        "cached": 0
      },
      "response_time": 6.450231
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2148,
        "candidates": 205,
        "total": 2353,
        "cached": 0
      },
      "response_time": 2.503035
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1456,
        "candidates": 867,
        "total": 2323,
        "cached": 0
      },
      "response_time": 10.93869
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2118,
        "candidates": 226,
        "total": 2344,
        "cached": 0
      },
      "response_time": 2.692278
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1477,
        "candidates": 4144,
        "total": 5621,
        "cached": 0
      },
      "response_time": 32.431658
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 5416,
        "candidates": 255,
        "total": 5671,
        "cached": 0
      },
      "response_time": 2.789466
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1807,
        "candidates": 387,
        "total": 2194,
        "cached": 0
      },
      "response_time": 4.865523
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2056,
        "candidates": 257,
        "total": 2313,
        "cached": 0
      },
      "response_time": 3.068133
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1508,
        "candidates": 2054,
        "total": 3562,
        "cached": 0
      },
      "response_time": 27.076916
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3364,
        "candidates": 282,
        "total": 3646,
        "cached": 0
      },
      "response_time": 3.252228
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1533,
        "candidates": 1987,
        "total": 3520,
        "cached": 0
      },
      "response_time": 18.165654
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3322,
        "candidates": 300,
        "total": 3622,
        "cached": 0
      },
      "response_time": 2.938866
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 745,
        "total": 2642,
        "cached": 0
      },
      "response_time": 8.239271
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2504,
        "candidates": 300,
        "total": 2804,
        "cached": 0
      },
      "response_time": 3.648632
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1552,
        "candidates": 2316,
        "total": 3868,
        "cached": 0
      },
      "response_time": 20.273935
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3665,
        "candidates": 259,
        "total": 3924,
        "cached": 0
      },
      "response_time": 2.512879
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1510,
        "candidates": 1425,
        "total": 2935,
        "cached": 0
      },
      "response_time": 14.074228
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2737,
        "candidates": 309,
        "total": 3046,
        "cached": 0
      },
      "response_time": 3.350949
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 467,
        "total": 2364,
        "cached": 0
      },
      "response_time": 6.375138
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2226,
        "candidates": 227,
        "total": 2453,
        "cached": 0
      },
      "response_time": 3.017497
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1478,
        "candidates": 3298,
        "total": 4776,
        "cached": 0
      },
      "response_time": 38.074703
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 4570,
        "candidates": 369,
        "total": 4939,
        "cached": 0
      },
      "response_time": 4.337397
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1620,
        "candidates": 855,
        "total": 2475,
        "cached": 0
      },
      "response_time": 10.078873
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2271,
        "candidates": 451,
        "total": 2722,
        "cached": 0
      },
      "response_time": 3.971057
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 2023,
        "candidates": 520,
        "total": 2543,
        "cached": 0
      },
      "response_time": 6.977367
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 2405,
        "candidates": 284,
        "total": 2689,
        "cached": 0
      },
      "response_time": 3.32043
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 1535,
        "candidates": 947,
        "total": 2482,
        "cached": 0
      },
      "response_time": 10.201082
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 2281,
        "candidates": 284,
        "total": 2565,
        "cached": 0
      },
      "response_time": 2.59583
    },
    {
      "response_file": "031-response.json",
      "token_usage": {
        "prompt": 1535,
        "candidates": 779,
        "total": 2314,
        "cached": 0
      },
      "response_time": 8.505391
    },
    {
      "response_file": "032-response.json",
      "token_usage": {
        "prompt": 2107,
        "candidates": 284,
        "total": 2391,
        "cached": 0
      },
      "response_time": 2.911923
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 2 2 0 0\n3 3 2 2 0 0\n0 0 7 7 3 3\n0 0 7 7 3 3\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 8 8 0 0\n0 0 8 8 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n9 9 8 8 0 0\n9 9 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 0 0 3 3\n4 4 0 0 3 3\n2 2 2 2 0 0\n2 2 2 2 0 0\n0 0 0 0 8 8\n0 0 0 0 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 2 2 0 0\n3 3 2 2 0 0\n0 0 7 7 3 3\n0 0 7 7 3 3\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 8 8 0 0\n0 0 8 8 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n9 9 8 8 0 0\n9 9 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 0 0 3 3\n4 4 0 0 3 3\n2 2 2 2 0 0\n2 2 2 2 0 0\n0 0 0 0 8 8\n0 0 0 0 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 2 2 0 0\n3 3 2 2 0 0\n0 0 7 7 3 3\n0 0 7 7 3 3\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 8 8 0 0\n0 0 8 8 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n9 9 8 8 0 0\n9 9 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 0 0 3 3\n4 4 0 0 3 3\n2 2 2 2 0 0\n2 2 2 2 0 0\n0 0 0 0 8 8\n0 0 0 0 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 2 2 0 0\n3 3 2 2 0 0\n0 0 7 7 3 3\n0 0 7 7 3 3\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 8 8 0 0\n0 0 8 8 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n9 9 8 8 0 0\n9 9 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 0 0 3 3\n4 4 0 0 3 3\n2 2 2 2 0 0\n2 2 2 2 0 0\n0 0 0 0 8 8\n0 0 0 0 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "011-py_07-train": [],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 2 2 0 0\n3 3 2 2 0 0\n0 0 7 7 3 3\n0 0 7 7 3 3\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 8 8 0 0\n0 0 8 8 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n9 9 8 8 0 0\n9 9 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 0 0 3 3\n4 4 0 0 3 3\n2 2 2 2 0 0\n2 2 2 2 0 0\n0 0 0 0 8 8\n0 0 0 0 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "013-py_09-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 2 2 0 0\n3 3 2 2 0 0\n0 0 7 7 3 3\n0 0 7 7 3 3\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 8 8 0 0\n0 0 8 8 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n9 9 8 8 0 0\n9 9 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 0 0 3 3\n4 4 0 0 3 3\n2 2 2 2 0 0\n2 2 2 2 0 0\n0 0 0 0 8 8\n0 0 0 0 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 2 2 0 0\n3 3 2 2 0 0\n0 0 7 7 3 3\n0 0 7 7 3 3\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 8 8 0 0\n0 0 8 8 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n9 9 8 8 0 0\n9 9 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 0 0 3 3\n4 4 0 0 3 3\n2 2 2 2 0 0\n2 2 2 2 0 0\n0 0 0 0 8 8\n0 0 0 0 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "017-py_12-train": [],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "022-py_15-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "023-py_16-train": [],
    "024-py_17-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 6 7 7 7 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 1 0 0 0 4 4 4\n0 0 0 4 4 4 0 0 0\n0 0 0 1 1 1 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 4 0 0 0 3 3 3\n2 2 2 2 2 2 0 0 0\n0 0 0 0 0 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "026-py_18-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n6 6 6 7 7 7 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n1 1 1 0 0 0 4 4 4\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0\n0 0 0 1 1 1 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n4 4 4 0 0 0 3 3 3\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 0 0 0\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "028-py_19-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 6 6 7 7 7 7 0 0 0 0\n6 6 6 6 7 7 7 7 0 0 0 0\n6 6 6 6 7 7 7 7 0 0 0 0\n6 6 6 6 7 7 7 7 0 0 0 0\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 1 1 0 0 0 0 4 4 4 4\n1 1 1 1 0 0 0 0 4 4 4 4\n1 1 1 1 0 0 0 0 4 4 4 4\n1 1 1 1 0 0 0 0 4 4 4 4\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 3 3 2 2 2 2 0 0 0 0\n3 3 3 3 2 2 2 2 0 0 0 0\n3 3 3 3 2 2 2 2 0 0 0 0\n3 3 3 3 2 2 2 2 0 0 0 0\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n9 9 9 9 8 8 8 8 0 0 0 0\n9 9 9 9 8 8 8 8 0 0 0 0\n9 9 9 9 8 8 8 8 0 0 0 0\n9 9 9 9 8 8 8 8 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "030-py_20-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 6 6 7 7 7 7 0 0 0 0\n6 6 6 6 7 7 7 7 0 0 0 0\n6 6 6 6 7 7 7 7 0 0 0 0\n6 6 6 6 7 7 7 7 0 0 0 0\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 1 1 0 0 0 0 4 4 4 4\n1 1 1 1 0 0 0 0 4 4 4 4\n1 1 1 1 0 0 0 0 4 4 4 4\n1 1 1 1 0 0 0 0 4 4 4 4\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 3 3 2 2 2 2 0 0 0 0\n3 3 3 3 2 2 2 2 0 0 0 0\n3 3 3 3 2 2 2 2 0 0 0 0\n3 3 3 3 2 2 2 2 0 0 0 0\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n9 9 9 9 8 8 8 8 0 0 0 0\n9 9 9 9 8 8 8 8 0 0 0 0\n9 9 9 9 8 8 8 8 0 0 0 0\n9 9 9 9 8 8 8 8 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "032-py_21-train": [
      {
        "example": 1,
        "input": "6 7 0\n0 6 6\n0 0 0",
        "expected_output": "6 6 7 7 0 0\n6 6 7 7 0 0\n0 0 6 6 6 6\n0 0 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "transformed_output": "6 6 6 6 7 7 7 7 0 0 0 0\n6 6 6 6 7 7 7 7 0 0 0 0\n6 6 6 6 7 7 7 7 0 0 0 0\n6 6 6 6 7 7 7 7 0 0 0 0\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "1 0 4\n0 4 0\n0 1 0",
        "expected_output": "1 1 0 0 4 4\n1 1 0 0 4 4\n0 0 4 4 0 0\n0 0 4 4 0 0\n0 0 1 1 0 0\n0 0 1 1 0 0",
        "transformed_output": "1 1 1 1 0 0 0 0 4 4 4 4\n1 1 1 1 0 0 0 0 4 4 4 4\n1 1 1 1 0 0 0 0 4 4 4 4\n1 1 1 1 0 0 0 0 4 4 4 4\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 4 4 4 4 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0\n0 0 0 0 1 1 1 1 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 2 0\n0 7 3\n0 0 0",
        "expected_output": "3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n3 3 3 2 2 2 0 0 0\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 7 7 7 3 3 3\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "transformed_output": "3 3 3 3 2 2 2 2 0 0 0 0\n3 3 3 3 2 2 2 2 0 0 0 0\n3 3 3 3 2 2 2 2 0 0 0 0\n3 3 3 3 2 2 2 2 0 0 0 0\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 7 7 7 7 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0\n0 6 6\n9 8 0",
        "expected_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n0 0 0 6 6 6 6 6 6\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0\n9 9 9 8 8 8 0 0 0",
        "transformed_output": "0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 8 8 8 8 0 0 0 0\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n0 0 0 0 6 6 6 6 6 6 6 6\n9 9 9 9 8 8 8 8 0 0 0 0\n9 9 9 9 8 8 8 8 0 0 0 0\n9 9 9 9 8 8 8 8 0 0 0 0\n9 9 9 9 8 8 8 8 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 3\n2 2 0\n0 0 8",
        "expected_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "transformed_output": "4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n4 4 4 4 0 0 0 0 3 3 3 3\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n2 2 2 2 2 2 2 2 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8\n0 0 0 0 0 0 0 0 8 8 8 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ]
  },
  "best_train_results": {
    "passed": 2,
    "total": 5
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}