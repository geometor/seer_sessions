{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\n1.  **Identify Target Rows and Columns**: Examine the input grid to identify all rows and columns that contain at least one cell with the value '3' (green).\n2.  **Extract Sub-grid**: Create a new grid (the output grid).\n3. Populate output grid: The output grid consists exclusively out of intersecting cells of the previously identified rows and columns.\n\"\"\"\n\nimport numpy as np\n\ndef get_target_indices(input_grid):\n    \"\"\"Finds rows and columns containing non-zero values.\"\"\"\n    rows = []\n    cols = []\n    for i, row in enumerate(input_grid):\n        if any(val != 0 for val in row):\n            rows.append(i)\n    for j in range(input_grid.shape[1]):\n        if any(input_grid[i][j] != 0 for i in range(input_grid.shape[0])):\n            cols.append(j)\n    return rows, cols\n\n\ndef transform(input_grid):\n    \"\"\"Extracts the subgrid containing all non-zero values.\"\"\"\n    \n    input_grid = np.array(input_grid)\n    \n    # Identify target rows and columns.\n    target_rows, target_cols = get_target_indices(input_grid)\n    \n    # Extract subgrid\n    output_grid = input_grid[np.ix_(target_rows, target_cols)]\n\n    return output_grid.tolist()\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2062,
    "candidates_token_count": 330,
    "total_token_count": 2392,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 3.84539,
  "response_file": "028-response.json"
}