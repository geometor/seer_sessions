import numpy as np

def get_unique_color_columns(grid):
    """
    Finds the column indices of the first occurrence of each unique color (excluding 0 and 9) in the grid.
    """
    unique_colors = set()
    column_indices = []
    rows, cols = grid.shape

    for j in range(cols):
        for i in range(rows):
            color = grid[i][j]
            if color != 0 and color not in unique_colors:
                unique_colors.add(color)
                column_indices.append(j)
                break  # Move to the next column after finding a new unique color
    return sorted(column_indices)
    
def analyze_example(input_grid, expected_output_grid):
    input_grid = np.array(input_grid)
    expected_output_grid = np.array(expected_output_grid)
    
    unique_color_columns = get_unique_color_columns(input_grid)

    input_dims = input_grid.shape
    output_dims = expected_output_grid.shape
    
    return {
        "input_dimensions": input_dims,
        "output_dimensions": output_dims,
        "unique_color_columns": unique_color_columns,
        "output_columns_in_input": all([c in unique_color_columns for c in range(output_dims[1])]) if output_dims[1] > 0 else "no output columns",
    }

task = {
    "train": [
        {
            "input": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 2, 3, 4, 0, 5, 6, 7, 8]],
            "output": [[1, 4, 7], [2, 0, 6], [3, 5, 8]]
        },
        {
            "input": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 2, 3, 4, 5, 6, 7, 8, 9, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
            "output": [[2, 5, 8], [3, 6, 9]]
        },
        {
            "input": [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [1, 2, 3, 4, 5, 6, 7, 8, 0]],
            "output": [[2, 5, 8], [3, 6, 0]]
        },
        {
            "input": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]],
            "output": [[1, 5, 8], [2, 6, 9], [3, 7, 0]]
        },
        {
             "input": [[1, 2, 3, 4, 5, 6, 7, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
            "output": [[2, 0], [3, 0]]
        }
    ]
}

results = []
for example in task["train"]:
    results.append(analyze_example(example["input"], example["output"]))
print(results)