{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4863,
        "candidates": 410,
        "total": 5273,
        "cached": 0
      },
      "response_time": 7.224899
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 5133,
        "candidates": 271,
        "total": 5404,
        "cached": 0
      },
      "response_time": 3.703627
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 495,
        "total": 2356,
        "cached": 0
      },
      "response_time": 7.284556
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2217,
        "candidates": 317,
        "total": 2534,
        "cached": 0
      },
      "response_time": 4.34628
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1568,
        "candidates": 1926,
        "total": 3494,
        "cached": 0
      },
      "response_time": 19.57803
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3287,
        "candidates": 843,
        "total": 4130,
        "cached": 0
      },
      "response_time": 17.398454
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 2091,
        "candidates": 2920,
        "total": 5011,
        "cached": 0
      },
      "response_time": 26.336635
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 4811,
        "candidates": 940,
        "total": 5751,
        "cached": 0
      },
      "response_time": 7.910613
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 408,
        "total": 2269,
        "cached": 0
      },
      "response_time": 5.955362
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2130,
        "candidates": 437,
        "total": 2567,
        "cached": 0
      },
      "response_time": 5.057913
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1689,
        "candidates": 1065,
        "total": 2754,
        "cached": 0
      },
      "response_time": 13.264471
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2550,
        "candidates": 582,
        "total": 3132,
        "cached": 0
      },
      "response_time": 4.951193
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1834,
        "candidates": 920,
        "total": 2754,
        "cached": 0
      },
      "response_time": 11.115224
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2550,
        "candidates": 447,
        "total": 2997,
        "cached": 0
      },
      "response_time": 3.825916
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 461,
        "total": 2322,
        "cached": 0
      },
      "response_time": 6.15391
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2182,
        "candidates": 224,
        "total": 2406,
        "cached": 0
      },
      "response_time": 2.809289
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1475,
        "candidates": 1641,
        "total": 3116,
        "cached": 0
      },
      "response_time": 46.158289
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2909,
        "candidates": 114,
        "total": 3023,
        "cached": 0
      },
      "response_time": 1.857714
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1365,
        "candidates": 1273,
        "total": 2638,
        "cached": 0
      },
      "response_time": 14.397417
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2428,
        "candidates": 186,
        "total": 2614,
        "cached": 0
      },
      "response_time": 2.180652
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 387,
        "total": 2248,
        "cached": 0
      },
      "response_time": 5.897161
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2110,
        "candidates": 416,
        "total": 2526,
        "cached": 0
      },
      "response_time": 5.430738
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1665,
        "candidates": 2052,
        "total": 3717,
        "cached": 0
      },
      "response_time": 16.138941
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3514,
        "candidates": 379,
        "total": 3893,
        "cached": 0
      },
      "response_time": 3.505848
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1628,
        "candidates": 1055,
        "total": 2683,
        "cached": 0
      },
      "response_time": 11.79926
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2478,
        "candidates": 456,
        "total": 2934,
        "cached": 0
      },
      "response_time": 4.257415
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 447,
        "total": 2308,
        "cached": 0
      },
      "response_time": 6.14816
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 2169,
        "candidates": 388,
        "total": 2557,
        "cached": 0
      },
      "response_time": 4.560625
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 1640,
        "candidates": 5951,
        "total": 7591,
        "cached": 0
      },
      "response_time": 64.35186
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 7388,
        "candidates": 539,
        "total": 7927,
        "cached": 0
      },
      "response_time": 5.276825
    },
    {
      "response_file": "031-response.json",
      "token_usage": {
        "prompt": 1791,
        "candidates": 746,
        "total": 2537,
        "cached": 0
      },
      "response_time": 8.602013
    },
    {
      "response_file": "032-response.json",
      "token_usage": {
        "prompt": 2332,
        "candidates": 690,
        "total": 3022,
        "cached": 0
      },
      "response_time": 5.547376
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4 9 9 0 0 0 0 0 0\n0 4 0 0 0 0 9 9 0 1 0 0\n4 0 0 0 0 0 0 0 1 1 1 0\n4 4 4 4 9 0 9 0 1 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4 9 0 9 0 0 0 0 1\n4 4 0 0 9 9 0 0 1 0 0 0\n4 0 4 4 0 0 0 9 0 1 0 1\n0 0 0 0 0 0 9 0 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0 9 9 0 9 0 1 0 1\n0 4 0 4 0 0 9 0 0 1 0 0\n0 4 0 4 0 0 9 9 1 0 0 1\n4 0 4 4 9 9 9 0 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 4 0 0 0 9 0 0 0 0\n4 4 0 4 9 0 9 0 0 0 0 0\n4 0 4 4 0 9 9 0 1 1 0 1\n0 4 4 4 0 9 0 0 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0 0 0 0 0 0 0 0 1\n4 4 4 4 0 0 0 9 1 1 0 0\n0 4 4 4 0 9 9 0 1 1 0 1\n0 4 4 0 0 0 9 0 0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "005-py_03-train": [],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "9 0 0 4\n0 0 0 4\n0 4 4 0\n9 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "9 4 4 4\n9 4 4 4\n0 4 4 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "9 4 4 4\n0 0 0 4\n0 0 0 4\n9 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 0\n9 4 4 4\n0 4 4 0\n0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "0 4 4 0\n0 4 4 4\n9 0 0 4\n0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      }
    ],
    "007-py_05-train": [],
    "007-py_06-train": [],
    "008-py_07-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "9 0 0 4\n0 0 0 4\n0 4 4 0\n9 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "9 4 4 4\n9 4 4 4\n0 4 4 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "9 4 4 4\n0 0 0 4\n0 0 0 4\n9 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 0\n9 4 4 4\n0 4 4 0\n0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "0 4 4 0\n0 4 4 4\n9 0 0 4\n0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      }
    ],
    "010-py_08-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 0 4 2\n4 0 0 2\n0 0 0 2\n4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4\n4 4 0 0\n4 0 4 4\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0\n0 4 0 4\n0 4 0 4\n4 0 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 2 0 0\n4 2 9 0\n4 2 0 9\n4 2 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0\n4 4 4 4\n0 4 4 4\n0 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      }
    ],
    "012-py_09-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 0 4 2\n4 0 0 2\n0 0 0 2\n4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4\n4 4 0 0\n4 0 4 4\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0\n0 4 0 4\n0 4 0 4\n4 0 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 2 0 0\n4 2 9 0\n4 2 0 9\n4 2 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0\n4 4 4 4\n0 4 4 4\n0 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      }
    ],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 0 4 2 9 9 0 0 2 0 0 0 0\n4 0 0 2 0 0 9 9 2 0 1 0 0\n0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 2 9 0 9 0 2 1 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 2 0 0 0 9 2 0 0 0 0\n4 2 9 0 9 0 2 0 0 0 0\n4 2 0 9 9 0 2 1 1 0 1\n4 2 0 9 0 0 2 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4\n0 4 0 0\n4 0 0 0\n4 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4\n4 4 0 0\n4 0 4 4\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0\n0 4 0 4\n0 4 0 4\n4 0 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 4\n4 4 0 4\n4 0 4 4\n0 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0\n4 4 4 4\n0 4 4 4\n0 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "019-py_13-train": [],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "022-py_15-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "9 0 0 2\n0 9 9 2\n0 0 0 2\n0 9 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "0 0 0 1\n1 0 0 0\n0 1 0 1\n1 0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "0 1 0 1\n0 1 0 0\n1 0 0 1\n0 0 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 9 2\n0 9 0 2\n9 9 0 2\n9 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "0 0 0 1\n1 1 0 0\n1 1 0 1\n0 1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      }
    ],
    "024-py_16-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 0 4 2\n4 0 0 2\n0 0 0 2\n4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4\n4 4 0 0\n4 0 4 4\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0\n0 4 0 4\n0 4 0 4\n4 0 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 2 0 0\n4 2 9 0\n4 2 0 9\n4 2 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0\n4 4 4 4\n0 4 4 4\n0 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      }
    ],
    "026-py_17-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 0 4 2\n4 0 0 2\n0 0 0 2\n4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4\n4 4 0 0\n4 0 4 4\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0\n0 4 0 4\n0 4 0 4\n4 0 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 2 0 0\n4 2 9 0\n4 2 0 9\n4 2 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0\n4 4 4 4\n0 4 4 4\n0 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      }
    ],
    "028-py_18-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 0 4 2\n4 0 0 2\n0 0 0 2\n4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4\n4 4 0 0\n4 0 4 4\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0\n0 4 0 4\n0 4 0 4\n4 0 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 2 0 0\n4 2 9 0\n4 2 0 9\n4 2 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0\n4 4 4 4\n0 4 4 4\n0 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      }
    ],
    "029-py_19-train": [],
    "030-py_20-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4\n0 4 0 0\n4 0 0 0\n4 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4\n4 4 0 0\n4 0 4 4\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0\n0 4 0 4\n0 4 0 4\n4 0 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 4\n4 4 0 4\n4 0 4 4\n0 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0\n4 4 4 4\n0 4 4 4\n0 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      }
    ],
    "032-py_21-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}