import numpy as np

def calculate_difference_metrics(input_grid, output_grid, expected_output_grid):
    """
    Calculates the differences between the generated output and the expected output.

    Args:
        input_grid: The input grid (numpy array).
        output_grid: The output grid generated by the transform function.
        expected_output_grid: The expected output grid.

    Returns:
        A dictionary containing difference metrics.
    """

    if output_grid.shape != expected_output_grid.shape:
        return {
            "different_shape": True,
            "output_shape": output_grid.shape,
            "expected_shape": expected_output_grid.shape,
            "pixel_differences": None,
            "different_pixels": None,
        }
    pixel_differences = np.sum(output_grid != expected_output_grid)
    different_pixels = []
    if pixel_differences > 0:
      indices = np.where(output_grid != expected_output_grid)
      for y, x in zip(indices[0], indices[1]):
            different_pixels.append(
                {
                    "y": int(y),
                    "x": int(x),
                    "output_value": int(output_grid[y, x]),
                    "expected_value": int(expected_output_grid[y, x]),
                }
            )
    return {
        "different_shape": False,
        "output_shape": output_grid.shape,
        "expected_shape": expected_output_grid.shape,
        "pixel_differences": int(pixel_differences),  # Convert to regular integer
        "different_pixels": different_pixels,
    }
# Test example provided in the instructions
input_grid = np.array([[1, 1, 1], [1, 1, 1], [1, 1, 1]])
expected_output_grid = np.array([[1, 1, 1], [1, 1, 1], [1, 1, 1]])
output_grid = transform(input_grid)  # Using the provided transform function
metrics = calculate_difference_metrics(input_grid, output_grid, expected_output_grid)
print(metrics)
input_grid = np.array([[0, 0, 0], [0, 5, 0], [0, 0, 0]])
expected_output_grid = np.array([[5, 5, 5], [5, 5, 5], [5, 5, 5]])
output_grid = transform(input_grid)
metrics = calculate_difference_metrics(input_grid, output_grid, expected_output_grid)
print(metrics)
