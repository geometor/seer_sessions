objects:
  - name: input_grid
    type: grid
    properties:
      rows: variable
      cols: variable
      pixels: 2D array of integers (0-9)

  - name: output_grid
    type: grid
    properties:
      rows: max(input_grid.rows, input_grid.cols)
      cols: max(input_grid.rows, input_grid.cols)
      pixels: 2D array of integers (0-9)

  - name: non_zero_pixels
    type: list
    properties:
      elements: tuples of (row, col, value)

actions:
  - name: find_non_zero_pixels
    input: input_grid
    output: non_zero_pixels

  - name: create_output_grid
    input: input_grid.rows, input_grid.cols
    output: output_grid

  - name: create_diagonal
    input: output_grid, non_zero_pixels
    output: output_grid
    conditions:
        - if input_grid.rows > 1 and input_grid.cols > 1
        - modifies: output_grid.pixels along top-left to bottom-right diagonal
        - value: first non_zero_pixels.value if exists

  - name: transform_row_or_column
    input: output_grid, non_zero_pixels, input_grid
    output: output_grid
    conditions:
        - if input_grid.rows == 1 or input_grid.cols == 1
        - modifies: output_grid.pixels
        - details: |
            If input_grid.rows == 1:
                - Creates a column vector where the non-zero value is in the top position.
            If input.cols == 1:
                - output becomes the same as input.

  - name: fill_remaining_pixels
    input: output_grid
    output: output_grid
    value: 0