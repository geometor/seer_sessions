import numpy as np

def find_2x2_red_block(grid):
    rows, cols = grid.shape
    for i in range(rows - 1):
        for j in range(cols - 1):
            if (grid[i, j] == 2 and grid[i + 1, j] == 2 and
                grid[i, j + 1] == 2 and grid[i + 1, j + 1] == 2):
                return (i, j)
    return None

def find_blue_pixel(grid):
    rows, cols = grid.shape
    for i in range(rows):
        for j in range(cols):
            if grid[i, j] == 1:
                return (i, j)
    return None

def analyze_examples(task):
    results = []
    for example in task['train']:
        input_grid = np.array(example['input'])
        output_grid = np.array(example['output'])

        red_block_coords = find_2x2_red_block(input_grid)
        blue_pixel_coords = find_blue_pixel(output_grid)

        results.append({
            'red_block_top_left': red_block_coords,
            'blue_pixel': blue_pixel_coords
        })
    return results

# task is provided in previous turn
results = analyze_examples(task)
print(results)