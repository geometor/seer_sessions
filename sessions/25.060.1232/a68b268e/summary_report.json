{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 5849,
        "candidates": 517,
        "total": 6366,
        "cached": 0
      },
      "response_time": 8.173344
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 6229,
        "candidates": 924,
        "total": 7153,
        "cached": 0
      },
      "response_time": 8.7088
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1911,
        "candidates": 515,
        "total": 2426,
        "cached": 0
      },
      "response_time": 7.05806
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2286,
        "candidates": 468,
        "total": 2754,
        "cached": 0
      },
      "response_time": 5.368614
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1719,
        "candidates": 1326,
        "total": 3045,
        "cached": 0
      },
      "response_time": 12.05683
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2842,
        "candidates": 626,
        "total": 3468,
        "cached": 0
      },
      "response_time": 5.352318
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1876,
        "candidates": 2294,
        "total": 4170,
        "cached": 0
      },
      "response_time": 21.14286
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 3970,
        "candidates": 626,
        "total": 4596,
        "cached": 0
      },
      "response_time": 4.974316
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1911,
        "candidates": 619,
        "total": 2530,
        "cached": 0
      },
      "response_time": 9.221834
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2390,
        "candidates": 759,
        "total": 3149,
        "cached": 0
      },
      "response_time": 7.495361
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2010,
        "candidates": 3467,
        "total": 5477,
        "cached": 0
      },
      "response_time": 28.658342
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3399,
        "candidates": 3015,
        "total": 6414,
        "cached": 0
      },
      "response_time": 23.881133
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 6218,
        "candidates": 480,
        "total": 6698,
        "cached": 0
      },
      "response_time": 4.540575
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 5275,
        "candidates": 898,
        "total": 6173,
        "cached": 0
      },
      "response_time": 8.639654
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1911,
        "candidates": 625,
        "total": 2536,
        "cached": 0
      },
      "response_time": 8.572577
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2399,
        "candidates": 516,
        "total": 2915,
        "cached": 0
      },
      "response_time": 5.419638
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1766,
        "candidates": 1900,
        "total": 3666,
        "cached": 0
      },
      "response_time": 19.015668
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3462,
        "candidates": 622,
        "total": 4084,
        "cached": 0
      },
      "response_time": 5.393443
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1872,
        "candidates": 1080,
        "total": 2952,
        "cached": 0
      },
      "response_time": 12.192609
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2748,
        "candidates": 605,
        "total": 3353,
        "cached": 0
      },
      "response_time": 4.778769
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1911,
        "candidates": 702,
        "total": 2613,
        "cached": 0
      },
      "response_time": 9.053928
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2474,
        "candidates": 688,
        "total": 3162,
        "cached": 0
      },
      "response_time": 7.207488
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1938,
        "candidates": 480,
        "total": 2418,
        "cached": 0
      },
      "response_time": 6.142368
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 2216,
        "candidates": 594,
        "total": 2810,
        "cached": 0
      },
      "response_time": 5.87041
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1844,
        "candidates": 1729,
        "total": 3573,
        "cached": 0
      },
      "response_time": 37.996951
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 3370,
        "candidates": 443,
        "total": 3813,
        "cached": 0
      },
      "response_time": 4.425096
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 1911,
        "candidates": 668,
        "total": 2579,
        "cached": 0
      },
      "response_time": 9.345363
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 2443,
        "candidates": 1568,
        "total": 4011,
        "cached": 0
      },
      "response_time": 12.638362
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 2820,
        "candidates": 4479,
        "total": 7299,
        "cached": 0
      },
      "response_time": 36.987092
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 4512,
        "candidates": 1254,
        "total": 5766,
        "cached": 0
      },
      "response_time": 14.587479
    },
    {
      "response_file": "031-response.json",
      "token_usage": {
        "prompt": 5565,
        "candidates": 1088,
        "total": 6653,
        "cached": 0
      },
      "response_time": 8.280847
    },
    {
      "response_file": "032-response.json",
      "token_usage": {
        "prompt": 7116,
        "candidates": 1022,
        "total": 8138,
        "cached": 0
      },
      "response_time": 9.010876
    },
    {
      "response_file": "033-response.json",
      "token_usage": {
        "prompt": 1911,
        "candidates": 598,
        "total": 2509,
        "cached": 0
      },
      "response_time": 7.548219
    },
    {
      "response_file": "034-response.json",
      "token_usage": {
        "prompt": 2371,
        "candidates": 774,
        "total": 3145,
        "cached": 0
      },
      "response_time": 7.319894
    },
    {
      "response_file": "035-response.json",
      "token_usage": {
        "prompt": 2025,
        "candidates": 2309,
        "total": 4334,
        "cached": 0
      },
      "response_time": 21.582642
    },
    {
      "response_file": "036-response.json",
      "token_usage": {
        "prompt": 4129,
        "candidates": 568,
        "total": 4697,
        "cached": 0
      },
      "response_time": 4.972317
    },
    {
      "response_file": "037-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 4701,
        "total": 6518,
        "cached": 0
      },
      "response_time": 36.889365
    },
    {
      "response_file": "038-response.json",
      "token_usage": {
        "prompt": 6312,
        "candidates": 591,
        "total": 6903,
        "cached": 0
      },
      "response_time": 6.045673
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "4 7 7 7\n4 7 7 7\n4 7 7 7\n7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "4 7 7 7\n4 7 7 7\n4 7 7 7\n7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "4 7 7 7\n4 7 7 7\n4 7 7 7\n4 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "4 7 7 7\n4 7 7 7\n4 7 7 7\n4 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "4 7 7 7\n4 7 7 7\n4 7 7 7\n4 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 0 4 0\n0 0 4 4\n0 0 0 0\n0 4 0 4\n7 0 7 0\n0 0 7 7\n0 0 7 7\n0 0 0 7",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "0 4 4 0\n0 0 0 4\n0 4 4 0\n0 4 4 0\n0 0 7 7\n0 7 0 7\n0 0 7 7\n7 7 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 0 0 0\n4 0 0 4\n4 0 4 4\n0 4 4 0\n0 7 0 0\n7 7 0 0\n0 7 0 7\n0 7 7 7",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "4 4 4 4\n0 4 0 4\n4 4 0 0\n4 0 0 4\n7 7 7 7\n0 0 0 7\n7 0 7 0\n7 7 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "4 4 4 0\n4 0 4 0\n4 0 4 0\n0 0 4 4\n0 7 7 7\n7 0 0 7\n7 7 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "0 4 4 4\n4 4 4 4\n0 0 0 4\n0 4 4 0\n7 7 0 7\n7 7 7 0\n7 7 7 0\n0 0 7 7",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 4 0 4 0 7 7 7\n4 4 0 0 7 7 7 0\n0 0 0 4 0 0 0 0\n0 0 0 0 7 0 0 0\n1 1 1 1 1 1 1 1\n6 6 6 0 0 0 0 0\n0 0 0 0 0 0 8 8\n6 0 0 6 8 0 8 0\n0 0 0 0 0 0 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "0 4 0 0 7 7 7 0\n4 0 4 4 7 0 7 0\n4 0 4 4 0 7 0 7\n0 0 0 0 0 0 0 7\n1 1 1 1 1 1 1 1\n6 0 0 6 0 0 8 0\n6 0 0 0 0 0 0 0\n6 6 0 6 0 0 0 0\n6 0 6 6 8 8 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 4 4 0 0 0 7 7\n0 0 4 4 0 0 0 7\n0 0 0 4 7 7 7 7\n0 4 4 0 0 7 0 0\n1 1 1 1 1 1 1 1\n0 6 6 6 0 0 8 8\n0 0 6 0 0 0 0 0\n6 0 6 0 0 0 0 8\n6 6 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "4 4 0 4 7 7 0 0\n4 0 0 0 7 0 7 0\n4 4 4 0 7 0 0 7\n4 0 4 4 7 0 7 7\n1 1 1 1 1 1 1 1\n0 0 0 0 0 0 8 0\n6 6 0 0 0 0 8 0\n0 6 6 6 0 0 8 0\n0 6 6 0 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "0 0 0 4 7 7 0 0\n4 4 4 4 7 0 0 0\n4 0 0 0 7 0 7 0\n4 4 4 0 0 7 7 0\n1 1 1 1 1 1 1 1\n6 6 6 6 8 0 8 0\n0 0 6 0 0 0 8 8\n0 6 0 6 0 0 0 0\n0 0 0 6 8 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "4 4 4 0 7 0 0 7\n4 4 0 4 0 7 7 7\n4 4 0 4 7 7 7 0\n0 4 0 0 7 7 7 0\n1 1 1 1 1 1 1 1\n6 6 6 6 8 8 0 8\n0 0 0 6 0 8 8 8\n0 0 6 0 0 8 0 8\n0 6 0 0 8 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "007-py_04-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 4 0 4 0 7 7 7\n4 4 0 0 7 7 7 0\n0 0 0 4 0 0 0 0\n0 0 0 0 7 0 0 0\n1 1 1 1 1 1 1 1\n6 6 6 0 0 0 0 0\n0 0 0 0 0 0 8 8\n6 0 0 6 8 0 8 0\n0 0 0 0 0 0 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "0 4 0 0 7 7 7 0\n4 0 4 4 7 0 7 0\n4 0 4 4 0 7 0 7\n0 0 0 0 0 0 0 7\n1 1 1 1 1 1 1 1\n6 0 0 6 0 0 8 0\n6 0 0 0 0 0 0 0\n6 6 0 6 0 0 0 0\n6 0 6 6 8 8 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 4 4 0 0 0 7 7\n0 0 4 4 0 0 0 7\n0 0 0 4 7 7 7 7\n0 4 4 0 0 7 0 0\n1 1 1 1 1 1 1 1\n0 6 6 6 0 0 8 8\n0 0 6 0 0 0 0 0\n6 0 6 0 0 0 0 8\n6 6 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "4 4 0 4 7 7 0 0\n4 0 0 0 7 0 7 0\n4 4 4 0 7 0 0 7\n4 0 4 4 7 0 7 7\n1 1 1 1 1 1 1 1\n0 0 0 0 0 0 8 0\n6 6 0 0 0 0 8 0\n0 6 6 6 0 0 8 0\n0 6 6 0 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "0 0 0 4 7 7 0 0\n4 4 4 4 7 0 0 0\n4 0 0 0 7 0 7 0\n4 4 4 0 0 7 7 0\n1 1 1 1 1 1 1 1\n6 6 6 6 8 0 8 0\n0 0 6 0 0 0 8 8\n0 6 0 6 0 0 0 0\n0 0 0 6 8 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "4 4 4 0 7 0 0 7\n4 4 0 4 0 7 7 7\n4 4 0 4 7 7 7 0\n0 4 0 0 7 7 7 0\n1 1 1 1 1 1 1 1\n6 6 6 6 8 8 0 8\n0 0 0 6 0 8 8 8\n0 0 6 0 0 8 0 8\n0 6 0 0 8 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 4 0 4 0 7 7 7\n4 4 0 0 7 7 7 0\n0 0 0 4 0 0 0 0\n0 0 0 0 7 0 0 0\n1 1 1 1 1 1 1 1\n6 6 6 0 0 0 0 0\n0 0 0 0 0 0 8 8\n6 0 0 6 8 0 8 0\n0 0 0 0 0 0 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "0 4 0 0 7 7 7 0\n4 0 4 4 7 0 7 0\n4 0 4 4 0 7 0 7\n0 0 0 0 0 0 0 7\n1 1 1 1 1 1 1 1\n6 0 0 6 0 0 8 0\n6 0 0 0 0 0 0 0\n6 6 0 6 0 0 0 0\n6 0 6 6 8 8 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 4 4 0 0 0 7 7\n0 0 4 4 0 0 0 7\n0 0 0 4 7 7 7 7\n0 4 4 0 0 7 0 0\n1 1 1 1 1 1 1 1\n0 6 6 6 0 0 8 8\n0 0 6 0 0 0 0 0\n6 0 6 0 0 0 0 8\n6 6 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "4 4 0 4 7 7 0 0\n4 0 0 0 7 0 7 0\n4 4 4 0 7 0 0 7\n4 0 4 4 7 0 7 7\n1 1 1 1 1 1 1 1\n0 0 0 0 0 0 8 0\n6 6 0 0 0 0 8 0\n0 6 6 6 0 0 8 0\n0 6 6 0 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "0 0 0 4 7 7 0 0\n4 4 4 4 7 0 0 0\n4 0 0 0 7 0 7 0\n4 4 4 0 0 7 7 0\n1 1 1 1 1 1 1 1\n6 6 6 6 8 0 8 0\n0 0 6 0 0 0 8 8\n0 6 0 6 0 0 0 0\n0 0 0 6 8 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "4 4 4 0 7 0 0 7\n4 4 0 4 0 7 7 7\n4 4 0 4 7 7 7 0\n0 4 0 0 7 7 7 0\n1 1 1 1 1 1 1 1\n6 6 6 6 8 8 0 8\n0 0 0 6 0 8 8 8\n0 0 6 0 0 8 0 8\n0 6 0 0 8 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 4 0 0\n0 0 6 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 4 0 0\n7 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 4 0 0\n0 4 6 0\n0 0 7 0\n0 0 0 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 4 0 4\n7 0 0 0\n0 4 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 0 0 0\n7 4 6 0\n0 4 7 0\n0 0 0 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 4 0 4\n7 4 6 0\n0 0 7 0\n0 0 0 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 4 0 0\n0 0 6 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 4 0 0\n7 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 4 0 0\n0 4 6 0\n0 0 7 0\n0 0 0 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 4 0 4\n7 0 0 0\n0 4 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 0 0 0\n7 4 6 0\n0 4 7 0\n0 0 0 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 4 0 4\n7 4 6 0\n0 0 7 0\n0 0 0 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "012-py_08-train": [],
    "013-py_09-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      }
    ],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 6 0 6\n7 0 0 0\n7 6 0 6\n7 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 0 0 0\n7 0 0 0\n7 0 0 0\n7 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 6 0 6\n7 0 0 0\n7 6 0 6\n7 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 0 0 0\n7 0 0 0\n7 0 0 0\n7 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 0 4 4\n7 4 0 0\n7 7 7 7\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 0 4 0\n7 4 4 4\n7 7 7 7\n8 0 0 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 0 4 0\n0 0 4 4\n7 7 7 7\n8 0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 4 4 4\n7 4 0 0\n7 7 7 7\n0 7 0 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 0 0 4\n7 4 4 4\n7 7 7 7\n8 7 0 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 4 4 0\n0 4 0 4\n7 7 7 7\n8 7 4 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      }
    ],
    "017-py_12-train": [],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 4 0 4\n4 4 0 0\n7 7 7 7\n6 6 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "0 4 0 0\n4 0 4 4\n7 7 7 7\n6 0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 4 4 0\n0 0 4 4\n7 7 7 7\n0 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "4 4 0 4\n4 0 0 0\n7 7 7 7\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "0 0 0 4\n4 4 4 4\n7 7 7 7\n6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "4 4 4 0\n4 4 0 4\n7 7 7 7\n6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 4 0 4\n4 4 0 0\n7 7 7 7\n6 6 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "0 4 0 0\n4 0 4 4\n7 7 7 7\n6 0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 4 4 0\n0 0 4 4\n7 7 7 7\n0 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "4 4 0 4\n4 0 0 0\n7 7 7 7\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "0 0 0 4\n4 4 4 4\n7 7 7 7\n6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "4 4 4 0\n4 4 0 4\n7 7 7 7\n6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      }
    ],
    "022-py_15-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "7 8 0 0\n4 6 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 8 0 0\n4 6 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "7 8 0 0\n4 6 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 8 0 0\n4 6 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 8 0 0\n4 6 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 8 0 0\n4 6 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "024-py_16-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "026-py_17-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "7 4\n6 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 4\n8 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "7 4\n8 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 4\n8 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 4\n8 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 4\n8 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "028-py_18-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "029-py_19-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 7 4 4\n7 7 4 4\n8 8 6 6\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "031-py_20-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "7 7 4 4\n0 0 0 0\n0 0 0 0\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 7 4 4\n0 0 0 0\n0 0 0 0\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "7 7 4 4\n0 0 0 0\n0 0 0 0\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 7 4 4\n0 0 0 0\n0 0 0 0\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 7 4 4\n0 0 0 0\n0 0 0 0\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 7 4 4\n0 0 0 0\n0 0 0 0\n8 8 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "032-py_21-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "7 0 4 0\n0 0 0 0\n8 0 6 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 0 4 0\n0 0 0 0\n8 0 6 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "7 0 4 0\n0 0 0 0\n8 0 6 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 0 4 0\n0 0 0 0\n8 0 6 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 0 4 0\n0 0 0 0\n8 0 6 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 0 4 0\n0 0 0 0\n8 0 6 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "034-py_22-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 4 4 0\n4 0 0 4\n0 0 0 4\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 0 0 7\n0 7 7 0\n7 7 7 0\n7 7 7 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 4 4 7\n4 7 7 4\n7 7 7 4\n7 7 7 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 4 4 7\n4 7 7 4\n7 7 7 4\n7 7 7 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 0 0 7\n0 7 7 0\n7 7 7 0\n7 7 7 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      }
    ],
    "035-py_23-train": [],
    "036-py_24-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "0 0 0 4\n0 0 0 4\n0 0 0 4\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "7 7 7 0\n7 7 7 0\n7 7 7 0\n7 7 7 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "7 7 7 4\n7 7 7 4\n7 7 7 4\n7 7 7 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "7 7 7 4\n7 7 7 4\n7 7 7 4\n7 7 7 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "7 7 7 0\n7 7 7 0\n7 7 7 0\n7 7 7 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      }
    ],
    "037-py_25-train": [],
    "038-py_26-train": [
      {
        "example": 1,
        "input": "0 7 7 7 1 0 4 0 4\n7 7 7 0 1 4 4 0 0\n0 0 0 0 1 0 0 0 4\n7 0 0 0 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 0 0 1 6 6 6 0\n0 0 8 8 1 0 0 0 0\n8 0 8 0 1 6 0 0 6\n0 0 0 8 1 0 0 0 0",
        "expected_output": "6 7 7 7\n7 7 7 8\n8 0 8 4\n7 0 0 8",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 7 0 1 0 4 0 0\n7 0 7 0 1 4 0 4 4\n0 7 0 7 1 4 0 4 4\n0 0 0 7 1 0 0 0 0\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 6 0 0 6\n0 0 0 0 1 6 0 0 0\n0 0 0 0 1 6 6 0 6\n8 8 8 0 1 6 0 6 6",
        "expected_output": "7 7 7 6\n7 0 7 4\n4 7 4 7\n8 8 8 7",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 7 7 1 0 4 4 0\n0 0 0 7 1 0 0 4 4\n7 7 7 7 1 0 0 0 4\n0 7 0 0 1 0 4 4 0\n1 1 1 1 1 1 1 1 1\n0 0 8 8 1 0 6 6 6\n0 0 0 0 1 0 0 6 0\n0 0 0 8 1 6 0 6 0\n8 0 0 0 1 6 6 0 0",
        "expected_output": "0 4 7 7\n0 0 4 7\n7 7 7 7\n8 7 4 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 7 0 0 1 4 4 0 4\n7 0 7 0 1 4 0 0 0\n7 0 0 7 1 4 4 4 0\n7 0 7 7 1 4 0 4 4\n1 1 1 1 1 1 1 1 1\n0 0 8 0 1 0 0 0 0\n0 0 8 0 1 6 6 0 0\n0 0 8 0 1 0 6 6 6\n0 8 0 8 1 0 6 6 0",
        "expected_output": "7 7 8 4\n7 6 7 0\n7 4 4 7\n7 8 7 7",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 7 0 0 1 0 0 0 4\n7 0 0 0 1 4 4 4 4\n7 0 7 0 1 4 0 0 0\n0 7 7 0 1 4 4 4 0\n1 1 1 1 1 1 1 1 1\n8 0 8 0 1 6 6 6 6\n0 0 8 8 1 0 0 6 0\n0 0 0 0 1 0 6 0 6\n8 8 8 8 1 0 0 0 6",
        "expected_output": "7 7 8 4\n7 4 4 4\n7 6 7 6\n4 7 7 8",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "7 0 0 7 1 4 4 4 0\n0 7 7 7 1 4 4 0 4\n7 7 7 0 1 4 4 0 4\n7 7 7 0 1 0 4 0 0\n1 1 1 1 1 1 1 1 1\n8 8 0 8 1 6 6 6 6\n0 8 8 8 1 0 0 0 6\n0 8 0 8 1 0 0 6 0\n8 8 0 8 1 0 6 0 0",
        "expected_output": "7 4 4 7\n4 7 7 7\n7 7 7 4\n7 7 7 8",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}