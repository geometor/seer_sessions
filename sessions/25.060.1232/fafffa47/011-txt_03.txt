import numpy as np

def describe_grid(grid):
    """Provides a basic description of a grid."""
    grid = np.array(grid)
    return {
        'shape': grid.shape,
        'unique_colors': np.unique(grid).tolist()
    }

def analyze_example(input_grid, output_grid, predicted_output_grid):
    """Analyzes a single example pair."""

    input_desc = describe_grid(input_grid)
    output_desc = describe_grid(output_grid)
    predicted_output_desc = describe_grid(predicted_output_grid)
    
    correct = np.array_equal(np.array(output_grid), np.array(predicted_output_grid))

    return {
        'input': input_desc,
        'output': output_desc,
        'predicted_output': predicted_output_desc,
        'correct': correct
    }
def transform(input_grid):
    """
    Transforms a 6x3 input grid into a 3x3 output grid based on color mapping of the upper subgrid.
    """
    # Convert the input grid to a NumPy array for easier manipulation.
    input_array = np.array(input_grid)

    # Initialize an empty 3x3 output grid filled with white (0).
    output_grid = np.zeros((3, 3), dtype=int)

    # Process the upper subgrid (first 3 rows).
    for i in range(3):
        for j in range(3):
            if input_array[i, j] == 9:  # If the cell is maroon (9)
                output_grid[i, j] = 2  # Change it to red (2)
            elif input_array[i,j] == 0:
                output_grid[i,j] = 0
            # else leave as default value (0)

    return output_grid.tolist()

examples = [
    ([[9, 9, 9], [9, 9, 9], [9, 9, 9], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[2, 2, 2], [2, 2, 2], [2, 2, 2]]),
    ([[9, 0, 9], [0, 9, 0], [9, 0, 9], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[2, 0, 2], [0, 2, 0], [2, 0, 2]]),
    ([[0, 9, 0], [9, 0, 9], [0, 9, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]], [[0, 2, 0], [2, 0, 2], [0, 2, 0]]),
]

analysis_results = []
for input_grid, output_grid in examples:
    predicted_output_grid = transform(input_grid)
    analysis_results.append(analyze_example(input_grid, output_grid, predicted_output_grid))

print(analysis_results)