observations:
  - task: 6f8cd79b
    objects:
      - type: blue_pixel
        description: The trigger for the transformation.
        properties:
          location: [row, column]  # Varies per example
      - type: transformation_pattern
        description: A 3x3 pattern applied around each blue pixel.
        properties:
          shape: 3x3
          colors:
            top_left: red (2)
            top_center: orange (7)
            top_right: magenta (6)
            center_left: azure (8)
            center: blue (1)
            center_right: input
            bottom_left: input
            bottom_center: input
            bottom_right: input
    actions:
      - name: apply_pattern
        description: >
          The 3x3 pattern is applied centered on each blue pixel in the input grid.  
          The pattern overwrites existing pixels in the output grid.
      - name: boundary_handling
        description: >
          If a blue pixel is near the edge of the input grid, the 3x3 pattern is "clipped". 
          Only the parts of the pattern that fall *within* the bounds of the input grid are applied to the output grid.
      - name: initialization
        description: The output grid starts as a copy of the input grid.
      - name: overlap_handling
        description: >
          If parts of the transformation pattern overlap, the application to the whole pattern, of the "latest" pattern
          in row-major scan order is applied.
