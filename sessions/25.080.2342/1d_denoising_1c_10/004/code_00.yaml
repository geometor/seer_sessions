examples:
  - example_id: 1
    input_objects:
      - {color: 1, length: 13, start_index: 1}
      - {color: 1, length: 1, start_index: 16}
      - {color: 1, length: 1, start_index: 21}
      - {color: 1, length: 1, start_index: 25}
    output_objects:
      - {color: 1, length: 13, start_index: 1}
    transformation: Keep only the longest contiguous block of color 1.
  - example_id: 2
    input_objects:
      - {color: 1, length: 1, start_index: 2}
      - {color: 1, length: 15, start_index: 13}
    output_objects:
      - {color: 1, length: 15, start_index: 13}
    transformation:  Keep only the longest contiguous block of color 1.
  - example_id: 3
    input_objects:
      - {color: 3, length: 1, start_index: 2}
      - {color: 3, length: 1, start_index: 5}
      - {color: 3, length: 1, start_index: 9}
      - {color: 3, length: 11, start_index: 11}
      - {color: 3, length: 1, start_index: 25}
    output_objects:
      - {color: 3, length: 11, start_index: 11}
    transformation: Keep only the longest contiguous block of color 3.

general_rule: Find all contiguous blocks of non-zero pixels. Identify the longest block(s) and set all other non-zero pixels, not belonging to the longest block(s) to zero. If there are multiple blocks with same max length, keep all.