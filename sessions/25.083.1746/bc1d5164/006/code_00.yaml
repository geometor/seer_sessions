task_id: 6d58a25d
examples:
  - input_grid_dims: [5, 7]
    output_grid_dims: [3, 3]
    border_color: 4
    border_pixels:
      top: [4, 4]
      bottom: [4, 4, 4]
      left: [4, 4]
      right: [4, 4]
    output_grid_colors: [[4, 0, 4], [0, 0, 0], [4, 4, 4]]
    transformation: "The output grid is 3x3. The border color of the input grid is identified.  If a border pixel is the first non-zero pixel found on the top edge, the top-middle pixel of the output is set to that color. If a border pixel is the first non-zero found pixel on the bottom edge, the bottom-middle pixel of the output is set to that color.  If the first non-zero pixel on the left edge, the middle-left pixel is set. If the first non-zero pixel on right edge, the middle-right pixel is set."
  - input_grid_dims: [5, 7]
    output_grid_dims: [3, 3]
    border_color: 2
    border_pixels:
      top: [2, 2, 2, 2]
      bottom: [2, 2]
      left: [2, 2]
      right: [2, 2]
    output_grid_colors:  [[2, 2, 2], [0, 2, 2], [2, 0, 2]]
    transformation: "The output grid is 3x3. The border color of the input grid is identified.  If a border pixel is the first non-zero pixel found on the top edge, the top-middle pixel of the output is set to that color. If a border pixel is the first non-zero found pixel on the bottom edge, the bottom-middle pixel of the output is set to that color.  If the first non-zero pixel on the left edge, the middle-left pixel is set. If the first non-zero pixel on right edge, the middle-right pixel is set."
  - input_grid_dims: [5, 7]
    output_grid_dims: [3, 3]
    border_color: 4
    border_pixels:
      top: [4, 4, 4]
      bottom: [4, 4]
      left: [4]
      right: [4, 4]
    output_grid_colors: [[4, 4, 0], [0, 4, 4], [4, 0, 4]]
    transformation: "The output grid is 3x3. The border color of the input grid is identified.  If a border pixel is the first non-zero pixel found on the top edge, the top-middle pixel of the output is set to that color. If a border pixel is the first non-zero found pixel on the bottom edge, the bottom-middle pixel of the output is set to that color.  If the first non-zero pixel on the left edge, the middle-left pixel is set. If the first non-zero pixel on right edge, the middle-right pixel is set."
  - input_grid_dims: [5, 7]
    output_grid_dims: [3, 3]
    border_color: 3
    border_pixels:
      top: [3, 3]
      bottom: [3]
      left: [3]
      right: [3, 3]
    output_grid_colors: [[0, 3, 0], [3, 0, 3], [0, 0, 3]]
    transformation: "The output grid is 3x3. The border color of the input grid is identified.  If a border pixel is the first non-zero pixel found on the top edge, the top-middle pixel of the output is set to that color. If a border pixel is the first non-zero found pixel on the bottom edge, the bottom-middle pixel of the output is set to that color.  If the first non-zero pixel on the left edge, the middle-left pixel is set. If the first non-zero pixel on right edge, the middle-right pixel is set."
  - input_grid_dims: [5, 7]
    output_grid_dims: [3, 3]
    border_color: 8
    border_pixels:
      top: [8, 8]
      bottom: [8, 8]
      left: [8, 8, 8]
      right: [8, 8, 8]
    output_grid_colors:  [[0, 8, 0], [8, 8, 8], [0, 8, 0]]
    transformation: "The output grid is 3x3. The border color of the input grid is identified.  If a border pixel is the first non-zero pixel found on the top edge, the top-middle pixel of the output is set to that color. If a border pixel is the first non-zero found pixel on the bottom edge, the bottom-middle pixel of the output is set to that color.  If the first non-zero pixel on the left edge, the middle-left pixel is set. If the first non-zero pixel on right edge, the middle-right pixel is set."
