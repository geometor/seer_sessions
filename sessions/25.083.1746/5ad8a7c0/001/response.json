{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe transformation expands connected lines of two or more red pixels to the edges of the input array. isolated red pixels, and other formations are left unchanged.\n\"\"\"\n\nimport numpy as np\n\ndef get_red_regions(grid):\n    \"\"\"Finds all connected regions of '2' (red) pixels in the grid.\"\"\"\n    red_pixels = []\n    for r in range(grid.shape[0]):\n        for c in range(grid.shape[1]):\n            if grid[r, c] == 2:\n                red_pixels.append((r, c))\n    return red_pixels\n\ndef is_connected_line(red_pixels, grid):\n    \"\"\"Checks if any of the red pixels are connected to the edge and form a line.\"\"\"\n\n    if not red_pixels:\n        return False\n    \n    rows = [r for r, _ in red_pixels]\n    cols = [c for _, c in red_pixels]\n    \n    if len(set(rows)) == 1 and len(red_pixels) > 1 :\n        return True # horizontal line\n    \n    if len(set(cols)) == 1 and len(red_pixels) > 1:\n            return True  # Vertical line\n\n    return False  # Not a straight, connected line\n\n\ndef transform(input_grid):\n    # initialize output_grid\n    output_grid = np.copy(input_grid)\n    grid = np.array(input_grid)\n    red_pixels = get_red_regions(grid)\n\n    if is_connected_line(red_pixels, grid):\n\n        rows = [r for r, _ in red_pixels]\n        cols = [c for _, c in red_pixels]\n        \n        if len(set(rows)) == 1: #horizontal\n            output_grid[rows[0], :] = 2  # Fill the entire row\n        elif len(set(cols)) == 1:  #vertical\n            output_grid[:, cols[0]] = 2    # Fill the entire column\n\n    return output_grid.tolist()\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2341,
    "candidates_token_count": 472,
    "total_token_count": 2813,
    "cached_content_token_count": 0
  },
  "response_time": 9.818121
}