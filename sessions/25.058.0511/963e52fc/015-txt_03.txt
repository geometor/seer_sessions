import numpy as np

def grid_dims(grid):
    return grid.shape

def grid_diff(grid1, grid2):
    return grid_dims(grid1),grid_dims(grid2)

def count_colors(grid):
    unique, counts = np.unique(grid, return_counts=True)
    return dict(zip(unique, counts))

examples = task_data["train"]
example_reports = []

for i, example in enumerate(examples):
  input_grid = np.array(example['input'])
  output_grid = np.array(example['output'])
  transformed_grid = transform(input_grid) # transform defined in previous turn

  report = {
    'example_number': i,
    'input_dims': grid_dims(input_grid),
    'output_dims': grid_dims(output_grid),
    'trans_dims': grid_dims(transformed_grid),
      'match': np.array_equal(output_grid, transformed_grid)
  }
  example_reports.append(report)

print(example_reports)