{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 790,
        "total": 2627,
        "cached": 0
      },
      "response_time": 9.74703
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2488,
        "candidates": 247,
        "total": 2735,
        "cached": 0
      },
      "response_time": 3.406704
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1497,
        "candidates": 5626,
        "total": 7123,
        "cached": 0
      },
      "response_time": 46.901589
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 6036,
        "candidates": 5778,
        "total": 11814,
        "cached": 0
      },
      "response_time": 50.267257
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 11614,
        "candidates": 416,
        "total": 12030,
        "cached": 0
      },
      "response_time": 5.48165
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 6914,
        "candidates": 216,
        "total": 7130,
        "cached": 0
      },
      "response_time": 2.785564
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 447,
        "total": 2308,
        "cached": 0
      },
      "response_time": 7.147708
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2169,
        "candidates": 281,
        "total": 2450,
        "cached": 0
      },
      "response_time": 3.934118
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1532,
        "candidates": 724,
        "total": 2256,
        "cached": 0
      },
      "response_time": 7.577335
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 1437,
        "candidates": 1145,
        "total": 2582,
        "cached": 0
      },
      "response_time": 13.373869
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2378,
        "candidates": 276,
        "total": 2654,
        "cached": 0
      },
      "response_time": 7.068098
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2052,
        "candidates": 226,
        "total": 2278,
        "cached": 0
      },
      "response_time": 3.176048
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1873,
        "candidates": 552,
        "total": 2425,
        "cached": 0
      },
      "response_time": 8.295895
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2286,
        "candidates": 540,
        "total": 2826,
        "cached": 0
      },
      "response_time": 6.080089
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1791,
        "candidates": 1477,
        "total": 3268,
        "cached": 0
      },
      "response_time": 18.735047
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 1501,
        "candidates": 1717,
        "total": 3218,
        "cached": 0
      },
      "response_time": 19.678541
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 3016,
        "candidates": 127,
        "total": 3143,
        "cached": 0
      },
      "response_time": 2.283898
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3060,
        "candidates": 455,
        "total": 3515,
        "cached": 0
      },
      "response_time": 5.06531
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1885,
        "candidates": 421,
        "total": 2306,
        "cached": 0
      },
      "response_time": 6.208156
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2165,
        "candidates": 242,
        "total": 2407,
        "cached": 0
      },
      "response_time": 3.833414
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1493,
        "candidates": 2338,
        "total": 3831,
        "cached": 0
      },
      "response_time": 24.064903
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2510,
        "candidates": 1021,
        "total": 3531,
        "cached": 0
      },
      "response_time": 13.909603
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 3326,
        "candidates": 611,
        "total": 3937,
        "cached": 0
      },
      "response_time": 12.616018
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3628,
        "candidates": 417,
        "total": 4045,
        "cached": 0
      },
      "response_time": 4.190771
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 0 5 0 0 3 0 0 0 5\n0 5 0 0 3 0 0 5 0 0\n0 0 0 5 0 0 3 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 80.0
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 5 0 5 0 0 3 0 5 0 0 0\n5 0 0 0 3 0 0 5 0 0 5 0\n0 0 3 0 0 5 0 0 0 5 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 5 0 0 5 0 3 0 0 0 5 0\n5 0 0 0 3 0 5 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 87.17948717948718
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 5 0 0 5 0 3 0 5 0 5 0 0\n3 0 0 0 5 0 0 0 5 0 3 0 0 5\n0 5 0 3 0 0 5 0 0 0 0 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "004-py_03-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_04-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 0 3 0 0 5 0 0 0 5\n0 5 0 0 3 0 0 5 0 0\n0 0 0 5 0 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 70.0
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 5 0 5 0 0 3 0 3 0 0 0\n5 0 0 0 3 0 0 5 0 0 3 0\n0 0 3 0 0 5 0 0 0 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 69.44444444444444
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 97.43589743589743
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 3 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 3 0 0 0 3 0 3 0 0 5\n0 5 0 5 0 0 3 0 0 0 0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 69.04761904761905
      }
    ],
    "006-py_05-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 0 5 0 0 3 0 0 0 5\n0 5 0 0 3 0 0 5 0 0\n0 0 0 5 0 0 3 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 80.0
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 5 0 5 0 0 3 0 5 0 0 0\n5 0 0 0 3 0 0 5 0 0 5 0\n0 0 3 0 0 5 0 0 0 5 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 5 0 0 5 0 3 0 0 0 5 0\n5 0 0 0 3 0 5 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 87.17948717948718
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 5 0 0 5 0 3 0 5 0 5 0 0\n3 0 0 0 5 0 0 0 5 0 3 0 0 5\n0 5 0 3 0 0 5 0 0 0 0 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ],
    "008-py_06-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 3 5 0 3 5 0 3 0 5\n3 5 0 3 5 0 3 5 0 3\n3 0 3 5 0 3 5 0 5 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "3 5 0 5 3 0 5 3 5 0 3 0\n5 3 0 3 5 0 3 5 0 3 5 0\n3 0 5 3 0 5 3 0 3 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 50.0
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "3 0 5 3 0 5 3 5 0 3 0 5 3\n5 3 0 3 5 0 5 3 0 5 3 0 5\n3 5 0 5 3 0 3 0 5 3 5 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 46.15384615384615
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "3 0 5 3 0 5 3 5 0 5 3 5 0 3\n5 3 0 3 5 0 3 0 5 3 5 0 3 5\n3 5 0 5 3 0 5 3 0 3 0 3 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 22,
        "percent_correct": 47.61904761904761
      }
    ],
    "009-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_08-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 16.666666666666664
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 16.666666666666664
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "3 3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 17.94871794871795
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "3 3 3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3 3 3\n3 3 3 3 3 3 3 3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 35,
        "percent_correct": 16.666666666666664
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 3 5 0 3 5 0 3 3 5\n3 5 0 0 5 0 0 5 0 0\n0 3 0 5 0 0 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "3 5 3 5 3 3 5 3 5 0 3 0\n5 0 3 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 3 0 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 61.111111111111114
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "3 3 5 0 3 5 3 5 0 3 3 5 0\n5 0 3 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 3 3 0 5 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 58.97435897435898
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "3 3 5 0 3 5 3 5 3 5 3 5 0 0\n5 0 3 0 5 0 3 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 3 3 3 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 57.14285714285714
      }
    ],
    "015-py_10-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "016-py_11-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "017-py_12-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 39,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 42,
        "percent_correct": 0.0
      }
    ],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 3 5 3 3 5 3 3 3 5\n3 5 3 3 5 3 3 5 3 3\n3 3 3 5 3 3 5 3 5 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 16.666666666666664
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "3 5 3 5 3 3 5 3 5 3 3 3\n5 3 3 3 5 3 3 5 3 3 5 3\n3 3 5 3 3 5 3 3 3 5 3 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 16.666666666666664
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "3 3 5 3 3 5 3 5 3 3 3 5 3\n5 3 3 3 5 3 5 3 3 5 3 3 5\n3 5 3 5 3 3 3 3 5 3 5 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 33,
        "percent_correct": 15.384615384615385
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "3 3 5 3 3 5 3 5 3 5 3 5 3 3\n5 3 3 3 5 3 3 3 5 3 5 3 3 5\n3 5 3 5 3 3 5 3 3 3 3 3 5 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 35,
        "percent_correct": 16.666666666666664
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "3 0 5 0 0 5 0 0 0 3\n0 5 0 0 5 0 0 3 0 0\n0 0 0 5 0 0 5 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 3 0 5 0 0 5 0 3 0 0 0\n3 0 0 0 5 0 0 5 0 0 3 0\n0 0 3 0 0 5 0 0 0 5 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 3 0 0 5 0 5 0 0 0 3 0\n5 0 0 0 3 0 5 0 0 5 0 0 3\n0 3 0 5 0 0 0 0 5 0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 87.17948717948718
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 5 0 0 3 0 5 0 5 0 3 0 0\n5 0 0 0 3 0 0 0 5 0 5 0 0 3\n0 3 0 5 0 0 5 0 0 0 0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 88.09523809523809
      }
    ],
    "021-py_15-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "023-py_16-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "3 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 80.0
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 3 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 86.11111111111111
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 84.61538461538461
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 3 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 80.95238095238095
      }
    ],
    "024-py_17-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 3 0 5 0 0 5 0 3 0 0 0\n3 0 0 0 5 0 0 5 0 0 3 0\n0 0 3 0 0 5 0 0 0 5 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 82.05128205128204
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}