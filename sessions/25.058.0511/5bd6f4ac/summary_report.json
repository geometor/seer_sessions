{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 418,
        "total": 2315,
        "cached": 0
      },
      "response_time": 6.873002
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2177,
        "candidates": 472,
        "total": 2649,
        "cached": 0
      },
      "response_time": 5.902548
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1723,
        "candidates": 2218,
        "total": 3941,
        "cached": 0
      },
      "response_time": 21.86775
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2629,
        "candidates": 908,
        "total": 3537,
        "cached": 0
      },
      "response_time": 10.410886
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 3333,
        "candidates": 526,
        "total": 3859,
        "cached": 0
      },
      "response_time": 4.93556
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3744,
        "candidates": 520,
        "total": 4264,
        "cached": 0
      },
      "response_time": 5.814926
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 387,
        "total": 2284,
        "cached": 0
      },
      "response_time": 6.731399
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2146,
        "candidates": 220,
        "total": 2366,
        "cached": 0
      },
      "response_time": 3.324408
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1471,
        "candidates": 2772,
        "total": 4243,
        "cached": 0
      },
      "response_time": 23.777928
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 4038,
        "candidates": 475,
        "total": 4513,
        "cached": 0
      },
      "response_time": 6.18815
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1726,
        "candidates": 988,
        "total": 2714,
        "cached": 0
      },
      "response_time": 16.395695
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2510,
        "candidates": 534,
        "total": 3044,
        "cached": 0
      },
      "response_time": 4.948835
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 421,
        "total": 2318,
        "cached": 0
      },
      "response_time": 7.960993
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2180,
        "candidates": 343,
        "total": 2523,
        "cached": 0
      },
      "response_time": 4.470694
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1594,
        "candidates": 2130,
        "total": 3724,
        "cached": 0
      },
      "response_time": 22.372778
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2138,
        "candidates": 2356,
        "total": 4494,
        "cached": 0
      },
      "response_time": 35.369077
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 4289,
        "candidates": 428,
        "total": 4717,
        "cached": 0
      },
      "response_time": 4.903507
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3519,
        "candidates": 476,
        "total": 3995,
        "cached": 0
      },
      "response_time": 5.552545
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 699,
        "total": 2596,
        "cached": 0
      },
      "response_time": 10.201119
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2455,
        "candidates": 431,
        "total": 2886,
        "cached": 0
      },
      "response_time": 5.160861
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1682,
        "candidates": 3069,
        "total": 4751,
        "cached": 0
      },
      "response_time": 29.605307
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 3389,
        "candidates": 882,
        "total": 4271,
        "cached": 0
      },
      "response_time": 10.79877
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 4067,
        "candidates": 379,
        "total": 4446,
        "cached": 0
      },
      "response_time": 3.92415
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 4552,
        "candidates": 307,
        "total": 4859,
        "cached": 0
      },
      "response_time": 3.511323
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "3 0 0\n8 4 0\n1 7 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "9 0 0\n0 4 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "2 5 0\n2 5 5\n0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "5 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "003-py_02-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "3 0 0\n8 4 0\n1 7 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "9 0 0\n0 4 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "2 5 0\n2 5 5\n0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "5 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "3 0 0\n8 4 0\n1 7 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "9 0 0\n0 4 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "2 5 0\n2 5 5\n0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "5 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "0 0 7\n0 0 0\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "0 0 6\n0 0 0\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "0 0 5\n0 0 0\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "0 0 8\n0 0 0\n1 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "1 0 0\n5 0 0\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "7 0 7\n3 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "0 0 0\n0 0 4\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "1 0 0\n5 0 0\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "7 0 7\n3 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "0 0 0\n0 0 4\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "1 0 0\n5 0 0\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "7 0 7\n3 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "0 0 0\n0 0 4\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "1 7 4\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "2 7 1\n4 4 5\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "3 1 9\n4 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "2 1 3\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "015-py_09-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "016-py_10-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "017-py_11-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "3 0 7 0 0 9 7 0\n8 4 6 6 0 4 8 4\n1 7 0 0 0 4 0 0\n1 1 9 1 0 7 0 0\n0 0 0 7 7 0 0 0\n8 0 1 7 0 8 4 0\n0 7 9 9 2 1 0 0\n0 0 0 0 0 5 0 0\n0 0 2 4 0 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "8 4 6\n6 4 8\n4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "4 7 5\n8 1 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "2 5 5\n7 6 1\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      }
    ],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "0 0 7\n4 0 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "0 0 6\n1 0 0\n0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "0 0 6\n1 0 0\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "0 0 4\n3 0 0\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "021-py_14-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "0 0 7\n4 0 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "0 0 6\n1 0 0\n0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "0 0 6\n1 0 0\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "0 0 4\n3 0 0\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "023-py_15-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "024-py_16-train": [
      {
        "example": 1,
        "input": "3 0 0 7 0 0 9 7 0\n8 4 0 6 6 0 4 8 4\n1 7 0 0 0 0 4 0 0\n1 1 0 9 1 0 7 0 0\n0 0 0 0 7 7 0 0 0\n8 0 0 1 7 0 8 4 0\n0 7 0 9 9 2 1 0 0\n0 0 0 0 0 0 5 0 0\n0 0 0 2 4 0 8 0 0",
        "expected_output": "9 7 0\n4 8 4\n4 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "9 0 0 0 0 0 0 6 0\n0 4 0 7 0 5 0 8 1\n0 2 0 0 7 1 4 4 5\n0 6 0 0 4 0 0 0 0\n8 3 0 4 2 0 0 9 7\n0 0 2 3 0 2 0 6 7\n4 0 4 0 3 4 7 0 7\n7 1 0 0 0 0 3 0 0\n3 2 0 0 4 0 0 0 0",
        "expected_output": "0 6 0\n0 8 1\n4 4 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "2 5 0 0 6 0 0 0 0\n2 5 5 7 0 0 6 0 1\n0 3 0 0 0 1 9 4 0\n0 7 0 6 0 0 0 0 0\n0 9 0 0 0 1 0 0 8\n0 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 4\n0 5 0 0 0 0 0 0 0",
        "expected_output": "0 0 0\n6 0 1\n9 4 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "0 5 0 0 8 0 0 0 4\n0 0 0 0 0 0 3 0 0\n0 0 0 0 2 1 0 0 3\n0 1 0 0 0 0 3 0 0\n1 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 8 0\n0 0 0 0 0 0 0 0 0\n0 0 9 4 0 0 0 0 0\n3 0 7 0 0 2 0 0 6",
        "expected_output": "0 0 4\n3 0 0\n0 0 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}