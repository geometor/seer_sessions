task_type: "region_filling"
elements:
  - role: "background"
    description: "The dominant color, often touching the borders. Varies across examples (e.g., Azure, Gray, Maroon). Needs identification."
    properties:
      - state: "initial"
      - state: "external" # connected to border
      - state: "internal" # enclosed
  - role: "boundary"
    description: "Forms the enclosure around internal background regions. Appears constant across examples (e.g., Blue)."
    properties:
      - state: "static" # color does not change
  - role: "fill_color"
    description: "The color used to fill the internal background regions. Appears constant across examples (Red)."
    properties:
      - state: "final" # target color for internal regions
actions:
  - action: "identify_background"
    inputs: ["input_grid"]
    outputs: ["background_color"]
    description: "Determine the background color (e.g., using the color of the top-left pixel, or a more robust border/corner analysis)."
  - action: "identify_external_background"
    inputs: ["input_grid", "background_color"]
    outputs: ["external_coordinates"]
    description: "Perform a flood fill (e.g., BFS) starting from all border pixels matching the background_color. Identify all reachable background_color pixels."
  - action: "identify_internal_background"
    inputs: ["input_grid", "background_color", "external_coordinates"]
    outputs: ["internal_coordinates"]
    description: "Find all pixels matching the background_color that were *not* identified as external."
  - action: "fill_internal_regions"
    inputs: ["input_grid", "internal_coordinates", "fill_color"]
    outputs: ["output_grid"]
    description: "Create the output grid by copying the input grid, then changing the color of pixels at internal_coordinates to the fill_color (Red)."