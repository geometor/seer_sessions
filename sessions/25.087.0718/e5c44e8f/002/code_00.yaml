task_description: "Locate a single green pixel in the input grid. Draw a fixed 9x9 pattern representing the digit '3' (using green and white pixels) centered at the location of the input green pixel. The pattern's non-white pixels overwrite the underlying grid pixels, while the pattern's white pixels leave the underlying pixels unchanged. If the original input grid contained only the single green pixel (and no other non-white pixels), then also fill the entire last row of the output grid with green."

grid_properties:
  - dimensions: Variable height and width (up to 30x30). Examples are 11x11.
  - background_color: White (0)

objects:
  - object: locator_pixel
    description: "The single green (3) pixel present in every input grid."
    properties:
      - color: 3 (green)
      - count: 1 per input grid
    location: Variable, defines the center for the pattern placement.
  - object: other_pixels
    description: "Optional non-white pixels present in the input grid (e.g., red (2))."
    properties:
      - color: Any non-white, non-green color (e.g., 2)
    location: Variable.
  - object: transformation_pattern
    description: "A fixed 9x9 pattern representing the digit '3'."
    properties:
      - size: 9x9
      - colors: Green (3) and White (0)
      - shape: Specific static pattern (derived from Example 1 expected output).
      - center: The pixel at relative index (4, 4) within the pattern, which is green (3).
    pattern_matrix: # Derived from Example 1 Output, centered at (4,5) -> rows 0-8, cols 1-9
      [[3, 0, 3, 3, 3, 3, 3, 3, 3],
       [3, 0, 3, 0, 0, 0, 0, 0, 3],
       [3, 0, 3, 0, 3, 3, 3, 0, 3],
       [3, 0, 3, 0, 3, 0, 3, 0, 3],
       [3, 0, 3, 0, 3, 0, 3, 0, 3], # Center pixel (4,4) is 3
       [3, 0, 3, 0, 0, 0, 3, 0, 3],
       [3, 0, 3, 3, 3, 3, 3, 0, 3],
       [3, 0, 0, 0, 0, 0, 0, 0, 3],
       [3, 3, 3, 3, 3, 3, 3, 3, 3]]

actions:
  - action: initialize_output
    description: "Create the output grid as a copy of the input grid."
  - action: find_locator
    description: "Identify the row and column coordinates (center_r, center_c) of the single green (3) pixel in the input grid."
  - action: apply_pattern
    description: "Overlay the 9x9 transformation_pattern onto the output grid, aligning the pattern's center (4,4) with the locator_pixel coordinates (center_r, center_c)."
    rule: "Iterate through the 9x9 pattern. For each pattern pixel at (pr, pc) corresponding to the output grid coordinate (target_r, target_c): if the pattern pixel is NOT white (0), overwrite the output grid pixel at (target_r, target_c) with the pattern pixel's color. If the pattern pixel IS white (0), do nothing (leave the output grid pixel at (target_r, target_c) as it was)."
  - action: check_condition
    description: "Count the total number of non-white (non-zero) pixels in the original input grid."
    variable: non_background_count
  - action: conditional_fill_last_row
    description: "If non_background_count is exactly 1, fill the entire last row of the output grid with green (3)."
    condition: "non_background_count == 1"

output: "The modified grid after applying the pattern and potentially filling the last row."
