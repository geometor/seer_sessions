task_description: Vertically flip horizontal bands of the grid based on color and symmetry.
definitions:
  band: A maximal contiguous set of one or more rows where all non-background pixels share the same single color. Bands are separated by rows containing only background pixels (0) or rows containing pixels of multiple different non-background colors.
  vertical_symmetry: A grid slice (representing a band) is vertically symmetric if it is identical to itself when its rows are flipped top-to-bottom using `numpy.flipud`.
processing_steps:
  - step: Identify all maximal vertical color bands in the input grid.
    details: Iterate through rows from top to bottom. Group consecutive rows `r_start` to `r_end` if all non-zero pixels within `grid[r_start:r_end+1, :]` have the exact same color value.
  - step: Initialize the output grid as a copy of the input grid.
  - step: For each identified band:
    - sub_step: Define the row range `min_row` to `max_row`.
    - sub_step: Extract the grid slice `input_slice = input_grid[min_row : max_row + 1, :]`.
    - sub_step: Check if `input_slice` is vertically symmetric by comparing `input_slice` with `numpy.flipud(input_slice)`.
    - sub_step: If the slice is NOT vertically symmetric:
        action: Compute the flipped slice `flipped_slice = numpy.flipud(input_slice)`.
        action: Update the output grid `output_grid[min_row : max_row + 1, :] = flipped_slice`.
    - sub_step: If the slice IS vertically symmetric:
        action: No change is needed for this band in the output grid (it retains the values from the initial copy).
  - step: Return the final output grid.
examples_analysis:
  - example: 1
    bands:
      - color: Red, rows: [1, 2, 3], symmetric: false, action: flip
      - color: Green, rows: [4, 5], symmetric: false, action: flip
      - color: Blue, rows: [6, 7, 8], symmetric: true, action: keep
      - color: Yellow, rows: [9, 10, 11], symmetric: false, action: flip
    result: Rule matches expected output.
  - example: 2
    bands:
      - color: Blue, rows: [1, 2], symmetric: false, action: flip
      - color: Azure, rows: [3], symmetric: true, action: keep
      - color: Gray, rows: [4, 5, 6], symmetric: false, action: flip
      - color: Red, rows: [7, 8], symmetric: false, action: flip
      - color: Green, rows: [9], symmetric: true, action: keep
    result: Rule matches expected output.
  - example: 3
    bands:
      - color: Maroon, rows: [1, 2], symmetric: false, action: flip
      - color: Yellow, rows: [3], symmetric: true, action: keep
      - color: Green, rows: [4, 5], symmetric: false, action: flip
    result: Rule matches expected output.
