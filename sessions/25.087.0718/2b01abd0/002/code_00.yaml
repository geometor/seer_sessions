task_description: Reflect objects across a blue line, swapping colors at the original position and placing original colors at the reflected position.

grid_properties:
  - Input and output grids have the same dimensions.
  - Background color is white (0).

objects:
  - blue_line: A solid straight line (horizontal or vertical) of blue (1) pixels, acting as the reflection axis. It remains unchanged in the output.
  - source_pixels: Pixels with colors other than white (0) or blue (1). These are the pixels subject to transformation.
    - Colors observed: Red (2), Green (3), Yellow (4), Gray (5), Magenta (6), Azure (8).
  - reflected_pixels: Pixels generated by the reflection process.

relationships:
  - source_pixels exist on one side of the blue_line.
  - reflected_pixels appear on the opposite side of the blue_line, symmetric to the source_pixels.

actions:
  - find_axis: Locate the blue_line (either horizontal or vertical).
  - identify_sources: Find all pixels that are not white (0) or blue (1).
  - define_color_swaps: Establish pairs for color transformation:
      - Red (2) <-> Green (3)
      - Azure (8) <-> Yellow (4)
      - Gray (5) <-> Magenta (6)
  - reflect_and_swap:
    - For each source_pixel at `(r, c)` with `original_color`:
      1. Calculate the reflected coordinates `(ref_r, ref_c)` across the blue_line.
      2. Determine the `swapped_color` using the defined color swaps.
      3. Update the output grid:
         - Set the pixel at the original coordinates `(r, c)` to the `swapped_color`.
         - Set the pixel at the reflected coordinates `(ref_r, ref_c)` to the `original_color`.
  - preserve_background_and_axis: White pixels and the blue line remain unchanged. Initialize the output grid as a copy of the input grid before applying transformations. Note: Reflected pixels might overwrite existing white pixels, but not the blue line or other source/reflected pixels (based on examples).