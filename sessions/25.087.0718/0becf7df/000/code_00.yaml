task_elements:
  - description: Input and Output are grids of colored pixels.
    type: grid_structure
  - description: Grids contain a background color (white, 0) and multiple non-white pixels forming objects.
    type: content
  - description: Objects are contiguous areas of non-white pixels.
    type: object_definition
  - description: Each example grid contains exactly two distinct non-white objects.
    type: object_count
  - description: One object's bounding box includes the top-left coordinate (0,0).
    id: obj_tl
    type: object_property
    feature: position_relation
    value: includes (0,0)
  - description: The other object's bounding box does not include the top-left coordinate (0,0).
    id: obj_target
    type: object_property
    feature: position_relation
    value: does_not_include (0,0)
  - description: The object 'obj_tl' remains unchanged in the output.
    type: transformation_effect
    target: obj_tl
    effect: unchanged
  - description: The object 'obj_target' has its colors modified in the output.
    type: transformation_effect
    target: obj_target
    effect: color_swap
  - description: The background pixels remain unchanged.
    type: transformation_effect
    target: background
    effect: unchanged
relationships_and_actions:
  - description: The set of unique non-white colors within 'obj_tl' determines the color swapping rule.
    type: rule_dependency
    source: obj_tl
    target: obj_target
    rule_aspect: color_set
  - description: The color swapping rule involves pairing the four unique colors found in 'obj_tl'.
    type: action_detail
    action: color_swap
    detail: pairing
  - description: Let the sorted unique colors from 'obj_tl' be S = [c1, c2, c3, c4]. A conditional check determines the pairs.
    type: rule_logic
    condition: c1 + c4 == c2 + c3
  - description: If the condition (c1 + c4 == c2 + c3) is true, the swap pairs are (c1, c4) and (c2, c3).
    type: rule_outcome
    condition_state: true
    pairs: [(c1, c4), (c2, c3)]
  - description: If the condition (c1 + c4 == c2 + c3) is false, the swap pairs are (c1, c3) and (c2, c4).
    type: rule_outcome
    condition_state: false
    pairs: [(c1, c3), (c2, c4)]
  - description: The determined color swap pairs are applied pixel-wise only within 'obj_target'.
    type: action_application
    action: color_swap
    scope: obj_target