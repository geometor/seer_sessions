task_context:
  description: >
    The task involves processing an input grid divided into four quadrants by a
    central yellow cross (one horizontal line, one vertical column). The output
    grid is generated by combining these four quadrants pixel by pixel according
    to a specific priority rule.
  grid_dimensions:
    input: [11, 9]
    output: [5, 4]
  separators:
    - type: horizontal_line
      color: yellow
      index: 5
    - type: vertical_column
      color: yellow
      index: 4
elements:
  - object: quadrant
    attributes:
      - name: upper_left (UL)
        location: rows 0-4, cols 0-3
        size: [5, 4]
      - name: upper_right (UR)
        location: rows 0-4, cols 5-8
        size: [5, 4]
      - name: lower_left (LL)
        location: rows 6-10, cols 0-3
        size: [5, 4]
      - name: lower_right (LR)
        location: rows 6-10, cols 5-8
        size: [5, 4]
  - object: output_grid
    attributes:
      size: [5, 4]
relationships:
  - type: derived_from
    source: [UL, UR, LL, LR]
    target: output_grid
    details: >
      Each pixel in the output grid is determined by the corresponding pixel
      in the four input quadrants.
actions:
  - action: split_input
    details: >
      Divide the input grid into four 5x4 quadrants (UL, UR, LL, LR) using the
      yellow line at row 5 and yellow column at column 4 as separators. The
      separators themselves are discarded.
  - action: combine_quadrants
    details: >
      Create the output grid pixel by pixel. For each coordinate (r, c):
      Check the pixel colors at (r, c) in the quadrants LR, UL, UR, LL in that order.
      The output pixel at (r, c) takes the color of the first non-white pixel found.
      If all corresponding pixels in the quadrants are white (0), the output pixel is white (0).
    priority_order: [LR, UL, UR, LL] # Highest to lowest