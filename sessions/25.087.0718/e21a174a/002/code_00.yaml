task_description: Processes a grid by identifying distinct non-background colored objects, flipping each object vertically within its bounding box, and repositioning the flipped object based on a vertical inversion of its original bounding box position relative to the grid height.

grid_properties:
  - background_color: 0 (white)
  - grid_size: Variable, consistent between input and output for each example. (Ex1: 13x13, Ex2: 13x13, Ex3: 7x7)

object_properties:
  - type: Contiguous areas of non-background pixels.
  - identification: Based on color and connectivity (adjacency, including diagonals).
  - colors_observed: [blue, red, green, yellow, gray, azure, orange, magenta] (across different examples)
  - treatment: Each object is processed independently.

actions:
  - find_objects: Identify all distinct contiguous blocks of non-background color.
  - get_bounding_box: For each identified object, determine its minimum bounding rectangle (top_row, bottom_row, left_col, right_col).
  - extract_object_pixels: Create a subgrid containing only the pixels of the object within its bounding box, with other pixels in the subgrid set to the background color.
  - flip_object_vertically: Reverse the order of rows within the extracted object subgrid.
  - calculate_new_position: Determine the new top row for the object's bounding box in the output grid using the formula: `new_top_row = grid_height - old_top_row - object_bounding_box_height`. The left column remains unchanged.
  - place_object: Insert the vertically flipped object subgrid into the output grid at the calculated `new_top_row` and original `left_col`. Start with a background-filled grid and progressively add each transformed object.