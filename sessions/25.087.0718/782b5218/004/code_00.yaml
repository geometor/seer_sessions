Task:
  Description: Apply one of three prioritized rules based on grid properties involving the color red (2) and the background color white (0).
  Key_Color: 2 (Red)
  Background_Color: 0 (White)

Rules:
  - Rule_Name: Solid Row Separation (Priority 1)
    Conditions:
      - Input grid contains exactly 3 unique colors.
      - Input grid contains at least one horizontal row composed entirely of the Key_Color (Red).
    Action:
      - Create a new grid of the same size.
      - Identify the 'third color' (the one that is not Background or Key_Color).
      - Identify the index `sr` of the first (topmost) solid Key_Color row.
      - Fill rows 0 to `sr-1` with Background_Color (White).
      - Fill row `sr` with Key_Color (Red).
      - Fill rows `sr+1` to end with the 'third color'.

  - Rule_Name: Fixed Diagonal Pattern (Priority 2)
    Conditions:
      - Rule 1 conditions are NOT met.
      - Input grid contains exactly 3 unique colors.
      - ALL pixels of the Key_Color (Red) in the input grid are located at positions `(r, c)` where `r = c + 1` OR `r = c + 2`.
    Action:
      - Create a new grid of the same size.
      - Identify the 'third color'.
      - Fill pixels based on position relative to the diagonal band `r=c+1` and `r=c+2`:
        - `r < c + 1`: Fill with Background_Color (White).
        - `r == c + 1` or `r == c + 2`: Fill with Key_Color (Red).
        - `r > c + 2`: Fill with the 'third color'.

  - Rule_Name: Column Filter with Downward Propagation (Priority 3 / Default)
    Conditions:
      - Neither Rule 1 nor Rule 2 conditions are met.
    Action:
      - Create a new grid, initially a copy of the input grid.
      - Process each column independently:
        - Find the row index `mr` of the topmost (minimum row index) Key_Color (Red) pixel in the column.
        - If no Key_Color pixel exists in the column, the column remains unchanged.
        - If a Key_Color pixel exists at `mr`:
          - Change all pixels in that column in rows `0` to `mr-1` to Background_Color (White).
          - Keep the pixel at `(mr, col)` as Key_Color (Red).
          - For rows `r` from `mr + 1` down to the bottom of the grid:
            - If the pixel at `(r, col)` in the *current output grid state* is Background_Color (White), change it to the color of the pixel directly above it at `(r-1, col)` in the *output grid*. (Effectively propagating the color from `(mr, col)` downwards through any background cells).
            - Otherwise (if the pixel is not Background_Color), leave it unchanged.

Grid_Properties:
  - Size: Height and Width (variable, up to 30x30).
  - Pixels: Cells containing integer values 0-9 representing colors.
  - Objects: Contiguous blocks of same-colored pixels can be considered objects. Specific objects identified are horizontal rows and diagonal bands.

Colors:
  - Involved: White (0), Red (2), and potentially one other 'third color' depending on the rule. Examples show Blue (1), Gray (5), Azure (8) as third colors.