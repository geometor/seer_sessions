task_description: Recolors specific pixels within a bounded area based on their quadrant relative to the area's center, using colors defined by a separate 2x2 key.

components:
  - object: Grid
    description: A 2D array of pixels with colors represented by integers 0-9.
  - object: Key
    description: A 2x2 block of pixels located somewhere in the input grid.
    properties:
      - All four pixels have colors other than white (0) and azure (8).
      - Its position is constant between input and output.
      - Contains four colors defining the transformation: Key-TL, Key-TR, Key-BL, Key-BR.
  - object: Frame
    description: A rectangular border, one pixel thick, composed entirely of azure (8) pixels.
    properties:
      - Encloses the Target Area.
      - Its position and color (azure) are constant between input and output.
  - object: Target Area
    description: The rectangular region strictly inside the Frame.
    properties:
      - Contains pixels that may be modified.
      - Background pixels are typically white (0).
      - Contains pixels of the Source Color.
      - Center point determines the four quadrants (TL, TR, BL, BR).
      - Dimensions (height, width) are used to calculate the center.
  - object: Source Color Pixels
    description: Pixels within the Target Area having the Source Color.
    properties:
      - Their color value matches exactly one of the colors present in the Key.
      - They are not white (0).
  - object: Quadrants
    description: Four equal or near-equal rectangular regions dividing the Target Area based on its center.
    properties:
      - Top-Left (TL)
      - Top-Right (TR)
      - Bottom-Left (BL)
      - Bottom-Right (BR)
      - A pixel belongs to one quadrant based on its row and column relative to the center row/column.

actions:
  - action: Locate Key
    actor: System
    input: Input Grid
    output: 4 key colors (Key-TL, Key-TR, Key-BL, Key-BR), Key location (optional)
    description: Find the unique 2x2 block where no pixel is white (0) or azure (8).
  - action: Identify Frame Bounds
    actor: System
    input: Input Grid
    output: Frame bounding box (min_row, min_col, max_row, max_col)
    description: Find the minimum and maximum row/column indices of all azure (8) pixels.
  - action: Define Target Area
    actor: System
    input: Frame bounding box
    output: Target Area bounds (top, left, bottom, right)
    description: Calculate the area strictly inside the frame (frame_min_row+1, frame_min_col+1, frame_max_row-1, frame_max_col-1).
  - action: Identify Source Color
    actor: System
    input: Input Grid, Key colors, Target Area bounds
    output: Source Color value
    description: Find the unique color (not white 0) present both within the Key colors and within the Target Area pixels.
  - action: Determine Quadrant Mapping
    actor: System
    input: Target Area bounds
    output: Center row/column, Quadrant definitions
    description: Calculate the center of the Target Area. Define which row/column ranges correspond to TL, TR, BL, BR quadrants. Midpoint row = top + height // 2. Midpoint col = left + width // 2. Rows < midpoint row are Top. Columns < midpoint col are Left.
  - action: Recolor Pixels
    actor: System
    input: Input Grid (copied), Source Color, Target Area bounds, Quadrant Mapping, Key Colors
    output: Output Grid
    description: Iterate through pixels within the Target Area. If a pixel matches the Source Color, change its color in the copied grid to the Key color corresponding to its quadrant (TL -> Key-TL, TR -> Key-TR, BL -> Key-BL, BR -> Key-BR).