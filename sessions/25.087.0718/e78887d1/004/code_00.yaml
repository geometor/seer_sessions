task_description: Identify horizontal strips of non-white pixels separated by all-white rows, select one strip based on a specific criterion, and potentially modify it to produce the output.

definitions:
  - name: grid
    type: 2D array of integers (0-9) representing colors.
  - name: white_pixel
    value: 0
  - name: non_white_pixel
    value: 1-9
  - name: white_row
    type: A row in the grid where all pixels are white_pixel.
  - name: strip
    type: A contiguous subgrid consisting of one or more rows located between two white_rows (or grid boundaries).

observations:
  - all_examples:
      input_contains_strips: Yes, separated by horizontal white_rows.
      output_is_a_grid: Yes.
      output_dimensions_match_input_strip: Yes, the output grid always has the same height and width as at least one of the input strips.
  - example_1:
      input_strips: 3 strips, all shape (3, 11).
      strip_non_white_counts: [18, 18, 18]
      strip_sums: [37, 37, 34]
      output: Exact copy of the first (topmost) input strip.
      selection_rule_match: Matches "Max Non-White Count, Topmost tiebreak". Matches "Max Sum, Max Non-White tiebreak, Topmost tiebreak".
  - example_2:
      input_strips: 2 strips, all shape (3, 11).
      strip_non_white_counts: [15, 15]
      strip_sums: [30, 30]
      output: Different content from both input strips.
      output_non_white_count: 15 (matches input strips)
      output_sum: 30 (matches input strips)
      selection_rule_match: Does not match simple selection. Implies modification of a selected strip (likely Strip 1 based on tiebreaks).
  - example_3:
      input_strips: 1 strip, shape (3, 15).
      strip_non_white_counts: [20]
      strip_sums: [59]
      output: Different content from the input strip.
      output_non_white_count: 20 (matches input strip)
      output_sum: 53 (differs from input strip sum)
      selection_rule_match: Does not match simple selection. Implies modification.
  - example_4:
      input_strips: 2 strips, all shape (3, 15).
      strip_non_white_counts: [21, 21]
      strip_sums: [56, 58]
      output: Different content from both input strips.
      output_non_white_count: 21 (matches input strips)
      output_sum: 57 (differs from both input strip sums)
      selection_rule_match: Does not match simple selection. Max Sum rule selects Strip 2. Output differs. Implies modification.

derived_properties:
  - modification_preserves_non_white_count: Yes, in all examples where output differs from input strip, the non-white pixel count is preserved.
  - modification_preserves_sum: No, Examples 3 and 4 show the sum changes.

hypotheses:
  - selection_criterion: Max Sum, with tiebreaks (Max Non-White count, then Topmost). This selects Strip 1 (Ex 1, 2, 3) and Strip 2 (Ex 4).
  - transformation: The selected strip undergoes a modification that preserves the non-white pixel count but can alter the sum and pixel positions/colors. The exact modification rule is unclear but likely depends on the internal structure/patterns within the selected strip.