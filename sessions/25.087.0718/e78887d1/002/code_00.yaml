task_description: Identify horizontal strips and select one based on pixel counts.
input_features:
  - grid: 2D array of integers (colors 0-9).
  - objects:
      - horizontal_strips: Contiguous blocks of rows separated by rows containing only the white color (0).
      - pixels: Individual cells with a color value.
      - background: white pixels (0).
      - content: non-white pixels (1-9).
properties:
  - strip_height: Number of rows in a strip. (Seems constant within examples, always 3).
  - strip_width: Number of columns in a strip (same as grid width).
  - non_white_pixel_count: The number of pixels in a strip with values 1 through 9.
  - position: Row index where a strip starts.
actions:
  - identify_strips: Scan the input grid vertically, using rows composed entirely of white pixels (0) as delimiters to define the start and end rows of each strip.
  - count_pixels: For each identified strip, count the number of non-white pixels.
  - select_strip: Choose one strip based on a criterion applied to the counts and positions.
      - current_code_criterion: Select the strip with the maximum non-white pixel count. If there's a tie, select the strip that appears highest (minimum starting row index).
  - output_strip: Return the selected strip as the output grid.
observations:
  - All examples contain strips of height 3.
  - Separator rows are always fully white (0).
  - The selection criterion "max non-white count, topmost tiebreak" correctly identifies the output grid for Example 1 only.
  - For Examples 2, 3, and 4, the grid selected by this rule does *not* match the expected output grid.
  - The non-white pixel count of the expected output grid consistently matches the minimum (and in these cases, also maximum) non-white pixel count found among the input strips.
uncertainties:
  - The correct rule for selecting the strip or transforming it to match the expected output for examples 2, 3, and 4 is unclear. The relationship between the input strips and the expected output in these cases needs further investigation.