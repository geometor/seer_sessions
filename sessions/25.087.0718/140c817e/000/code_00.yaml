task_context:
  grid_properties:
    - dimensions_preserved: True # Output grid has same height/width as input
    - background_color_preserved: True # The dominant color in input remains in output where no pattern is drawn
  objects:
    - object_type: background
      description: The single dominant color filling most of the input grid. Color varies between examples (azure=8, maroon=9, orange=7).
    - object_type: source_pixel
      color: blue (1)
      description: Isolated single pixels in the input grid. Their locations trigger the transformation.
    - object_type: horizontal_line
      color: blue (1)
      description: Drawn in the output grid across the full width at the row of each source_pixel.
    - object_type: vertical_line
      color: blue (1)
      description: Drawn in the output grid across the full height at the column of each source_pixel.
    - object_type: center_marker
      color: red (2)
      description: Replaces the source_pixel location in the output grid.
    - object_type: diagonal_markers
      color: green (3)
      description: Placed at the four diagonal neighbors of the center_marker in the output grid.
  relationships_and_actions:
    - action: identify
      actor: system
      target: source_pixels (color blue=1) in the input grid.
      result: A list of coordinates (row, col) for each source_pixel.
    - action: initialize_output
      actor: system
      source: input_grid
      result: Output grid starts as a copy of the input grid.
    - action: draw_lines
      actor: system
      trigger: Each identified source_pixel coordinate (r, c).
      target: output_grid
      details:
        - Draw a horizontal line of blue (1) at row r.
        - Draw a vertical line of blue (1) at column c.
      note: Lines overwrite the initial background/source pixels. Intersections of lines are blue (1).
    - action: place_markers
      actor: system
      trigger: Each identified source_pixel coordinate (r, c).
      target: output_grid
      details:
        - Place a center_marker (red=2) at (r, c).
        - Place diagonal_markers (green=3) at (r-1, c-1), (r-1, c+1), (r+1, c-1), (r+1, c+1), checking for grid boundaries.
      note: These markers overwrite any existing color (including blue lines) at their locations. This action occurs after draw_lines.
