import numpy as np

def analyze_example(input_grid, output_grid):
    input_grid = np.array(input_grid)
    output_grid = np.array(output_grid)
    input_shape = input_grid.shape
    output_shape = output_grid.shape
    input_nonzero_count = np.count_nonzero(input_grid)
    output_nonzero_count = np.count_nonzero(output_grid)

    print(f"Input Shape: {input_shape}")
    print(f"Output Shape: {output_shape}")
    print(f"Input Non-zero Count: {input_nonzero_count}")
    print(f"Output Non-zero Count: {output_nonzero_count}")
    print("Input Grid:")
    print(input_grid)
    print("Output Grid:")
    print(output_grid)

    # Previous transform for comparison
    pred_output = transform(input_grid)    
    print("Predicted Output:")
    print(pred_output)

    print("Matches Expected:", np.array_equal(pred_output, output_grid))
    diff = output_grid - pred_output
    print("Difference (Expected - Predicted):")
    print(diff)
    print("-" * 20)


examples = [
    ([[5, 0, 0], [0, 5, 0], [0, 0, 5]], [[5, 0, 0, 0, 0, 0], [0, 5, 0, 0, 0, 0], [0, 0, 5, 0, 0, 0], [0, 0, 0, 5, 0, 0], [0, 0, 0, 0, 5, 0], [0, 0, 0, 0, 0, 5]]),
    ([[0, 7, 0], [0, 0, 0], [0, 0, 9]], [[0, 0, 0, 0, 0, 0], [0, 7, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 9, 0], [0, 0, 0, 0, 0, 0]]),
    ([[6, 6], [6, 0]], [[6, 6, 6, 0], [6, 6, 6, 0], [6, 6, 0, 0], [0, 0, 0, 0]]),
]

for i, (input_grid, output_grid) in enumerate(examples):
    print(f"Example {i + 1}:")
    analyze_example(input_grid, output_grid)