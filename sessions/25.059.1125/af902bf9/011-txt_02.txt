import numpy as np

def describe_grid(grid):
    """
    Provides a description of objects in a grid.
    """

    object_descriptions = {}

    for value in np.unique(grid):
        if value == 0: continue
        object_descriptions[str(value)] = {}

        pixels = np.argwhere(grid == value)
        min_row, min_col = np.min(pixels, axis=0)
        max_row, max_col = np.max(pixels, axis=0)
        top_left = (min_row, min_col)
        bottom_right = (max_row, max_col)
        height = max_row - min_row + 1
        width = max_col - min_col + 1
        object_descriptions[str(value)]['tl'] = top_left.tolist() # convert ndarray to list
        object_descriptions[str(value)]['br'] = bottom_right.tolist() # convert ndarray to list
        object_descriptions[str(value)]['height'] = int(height)
        object_descriptions[str(value)]['width'] = int(width)

    return object_descriptions

task = 'training'
for example in task_data[task]:
    input_grid = np.array(example['input'])
    output_grid = np.array(example['output'])

    input_description = describe_grid(input_grid)
    output_description = describe_grid(output_grid)

    print(f"Example: {example}")
    print(f"Input Description: {input_description}")
    print(f"Output Description: {output_description}")