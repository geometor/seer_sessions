{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3419,
        "candidates": 575,
        "total": 3994,
        "cached": 0
      },
      "response_time": 9.226398
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 3856,
        "candidates": 342,
        "total": 4198,
        "cached": 0
      },
      "response_time": 4.138786
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 611,
        "total": 2408,
        "cached": 0
      },
      "response_time": 8.328944
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2269,
        "candidates": 179,
        "total": 2448,
        "cached": 0
      },
      "response_time": 2.8052
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1430,
        "candidates": 1077,
        "total": 2507,
        "cached": 0
      },
      "response_time": 12.739224
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2308,
        "candidates": 274,
        "total": 2582,
        "cached": 0
      },
      "response_time": 3.304345
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1525,
        "candidates": 768,
        "total": 2293,
        "cached": 0
      },
      "response_time": 9.96263
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2090,
        "candidates": 363,
        "total": 2453,
        "cached": 0
      },
      "response_time": 3.521185
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 452,
        "total": 2289,
        "cached": 0
      },
      "response_time": 6.712585
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2151,
        "candidates": 363,
        "total": 2514,
        "cached": 0
      },
      "response_time": 27.038075
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1614,
        "candidates": 965,
        "total": 2579,
        "cached": 0
      },
      "response_time": 14.80802
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2371,
        "candidates": 362,
        "total": 2733,
        "cached": 0
      },
      "response_time": 5.23318
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1613,
        "candidates": 2257,
        "total": 3870,
        "cached": 0
      },
      "response_time": 20.722768
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3666,
        "candidates": 533,
        "total": 4199,
        "cached": 0
      },
      "response_time": 6.076005
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 409,
        "total": 2286,
        "cached": 0
      },
      "response_time": 6.965378
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2148,
        "candidates": 337,
        "total": 2485,
        "cached": 0
      },
      "response_time": 4.244935
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1588,
        "candidates": 777,
        "total": 2365,
        "cached": 0
      },
      "response_time": 11.29797
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2161,
        "candidates": 462,
        "total": 2623,
        "cached": 0
      },
      "response_time": 5.578315
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1713,
        "candidates": 3293,
        "total": 5006,
        "cached": 0
      },
      "response_time": 30.944972
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 4802,
        "candidates": 827,
        "total": 5629,
        "cached": 0
      },
      "response_time": 8.1334
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 1\n0 1 0\n1 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 85.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0\n0 1 0 1\n1 0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1\n0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0\n0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 1 0 0\n0 1 0 0\n0 1 0 0\n0 1 0 0\n0 1 0 0\n0 1 0 0\n0 1 0 0\n0 1 0 0\n0 1 0 0\n0 1 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 14,
        "percent_correct": 65.0
      }
    ],
    "014-py_07-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "016-py_08-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 1\n0 1 0\n1 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 85.0
      }
    ],
    "018-py_09-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 55.00000000000001
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 1\n0 1 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 82.5
      }
    ],
    "019-py_10-train": [],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0\n0 1\n1 0",
        "transformed_output": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 1\n0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 55.00000000000001
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0\n0 1 0\n0 0 1\n0 1 0\n1 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 1\n0 1 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0\n0 1 0 0\n0 0 1 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n1 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 1 0\n0 1 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 82.5
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}