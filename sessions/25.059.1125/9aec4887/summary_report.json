{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4631,
        "candidates": 643,
        "total": 5274,
        "cached": 0
      },
      "response_time": 10.137353
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 5136,
        "candidates": 1400,
        "total": 6536,
        "cached": 0
      },
      "response_time": 14.484122
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2269,
        "candidates": 959,
        "total": 3228,
        "cached": 0
      },
      "response_time": 11.071739
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3086,
        "candidates": 936,
        "total": 4022,
        "cached": 0
      },
      "response_time": 10.065964
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2187,
        "candidates": 1547,
        "total": 3734,
        "cached": 0
      },
      "response_time": 16.683272
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3531,
        "candidates": 1330,
        "total": 4861,
        "cached": 0
      },
      "response_time": 11.994401
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 2581,
        "candidates": 1499,
        "total": 4080,
        "cached": 0
      },
      "response_time": 17.778224
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 3879,
        "candidates": 1350,
        "total": 5229,
        "cached": 0
      },
      "response_time": 12.070859
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2215,
        "candidates": 475,
        "total": 2690,
        "cached": 0
      },
      "response_time": 7.37652
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2554,
        "candidates": 1394,
        "total": 3948,
        "cached": 0
      },
      "response_time": 12.027855
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2647,
        "candidates": 4357,
        "total": 7004,
        "cached": 0
      },
      "response_time": 41.31822
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4309,
        "candidates": 1120,
        "total": 5429,
        "cached": 0
      },
      "response_time": 12.399017
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 5227,
        "candidates": 1027,
        "total": 6254,
        "cached": 0
      },
      "response_time": 9.248401
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 6801,
        "candidates": 695,
        "total": 7496,
        "cached": 0
      },
      "response_time": 6.763007
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2239,
        "candidates": 586,
        "total": 2825,
        "cached": 0
      },
      "response_time": 8.870614
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2686,
        "candidates": 768,
        "total": 3454,
        "cached": 0
      },
      "response_time": 7.412874
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2018,
        "candidates": 2367,
        "total": 4385,
        "cached": 0
      },
      "response_time": 23.380966
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2118,
        "candidates": 3423,
        "total": 5541,
        "cached": 0
      },
      "response_time": 31.827857
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 5340,
        "candidates": 788,
        "total": 6128,
        "cached": 0
      },
      "response_time": 7.187639
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 4183,
        "candidates": 820,
        "total": 5003,
        "cached": 0
      },
      "response_time": 8.21153
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 8 4 2 1 0\n8 8 4 2 1 8\n3 3 3 3 3 3\n0 8 4 2 1 0\n0 8 4 2 1 0\n0 8 4 2 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 29,
        "percent_correct": 19.444444444444446
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 8 3 6 4 0\n8 8 3 6 4 8\n2 2 2 2 2 2\n0 8 3 6 4 0\n0 8 3 6 4 0\n0 8 3 6 4 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 7 4 6 1 0\n7 7 4 6 1 7\n8 8 8 8 8 8\n0 7 4 6 1 0\n0 7 4 6 1 0\n0 7 4 6 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 8 0 1\n2 0 8 8 0 1\n2 0 0 0 8 1\n0 3 3 3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 86.11111111111111
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 4 4 4 4 0\n2 8 0 0 8 0\n2 0 8 8 0 0\n2 0 8 8 0 0\n2 0 0 0 8 0\n0 3 3 3 3 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 4 4 4 4 0\n0 8 0 0 8 1\n0 0 8 8 0 1\n0 0 8 8 0 1\n0 0 0 0 8 1\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 41.66666666666667
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 4 4 4 4 0\n2 8 0 0 0 1\n2 0 0 0 0 1\n2 0 0 0 0 1\n2 0 0 0 0 1\n0 3 3 3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 4 4 4 4 0\n2 8 0 0 0 0\n2 0 0 0 0 0\n2 0 0 0 0 0\n2 0 0 0 0 0\n0 3 3 3 3 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 4 4 4 4 0\n0 8 0 0 0 1\n0 0 0 0 0 1\n0 0 0 0 0 1\n0 0 0 0 0 1\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 30.555555555555557
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 4 4 4 4 0\n2 8 0 0 0 1\n2 0 0 0 0 1\n2 0 0 0 0 1\n2 0 0 0 0 1\n0 3 3 3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 4 4 4 4 0\n2 0 8 0 0 1\n2 8 0 0 8 1\n2 0 0 0 0 1\n2 0 8 0 8 1\n0 3 3 3 3 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 4 4 4 4 0\n2 8 8 0 0 1\n2 0 8 0 8 1\n2 0 8 0 0 1\n2 8 8 0 0 1\n0 3 3 3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 23,
        "percent_correct": 36.11111111111111
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 8 8 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n0 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 28.000000000000004
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0\n0 0 8 0 0\n0 0 8 8 0\n0 0 0 8 0\n0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 8 8 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n0 8 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 28.000000000000004
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0\n0 0 8 0 0\n0 0 8 8 0\n0 0 0 8 0\n0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "013-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 8 0 8 0\n0 8 0 8 0\n0 8 0 8 0\n0 8 0 8 0\n0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 0 0 0 0\n0 6 0 6 0\n0 6 0 6 0\n0 6 0 6 0\n0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 20.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 4 0 4 0\n0 4 0 4 0\n0 4 0 4 0\n0 4 0 4 0\n0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 0 0 0 0\n0 1 0 3 0\n0 1 0 3 0\n0 2 0 4 0\n0 2 0 4 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 0 0 0 0\n0 2 0 4 0\n0 2 0 4 0\n0 3 0 6 0\n0 3 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 20.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 0 0 0 0\n0 1 0 6 0\n0 1 0 6 0\n0 4 0 7 0\n0 4 0 7 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n8 0 0 8 0 0 0 0 0 0\n0 8 0 8 0 0 0 0 0 0\n8 8 8 8 0 0 0 0 0 0\n0 8 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 4 4 4 0\n0 0 0 0 2 0 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 8 0\n0 8 8 8\n0 0 8 8\n0 0 0 0\n0 0 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 7 7 7 7 0 0 0\n4 0 0 0 0 6 0 0\n4 0 0 0 0 6 0 0\n4 0 0 0 0 6 0 0\n4 0 0 0 0 6 0 0\n0 1 1 1 1 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 8\n0 0 0 0 0 8 8 0\n0 0 0 0 0 8 0 8\n0 0 0 0 8 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "017-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n8 0 0 8 0 0 0 0 0 0\n0 8 0 8 0 0 0 0 0 0\n8 8 8 8 0 0 0 0 0 0\n0 8 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 4 4 4 0\n0 0 0 0 2 0 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 8 0\n0 8 8 8\n0 0 8 8\n0 0 0 0\n0 0 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 7 7 7 7 0 0 0\n4 0 0 0 0 6 0 0\n4 0 0 0 0 6 0 0\n4 0 0 0 0 6 0 0\n4 0 0 0 0 6 0 0\n0 1 1 1 1 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 8\n0 0 0 0 0 8 8 0\n0 0 0 0 0 8 0 8\n0 0 0 0 8 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "017-py_12-train": [],
    "018-py_13-train": [],
    "019-py_14-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0\n8 0 0 8 0 0 0 0 0 0\n0 8 0 8 0 0 0 0 0 0\n8 8 8 8 0 0 0 0 0 0\n0 8 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 4 4 4 0\n0 0 0 0 2 0 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 8 0\n0 8 8 8\n0 0 8 8\n0 0 0 0\n0 0 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "0 7 7 7 7 0 0 0\n4 0 0 0 0 6 0 0\n4 0 0 0 0 6 0 0\n4 0 0 0 0 6 0 0\n4 0 0 0 0 6 0 0\n0 1 1 1 1 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 8\n0 0 0 0 0 8 8 0\n0 0 0 0 0 8 0 8\n0 0 0 0 8 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "020-py_15-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 8 0 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 8 8 8 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 8 0 8 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 4 4 4 4 0 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 2 0 0 0 0 1 0 0 0 0\n0 0 0 0 0 0 0 3 3 3 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 4 4 4 0\n2 8 0 0 8 1\n2 0 8 0 1 1\n2 2 8 8 1 1\n2 0 3 0 8 1\n0 3 3 3 3 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 8 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 3 3 3 0 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 6 0 0 0 4 0 0 0 0 0 0 0 0 0 0\n0 0 2 2 2 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 3 3 0\n6 0 3 0 4\n6 6 8 4 4\n6 0 2 8 4\n0 2 2 2 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 7 7 7 7 0 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 4 0 0 0 0 6 0 0 0 0 0 0 0\n0 0 0 1 1 1 1 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 8 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 7 7 7 7 0\n4 8 7 0 8 6\n4 0 8 8 0 6\n4 0 8 0 6 6\n4 8 1 0 8 6\n0 1 1 1 1 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}