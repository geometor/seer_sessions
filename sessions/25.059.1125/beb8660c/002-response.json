{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe transformation takes the horizontal colored lines from the input, reverses their order of appearance from top-left to bottom-right, and stacks them at the bottom of the output grid. The remaining space at the top is filled with 0.\n\"\"\"\n\nimport numpy as np\n\ndef find_lines(grid):\n    # Find all horizontal lines of contiguous pixels with the same color.\n    lines = []\n    rows, cols = grid.shape\n    for r in range(rows):\n        c = 0\n        while c < cols:\n            if grid[r, c] != 0:\n                color = grid[r, c]\n                start_c = c\n                while c < cols and grid[r, c] == color:\n                    c += 1\n                lines.append(((r, start_c), color, c - start_c))  # ((row, col), color, length)\n            else:\n                c += 1\n    return lines\n\ndef transform(input_grid):\n    # initialize output_grid\n    input_grid = np.array(input_grid)\n    rows, cols = input_grid.shape\n    output_grid = np.zeros_like(input_grid)\n\n    # Find lines in input grid\n    lines = find_lines(input_grid)\n\n    # Reverse the order of lines\n    lines.reverse()\n\n    # Stack lines at the bottom of output_grid\n    current_row = rows - 1\n    for (start_r, start_c), color, length in lines:\n        output_grid[current_row, 0:length] = color\n        current_row -= 1\n\n    return output_grid.tolist()\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3849,
    "candidates_token_count": 382,
    "total_token_count": 4231,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.551305,
  "response_file": "002-response.json"
}