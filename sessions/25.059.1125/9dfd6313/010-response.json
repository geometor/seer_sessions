{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe non-white pixels are changing their positions based on a 90 degree clockwise rotation centered around the gray pixels. The values are copied into their new locations.\n\"\"\"\n\nimport numpy as np\n\ndef get_non_zero_pixels(grid):\n    \"\"\"\n    Finds the coordinates of non-zero pixels in the grid.\n    \"\"\"\n    coords = []\n    for row_idx, row in enumerate(grid):\n        for col_idx, value in enumerate(row):\n            if value != 0:\n                coords.append(((row_idx, col_idx), value))\n    return coords\n\ndef rotate_point(point, center):\n    \"\"\"Rotates a point 90 degrees clockwise around a center point.\"\"\"\n    row, col = point\n    center_row, center_col = center\n    new_row = center_row + (col - center_col)\n    new_col = center_col - (row - center_row)\n    return (new_row, new_col)\n\n\ndef transform(input_grid):\n    # initialize output_grid\n    output_grid = np.zeros_like(input_grid)\n\n    # Get non-zero pixels and their values.\n    non_zero_pixels = get_non_zero_pixels(input_grid)\n\n    # Find the centroid of non-zero pixels.\n    rows = [coord[0][0] for coord in non_zero_pixels]\n    cols = [coord[0][1] for coord in non_zero_pixels]\n    center_row = sum(rows) / len(rows)\n    center_col = sum(cols) / len(cols)\n    center = (center_row, center_col)\n\n\n    # Rotate each non-zero pixel and update the output grid.\n    for (row, col), value in non_zero_pixels:\n      rotated_coords = rotate_point((row, col), center)\n      output_grid[rotated_coords] = value\n\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2111,
    "candidates_token_count": 453,
    "total_token_count": 2564,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.959465,
  "response_file": "010-response.json"
}