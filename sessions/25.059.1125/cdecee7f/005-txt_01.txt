import numpy as np

def show_grid(grid, title):
    print(f" {title} ".center(21, "-"))
    for row in grid:
        print("[", end="")
        for i, pixel in enumerate(row):
            print(f"{pixel:2}", end="") if i < len(row)-1 else print(f"{pixel:2}", end="")
        print("]")
    print()
    
def analyze_example(input_grid, expected_output, actual_output):

    # Metrics
    input_non_zero = np.count_nonzero(input_grid)
    expected_non_zero = np.count_nonzero(expected_output)
    actual_non_zero = np.count_nonzero(actual_output)

    print(f"Input Non-zero Pixels: {input_non_zero}")
    print(f"Expected Non-zero Pixels: {expected_non_zero}")
    print(f"Actual Non-zero Pixels: {actual_non_zero}")

    show_grid(input_grid, "Input Grid")
    show_grid(expected_output, "Expected Output")
    show_grid(actual_output, "Actual Output")

# Example Usage (substitute with actual data from the task)

examples = [
    (
        np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]),
        np.array([[1, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]]),
        np.array([[1, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]])
    ),
    (
       np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]),
        np.array([[3, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]]),
        np.array([[3, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]])
    ),
    (
       np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 2, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]),
        np.array([[2, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]]),
        np.array([[2, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]])
    ),
    (
       np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 5, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]),
        np.array([[5, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]]),
        np.array([[5, 0, 0],
                  [0, 0, 0],
                  [0, 0, 0]])
    )
]

for input_grid, expected_output, actual_output in examples:
  analyze_example(input_grid, expected_output, actual_output)