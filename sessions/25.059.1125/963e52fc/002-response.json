{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe input grid's horizontal band is extended by doubling it's width and adding a padding of 0 at the beginning and at the end.\n\"\"\"\n\nimport numpy as np\n\ndef find_horizontal_band(grid):\n    \"\"\"Finds the horizontal band of non-zero values in a grid.\"\"\"\n    for i, row in enumerate(grid):\n        non_zero_indices = np.nonzero(row)[0]\n        if len(non_zero_indices) > 0:\n            # Check if contiguous\n            if np.all(np.diff(non_zero_indices) == 1):\n                start_column = non_zero_indices[0]\n                end_column = non_zero_indices[-1]\n                length = end_column - start_column + 1\n                row_index = i\n                return start_column, end_column, length, row_index\n    return None, None, None, None\n\ndef transform(input_grid):\n    \"\"\"Transforms the input grid by extending its horizontal band.\"\"\"\n    # Find the horizontal band in the input grid\n    start_column, end_column, length, row_index = find_horizontal_band(input_grid)\n\n    # if no band found, return an empty grid\n    if length is None:\n        return np.zeros_like(input_grid)\n\n    # Calculate the new width\n    new_width = 2 * length + 2\n\n    # Create the extended output band\n    input_band = input_grid[row_index, start_column:end_column+1]\n    extended_band = np.concatenate([input_band, input_band])\n\n    # Create output grid\n    output_grid = np.zeros((input_grid.shape[0], new_width), dtype=int)\n\n    # Populate the output grid with the extended band\n    output_grid[row_index, 1:new_width-1] = extended_band\n    \n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 4045,
    "candidates_token_count": 449,
    "total_token_count": 4494,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 6.291518,
  "response_file": "002-response.json"
}