import numpy as np

def analyze_transformation(input_grid, output_grid):
    """Analyzes the transformation to identify seed and fill colors."""
    input_grid = np.array(input_grid)
    output_grid = np.array(output_grid)
    rows, cols = input_grid.shape
    seed_colors = set()
    fill_color = None

    for row in range(rows):
        for col in range(cols):
            if input_grid[row, col] == 0 and output_grid[row, col] != 0:
                fill_color = output_grid[row,col]
                neighbors = []
                if row > 0:
                    neighbors.append((row - 1, col))
                if row < rows - 1:
                    neighbors.append((row + 1, col))
                if col > 0:
                    neighbors.append((row, col - 1))
                if col < cols - 1:
                    neighbors.append((row, col + 1))
                for n_row, n_col in neighbors:
                    if input_grid[n_row, n_col] != 0:
                        seed_colors.add(input_grid[n_row, n_col])

    return {
        "seed_colors": list(seed_colors),
        "fill_color": fill_color
    }

examples = [
    ([[5, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0], [0, 0, 5, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 5, 0, 0]], [[5, 1, 1, 1, 1, 1, 1, 5, 1, 1], [1, 1, 5, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 5, 1, 1], [1, 1, 5, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 5, 1, 1]]),
    ([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 0, 0, 0, 0]]),
    ([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 1, 1, 1, 1, 1]])
]

for i, (input_grid, output_grid) in enumerate(examples):
    result = analyze_transformation(input_grid, output_grid)
    print(f"Example {i+1}:")
    print(f"  Seed Colors: {result['seed_colors']}")
    print(f"  Fill Color: {result['fill_color']}")