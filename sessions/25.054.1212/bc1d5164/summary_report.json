{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1805,
        "candidates": 349,
        "total": 2154,
        "cached": 0
      },
      "response_time": 6.291023
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2016,
        "candidates": 317,
        "total": 2333,
        "cached": 0
      },
      "response_time": 4.162824
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2513,
        "candidates": 1024,
        "total": 3537,
        "cached": 0
      },
      "response_time": 13.610412
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3333,
        "candidates": 474,
        "total": 3807,
        "cached": 0
      },
      "response_time": 9.080597
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2950,
        "candidates": 666,
        "total": 3616,
        "cached": 0
      },
      "response_time": 9.922708
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3412,
        "candidates": 619,
        "total": 4031,
        "cached": 0
      },
      "response_time": 6.698935
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1805,
        "candidates": 459,
        "total": 2264,
        "cached": 0
      },
      "response_time": 6.160034
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2126,
        "candidates": 481,
        "total": 2607,
        "cached": 0
      },
      "response_time": 5.081651
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2906,
        "candidates": 960,
        "total": 3866,
        "cached": 0
      },
      "response_time": 10.31183
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3662,
        "candidates": 615,
        "total": 4277,
        "cached": 0
      },
      "response_time": 28.001911
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2638,
        "candidates": 2716,
        "total": 5354,
        "cached": 0
      },
      "response_time": 25.829316
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 5143,
        "candidates": 561,
        "total": 5704,
        "cached": 0
      },
      "response_time": 5.02792
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1805,
        "candidates": 533,
        "total": 2338,
        "cached": 0
      },
      "response_time": 8.907236
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2197,
        "candidates": 757,
        "total": 2954,
        "cached": 0
      },
      "response_time": 8.450747
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2978,
        "candidates": 1535,
        "total": 4513,
        "cached": 0
      },
      "response_time": 17.497675
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 4309,
        "candidates": 727,
        "total": 5036,
        "cached": 0
      },
      "response_time": 7.202153
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2948,
        "candidates": 1244,
        "total": 4192,
        "cached": 0
      },
      "response_time": 15.451666
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3980,
        "candidates": 823,
        "total": 4803,
        "cached": 0
      },
      "response_time": 7.21045
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1805,
        "candidates": 479,
        "total": 2284,
        "cached": 0
      },
      "response_time": 7.892626
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2146,
        "candidates": 697,
        "total": 2843,
        "cached": 0
      },
      "response_time": 7.316251
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2918,
        "candidates": 1373,
        "total": 4291,
        "cached": 0
      },
      "response_time": 14.420789
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 4088,
        "candidates": 727,
        "total": 4815,
        "cached": 0
      },
      "response_time": 6.362306
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 2948,
        "candidates": 1511,
        "total": 4459,
        "cached": 0
      },
      "response_time": 18.241447
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 4253,
        "candidates": 915,
        "total": 5168,
        "cached": 0
      },
      "response_time": 8.12209
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1805,
        "candidates": 372,
        "total": 2177,
        "cached": 0
      },
      "response_time": 5.62731
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2039,
        "candidates": 447,
        "total": 2486,
        "cached": 0
      },
      "response_time": 4.664556
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 2597,
        "candidates": 821,
        "total": 3418,
        "cached": 0
      },
      "response_time": 10.859194
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 3214,
        "candidates": 756,
        "total": 3970,
        "cached": 0
      },
      "response_time": 7.849785
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 3006,
        "candidates": 1417,
        "total": 4423,
        "cached": 0
      },
      "response_time": 15.730917
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 4207,
        "candidates": 662,
        "total": 4869,
        "cached": 0
      },
      "response_time": 5.610806
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "2 2 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "",
        "match": "ERROR: local variable 'output_grid' referenced before assignment",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "",
        "match": "ERROR: local variable 'output_grid' referenced before assignment",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "",
        "match": "ERROR: local variable 'output_grid' referenced before assignment",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "",
        "match": "ERROR: local variable 'output_grid' referenced before assignment",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "",
        "match": "ERROR: local variable 'output_grid' referenced before assignment",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "011-py_06-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "2 2 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 4 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 3 0\n3 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 0 4\n0 0 0\n4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 4\n0 0 0\n4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 0\n8 0 8\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "2 2 2\n0 0 2\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 4 0\n0 0 4\n4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 4\n0 0 0\n4 4 4",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 3 0\n3 0 3\n0 0 3",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "2 2 2\n0 0 2\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 4 0\n0 0 4\n4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 4\n0 0 0\n4 4 4",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 4 4\n0 0 0\n4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 4\n0 0 0\n4 4 4",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "022-py_12-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "8 8 8\n8 8 8\n8 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "2 2 2\n2 2 0\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 4 4\n0 0 0\n4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 4\n0 0 0\n4 4 4",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "3 3 3\n0 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "024-py_13-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "8 0 8\n0 0 0\n8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "2 0 2\n0 0 0\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 0 4\n0 0 0\n4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 4\n0 0 0\n4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "3 0 3\n0 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "026-py_14-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 3 3 0\n3 0 0 3\n0 0 0 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "028-py_15-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 8 0\n8 8 8 8\n8 8 8 8\n0 8 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "2 2 2 2\n0 0 0 2\n0 2 2 0\n2 0 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 4 4 0\n0 0 4 4\n4 0 0 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 4\n4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 3 3 0\n3 0 0 3\n0 0 0 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "030-py_16-train": [
      {
        "example": 1,
        "input": "0 8 0 0 0 8 0\n8 8 0 0 0 8 8\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n0 8 0 0 0 8 0",
        "expected_output": "0 8 0\n8 8 8\n0 8 0",
        "transformed_output": "0 8 8 0\n8 8 8 8\n8 8 8 8\n0 8 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "2 2 0 0 0 2 2\n0 0 0 0 0 0 2\n0 0 0 0 0 0 0\n0 2 0 0 0 2 0\n2 0 0 0 0 0 2",
        "expected_output": "2 2 2\n0 2 2\n2 0 2",
        "transformed_output": "2 2 2 2\n0 0 0 2\n0 2 2 0\n2 0 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 0 0 0 4 0\n0 0 0 0 0 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4",
        "expected_output": "4 4 0\n0 4 4\n4 0 4",
        "transformed_output": "4 4 4 0\n0 0 4 4\n4 0 0 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "4 0 0 0 0 0 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 4 4",
        "expected_output": "4 0 4\n0 0 0\n4 4 4",
        "transformed_output": "4 0 4\n4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 3 0 0 0 3 0\n3 0 0 0 0 0 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3",
        "expected_output": "0 3 0\n3 0 3\n0 0 3",
        "transformed_output": "0 3 3 0\n3 0 0 3\n0 0 0 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 2,
    "total": 5
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}