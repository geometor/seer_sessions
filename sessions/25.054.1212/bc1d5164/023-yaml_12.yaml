task: 022
examples:
  - id: 1
    input_objects:
      - shape: irregular
        color: azure (8)
        bounding_box: [0:1, 0:5] # corrected indices.
    output_objects:
      - shape: irregular
        color: azure (8)
        bounding_box: [0:2, 0:2]
    transformations:
      - type: scale_and_translate
        details: "Non-white pixels are mapped to a 3x3 grid, preserving relative position."
    notes: "Bottom-right pixel misplaced in the initial code's output."

  - id: 2
    input_objects:
      - shape: irregular
        color: red (2)
        bounding_box: [0:4, 0:6]
    output_objects:
        - shape: irregular
          color: red (2)
          bounding_box: [0:2, 0:2]
    transformations:
      - type: scale_and_translate
        details: "Non-white pixels are mapped to a 3x3 grid."
    notes: "Top-right pixel misplaced in the output."

  - id: 3
    input_objects:
      - shape: irregular
        color: yellow (4)
        bounding_box: [0:4, 0:5]
    output_objects:
      - shape: irregular
        color: yellow (4)
        bounding_box: [0:2, 0:2]
    transformations:
      - type: scale_and_translate
        details: Non-white pixels mapped to 3x3.
    notes: "Top-right pixel misplaced."

  - id: 4
    input_objects:
        - shape: irregular
          color: yellow(4)
          bounding_box: [0:4, 0:6]
    output_objects:
      - shape: irregular
        color: yellow (4)
        bounding_box: [0:2, 0:2]
    transformations:
      - type: scale_and_translate
    notes: "Correct transformation."

  - id: 5
    input_objects:
        - shape: irregular
          color: green(3)
          bounding_box: [0:4, 0:5]
    output_objects:
      - shape: irregular
        color: green (3)
        bounding_box: [0:2, 0:2]
    transformations:
      - type: scale_and_translate
    notes: "Multiple pixel misplacements."

general_transformation:
  type: "bounding box and proportional remapping to 3x3"
  description: "A 3x3 grid is created containing all, and only, the colors of the input grid.  The colors are arranged in the output grid proportionally to their positions inside a bounding box fitted to the non-white pixels of the input grid."
