observations:
  - object: input_grid
    type: grid
    properties:
      size: variable
      elements: integers (0-9) representing colors

  - object: output_grid
    type: grid
    properties:
      size: 4x4
      elements: integers (0-9) representing colors
      initial_value: 3 (green)

  - object: target_region
    type: subgrid
    properties:
        size: 4x4
        source: top-left corner of input_grid

  - action: transform
    description: Creates a 4x4 output grid, initially filled with green, and conditionally replaces some green pixels with white pixels based on the positions of white pixels in the input's top-left 4x4 region.
    input: input_grid
    output: output_grid
    rule: |
      The output grid is initialized to all 3s (green).
      '0' values in the input target_region are copied to specific locations of target_region, all other locations are set to 3.

  - transformation_rule:
      condition: "location of 0 in 4x4 input target_region"
      coordinates_to_preserve_0: [(0,3), (1,0), (1,2), (2,2), (2,3), (3,0), (3,2)]  # all coordinates where 0 appears in an output example