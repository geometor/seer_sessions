{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1821,
        "candidates": 588,
        "total": 2409,
        "cached": 0
      },
      "response_time": 7.809084
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2270,
        "candidates": 358,
        "total": 2628,
        "cached": 0
      },
      "response_time": 3.904235
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2508,
        "candidates": 1199,
        "total": 3707,
        "cached": 0
      },
      "response_time": 15.939171
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3498,
        "candidates": 343,
        "total": 3841,
        "cached": 0
      },
      "response_time": 11.807393
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2492,
        "candidates": 705,
        "total": 3197,
        "cached": 0
      },
      "response_time": 7.79003
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2992,
        "candidates": 310,
        "total": 3302,
        "cached": 0
      },
      "response_time": 3.230924
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1821,
        "candidates": 670,
        "total": 2491,
        "cached": 0
      },
      "response_time": 10.647344
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2351,
        "candidates": 293,
        "total": 2644,
        "cached": 0
      },
      "response_time": 4.060075
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2372,
        "candidates": 1075,
        "total": 3447,
        "cached": 0
      },
      "response_time": 11.679995
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3243,
        "candidates": 438,
        "total": 3681,
        "cached": 0
      },
      "response_time": 50.017773
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2585,
        "candidates": 1266,
        "total": 3851,
        "cached": 0
      },
      "response_time": 16.035065
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3648,
        "candidates": 423,
        "total": 4071,
        "cached": 0
      },
      "response_time": 4.756354
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1821,
        "candidates": 642,
        "total": 2463,
        "cached": 0
      },
      "response_time": 7.469853
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2324,
        "candidates": 486,
        "total": 2810,
        "cached": 0
      },
      "response_time": 5.766672
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2634,
        "candidates": 1727,
        "total": 4361,
        "cached": 0
      },
      "response_time": 19.46496
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 4151,
        "candidates": 513,
        "total": 4664,
        "cached": 0
      },
      "response_time": 5.259397
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2660,
        "candidates": 947,
        "total": 3607,
        "cached": 0
      },
      "response_time": 10.648568
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3406,
        "candidates": 419,
        "total": 3825,
        "cached": 0
      },
      "response_time": 4.263951
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1821,
        "candidates": 535,
        "total": 2356,
        "cached": 0
      },
      "response_time": 8.262343
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2217,
        "candidates": 451,
        "total": 2668,
        "cached": 0
      },
      "response_time": 11.124666
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2601,
        "candidates": 1303,
        "total": 3904,
        "cached": 0
      },
      "response_time": 15.004281
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 3699,
        "candidates": 574,
        "total": 4273,
        "cached": 0
      },
      "response_time": 4.698922
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 2724,
        "candidates": 1052,
        "total": 3776,
        "cached": 0
      },
      "response_time": 13.314492
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3570,
        "candidates": 633,
        "total": 4203,
        "cached": 0
      },
      "response_time": 4.754755
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "3 3 0 3\n0 3 3 0\n0 3 3 3\n0 3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 0 3 3\n0 0 3 3\n0 3 3 0\n3 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "0 0 0 3\n0 3 3 3\n0 3 0 0\n0 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "3 0 3 0\n0 0 3 3\n3 0 3 3\n3 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "3 3 0 3\n0 3 3 0\n0 3 3 3\n0 3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 0 3 3\n0 0 3 3\n0 3 3 0\n3 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "0 0 0 3\n0 3 3 3\n0 3 0 0\n0 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "3 0 3 0\n0 0 3 3\n3 0 3 3\n3 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "0 0 3 0\n3 0 0 3\n3 0 0 0\n3 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "3 3 0 0\n3 3 0 0\n3 0 0 3\n0 0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "3 3 3 0\n3 0 0 0\n3 0 3 3\n3 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 87.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "0 3 0 3\n3 3 0 0\n0 3 0 0\n0 0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 87.5
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "3 3\n3 3\n0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 3\n3 3\n0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "3 3\n3 3\n0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "3 3\n3 3\n0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "3 3 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "3 3 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "3 3 0 0\n3 3 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 75.0
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "3 3 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "3 0 0 3\n0 0 0 0\n0 3 3 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 0 3 0\n0 0 0 0\n0 3 3 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "0 0 0 3\n0 3 0 0\n0 3 0 0\n0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "3 0 3 0\n0 0 0 0\n3 0 3 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      }
    ],
    "014-py_07-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "0 0 0 0\n0 3 0 0\n0 3 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 0 3 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "0 0 0 0\n0 0 3 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      }
    ],
    "016-py_08-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "0 0 0 0\n0 3 0 0\n0 3 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 0 3 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "0 0 0 0\n0 0 3 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      }
    ],
    "018-py_09-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "3 0 0 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 87.5
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 3 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "0 3 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 75.0
      }
    ],
    "020-py_10-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "3 3 0 3\n0 3 3 0\n0 3 3 3\n0 3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 0 3 3\n0 0 3 3\n0 3 3 0\n3 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "0 0 0 3\n0 3 3 3\n0 3 0 0\n0 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "3 0 3 0\n0 0 3 3\n3 0 3 3\n3 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "022-py_11-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "3 0 0 0\n3 3 3 3\n0 3 3 3\n3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 0 0 3\n0 0 3 3\n3 3 3 0\n3 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "0 0 0 0\n0 3 3 3\n0 3 0 3\n3 3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "3 0 3 3\n0 0 0 3\n3 3 3 0\n0 3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      }
    ],
    "024-py_12-train": [
      {
        "example": 1,
        "input": "7 7 0 7\n0 7 7 0\n0 7 7 7\n0 7 7 0\n4 4 4 4\n0 0 0 0\n0 2 0 2\n2 2 2 0\n2 0 0 2",
        "expected_output": "0 0 3 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "transformed_output": "3 0 0 0\n3 3 3 3\n0 3 3 3\n3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "0 0 7 7\n0 0 7 7\n0 7 7 0\n7 7 0 0\n4 4 4 4\n2 0 2 0\n0 2 0 2\n0 2 2 0\n0 0 2 0",
        "expected_output": "0 3 0 0\n3 0 0 0\n3 0 0 3\n0 0 0 3",
        "transformed_output": "0 0 0 3\n0 0 3 3\n3 3 3 0\n3 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 3,
        "input": "0 0 0 7\n0 7 7 7\n0 7 0 0\n0 7 7 7\n4 4 4 4\n0 0 2 0\n0 2 2 2\n2 2 0 0\n0 2 0 2",
        "expected_output": "3 3 0 0\n3 0 0 0\n0 0 3 3\n3 0 0 0",
        "transformed_output": "0 0 0 0\n0 3 3 3\n0 3 0 3\n3 3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 4,
        "input": "7 0 7 0\n0 0 7 7\n7 0 7 7\n7 7 0 0\n4 4 4 4\n0 0 2 2\n0 0 0 0\n2 0 0 2\n0 2 0 2",
        "expected_output": "0 3 0 0\n3 3 0 0\n0 3 0 0\n0 0 3 0",
        "transformed_output": "3 0 3 3\n0 0 0 3\n3 3 3 0\n0 3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}