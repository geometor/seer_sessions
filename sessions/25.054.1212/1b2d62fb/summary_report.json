{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 444,
        "total": 2261,
        "cached": 0
      },
      "response_time": 7.232408
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2123,
        "candidates": 387,
        "total": 2510,
        "cached": 0
      },
      "response_time": 35.886185
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2727,
        "candidates": 1617,
        "total": 4344,
        "cached": 0
      },
      "response_time": 16.368644
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 4128,
        "candidates": 822,
        "total": 4950,
        "cached": 0
      },
      "response_time": 8.440356
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 3162,
        "candidates": 1393,
        "total": 4555,
        "cached": 0
      },
      "response_time": 13.790369
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4348,
        "candidates": 728,
        "total": 5076,
        "cached": 0
      },
      "response_time": 6.821886
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 785,
        "total": 2602,
        "cached": 0
      },
      "response_time": 11.934446
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2460,
        "candidates": 392,
        "total": 2852,
        "cached": 0
      },
      "response_time": 5.377074
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2733,
        "candidates": 2208,
        "total": 4941,
        "cached": 0
      },
      "response_time": 24.095563
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2493,
        "candidates": 2780,
        "total": 5273,
        "cached": 0
      },
      "response_time": 27.003189
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 5067,
        "candidates": 636,
        "total": 5703,
        "cached": 0
      },
      "response_time": 6.754135
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4737,
        "candidates": 501,
        "total": 5238,
        "cached": 0
      },
      "response_time": 5.432526
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 670,
        "total": 2487,
        "cached": 0
      },
      "response_time": 10.05735
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2347,
        "candidates": 392,
        "total": 2739,
        "cached": 0
      },
      "response_time": 5.090341
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2733,
        "candidates": 885,
        "total": 3618,
        "cached": 0
      },
      "response_time": 11.857385
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3414,
        "candidates": 399,
        "total": 3813,
        "cached": 0
      },
      "response_time": 4.154261
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2740,
        "candidates": 2201,
        "total": 4941,
        "cached": 0
      },
      "response_time": 29.505432
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 4744,
        "candidates": 403,
        "total": 5147,
        "cached": 0
      },
      "response_time": 4.719535
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 484,
        "total": 2301,
        "cached": 0
      },
      "response_time": 7.995743
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2163,
        "candidates": 480,
        "total": 2643,
        "cached": 0
      },
      "response_time": 6.888435
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2822,
        "candidates": 1201,
        "total": 4023,
        "cached": 0
      },
      "response_time": 15.748295
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 3814,
        "candidates": 667,
        "total": 4481,
        "cached": 0
      },
      "response_time": 6.083702
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 3008,
        "candidates": 1454,
        "total": 4462,
        "cached": 0
      },
      "response_time": 19.340022
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 4256,
        "candidates": 808,
        "total": 5064,
        "cached": 0
      },
      "response_time": 6.848392
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 549,
        "total": 2366,
        "cached": 0
      },
      "response_time": 7.396911
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2227,
        "candidates": 457,
        "total": 2684,
        "cached": 0
      },
      "response_time": 5.795312
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 2703,
        "candidates": 1262,
        "total": 3965,
        "cached": 0
      },
      "response_time": 13.314367
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 3759,
        "candidates": 566,
        "total": 4325,
        "cached": 0
      },
      "response_time": 5.16931
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 2910,
        "candidates": 1417,
        "total": 4327,
        "cached": 0
      },
      "response_time": 17.069821
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 4117,
        "candidates": 674,
        "total": 4791,
        "cached": 0
      },
      "response_time": 5.576669
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 8 8\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 8 8\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 8 8\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 8 8\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 8 8\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      }
    ],
    "009-py_05-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "010-py_06-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "",
        "match": "ERROR: operands could not be broadcast together with shapes (5,) (2,) ",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "",
        "match": "ERROR: operands could not be broadcast together with shapes (5,) (2,) ",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "",
        "match": "ERROR: operands could not be broadcast together with shapes (5,) (2,) ",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "",
        "match": "ERROR: operands could not be broadcast together with shapes (5,) (2,) ",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "",
        "match": "ERROR: operands could not be broadcast together with shapes (5,) (2,) ",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "0 9 9 8 9 9 9\n0 0 9 8 9 9 0\n9 0 9 8 9 9 0\n0 0 0 8 9 0 0\n0 9 9 8 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 8 9 0 0\n9 0 9 8 9 9 9\n0 9 9 8 9 9 9\n0 0 0 8 9 9 9\n0 9 9 8 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 3,
        "input": "9 0 0 8 9 0 9\n9 0 0 8 0 9 0\n9 0 0 8 9 0 0\n0 9 9 8 0 9 9\n0 0 9 8 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 8 9 0 9\n9 0 0 8 9 0 0\n9 9 9 8 9 9 9\n0 9 0 8 0 0 0\n9 0 0 8 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 8 9 0 9\n9 0 9 8 9 9 9\n9 9 9 8 0 0 9\n9 0 0 8 9 0 0\n9 9 9 8 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      }
    ],
    "017-py_11-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "0 9 9 8 9 9 9\n0 0 9 8 9 9 0\n9 0 9 8 9 9 0\n0 0 0 8 9 0 0\n0 9 9 8 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "8 0 0\n0 0 8\n8 0 8\n0 0 8\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 0 0 8 9 0 0\n9 0 9 8 9 9 9\n0 9 9 8 9 9 9\n0 0 0 8 9 9 9\n0 9 9 8 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 0 0\n0 0 8\n8 0 8\n0 0 8\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 3,
        "input": "9 0 0 8 9 0 9\n9 0 0 8 0 9 0\n9 0 0 8 9 0 0\n0 9 9 8 0 9 9\n0 0 9 8 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 0 0\n0 0 8\n8 0 8\n0 0 8\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 8 9 0 9\n9 0 0 8 9 0 0\n9 9 9 8 9 9 9\n0 9 0 8 0 0 0\n9 0 0 8 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "8 0 0\n0 0 8\n8 0 8\n0 0 8\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 5,
        "input": "0 9 9 8 9 0 9\n9 0 9 8 9 9 9\n9 9 9 8 0 0 9\n9 0 0 8 9 0 0\n9 9 9 8 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "8 0 0\n0 0 8\n8 0 8\n0 0 8\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      }
    ],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "0 9 9 8 9 9 9\n0 0 9 8 9 9 0\n9 0 9 8 9 9 0\n0 0 0 8 9 0 0\n0 9 9 8 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 8 9 0 0\n9 0 9 8 9 9 9\n0 9 9 8 9 9 9\n0 0 0 8 9 9 9\n0 9 9 8 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 8 9 0 9\n9 0 0 8 0 9 0\n9 0 0 8 9 0 0\n0 9 9 8 0 9 9\n0 0 9 8 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 8 9 0 9\n9 0 0 8 9 0 0\n9 9 9 8 9 9 9\n0 9 0 8 0 0 0\n9 0 0 8 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 8 9 0 9\n9 0 9 8 9 9 9\n9 9 9 8 0 0 9\n9 0 0 8 9 0 0\n9 9 9 8 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "022-py_14-train": [
      {
        "example": 1,
        "input": "0 9 9 8 9 9 9\n0 0 9 8 9 9 0\n9 0 9 8 9 9 0\n0 0 0 8 9 0 0\n0 9 9 8 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 8 9 0 0\n9 0 9 8 9 9 9\n0 9 9 8 9 9 9\n0 0 0 8 9 9 9\n0 9 9 8 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 8 9 0 9\n9 0 0 8 0 9 0\n9 0 0 8 9 0 0\n0 9 9 8 0 9 9\n0 0 9 8 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 8 9 0 9\n9 0 0 8 9 0 0\n9 9 9 8 9 9 9\n0 9 0 8 0 0 0\n9 0 0 8 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 8 9 0 9\n9 0 9 8 9 9 9\n9 9 9 8 0 0 9\n9 0 0 8 9 0 0\n9 9 9 8 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "024-py_15-train": [
      {
        "example": 1,
        "input": "0 9 9 8 9 9 9\n0 0 9 8 9 9 0\n9 0 9 8 9 9 0\n0 0 0 8 9 0 0\n0 9 9 8 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 8\n9 8 8\n9 8 8\n0 8 8\n9 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      },
      {
        "example": 2,
        "input": "0 0 0 8 9 0 0\n9 0 9 8 9 9 9\n0 9 9 8 9 9 9\n0 0 0 8 9 9 9\n0 9 9 8 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n9 8 8\n9 8 8\n0 8 8\n9 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 3,
        "input": "9 0 0 8 9 0 9\n9 0 0 8 0 9 0\n9 0 0 8 9 0 0\n0 9 9 8 0 9 9\n0 0 9 8 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n9 8 8\n9 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 8 9 0 9\n9 0 0 8 9 0 0\n9 9 9 8 9 9 9\n0 9 0 8 0 0 0\n9 0 0 8 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 8 8\n0 8 8\n9 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 5,
        "input": "0 9 9 8 9 0 9\n9 0 9 8 9 9 9\n9 9 9 8 0 0 9\n9 0 0 8 9 0 0\n9 9 9 8 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 8\n9 8 8\n9 8 8\n0 8 8\n9 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      }
    ],
    "026-py_16-train": [
      {
        "example": 1,
        "input": "0 9 9 8 9 9 9\n0 0 9 8 9 9 0\n9 0 9 8 9 9 0\n0 0 0 8 9 0 0\n0 9 9 8 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8\n0 8\n0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 8 9 0 0\n9 0 9 8 9 9 9\n0 9 9 8 9 9 9\n0 0 0 8 9 9 9\n0 9 9 8 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8\n0 8\n0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 8 9 0 9\n9 0 0 8 0 9 0\n9 0 0 8 9 0 0\n0 9 9 8 0 9 9\n0 0 9 8 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8\n0 8\n0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 8 9 0 9\n9 0 0 8 9 0 0\n9 9 9 8 9 9 9\n0 9 0 8 0 0 0\n9 0 0 8 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8\n0 8\n0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 8 9 0 9\n9 0 9 8 9 9 9\n9 9 9 8 0 0 9\n9 0 0 8 9 0 0\n9 9 9 8 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8\n0 8\n0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "028-py_17-train": [
      {
        "example": 1,
        "input": "0 9 9 8 9 9 9\n0 0 9 8 9 9 0\n9 0 9 8 9 9 0\n0 0 0 8 9 0 0\n0 9 9 8 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 9\n0 8 9\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 2,
        "input": "0 0 0 8 9 0 0\n9 0 9 8 9 9 9\n0 9 9 8 9 9 9\n0 0 0 8 9 9 9\n0 9 9 8 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 9\n9 8 9\n9 8 9\n0 8 9\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      },
      {
        "example": 3,
        "input": "9 0 0 8 9 0 9\n9 0 0 8 0 9 0\n9 0 0 8 9 0 0\n0 9 9 8 0 9 9\n0 0 9 8 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 9\n0 8 0\n0 8 9\n9 8 0\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 8 9 0 9\n9 0 0 8 9 0 0\n9 9 9 8 9 9 9\n0 9 0 8 0 0 0\n9 0 0 8 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 8 9\n0 8 9\n9 8 9\n0 8 0\n0 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 8 9 0 9\n9 0 9 8 9 9 9\n9 9 9 8 0 0 9\n9 0 0 8 9 0 0\n9 9 9 8 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 0\n0 8 9\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      }
    ],
    "030-py_18-train": [
      {
        "example": 1,
        "input": "0 9 9 8 9 9 9\n0 0 9 8 9 9 0\n9 0 9 8 9 9 0\n0 0 0 8 9 0 0\n0 9 9 8 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 8 9 0 0\n9 0 9 8 9 9 9\n0 9 9 8 9 9 9\n0 0 0 8 9 9 9\n0 9 9 8 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 8 9 0 9\n9 0 0 8 0 9 0\n9 0 0 8 9 0 0\n0 9 9 8 0 9 9\n0 0 9 8 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 8 9 0 9\n9 0 0 8 9 0 0\n9 9 9 8 9 9 9\n0 9 0 8 0 0 0\n9 0 0 8 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 8 9 0 9\n9 0 9 8 9 9 9\n9 9 9 8 0 0 9\n9 0 0 8 9 0 0\n9 9 9 8 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}