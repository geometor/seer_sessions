{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 249,
        "total": 2002,
        "cached": 0
      },
      "response_time": 4.329712
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 1864,
        "candidates": 171,
        "total": 2035,
        "cached": 0
      },
      "response_time": 2.42921
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1992,
        "candidates": 1399,
        "total": 3391,
        "cached": 0
      },
      "response_time": 14.039641
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3186,
        "candidates": 165,
        "total": 3351,
        "cached": 0
      },
      "response_time": 2.176505
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1986,
        "candidates": 1350,
        "total": 3336,
        "cached": 0
      },
      "response_time": 14.040162
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3130,
        "candidates": 267,
        "total": 3397,
        "cached": 0
      },
      "response_time": 21.322162
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 402,
        "total": 2155,
        "cached": 0
      },
      "response_time": 6.353477
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2016,
        "candidates": 251,
        "total": 2267,
        "cached": 0
      },
      "response_time": 4.055705
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2070,
        "candidates": 1212,
        "total": 3282,
        "cached": 0
      },
      "response_time": 15.225709
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3077,
        "candidates": 404,
        "total": 3481,
        "cached": 0
      },
      "response_time": 4.386514
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2223,
        "candidates": 1775,
        "total": 3998,
        "cached": 0
      },
      "response_time": 19.044531
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3796,
        "candidates": 336,
        "total": 4132,
        "cached": 0
      },
      "response_time": 4.853311
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 520,
        "total": 2273,
        "cached": 0
      },
      "response_time": 8.713105
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2135,
        "candidates": 158,
        "total": 2293,
        "cached": 0
      },
      "response_time": 2.503484
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1977,
        "candidates": 1056,
        "total": 3033,
        "cached": 0
      },
      "response_time": 12.618311
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2828,
        "candidates": 311,
        "total": 3139,
        "cached": 0
      },
      "response_time": 4.34515
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2130,
        "candidates": 2777,
        "total": 4907,
        "cached": 0
      },
      "response_time": 31.761338
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 4702,
        "candidates": 1014,
        "total": 5716,
        "cached": 0
      },
      "response_time": 11.170612
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 421,
        "total": 2174,
        "cached": 0
      },
      "response_time": 6.442006
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2035,
        "candidates": 595,
        "total": 2630,
        "cached": 0
      },
      "response_time": 5.994276
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2414,
        "candidates": 1266,
        "total": 3680,
        "cached": 0
      },
      "response_time": 14.552748
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 3474,
        "candidates": 776,
        "total": 4250,
        "cached": 0
      },
      "response_time": 7.620918
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 2507,
        "candidates": 1487,
        "total": 3994,
        "cached": 0
      },
      "response_time": 16.184157
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3787,
        "candidates": 899,
        "total": 4686,
        "cached": 0
      },
      "response_time": 9.149136
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 2 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "5 1 2\n2 5 2\n2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "2 2 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "5 6 2\n5 2 2\n5 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "9 9 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "5 5 9\n8 5 9\n9 8 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "2 6 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "2 2 2\n6 1 6\n2 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 2 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "5 1 2\n2 5 2\n2 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "2 2 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "5 6 2\n5 2 2\n5 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "9 9 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "5 5 9\n8 5 9\n9 8 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "2 6 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "2 2 2\n6 1 6\n2 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      }
    ],
    "005-py_03-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "2 2 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "7 6\n4 7\n3 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "2 2 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "7 11\n7 7\n10 7",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 9 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "14 10\n17 13\n14 17",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "2 6 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "4 4\n12 7\n8 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "2 2 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "2 1 1\n1 5 1\n5 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "2 6 5\n6 2 2\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 9 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "9 5 5\n5 5 8\n5 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 4,
        "input": "2 6 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "2 2 6\n2 1 1\n2 6 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "2 1 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "1 1 2\n1 1 5\n2 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 2,
        "input": "2 6 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "2 5 6\n2 2 6\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "9 5 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "5 5 9\n5 5 8\n5 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "2 2 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "2 2 6\n1 1 2\n2 2 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "011-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "2 1 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "2 1 5\n1 5 2\n1 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "2 6 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "2 6 5\n6 2 5\n5 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "9 5 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "9 5 5\n5 5 8\n5 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 4,
        "input": "2 2 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "2 2 2\n2 1 6\n6 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "2 1 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "2 1 1\n2 5 1\n5 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "2 6 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "2 6 5\n2 2 2\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "9 5 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "9 5 5\n9 5 8\n5 8 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 2 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "2 2 6\n2 1 1\n2 6 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "2 1 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "1 1 2\n1 5 1\n2 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "2 6 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "6 5 2\n2 2 6\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 3,
        "input": "9 5 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "5 5 9\n8 5 5\n9 8 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "2 2 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "2 6 2\n1 1 2\n2 6 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "017-py_11-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "018-py_12-test": [
      {
        "example": 1,
        "input": "9 3 4\n9 4 4\n9 3 4",
        "expected_output": "9 9 9\n3 4 3\n4 4 4",
        "transformed_output": "9 3 4\n9 4 4\n9 3 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "2 1 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "2 1 5\n2 5 2\n1 1 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "2 6 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "2 6 5\n2 2 5\n5 2 5",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "9 5 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "9 5 5\n9 5 8\n5 8 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 2 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "2 2 2\n6 1 6\n6 1 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "2 1 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "2 1 1\n1 5 1\n5 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 6 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "2 6 6\n6 2 2\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "9 5 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "9 5 5\n5 5 8\n5 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 4,
        "input": "2 2 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "2 2 6\n2 1 1\n2 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "022-py_14-train": [
      {
        "example": 1,
        "input": "2 1 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "1 1 1\n1 5 1\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "2 6 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "",
        "match": "ERROR: integer division or modulo by zero",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 5 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "9 5 5\n5 5 8\n5 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 4,
        "input": "2 2 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "",
        "match": "ERROR: integer division or modulo by zero",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "024-py_15-train": [
      {
        "example": 1,
        "input": "2 1 1\n1 5 1\n5 2 2",
        "expected_output": "2 1 5\n2 5 2\n1 1 2",
        "transformed_output": "1 1 1\n1 5 1\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "2 6 5\n6 2 2\n5 5 5",
        "expected_output": "2 6 5\n2 2 5\n5 2 5",
        "transformed_output": "5 5 5\n1 1 1\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "9 5 5\n5 5 8\n5 8 9",
        "expected_output": "9 5 5\n9 5 8\n5 8 9",
        "transformed_output": "9 5 5\n5 5 8\n5 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 4,
        "input": "2 2 6\n2 1 1\n2 6 2",
        "expected_output": "2 2 2\n6 1 6\n6 1 2",
        "transformed_output": "1 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      }
    ]
  },
  "best_train_results": {
    "passed": 4,
    "total": 4
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}