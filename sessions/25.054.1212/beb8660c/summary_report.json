{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1997,
        "candidates": 414,
        "total": 2411,
        "cached": 0
      },
      "response_time": 7.328686
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2275,
        "candidates": 190,
        "total": 2465,
        "cached": 0
      },
      "response_time": 2.618987
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2347,
        "candidates": 1546,
        "total": 3893,
        "cached": 0
      },
      "response_time": 16.908695
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3689,
        "candidates": 142,
        "total": 3831,
        "cached": 0
      },
      "response_time": 1.874686
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2299,
        "candidates": 1293,
        "total": 3592,
        "cached": 0
      },
      "response_time": 16.921862
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3388,
        "candidates": 421,
        "total": 3809,
        "cached": 0
      },
      "response_time": 15.383762
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1829,
        "candidates": 410,
        "total": 2239,
        "cached": 0
      },
      "response_time": 6.444304
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2099,
        "candidates": 756,
        "total": 2855,
        "cached": 0
      },
      "response_time": 9.275791
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2878,
        "candidates": 1876,
        "total": 4754,
        "cached": 0
      },
      "response_time": 21.591505
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 4548,
        "candidates": 337,
        "total": 4885,
        "cached": 0
      },
      "response_time": 4.533462
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2495,
        "candidates": 1317,
        "total": 3812,
        "cached": 0
      },
      "response_time": 21.920871
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3606,
        "candidates": 398,
        "total": 4004,
        "cached": 0
      },
      "response_time": 4.653445
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 453,
        "total": 2206,
        "cached": 0
      },
      "response_time": 8.085413
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2066,
        "candidates": 318,
        "total": 2384,
        "cached": 0
      },
      "response_time": 4.569591
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2477,
        "candidates": 2532,
        "total": 5009,
        "cached": 0
      },
      "response_time": 21.941245
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2272,
        "candidates": 3807,
        "total": 6079,
        "cached": 0
      },
      "response_time": 34.954412
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 5872,
        "candidates": 803,
        "total": 6675,
        "cached": 0
      },
      "response_time": 7.365219
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 4799,
        "candidates": 621,
        "total": 5420,
        "cached": 0
      },
      "response_time": 6.556641
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "8 0 0 6 0 0 0 1 0 0\n8 0 0 6 0 5 0 1 0 2\n8 0 0 6 0 5 0 1 0 2\n8 0 4 6 0 5 0 0 0 0\n8 0 4 6 0 5 0 0 3 0\n8 0 4 0 0 5 0 0 0 0\n8 0 4 0 0 5 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "8 0 0 0 2 0 0\n8 0 3 0 2 0 0\n8 0 3 0 2 0 0\n8 0 0 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "8 0 2\n8 4 2\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 1 0 0 0 6 0 0 8\n2 0 1 0 5 0 6 0 0 8\n2 0 1 0 5 0 6 0 0 8\n0 0 0 0 5 0 6 4 0 8\n0 3 0 0 5 0 6 4 0 8\n0 0 0 0 5 0 0 4 0 8\n0 0 0 0 5 0 0 4 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 2 0 0 0 8\n0 0 2 0 3 0 8\n0 0 2 0 3 0 8\n1 0 0 0 0 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "2 0 8\n2 4 8\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "8 0 0 6 0 0 0 1 0 0\n8 0 0 6 0 5 0 1 0 2\n8 0 0 6 0 5 0 1 0 2\n8 0 4 6 0 5 0 0 0 0\n8 0 4 6 0 5 0 0 3 0\n8 0 4 0 0 5 0 0 0 0\n8 0 4 0 0 5 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "1 0 0 0\n0 0 0 0\n0 2 2 2\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 64.28571428571429
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "8 0 0\n8 4 2\n8 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 0 0 0 0 0\n0 2 2 0 0 0 0\n0 0 0 0 0 0 0\n1 1 1 0 3 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n6 6 6 4 4 4 4\n8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 31,
        "percent_correct": 55.714285714285715
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 1\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 9,
        "percent_correct": 67.85714285714286
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "",
        "match": "ERROR: index 3 is out of bounds for axis 0 with size 3",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 6 6 0 4 0 0\n0 5 5 4 6 0 0\n6 1 1 6 5 4 4\n1 2 2 5 3 5 5\n8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 23,
        "percent_correct": 67.14285714285714
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 3 3 0\n2 2 2 1\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 5,
        "percent_correct": 82.14285714285714
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "0 0 0\n2 2 0\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 6 6 0 4 0 0\n0 5 5 4 6 0 0\n6 1 1 6 5 4 4\n1 2 2 5 3 5 5\n8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 23,
        "percent_correct": 67.14285714285714
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 3 3 0\n2 2 2 1\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 5,
        "percent_correct": 82.14285714285714
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "0 0 0\n2 2 0\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "014-py_07-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 2 0 0 0 0\n0 2 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 34,
        "percent_correct": 51.42857142857142
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 64.28571428571429
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "0 2 0\n4 2 0\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "015-py_08-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "016-py_09-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "017-py_10-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8\n6 6 6 6 6 0 0\n0 5 5 5 5 5 5\n1 1 1 4 4 4 4\n0 2 2 0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 37,
        "percent_correct": 47.14285714285714
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n8 8 8 8\n0 3 3 0\n2 2 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 57.14285714285714
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "8 8 8\n0 4 0\n2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 0 0 0 2 2\n0 0 0 0 0 0 3\n0 0 0 0 1 1 1\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n0 0 6 6 6 6 6\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 54.285714285714285
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 1\n0 0 0 0\n0 2 2 2\n0 0 0 0\n0 0 3 3\n0 0 0 0\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 71.42857142857143
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "0 2 2\n0 0 4\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}