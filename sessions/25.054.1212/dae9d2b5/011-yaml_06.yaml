task: 010
observations:
  - example: 1
    input_grid: 3x6
    output_grid: 3x3
    transformation:
      type: column_combination
      logic: "Pairs of input columns (1&2, 3&4, 5&6) map to single output columns (1, 2, 3)."
      pixel_rule: "If *either* input pixel is non-white, the output pixel is magenta. Exception observed when two yellows create magenta"
    objects:
        - input_columns:
          description: Original columns of the grid
          count: 6
        - output_columns:
            description: combine every two adjacent input columns into one output column
            count: 3
        - colors:
          input_palette: [0, 3, 4]
          output_palette: [0, 6]

  - example: 2
    input_grid: 3x6
    output_grid: 3x3
    transformation:
      type: column_combination
      logic: "Pairs of input columns (1&2, 3&4, 5&6) map to single output columns (1, 2, 3)."
      pixel_rule: "If *either* input pixel is non-white, the output pixel is magenta. Exception observed when two yellows create magenta"
    objects:
        - input_columns:
          description: Original columns of the grid
          count: 6
        - output_columns:
            description: combine every two adjacent input columns into one output column
            count: 3
        - colors:
            input_palette: [0,3,4]
            output_palette: [0,6]

  - example: 3
    input_grid: 3x6
    output_grid: 3x3
    transformation:
      type: column_combination
      logic: "Pairs of input columns (1&2, 3&4, 5&6) map to single output columns (1, 2, 3)."
      pixel_rule: "If *either* input pixel is non-white, the output pixel is magenta. Exception observed when two yellows create magenta"
    objects:
        - input_columns:
          description: Original columns of the grid
          count: 6
        - output_columns:
          description: combine every two adjacent input columns into one output column
          count: 3
        - colors:
            input_palette: [0,3,4]
            output_palette: [0,6]

  - example: 4
    input_grid: 3x6
    output_grid: 3x3
    transformation:
      type: column_combination
      logic: "Pairs of input columns (1&2, 3&4, 5&6) map to single output columns (1, 2, 3)."
      pixel_rule: "If *either* input pixel is non-white, the output pixel is magenta. Exception observed when two yellows create magenta"
    objects:
        - input_columns:
          description: Original columns of the grid
          count: 6
        - output_columns:
          description: combine every two adjacent input columns into one output column
          count: 3
        - colors:
            input_palette: [0,3,4]
            output_palette: [0,6]
  - example: 5
    input_grid: 3x6
    output_grid: 3x3
    transformation:
      type: column_combination
      logic: "Pairs of input columns (1&2, 3&4, 5&6) map to single output columns (1, 2, 3)."
      pixel_rule: "If *either* input pixel is non-white, the output pixel is magenta. Exception observed when two yellows create magenta"
    objects:
        - input_columns:
          description: Original columns of the grid
          count: 6
        - output_columns:
            description: combine every two adjacent input columns into one output column
            count: 3
        - colors:
            input_palette: [0,3,4]
            output_palette: [0,6]