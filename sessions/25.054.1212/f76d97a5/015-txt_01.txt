        4 5 4
        5 5 5
        4 5 4
        ```
    *   Expected Output:
        ```
        4 0 4
        0 0 0
        4 0 4
        ```
    *   The output replaces 5s with 0, but also 4s that neighbor 5 with zero.
        4s that do not touch a 5 are unchanged.

*   **Example 2:**

    *   Input:
        ```
        5 5 6 6 6
        6 5 5 6 6
        6 6 5 5 6
        6 6 6 5 5
        5 6 6 6 5
        ```
    *   Expected Output:
        ```
        0 0 6 6 6
        6 0 0 6 6
        6 6 0 0 6
        6 6 6 0 0
        0 6 6 6 0
        ```
    *   In the output, the 6s are unchanged.
        5s adjacent to 6 are replaced by 0.

*   **Example 3:**

    *   Input:
        ```
        9 5 9 9 9
        9 9 5 5 9
        9 5 9 9 9
        9 9 5 9 9
        9 9 9 5 5
        ```
    *   Expected Output:
        ```
        9 0 9 9 9
        9 9 0 0 9
        9 0 9 9 9
        9 9 0 9 9
        9 9 9 0 0
        ```

    *   Here, 9s that neighbor a 5 are replaced by 0
        9s that do not touch a 5 are unchanged.

**YAML Facts**
