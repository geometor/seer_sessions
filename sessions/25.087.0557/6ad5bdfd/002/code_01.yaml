task_context:
  problem_type: object_manipulation
  phenomenon: gravity_simulation
  world_rules:
    - Objects are defined as contiguous blocks (including diagonals) of the same color.
    - White (0) represents the background/empty space.
    - Red (2) pixels form static barriers.
    - All other colors (1, 3-9) represent movable objects.
    - Objects are subject to a "gravity" force directed towards the red barrier region.
    - The direction of gravity (Down, Left, or Right) is determined globally based on the relative position of the red barrier(s) compared to the movable objects.
    - Objects move step-by-step in the direction of gravity until blocked.
    - Objects maintain their shape and pixel configuration (integrity) during movement. They move as a single unit.
  stopping_conditions:
    - An object stops moving when any part of it would move:
        - Outside the grid boundaries.
        - Into a red (barrier) pixel.
        - Into a pixel occupied by another movable object (that has already settled or is also stopping).

input_features:
  grid: 2D array of integers (0-9).
  pixels:
    - background: white (0)
    - barrier: red (2)
    - movable_colors: blue(1), green(3), yellow(4), gray(5), magenta(6), orange(7), azure(8), maroon(9)
  objects:
    - barrier: Contiguous region(s) of red pixels.
    - movable_objects: Contiguous region(s) of pixels with movable_colors.

transformation:
  plan:
    - Identify all movable objects (contiguous blocks of non-red, non-white pixels).
    - Determine the single global direction of gravity (delta_row, delta_col) based on red barrier vs. object positions.
    - Simulate movement iteratively until no object moves:
        - In each iteration, determine the set of objects that *can* move one step.
        - An object can move if ALL its pixels can simultaneously move one step in the gravity direction into currently empty (white) cells.
        - Update the grid state by moving the identified movable objects one step.
        - Objects that cannot move (blocked) remain stationary and act as barriers for subsequent steps/objects.
  output_features:
    - grid: Final state after all objects have settled according to the gravity rules.
    - object_integrity: Movable objects retain their original shape and color distribution.

examples_analysis:
  - example_index: 1
    direction: Down (1, 0)
    error_in_previous_code: Treated pixels independently, causing an '8' object to split and land partially incorrect.
    required_logic: Object-based movement ensures the '8' object lands intact at (6,4), (6,5).
  - example_index: 2
    direction: Left (0, -1)
    error_in_previous_code: Treated pixels independently, causing an '8' object to split and land incorrectly near the barrier.
    required_logic: Object-based movement ensures the '8' object lands intact at (3,3), (4,3), blocked by other objects.
  - example_index: 3
    direction: Right (0, 1)
    error_in_previous_code: Treated pixels independently, causing a '9' object to split and land partially incorrect.
    required_logic: Object-based movement ensures the '9' object lands intact at (3,6), (4,6), blocked by other objects.