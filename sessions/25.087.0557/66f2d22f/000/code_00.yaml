task_context:
  grid_shape_relation: The output grid has the same height as the input grid and half the width.
  input_colors_present: [White, Green, Red] # 0, 3, 2
  output_colors_present: [White, Gray] # 0, 5
  input_structure: The input grid can be conceptually divided into a left half (first 7 columns) and a right half (last 7 columns).
objects:
  - object_type: pixel
    properties:
      - color: White (0), Green (3), Red (2) in input; White (0), Gray (5) in output
      - position: (row, column)
relationships:
  - type: spatial_correspondence
    description: Each pixel at (row, col) in the output grid corresponds to two pixels in the input grid: one at (row, col) and another at (row, col + input_width/2).
actions:
  - action: compare_pixels
    inputs:
      - pixel_left: Input pixel at (row, col)
      - pixel_right: Input pixel at (row, col + input_width/2)
    output: Output pixel value at (row, col)
    rule:
      if pixel_left is White (0) and pixel_right is White (0):
        output is Gray (5)
      else:
        output is White (0)
  - action: generate_output_grid
    description: Create an output grid with the same height and half the width of the input grid. Populate each cell based on the compare_pixels rule.