task_description: Create a 9x9 output grid based on a 3x3 input grid using a pattern placement rule determined by color inversion and input pixel values.

grid_properties:
  - input_shape: [3, 3]
  - output_shape: [9, 9]
  - input_colors: [white (0), primary_color (P)]
  - output_colors: [white (0), primary_color (P)] # Same P as input
  - output_structure: Composed of a 3x3 grid of 3x3 blocks.

objects:
  - name: input_grid
    type: Grid
    properties:
      shape: [3, 3]
      pixels: Each pixel is either white (0) or a single primary_color (P).
  - name: output_grid
    type: Grid
    properties:
      shape: [9, 9]
      pixels: Each pixel is either white (0) or the same primary_color (P).
  - name: primary_color
    type: Color (Integer 1-9)
    description: The single non-white color present in the input grid.
  - name: inverted_pattern
    type: Grid (3x3)
    description: A 3x3 grid derived from the input_grid by swapping the primary_color and white (0).
  - name: white_block
    type: Grid (3x3)
    description: A 3x3 grid filled entirely with white (0).
  - name: output_block
    type: Grid (3x3)
    description: One of the nine 3x3 subgrids that tile the output_grid.

actions:
  - action: identify_primary_color
    inputs: [input_grid]
    outputs: [primary_color]
  - action: create_inverted_pattern
    inputs: [input_grid, primary_color]
    outputs: [inverted_pattern]
    description: Iterate through input_grid. If pixel is primary_color, set corresponding pixel in inverted_pattern to white (0). If pixel is white (0), set corresponding pixel in inverted_pattern to primary_color.
  - action: determine_output_block_content
    inputs: [input_grid_pixel_value, primary_color, inverted_pattern, white_block]
    outputs: [content_for_output_block (either inverted_pattern or white_block)]
    description: If input_grid_pixel_value is white (0), the content is inverted_pattern. If input_grid_pixel_value is primary_color, the content is white_block.
  - action: construct_output_grid
    inputs: [input_grid, inverted_pattern, white_block]
    outputs: [output_grid]
    description: |
      Initialize a 9x9 output_grid with white (0).
      Iterate through each pixel (r, c) of the 3x3 input_grid.
      Determine the content (inverted_pattern or white_block) based on the value of input_grid[r][c].
      Place the determined 3x3 content into the corresponding block of the output_grid at top-left corner (r*3, c*3).
