task_description: Transforms a 4x9 grid containing two distinct non-white objects into a 3x3 grid based on the properties of these objects.

definitions:
  - object: A contiguous area of pixels of the same non-white color.
  - L: The color of the leftmost object (object with the minimum starting column).
  - R: The color of the rightmost object.
  - Nl: The pixel count of the left object.
  - Nr: The pixel count of the right object.
  - Left_rows: Number of unique rows occupied by the left object.
  - Right_rows: Number of unique rows occupied by the right object.

patterns:
  - pattern_A: [[L, 0, 0], [R, R, R], [R, R, R]]
  - pattern_B: [[L, L, L], [R, R, 0], [0, 0, 0]]
  - pattern_C: [[L, L, L], [R, R, R], [0, 0, 0]]
  - pattern_D: [[L, L, L], [L, 0, 0], [R, R, 0]]
  - pattern_E: [[L, 0, 0], [R, 0, 0], [0, 0, 0]]
  - pattern_F: [[L, L, 0], [R, R, R], [0, 0, 0]]

examples:
  - example_1:
      input_properties: { Nl: 8, Nr: 14, Left_rows: 3, Right_rows: 4 }
      condition: Nl < Nr, Diff=6
      output_pattern: pattern_A
  - example_2:
      input_properties: { Nl: 12, Nr: 10, Left_rows: 4, Right_rows: 3 }
      condition: Nl > Nr, Diff=2, Right_rows < Left_rows
      output_pattern: pattern_B
  - example_3:
      input_properties: { Nl: 12, Nr: 12, Left_rows: 4, Right_rows: 4 }
      condition: Nl == Nr, Nl=12
      output_pattern: pattern_C
  - example_4:
      input_properties: { Nl: 12, Nr: 10, Left_rows: 4, Right_rows: 4 }
      condition: Nl > Nr, Diff=2, Right_rows >= Left_rows # (Specifically Right_rows == Left_rows)
      output_pattern: pattern_D
  - example_5:
      input_properties: { Nl: 8, Nr: 8, Left_rows: 3, Right_rows: 3 }
      condition: Nl == Nr, Nl=8
      output_pattern: pattern_E
  - example_6:
      input_properties: { Nl: 10, Nr: 12, Left_rows: 4, Right_rows: 4 }
      condition: Nl < Nr, Diff=2
      output_pattern: pattern_F
