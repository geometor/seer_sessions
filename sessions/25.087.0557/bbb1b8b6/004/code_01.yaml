InputStructure:
  - type: grid
  - height: 4
  - width: 9
  - separator: column of gray (5) pixels at index 4

OutputStructure:
  - type: grid
  - height: 4
  - width: 4

Objects:
  - name: LeftSubgrid (L)
    type: grid
    source: input grid columns 0-3
    properties:
      - height: 4
      - width: 4
      - non_white_pixel_count (count_l): integer derived from L

  - name: RightSubgrid (R)
    type: grid
    source: input grid columns 5-8
    properties:
      - height: 4
      - width: 4
      - non_white_pixel_count (count_r): integer derived from R
      - unique_non_white_colors: set of integers derived from R

Actions:
  - name: CountNonWhitePixels
    input: grid (L or R)
    output: integer count

  - name: GetUniqueNonWhiteColors
    input: grid (R)
    output: set of unique color integers (excluding 0)

  - name: Overlay
    parameters:
      - base_grid: grid
      - top_grid: grid
    process: Start with base_grid, replace pixels with corresponding non-white pixels from top_grid.
    output: grid

  - name: SelectGrid
    input: grid (L)
    output: grid

TransformationLogic:
  - Comparison: Compare count_l and count_r.
  - ConditionalExecution:
      - If count_r > count_l:
          - If count_r - count_l == 1: Perform SelectGrid(L).
          - If count_r - count_l > 1: Perform Overlay(base=L, top=R).
      - If count_l == count_r:
          - Perform Overlay(base=R, top=L).
      - If count_l > count_r:
          - Perform GetUniqueNonWhiteColors(R).
          - If the result is exactly {Red (2)} or exactly {Green (3)}: Perform SelectGrid(L).
          - Otherwise: Perform Overlay(base=R, top=L).

FinalOutput: The grid resulting from the executed action (Overlay or SelectGrid).