observations:
  input_grid:
    description: A 2D grid containing pixels of various colors, primarily white (0), red (2), yellow (4), and gray (5).
    objects:
      - type: horizontal_line
        color: gray (5)
        properties: Spans the width of the grid, typically consists of a single row, divides the grid into an upper and lower section relative to the line.
      - type: pixel_group
        color: red (2)
        properties: Located in the region below the gray line. Count is relevant.
      - type: pixel_group
        color: yellow (4)
        properties: Located in the region below the gray line. Count is relevant.
      - type: background_and_other_pixels
        color: white (0) and any pixels above the gray line
        properties: These pixels do not affect the output color determination.
  output_grid:
    description: A 2x2 grid filled uniformly with a single color.
    properties:
      size: Fixed at 2x2.
      content: Filled entirely with either red (2) or yellow (4).
  transformation:
    description: The color filling the output grid depends on the relative counts of red and yellow pixels located *below* the gray horizontal line in the input grid.
    rule_details:
      - step: Locate the single horizontal row composed entirely of gray (5) pixels.
      - step: Define the 'lower region' as all rows below the gray row.
      - step: Count red (2) pixels in the lower region (`R_below`).
      - step: Count yellow (4) pixels in the lower region (`Y_below`).
      - step: Calculate the difference `Diff = Y_below - R_below`.
      - step: Determine the output color based on `Diff`.
      - condition: If `Diff > 1`, the output color is yellow (4).
      - condition: If `Diff <= 1`, the output color is red (2).
      - step: Generate a 2x2 grid filled with the determined output color.