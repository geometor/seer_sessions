objects:
  - type: grid
    properties:
      - background_color: white (0)
  - type: line_segment
    identifier: top_line
    properties:
      - color: non-red (2), non-white (0) # e.g., green(3), magenta(6), blue(1)
      - orientation: horizontal
      - position: located in a single row above the red_line
      - row_index: integer
      - column_indices: set of integers
      - width: integer (count of column_indices)
  - type: line_segment
    identifier: bottom_line
    properties:
      - color: non-red (2), non-white (0) # e.g., green(3), magenta(6), blue(1)
      - orientation: horizontal
      - position: located in a single row below the red_line
      - row_index: integer
      - column_indices: set of integers
      - width: integer (count of column_indices)
  - type: line_segment
    identifier: red_line
    properties:
      - color: red (2)
      - orientation: horizontal
      - position: located in a single row between top_line and bottom_line
      - row_index: integer
  - type: rectangle
    identifier: yellow_fill
    properties:
      - color: yellow (4)
      - position: derived from other objects
      - row_indices: set of integers
      - column_indices: set of integers

relationships_and_actions:
  - action: identify
    actor: system
    target: top_line, bottom_line, red_line
    details: Locate these three line segments in the input grid based on color and relative vertical position. Record their row indices, column indices, and widths.
  - action: calculate_intersection
    actor: system
    inputs: top_line.column_indices, bottom_line.column_indices
    output: yellow_fill.column_indices
    details: Find the common column indices shared by the top_line and bottom_line.
  - action: determine_rows
    actor: system
    inputs: top_line.width, bottom_line.width, top_line.row_index, red_line.row_index, bottom_line.row_index
    output: yellow_fill.row_indices
    condition:
      - if: bottom_line.width < top_line.width
        then: yellow_fill.row_indices are all integers strictly between top_line.row_index and red_line.row_index.
      - else: # (top_line.width <= bottom_line.width)
        then: yellow_fill.row_indices are all integers strictly between red_line.row_index and bottom_line.row_index.
  - action: create_output
    actor: system
    inputs: input_grid, yellow_fill.row_indices, yellow_fill.column_indices
    details: Start with a copy of the input grid. For every row index in yellow_fill.row_indices and every column index in yellow_fill.column_indices, set the corresponding pixel to yellow (4).