task_description: Map each pixel of the input grid to a 3x3 pattern in the output grid based on the pixel's color.
grid_properties:
  - input_output_relationship: Output grid dimensions are 3 times the input grid dimensions (Height_out = Height_in * 3, Width_out = Width_in * 3).
  - background_color: White (0) is the background color.
objects:
  - object: Pixel
    properties:
      - color: Integer from 0-9.
      - location: (row, column) coordinates in the input grid.
  - object: Pattern
    properties:
      - size: 3x3 grid of pixels.
      - association: Each non-background input color corresponds to a unique, fixed 3x3 pattern.
      - background_pattern: The background color (0) corresponds to a 3x3 pattern of all background pixels.
identified_patterns:
  - color: 0 (white)
    pattern: |
      [[0, 0, 0],
       [0, 0, 0],
       [0, 0, 0]]
  - color: 7 (orange)
    pattern: |
      [[7, 0, 7],
       [0, 0, 0],
       [7, 0, 7]]
  - color: 6 (magenta)
    pattern: |
      [[6, 6, 0],
       [6, 0, 6],
       [0, 6, 6]]
  - color: 4 (yellow)
    pattern: |
      [[0, 0, 4],
       [4, 4, 0],
       [4, 4, 0]]
actions:
  - action: Scale grid
    details: Create an output grid scaled up by a factor of 3 in both height and width compared to the input grid. Initialize with the background color (0).
  - action: Map pixels to patterns
    details: Iterate through each pixel (r_in, c_in) of the input grid.
  - action: Place pattern
    details: Determine the color 'C' of the input pixel. Select the predefined 3x3 pattern corresponding to color 'C'. Copy this pattern into the output grid at the subgrid location defined by the top-left corner (r_in * 3, c_in * 3).