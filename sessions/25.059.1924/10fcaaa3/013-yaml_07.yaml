objects:
  - name: input_grid
    type: grid
    properties:
      shape: variable
      colors: [0, 4]  # white, yellow
      yellow_positions: variable
      white_positions: variable

  - name: output_grid
    type: grid
    properties:
      shape: derived from input_grid shape and yellow position
      colors: [0, 4, 8] # white, yellow, azure
      yellow_count: derived, always 4 if yellow in input, 0 otherwise
      white_count: derived
      azure_count: derived
      yellow_positions: derived
      white_positions: derived
      azure_positions: derived

actions:
  - name: expand_grid
    description: Creates a larger grid based on input grid dimensions and a yellow pixel.
    inputs: [input_grid]
    outputs: [output_grid]

  - name: replicate_yellow
    description: Replicates a yellow pixel into a 2x2 block.
    inputs: [yellow_pixel_position]
    outputs: [2x2 yellow block in output_grid]

  - name: transform_white
    description: Transforms a white pixel into a 2x2 block of azure and white.
    inputs: [white_pixel_position]
    outputs: [2x2 azure/white block in output_grid]

rules:
  - output_grid_height: >-
      If the yellow pixel is in row i, the height is always 6.
      The width is equal to the input grid width times 2

  - yellow_replication: >-
     A single yellow pixel in input grid becomes a 2x2 block.
     The location of the 2x2 yellow block in output depends on the location of the yellow in input.

  - white_transformation: >-
      White pixels are replaced by a 2x2 block: azure, white, white, azure.
      The location of the azure/white pattern depends on where the yellow pixel is.