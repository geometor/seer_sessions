{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3391,
        "candidates": 586,
        "total": 3977,
        "cached": 0
      },
      "response_time": 8.859828
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 3837,
        "candidates": 563,
        "total": 4400,
        "cached": 0
      },
      "response_time": 6.082001
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 495,
        "total": 2248,
        "cached": 0
      },
      "response_time": 6.477794
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2109,
        "candidates": 305,
        "total": 2414,
        "cached": 0
      },
      "response_time": 4.034057
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1554,
        "candidates": 2340,
        "total": 3894,
        "cached": 0
      },
      "response_time": 21.132931
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3685,
        "candidates": 471,
        "total": 4156,
        "cached": 0
      },
      "response_time": 8.820338
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1719,
        "candidates": 1837,
        "total": 3556,
        "cached": 0
      },
      "response_time": 17.278343
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 3350,
        "candidates": 266,
        "total": 3616,
        "cached": 0
      },
      "response_time": 3.381161
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 437,
        "total": 2254,
        "cached": 0
      },
      "response_time": 6.366614
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2116,
        "candidates": 299,
        "total": 2415,
        "cached": 0
      },
      "response_time": 3.731492
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1550,
        "candidates": 1202,
        "total": 2752,
        "cached": 0
      },
      "response_time": 12.629529
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2550,
        "candidates": 400,
        "total": 2950,
        "cached": 0
      },
      "response_time": 14.926248
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1651,
        "candidates": 1858,
        "total": 3509,
        "cached": 0
      },
      "response_time": 16.544754
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3304,
        "candidates": 378,
        "total": 3682,
        "cached": 0
      },
      "response_time": 3.744717
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 409,
        "total": 2322,
        "cached": 0
      },
      "response_time": 6.163218
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2184,
        "candidates": 277,
        "total": 2461,
        "cached": 0
      },
      "response_time": 3.207617
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1528,
        "candidates": 2322,
        "total": 3850,
        "cached": 0
      },
      "response_time": 20.835749
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2694,
        "candidates": 753,
        "total": 3447,
        "cached": 0
      },
      "response_time": 16.110449
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 3236,
        "candidates": 499,
        "total": 3735,
        "cached": 0
      },
      "response_time": 4.853048
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 3638,
        "candidates": 617,
        "total": 4255,
        "cached": 0
      },
      "response_time": 5.026326
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "0 2 0 2 0\n2 2 0 2 2\n0 0 0 0 0\n2 2 0 2 2\n0 2 0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 52.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "0 3 0 0 0 3 0\n3 3 3 0 3 3 3\n0 3 3 0 3 3 0\n0 0 0 0 0 0 0\n0 3 3 0 3 3 0\n3 3 3 0 3 3 3\n0 3 0 0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 42.857142857142854
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "0 1 0\n1 0 1\n0 1 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 36.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "0 1 0 1 0 1 0\n1 0 1 0 1 0 1\n0 1 0 1 0 1 0\n1 0 1 0 1 0 1\n0 1 0 1 0 1 0\n1 0 1 0 1 0 1\n0 1 0 1 0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 26.53061224489796
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "0 1 0\n1 0 1\n0 1 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 36.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "0 1 0 1 0 1 0\n1 0 1 0 1 0 1\n0 1 0 1 0 1 0\n1 0 1 0 1 0 1\n0 1 0 1 0 1 0\n1 0 1 0 1 0 1\n0 1 0 1 0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 26.53061224489796
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "1 1 1\n1 0 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 68.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 75.51020408163265
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "1 0 1\n0 0 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "2 2 0 2 2\n2 2 0 2 2\n0 0 0 0 0\n2 2 0 2 2\n2 2 0 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 16,
        "percent_correct": 36.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "3 3 3 0 3 3 3\n3 3 3 0 3 3 3\n3 3 3 0 3 3 3\n0 0 0 0 0 0 0\n3 3 3 0 3 3 3\n3 3 3 0 3 3 3\n3 3 3 0 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 51.02040816326531
      }
    ],
    "011-py_06-train": [],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "1 0 1\n0 0 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "2 2 2 2 2\n2 2 0 2 2\n2 0 0 0 2\n2 2 0 2 2\n2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 52.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 0 0 0 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 67.3469387755102
      }
    ],
    "013-py_08-train": [],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "1 0 1\n0 0 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "2 2 2 2 2\n2 2 0 2 2\n2 0 0 0 2\n2 2 0 2 2\n2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 52.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 0 0 0 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 67.3469387755102
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "1 0 1\n0 0 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "2 2 0 2 2\n2 2 0 2 2\n0 0 0 0 0\n2 2 0 2 2\n2 2 0 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 16,
        "percent_correct": 36.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "3 3 3 0 3 3 3\n3 3 3 0 3 3 3\n3 3 3 0 3 3 3\n0 0 0 0 0 0 0\n3 3 3 0 3 3 3\n3 3 3 0 3 3 3\n3 3 3 0 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 51.02040816326531
      }
    ],
    "017-py_11-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "1 0 1\n0 0 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "2 2 0 2 2\n2 2 0 2 2\n0 0 0 0 0\n2 2 0 2 2\n2 2 0 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 16,
        "percent_correct": 36.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "3 3 3 0 3 3 3\n3 3 3 0 3 3 3\n3 3 3 0 3 3 3\n0 0 0 0 0 0 0\n3 3 3 0 3 3 3\n3 3 3 0 3 3 3\n3 3 3 0 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 51.02040816326531
      }
    ],
    "019-py_12-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "1 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 64.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 73.46938775510205
      }
    ],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "1 1 1\n1 0 1\n1 1 1",
        "expected_output": "0 1 0\n1 0 1\n0 1 0",
        "transformed_output": "1 1 1\n1 0 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "expected_output": "0 2 2 2 0\n2 0 2 0 2\n2 2 0 2 2\n2 0 2 0 2\n0 2 2 2 0",
        "transformed_output": "2 2 2 2 2\n2 2 2 2 2\n2 2 0 2 2\n2 2 2 2 2\n2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 68.0
      },
      {
        "example": 3,
        "input": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "expected_output": "0 3 3 3 3 3 0\n3 0 3 3 3 0 3\n3 3 0 3 0 3 3\n3 3 3 0 3 3 3\n3 3 0 3 0 3 3\n3 0 3 3 3 0 3\n0 3 3 3 3 3 0",
        "transformed_output": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 0 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 75.51020408163265
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}