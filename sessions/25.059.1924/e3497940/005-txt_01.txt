import numpy as np

# Provided examples (assuming they are stored in a dictionary called 'examples')
examples = {
    "train_0": {
        "input": np.array([[4, 0, 4, 5, 4, 4, 0],
                           [0, 0, 0, 5, 0, 0, 0],
                           [0, 0, 0, 5, 3, 0, 0],
                           [0, 0, 0, 5, 0, 0, 0]]),
        "output": np.array([[4, 0, 4, 4],
                            [0, 0, 0, 0],
                            [0, 0, 0, 3],
                            [0, 0, 0, 0]])
    },
        "train_1": {
        "input": np.array([[0, 8, 0, 5, 0, 0, 0],
                           [8, 8, 0, 5, 0, 0, 6],
                           [0, 0, 0, 5, 6, 6, 6]]),
        "output": np.array([[0, 8, 0, 0],
                            [8, 8, 0, 6],
                            [0, 0, 6, 6]])
    },
    "train_2": {
       "input" : np.array([[0, 2, 0, 5, 0, 0, 2, 0],
                 [0, 0, 0, 5, 0, 0, 0, 0],
                 [0, 0, 0, 5, 0, 0, 0, 2],
                 [0, 2, 0, 5, 0, 2, 0, 0]]),
        "output": np.array([[0, 2, 0, 0, 2, 0],
                            [0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 2],
                            [0, 2, 0, 2, 0, 0]])
    },
    "train_3":{
        "input":
        np.array([[7, 0, 0, 5, 0, 0, 0, 0],
                           [7, 7, 0, 5, 0, 0, 0, 7],
                           [0, 0, 0, 5, 7, 0, 7, 7],
                           [0, 0, 0, 5, 0, 0, 0, 0]]),
        "output": np.array([[7, 0, 0, 0, 0],
                            [7, 7, 0, 0, 7],
                            [0, 0, 7, 7, 7],
                            [0, 0, 0, 0, 0]])
    }

}

for task_name, task_data in examples.items():
    input_grid = task_data['input']
    output_grid = task_data['output']
    predicted_output = transform(input_grid)
    print(f"{task_name}:")
    print(f"  Input shape: {input_grid.shape}")
    print(f"  Output shape: {output_grid.shape}")
    print(f"  Predicted output shape: {predicted_output.shape}")
    print(f"  Correct Prediction: {np.array_equal(output_grid, predicted_output)}")