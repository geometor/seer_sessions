import numpy as np

def analyze_results(task):
    results = []
    for example in task["train"]:
        input_grid = np.array(example['input'])
        output_grid = np.array(example['output'])
        predicted_output = transform(input_grid)  # using code from above
        
        correct = np.array_equal(predicted_output, output_grid)
        
        diff = predicted_output - output_grid # what was the diff between expected and actual
        
        diff_input = output_grid - input_grid # what changed from input to output
        
        results.append({
            'correct': correct,
            'diff': diff.tolist(),
            'diff_input': diff_input.tolist(),
            'input_shape': input_grid.shape,
            'output_shape': output_grid.shape,
        })
    return results

task = {
    "train": [
        {
            "input": [[5, 0, 7, 7, 7], [7, 7, 7, 7, 7], [7, 1, 7, 7, 7], [7, 7, 7, 4, 7]],
            "output": [[5, 8, 7, 7, 7], [7, 7, 7, 7, 7], [7, 1, 7, 7, 7], [7, 7, 7, 4, 7]]
        },
        {
            "input": [[0, 5, 7, 5, 7, 7, 7], [7, 7, 7, 5, 7, 5, 5], [7, 5, 1, 5, 7, 7, 7], [7, 7, 7, 5, 7, 7, 7]],
            "output": [[8, 5, 7, 5, 7, 7, 7], [7, 7, 7, 5, 7, 5, 5], [7, 5, 1, 5, 7, 7, 7], [7, 7, 7, 5, 7, 7, 7]]
        },
		{
            "input": [[0, 5, 0, 5, 7, 7, 7], [7, 7, 7, 5, 7, 5, 5], [7, 5, 1, 5, 7, 7, 7], [7, 7, 7, 5, 7, 7, 1]],
            "output": [[8, 5, 8, 5, 7, 7, 7], [7, 7, 7, 5, 7, 5, 5], [7, 5, 1, 5, 7, 7, 7], [7, 7, 7, 5, 7, 7, 1]]
        },
        {
            "input": [[0, 5, 0, 5, 0, 7, 7], [7, 7, 7, 5, 7, 5, 5], [7, 5, 1, 5, 7, 7, 0], [7, 7, 7, 5, 7, 7, 1]],
            "output": [[8, 5, 8, 5, 8, 7, 7], [7, 7, 7, 5, 7, 5, 5], [7, 5, 1, 5, 7, 7, 8], [7, 7, 7, 5, 7, 7, 1]]
        }
    ]
}

results = analyze_results(task)
print(results)
