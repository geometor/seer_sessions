import numpy as np

def calculate_changes(input_grid, output_grid):
    """Calculates the number of pixels that changed between input and output."""
    return np.sum(input_grid != output_grid)

def analyze_results(task):
   print(f"Task: {task['name']}")
   for i, example in enumerate(task['train']):
        input_grid = np.array(example['input'])
        expected_output_grid = np.array(example['output'])
        predicted_output_grid = transform(input_grid)  # Assuming 'transform' is your function
        changes_expected = calculate_changes(input_grid, expected_output_grid)
        changes_predicted = calculate_changes(input_grid, predicted_output_grid)
        correct = np.array_equal(predicted_output_grid,expected_output_grid)
        print(f"  Example {i + 1}:")
        print(f"    Changes (Expected): {changes_expected}")
        print(f"    Changes (Predicted): {changes_predicted}")
        print(f"    Correct prediction: {correct}")

# Example usage with a hypothetical 'task' dictionary
# Replace this with a real task
task = {
'name': "Example Task",
'train': [
        {'input': [[0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 1, 0], [0, 0, 0, 0, 0, 0]], 'output': [[0, 0, 0, 0, 8, 0], [0, 0, 0, 8, 1, 8], [0, 0, 0, 0, 8, 0]]},
        {'input': [[0, 0, 0, 0, 0, 0], [0, 0, 1, 0, 2, 0], [0, 0, 0, 0, 0, 0]], 'output': [[0, 0, 8, 0, 2, 0], [0, 0, 1, 8, 2, 0], [0, 0, 8, 0, 0, 0]]},
        {'input': [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0]], 'output': [[0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 1, 0, 0, 0], [0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 2, 0, 0, 0]]},
]
}
analyze_results(task)