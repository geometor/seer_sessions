{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3419,
        "candidates": 813,
        "total": 4232,
        "cached": 0
      },
      "response_time": 24.349729
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4091,
        "candidates": 498,
        "total": 4589,
        "cached": 0
      },
      "response_time": 6.331634
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1749,
        "candidates": 2902,
        "total": 4651,
        "cached": 0
      },
      "response_time": 26.35099
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 4446,
        "candidates": 498,
        "total": 4944,
        "cached": 0
      },
      "response_time": 4.576857
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 643,
        "total": 2440,
        "cached": 0
      },
      "response_time": 9.14055
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2300,
        "candidates": 327,
        "total": 2627,
        "cached": 0
      },
      "response_time": 3.936564
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1578,
        "candidates": 1384,
        "total": 2962,
        "cached": 0
      },
      "response_time": 15.809871
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2757,
        "candidates": 459,
        "total": 3216,
        "cached": 0
      },
      "response_time": 4.529105
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1708,
        "candidates": 1190,
        "total": 2898,
        "cached": 0
      },
      "response_time": 10.585454
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2694,
        "candidates": 609,
        "total": 3303,
        "cached": 0
      },
      "response_time": 7.330248
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 599,
        "total": 2436,
        "cached": 0
      },
      "response_time": 9.121521
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2300,
        "candidates": 599,
        "total": 2899,
        "cached": 0
      },
      "response_time": 6.895922
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1850,
        "candidates": 7672,
        "total": 9522,
        "cached": 0
      },
      "response_time": 64.435068
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 9316,
        "candidates": 787,
        "total": 10103,
        "cached": 0
      },
      "response_time": 7.385614
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2036,
        "candidates": 1046,
        "total": 3082,
        "cached": 0
      },
      "response_time": 11.505739
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2878,
        "candidates": 811,
        "total": 3689,
        "cached": 0
      },
      "response_time": 6.586511
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 518,
        "total": 2395,
        "cached": 0
      },
      "response_time": 7.253788
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2256,
        "candidates": 410,
        "total": 2666,
        "cached": 0
      },
      "response_time": 4.648938
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1660,
        "candidates": 2811,
        "total": 4471,
        "cached": 0
      },
      "response_time": 26.048197
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 4268,
        "candidates": 453,
        "total": 4721,
        "cached": 0
      },
      "response_time": 4.045796
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1704,
        "candidates": 800,
        "total": 2504,
        "cached": 0
      },
      "response_time": 9.96688
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2304,
        "candidates": 727,
        "total": 3031,
        "cached": 0
      },
      "response_time": 7.40347
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "003-py_02-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "004-py_03-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n8 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 80.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n8 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 72.5
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n8 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 80.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n8 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 72.5
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n0 8\n1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 45.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n0 8 8\n1 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n0 8 8 8\n1 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 72.5
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "013-py_08-train": [],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "016-py_10-train": [],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 40.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n8 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n8 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 50.0
      }
    ],
    "019-py_12-train": [],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 40.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n8 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n8 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 50.0
      }
    ],
    "022-py_14-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 40.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n8 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n8 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 50.0
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}