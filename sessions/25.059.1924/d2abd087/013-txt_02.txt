import numpy as np

def examine_examples(task_data):
    results = []
    for example in task_data['train']:
        input_grid = np.array(example['input'])
        output_grid = np.array(example['output'])
        predicted_output = transform(input_grid.copy())  # Use the provided transform function
        
        gray_objects_input = get_objects(input_grid, 5)
        gray_objects_output = get_objects(output_grid, 5)
        blue_objects_output = get_objects(output_grid, 1)
        red_objects_output = get_objects(output_grid, 2)

        results.append({
            'input_gray_objects': len(gray_objects_input),
            'input_gray_object_sizes': [len(obj) for obj in gray_objects_input],
            'output_gray_objects': len(gray_objects_output), # should be zero
            'output_blue_objects': len(blue_objects_output),
            'output_red_objects': len(red_objects_output),
            'predicted_output_match': np.array_equal(predicted_output, output_grid)
        })
    return results

# Assuming 'task' is your dictionary containing the ARC task data
# This line is removed in final submission to comply with instructions.
# task = {} # placeholder
# results = examine_examples(task)
# print(results)
