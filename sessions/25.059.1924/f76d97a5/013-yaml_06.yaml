objects:
  - name: grid
    description: A 2D array of pixels.
    properties:
      - height: int, variable
      - width: int, variable
      - pixels: A set of cells with color values.

  - name: pixel
    description: A single cell in the grid.
    properties:
      - color: int, one of [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] representing a color.
      - row: int, row index
      - column: int, column index
      - adjacent_pixels: set of adjacent pixels (up, down, left, right)
      - diagonally_adjacent_pixels: set of diagonally adjacent pixels

actions:
  - name: preserve_magenta
    description: Copy magenta pixels from the input grid to the output grid.
    input: input_grid, output_grid
    logic: output_grid[r, c] = 6 if input_grid[r, c] == 6

  - name: propagate_magenta
    description: >
      Change gray pixels to magenta if they are diagonally adjacent to a magenta pixel,
      but only if they are not directly adjacent to any magenta pixels.
    input: input_grid, output_grid, magenta_pixels
    logic:
      - Find gray pixels (input_grid[r, c] == 5).
      - Check for diagonal adjacency to magenta.
      - Check for direct adjacency to magenta.
      - If diagonally adjacent and NOT directly adjacent, output_grid[r, c] = 6.

  - name: set_white
    description: Set all other pixels to white.
    input: output_grid
    logic: output_grid[r, c] = 0 for all remaining pixels.