{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nTransforms an input grid by replicating any non-zero value in a row across the rest of that row.\nRows that are all zeros remain unchanged.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid according to the observed rule.\n    \n    Args:\n        input_grid: A 2D numpy array representing the input grid.\n    \n    Returns:\n        A 2D numpy array representing the transformed output grid.\n    \"\"\"\n    output_grid = np.copy(input_grid)  # Start with a copy to preserve original 0 rows.\n    rows, cols = input_grid.shape\n\n    # Iterate through each row\n    for r in range(rows):\n        row = input_grid[r, :]\n        \n        # Check if the row contains any non-zero values\n        if np.any(row != 0):\n            # Iterate through each cell in the row\n            for c in range(cols):\n                # If a non-zero value is found, replicate it to the rest of the row\n                if input_grid[r, c] != 0:\n                    output_grid[r, c:] = input_grid[r, c]\n                    break  # Once a non-zero is found and replicated, move to the next row\n        # else:  Implicitly, rows with all zeros remain as they are in the copied output_grid\n\n    return output_grid\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 7450,
    "candidates_token_count": 327,
    "total_token_count": 7777,
    "cached_content_token_count": 0
  },
  "response_time": 3.871386,
  "response_file": "010-response.json"
}