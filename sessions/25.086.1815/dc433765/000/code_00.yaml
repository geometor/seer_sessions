Input_Grid:
  description: A 2D array of integers representing pixel colors.
  properties:
    size: Variable height and width (1x1 to 30x30).
    pixels: Primarily white (0).
  contains:
    - object: Green_Pixel
      color: 3
      count: 1
      shape: 1x1 pixel
    - object: Yellow_Pixel
      color: 4
      count: 1
      shape: 1x1 pixel

Output_Grid:
  description: A 2D array representing the transformed input grid.
  properties:
    size: Same as the input grid.
    pixels: Primarily white (0).
  contains:
    - object: Green_Pixel
      color: 3
      count: 1
      shape: 1x1 pixel
      position: Modified from input.
    - object: Yellow_Pixel
      color: 4
      count: 1
      shape: 1x1 pixel
      position: Same as input.

Transformation:
  action: Move Green_Pixel
  target: Yellow_Pixel
  rule:
    - description: Green_Pixel moves one step towards Yellow_Pixel.
    - step_1: Identify coordinates of Green_Pixel (Gr, Gc) and Yellow_Pixel (Yr, Yc).
    - step_2: Calculate row difference `dR = Yr - Gr` and column difference `dC = Yc - Gc`.
    - step_3: Determine movement vector `(moveR, moveC)` where `moveR = sign(dR)` and `moveC = sign(dC)`. (sign(x) is +1 if x>0, -1 if x<0, 0 if x=0).
    - step_4: New Green_Pixel coordinates are `(Gr + moveR, Gc + moveC)`.
    - step_5: Update the grid: place Green_Pixel at the new coordinates and change the original Green_Pixel location (Gr, Gc) to white (0).
  invariant: Position of Yellow_Pixel remains unchanged.
  invariant: All white pixels (0) remain unchanged, except for the original location of the Green_Pixel.