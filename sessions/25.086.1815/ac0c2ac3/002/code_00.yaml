task_description: >
  Transforms an input grid by drawing concentric square/rectangular layers centered on the grid. The color of each layer is determined by the color of a non-background pixel from the input grid. The layers are ordered based on the corresponding input pixel's Manhattan distance from the grid center.

grid_properties:
  - dimensions: variable height and width (H, W)
  - center: calculated as ((H-1)//2, (W-1)//2)
  - background_color_input: most frequent color in the input grid
  - background_color_output: determined by the color of the 'furthest' non-background pixel from the input grid center.

objects:
  - type: pixel
    properties:
      - color: integer 0-9
      - location: (row, column)
      - is_background: boolean (true if color == input_background_color)
  - type: non_background_pixel
    properties:
      - color
      - location: (row, column)
      - distance_from_center: Manhattan distance to grid center
  - type: output_layer
    properties:
      - color: derived from a sorted non_background_pixel
      - shape: square or rectangle, centered on the grid
      - size: determined by the rank order of the associated pixel (layer 'i' has size (2i+1)x(2i+1))
      - fill_order: Layers are filled from outermost (largest) to innermost (smallest).

actions:
  - identify_background_color: Find the most frequent color in the input grid.
  - identify_non_background_pixels: Find all pixels with colors different from the input background color.
  - calculate_center: Determine the center coordinates of the grid.
  - calculate_distances: Compute the Manhattan distance from each non_background_pixel to the center.
  - sort_pixels:
      Sort non_background_pixels based on:
      1. Manhattan distance (ascending - closest first).
      2. Original row index (descending - lower rows first for ties).
      3. Original column index (descending - rightmost columns first for ties).
  - determine_output_background: Select the color of the last pixel in the sorted list (the one furthest from the center based on the sort criteria).
  - initialize_output_grid: Create an output grid of the same dimensions as the input, filled entirely with the determined output background color.
  - draw_layers:
      Iterate through the sorted pixels from the second-to-last pixel (index n-2) down to the first pixel (index 0), where n is the number of non-background pixels.
      For each pixel at index `i` in the sorted list:
        - Get its color `C_i`.
        - Define a square/rectangle region centered at the grid center with dimensions (2*i + 1) x (2*i + 1).
        - Fill all cells within this region in the output grid with color `C_i`. Cells outside the grid boundaries are ignored (implicitly handled by looping within grid bounds or clipping). This overwrites the colors from previously drawn, larger layers.

derived_properties:
  - sorted_pixel_list: The list of non_background_pixels after sorting.
  - num_layers: The number of non-background pixels, which equals the number of layers to draw (including the background fill).

example_specifics:
  - example 1: 5 non-background pixels, sorted colors [8, 1, 3, 4, 0]. Output BG = 0. Layers drawn (from outer to inner): 4, 3, 1, 8.
  - example 2: 4 non-background pixels, sorted colors [2, 9, 8, 5]. Output BG = 5. Layers drawn: 8, 9, 2.
  - example 3: 6 non-background pixels, sorted colors [5, 9, 6, 1, 0, 8]. Output BG = 8. Layers drawn: 0, 1, 6, 9, 5.