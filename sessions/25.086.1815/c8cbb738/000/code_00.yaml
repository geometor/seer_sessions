elements:
  - element: grid
    properties:
      - type: input_grid
        attributes:
          - height: variable (10-12 observed)
          - width: variable (8-14 observed)
          - background_color: most frequent color (blue(1), green(3), yellow(4) observed)
      - type: output_grid
        attributes:
          - height: fixed (3 or 5 observed)
          - width: fixed (3 or 5 observed), equals height
          - symmetry: horizontal and vertical
          - patterns: 3 distinct symmetric patterns observed (A: 3x3, B: 5x5, C: 5x5)
  - element: color
    properties:
      - role: background
        value: most frequent color in input
      - role: foreground
        value: colors other than background
        count: k (2 or 4 observed)
        forms: objects/shapes
  - element: object
    properties:
      - type: shape
        formed_by: contiguous pixels of the same foreground color
        examples:
          - shape_type: rectangle
            pixels: 4 (typically corners)
            colors_observed: azure(8), yellow(4), red(2), blue(1)
          - shape_type: cross
            pixels: 4 or 5
            colors_observed: green(3), orange(7)
          - shape_type: diamond
            pixels: 4
            colors_observed: blue(1)

relationships:
  - relationship: input_to_output_size
    notes: |
      Output size N x N seems determined by the count (k) of unique foreground colors.
      If k=4, N=5.
      If k=2, N=3 or N=5 (N=3 if total foreground pixels=9, else N=5 based on examples).
  - relationship: input_colors_shapes_to_output_pattern
    notes: |
      The specific output pattern (A, B, or C) depends on k and N.
      Pattern A (3x3) used when k=2, N=3.
      Pattern B (5x5) used when k=4, N=5.
      Pattern C (5x5) used when k=2, N=5.
  - relationship: color_assignment
    notes: |
      Foreground colors are assigned to specific roles within the output pattern based on shape type and color value.
      Pattern A: Rectangle color -> corners, Cross color -> edges.
      Pattern B: Diamond color -> inner corners; other 3 colors sorted -> outer corners, outer edges, inner edges.
      Pattern C: Rectangle color -> corners, Cross color -> center of edges.
      Background color fills remaining positions.

actions:
  - action: identify_background_color
    actor: agent
    input: input_grid
    output: background_color
  - action: identify_foreground_colors_and_shapes
    actor: agent
    input: input_grid
    output: list of (color, shape_type, pixel_count)
  - action: determine_output_size_and_pattern
    actor: agent
    input: count_of_foreground_colors (k), total_foreground_pixels
    output: N, pattern_type (A, B, or C)
  - action: assign_colors_to_pattern
    actor: agent
    input: foreground_colors_shapes, background_color, pattern_type
    output: mapping of pattern roles (e.g., C1, E, OC, OE, IC, IE, CE) to colors
  - action: construct_output_grid
    actor: agent
    input: N, pattern_type, color_assignment_mapping, background_color
    output: output_grid