task: Identify a specific color from an input grid based on object properties and relationships.
definitions:
  object: A contiguous block of pixels of the same non-white color (cardinal connectivity).
  neighbor_count: The number of other distinct colored objects that an object is cardinally adjacent to.
  hole: A region of white pixels (color 0) completely surrounded by pixels of a single object.
examples:
  - id: train_1
    input_grid: Contains objects: Azure(8), Gray(5), Red(2), Yellow(4), Orange(7).
    output_grid: [[5]] # Gray
    analysis:
      objects:
        - color: 8, neighbor_count: 0, holes: 0
        - color: 5, neighbor_count: 1 (touches Red), holes: 1
        - color: 2, neighbor_count: 2 (touches Gray, Yellow), holes: 0
        - color: 4, neighbor_count: 1 (touches Red), holes: 0
        - color: 7, neighbor_count: 0, holes: 0
      candidates_one_neighbor: [Gray(5), Yellow(4)]
      priority_1_holes: [Gray(5)] # Gray has a hole, Yellow does not.
      selected_object_color: 5 # Gray
      result: 5
  - id: train_2
    input_grid: Contains objects: Magenta(6), Green(3), Blue(1), Orange(7), Red(2), Yellow(4), Azure(8).
    output_grid: [[6]] # Magenta
    analysis:
      objects:
        - color: 6, neighbor_count: 1 (touches Blue), holes: 0
        - color: 3, neighbor_count: 1 (touches Blue), holes: 0
        - color: 1, neighbor_count: 3 (touches Magenta, Green, Red), holes: 0
        - color: 7, neighbor_count: 2 (touches Red, Azure), holes: 0
        - color: 2, neighbor_count: 4 (touches Blue, Orange, Yellow, Azure), holes: 0
        - color: 4, neighbor_count: 1 (touches Red), holes: 0
        - color: 8, neighbor_count: 2 (touches Orange, Red), holes: 0
      candidates_one_neighbor: [Magenta(6), Green(3), Yellow(4)]
      priority_1_holes: [] # None have holes.
      priority_2_color_index: # Compare Magenta(6), Green(3), Yellow(4)
        candidates: [Magenta(6), Green(3), Yellow(4)]
        indices: [6, 3, 4]
        max_index: 6
      selected_object_color: 6 # Magenta (highest index among candidates)
      result: 6
  - id: train_3
    input_grid: Contains objects: Blue(1), Green(3), Red(2), Orange(7).
    output_grid: [[2]] # Red
    analysis:
      objects:
        - color: 1, neighbor_count: 1 (touches Green), holes: 0
        - color: 3, neighbor_count: 2 (touches Blue, Orange), holes: 0
        - color: 2, neighbor_count: 1 (touches Orange), holes: 2
        - color: 7, neighbor_count: 2 (touches Green, Red), holes: 0
      candidates_one_neighbor: [Blue(1), Red(2)]
      priority_1_holes: [Red(2)] # Red has holes, Blue does not.
      selected_object_color: 2 # Red
      result: 2