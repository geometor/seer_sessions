task_description: Map colors from input quadrants to a central 2x2 output square defined by an azure marker.

grid_properties:
  - dimensions: Fixed 10x10 for all examples.
  - background_color: white (0).

input_elements:
  - object: marker_square
    description: A 2x2 square of azure (8) pixels.
    properties:
      - color: azure (8)
      - size: 2x2
    count: 1
  - object: source_pixels
    description: Single pixels scattered in the grid, not white (0) or azure (8).
    properties:
      - color: variable (non-0, non-8)
      - size: 1x1
    count: 4

output_elements:
  - object: result_square
    description: A 2x2 square containing colors derived from the input source_pixels.
    properties:
      - size: 2x2
      - location: Same as the input marker_square's location.
      - colors: Determined by the mapping rule.
    count: 1
  - object: background
    description: The rest of the output grid.
    properties:
      - color: white (0)

relationships_and_actions:
  - action: locate_marker
    input: input_grid
    output: coordinates (top-left row, top-left column) of the marker_square.
  - action: define_quadrants
    input: input_grid_dimensions (10x10)
    output: Four quadrant regions (TL, TR, BL, BR).
      - TL: rows 0-4, cols 0-4
      - TR: rows 0-4, cols 5-9
      - BL: rows 5-9, cols 0-4
      - BR: rows 5-9, cols 5-9
  - action: locate_source_pixels
    input: input_grid
    output: List of four tuples, each containing (color, row, column) for a source_pixel.
  - action: assign_pixels_to_quadrants
    input: source_pixels coordinates, quadrant definitions
    output: Mapping of each source_pixel color to its quadrant (TL, TR, BL, BR). Assumes one pixel per quadrant.
  - action: construct_output
    steps:
      - Initialize an output grid of the same size as the input, filled with the background color (white/0).
      - Get the location (r, c) of the input marker_square.
      - Place the color from the TL source_pixel at output grid position (r, c).
      - Place the color from the TR source_pixel at output grid position (r, c+1).
      - Place the color from the BL source_pixel at output grid position (r+1, c).
      - Place the color from the BR source_pixel at output grid position (r+1, c+1).