Input:
  grid: 2D array of pixels (colors 0-9)
  properties:
    height: variable (12-16 observed)
    width: variable (12-13 observed)
    contains_divider_lines: true
    divider_line_color: variable (1, 2, or 3 observed)
    divider_lines:
      - type: horizontal
        count: 1
        completeness: spans full width
      - type: vertical
        count: 1
        completeness: spans full height
    quadrants: defined by divider lines
      count: 4 (Top-Left, Top-Right, Bottom-Left, Bottom-Right)
      content: each contains one target object

Target Objects:
  location: one per input quadrant
  color: non-black (0) and non-divider_line_color
  shape: contiguous block of pixels
  properties:
    minimal_bounding_box_size: 3x3 (observed in all examples)

Output:
  grid: 2D array of pixels (colors 0-9)
  properties:
    height: 6 (constant)
    width: 6 (constant)
    structure: composed of four 3x3 quadrants

Actions:
  1. Identify: Find the unique color forming complete horizontal and vertical lines (divider_line_color).
  2. Locate Lines: Find the row index (h_row) of the horizontal line and column index (v_col) of the vertical line.
  3. Define Quadrants: Use h_row and v_col to partition the input grid into four subgrids (quadrants).
       - TL: input[0:h_row, 0:v_col]
       - TR: input[0:h_row, v_col+1:width]
       - BL: input[h_row+1:height, 0:v_col]
       - BR: input[h_row+1:height, v_col+1:width]
  4. Find Objects: In each quadrant, find the contiguous object whose color is not black (0) and not the divider_line_color.
  5. Extract Regions: Determine the minimal bounding box for each found object. Extract the corresponding 3x3 region from the input grid. (Note: All examples show exactly 3x3 minimal bounding boxes).
       - region_TL: 3x3 box for TL object
       - region_TR: 3x3 box for TR object
       - region_BL: 3x3 box for BL object
       - region_BR: 3x3 box for BR object
  6. Create Output: Initialize a 6x6 grid with black (0) pixels.
  7. Assemble Output: Copy the extracted regions into the output grid:
       - output[0:3, 0:3] = region_TL
       - output[0:3, 3:6] = region_TR
       - output[3:6, 0:3] = region_BL
       - output[3:6, 3:6] = region_BR