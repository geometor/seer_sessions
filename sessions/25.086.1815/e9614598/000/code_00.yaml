task_elements:
  - item: grid
    description: A 2D array of pixels with colors represented by integers 0-9.
    properties:
      - size: Variable height and width (up to 30x30).
      - background_color: Primarily white (0).

input_specifics:
  - object: blue_pixel
    count: 2
    color: 1 (blue)
    properties:
      - role: Marker points defining a location.
      - coordinates: (r1, c1), (r2, c2)

output_specifics:
  - object: blue_pixel
    count: 2
    color: 1 (blue)
    properties:
      - Unchanged from input. Position preserved.
  - object: green_cross
    color: 3 (green)
    shape: '+' sign (plus)
    size: 3x3 pixels (center pixel plus 4 orthogonal neighbors)
    properties:
      - Added to the input grid.
      - location: Centered at the midpoint between the two input blue pixels.

transformation:
  - action: identify_markers
    inputs: input_grid
    outputs: coordinates of the two blue pixels [(r1, c1), (r2, c2)]
  - action: calculate_midpoint
    inputs: coordinates [(r1, c1), (r2, c2)]
    outputs: midpoint_coordinates (r_mid, c_mid)
    logic: r_mid = (r1 + r2) / 2, c_mid = (c1 + c2) / 2 (using integer division)
  - action: copy_grid
    inputs: input_grid
    outputs: output_grid_base
  - action: draw_cross
    inputs:
      - output_grid_base
      - midpoint_coordinates (r_mid, c_mid)
      - color: 3 (green)
    outputs: final_output_grid
    logic: Change the color of the pixel at (r_mid, c_mid) and its four orthogonal neighbors (r_mid-1, c_mid), (r_mid+1, c_mid), (r_mid, c_mid-1), (r_mid, c_mid+1) to green (3). Overwrite existing colors if necessary.

relationships:
  - The location of the green_cross is determined solely by the locations of the two blue_pixels in the input.
  - The center of the green_cross is the geometric midpoint between the two blue_pixels.