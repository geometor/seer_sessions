grid_dimensions:
  - height: 11
  - width: 11

pixels:
  - color: 0 (white) # background
  - color: 2 (red)   # barrier/static element
  - color: 3 (green) # source/fill element

input_composition:
  - object: green_pixel
    count: 1
    properties: [source_of_action]
  - object: red_pixels
    count: variable (0 to many)
    properties: [barrier, static]
  - object: white_pixels
    count: variable
    properties: [background, potentially_transformable]

transformation_logic:
  - type: conditional
    condition: presence of red_pixels
    if_present:
      action: flood_fill
      parameters:
        start_point: location of the input green_pixel
        fill_color: 3 (green)
        target_color: 0 (white)
        barriers: locations of red_pixels, grid_boundaries
        connectivity: 4-directional (von Neumann neighborhood)
      effect: changes reachable white_pixels to green_pixels
    if_absent:
      action: generate_pattern
      parameters:
        pattern_definition:
          - type: column_fill
            columns: [1, 3, 5, 7, 9]
            row_range: [0, 8]
            fill_color: 3 (green)
          - type: row_fill
            rows: [0, 2, 4, 6, 8]
            column_range: [1, 9]
            fill_color: 3 (green)
          - type: row_fill
            rows: [10] # last row
            column_range: [0, 10] # full width
            fill_color: 3 (green)
        target_color: 0 (white) # only fill white pixels with the pattern
      effect: changes specific white_pixels to green_pixels based on the fixed pattern

preserved_elements:
  - object: red_pixels
    property: position and color remain unchanged
  - object: initial green_pixel
    property: position and color remain unchanged