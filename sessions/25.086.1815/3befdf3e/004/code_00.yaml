task_description: Identify a single non-white object with a distinct frame (C1) and content (C2) color. Expand the object's bounding box outwards, fill the new border area (excluding corners) with C1, and swap C1 and C2 within the area corresponding to the original object's footprint.

examples:
  - id: 1
    input_object:
      colors: { frame: 2, content: 7 }
      bbox: [3, 3, 6, 6] # (min_r, min_c, max_r, max_c)
      size: [4, 4] # (height, width)
    transformation:
      expansion_amount: 2 # pixels per side
      border_fill:
        color: frame_color (2)
        shape: Extend sides by 2 pixels, leaving corners empty.
      content_swap: Yes
    output_object:
      bbox: [1, 1, 8, 8]
      size: [8, 8]

  - id: 2
    input_object:
      colors: { frame: 4, content: 6 }
      bbox: [3, 3, 5, 5]
      size: [3, 3]
    transformation:
      expansion_amount: 1 # pixels per side
      border_fill:
        color: frame_color (4)
        shape: Extend sides by 1 pixel, leaving corners empty.
      content_swap: Yes
    output_object:
      bbox: [2, 2, 6, 6]
      size: [5, 5]

  - id: 3
    input_object:
      colors: { frame: 3, content: 1 }
      bbox: [3, 2, 6, 5]
      size: [4, 4]
    transformation:
      expansion_amount: 2 # pixels per side
      border_fill:
        color: frame_color (3)
        shape: Extend sides by 2 pixels, leaving corners empty.
      content_swap: Yes
    output_object:
      bbox: [1, 0, 8, 7]
      size: [8, 8]

hypothesized_rule_dependency:
  condition: Input object size
  rules:
    - if_size: [3, 3]
      expansion: 1
    - if_size: [4, 4] # Assuming this generalizes beyond 4x4?
      expansion: 2
    - else: # Need a default or more examples
      expansion: ? # Perhaps related to smallest dimension?

common_elements:
  - Background color is white (0).
  - Single primary object per input grid.
  - Object has a frame (C1) and content (C2). C1 is usually the outermost color, C2 is inside.
  - Output grid size matches input grid size.
  - Expanded border area is filled only along the extended rows and columns, not the corners created by the expansion.
  - Pixels within the original object's footprint have their colors swapped (C1 -> C2, C2 -> C1).