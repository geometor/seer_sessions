{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3523,
        "candidates": 642,
        "total": 4165,
        "cached": 0
      },
      "response_time": 10.088197
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4027,
        "candidates": 820,
        "total": 4847,
        "cached": 0
      },
      "response_time": 9.760377
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1781,
        "candidates": 500,
        "total": 2281,
        "cached": 0
      },
      "response_time": 7.649649
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2143,
        "candidates": 387,
        "total": 2530,
        "cached": 0
      },
      "response_time": 4.655275
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1638,
        "candidates": 2975,
        "total": 4613,
        "cached": 0
      },
      "response_time": 30.544779
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3437,
        "candidates": 2725,
        "total": 6162,
        "cached": 0
      },
      "response_time": 24.849037
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 5958,
        "candidates": 223,
        "total": 6181,
        "cached": 0
      },
      "response_time": 5.41098
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 4407,
        "candidates": 280,
        "total": 4687,
        "cached": 0
      },
      "response_time": 3.222458
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1973,
        "candidates": 365,
        "total": 2338,
        "cached": 0
      },
      "response_time": 6.316599
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2198,
        "candidates": 571,
        "total": 2769,
        "cached": 0
      },
      "response_time": 6.415592
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1822,
        "candidates": 805,
        "total": 2627,
        "cached": 0
      },
      "response_time": 10.861457
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2421,
        "candidates": 605,
        "total": 3026,
        "cached": 0
      },
      "response_time": 6.586196
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1856,
        "candidates": 1048,
        "total": 2904,
        "cached": 0
      },
      "response_time": 15.769374
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2699,
        "candidates": 1085,
        "total": 3784,
        "cached": 0
      },
      "response_time": 10.885367
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 353,
        "total": 2214,
        "cached": 0
      },
      "response_time": 6.209771
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2073,
        "candidates": 512,
        "total": 2585,
        "cached": 0
      },
      "response_time": 5.782212
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1761,
        "candidates": 1232,
        "total": 2993,
        "cached": 0
      },
      "response_time": 13.432582
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2784,
        "candidates": 499,
        "total": 3283,
        "cached": 0
      },
      "response_time": 4.619867
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1747,
        "candidates": 4667,
        "total": 6414,
        "cached": 0
      },
      "response_time": 40.972224
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 6210,
        "candidates": 776,
        "total": 6986,
        "cached": 0
      },
      "response_time": 7.81137
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "0 3 4 0\n2 2 2 2\n0 3 4 0\n0 3 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 87.5
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n4 4 1 4 4 4\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 75.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "4 3 4 0\n2 2 2 2\n4 3 4 0\n0 3 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "4 0 4 0 6 4 0 4\n0 4 0 4 6 0 4 0\n4 0 4 0 6 4 0 4\n0 4 0 4 6 0 4 0\n8 8 8 8 6 8 8 8\n4 0 4 0 6 4 0 4\n0 4 0 4 6 0 4 0\n4 0 4 0 6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 29,
        "percent_correct": 54.6875
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "4 0 1 4 0 4\n0 4 1 0 4 0\n9 9 1 9 9 9\n4 0 1 4 0 4\n0 4 1 0 4 0\n4 0 1 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 52.77777777777778
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "4 3 4 0\n2 2 2 2\n4 3 4 0\n0 3 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "4 0 4 0 6 4 0 4\n0 4 0 4 6 0 4 0\n4 0 4 0 6 4 0 4\n0 4 0 4 6 0 4 0\n8 8 8 8 6 8 8 8\n4 0 4 0 6 4 0 4\n0 4 0 4 6 0 4 0\n4 0 4 0 6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 29,
        "percent_correct": 54.6875
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "4 0 1 4 0 4\n0 4 1 0 4 0\n9 9 1 9 9 9\n4 0 1 4 0 4\n0 4 1 0 4 0\n4 0 1 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 52.77777777777778
      }
    ],
    "007-py_04-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "4 3 4 4\n2 2 2 2\n4 3 4 4\n4 3 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4\n8 8 8 8 6 8 8 8\n4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 23.4375
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "4 4 1 4 4 4\n4 4 1 4 4 4\n9 9 1 9 9 9\n4 4 1 4 4 4\n4 4 1 4 4 4\n4 4 1 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 30.555555555555557
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "4 3 4 4\n2 2 2 2\n4 3 4 4\n4 3 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4\n8 8 8 8 6 8 8 8\n4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4\n4 4 4 4 6 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 23.4375
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "4 4 1 4 4 4\n4 4 1 4 4 4\n9 9 1 9 9 9\n4 4 1 4 4 4\n4 4 1 4 4 4\n4 4 1 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 30.555555555555557
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 87.5
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 77.77777777777779
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 87.5
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 77.77777777777779
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 87.5
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 77.77777777777779
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 87.5
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "0 4 1 4 0 0\n0 4 1 4 0 0\n9 4 1 4 9 9\n0 4 1 4 0 0\n0 4 1 4 0 0\n0 4 1 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 77.77777777777779
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 87.5
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "0 4 1 4 0 0\n0 4 1 4 0 0\n9 9 1 9 9 9\n0 4 1 4 0 0\n0 4 1 4 0 0\n0 4 1 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 72.22222222222221
      }
    ],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "expected_output": "4 4 4 0\n4 2 4 2\n4 4 4 0\n0 3 0 0",
        "transformed_output": "0 3 0 0\n2 2 2 2\n0 3 0 0\n0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "expected_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 4 4 4 0 0\n8 8 8 4 6 4 8 8\n0 0 0 4 4 4 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "transformed_output": "0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n8 8 8 8 6 8 8 8\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0\n0 0 0 0 6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 87.5
      },
      {
        "example": 3,
        "input": "0 0 1 0 0 0\n0 0 1 0 0 0\n9 9 1 9 9 9\n0 0 1 0 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "expected_output": "0 0 1 0 0 0\n0 4 4 4 0 0\n9 4 1 4 9 9\n0 4 4 4 0 0\n0 0 1 0 0 0\n0 0 1 0 0 0",
        "transformed_output": "4 4 1 4 4 4\n4 4 1 4 4 4\n9 9 1 9 9 9\n4 4 1 4 4 4\n4 4 1 4 4 4\n4 4 1 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 30.555555555555557
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}