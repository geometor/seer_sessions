examples:
  - example_1:
      input_dimensions: 2x3
      output_dimensions: 4x6
      input_colors: [8]
      output_colors: [8]
      input_top_left: 8
      output_top_left: 8
      input_in_output: True
      offsets: [(1, 1)] # Input appears once at offset (1,1)
      transformation: The input grid is doubled in both dimensions. The original grid is placed at offset (1,1) within the new grid, effectively creating a one-pixel border around it.
  - example_2:
      input_dimensions: 3x3
      output_dimensions: 3x6
      input_colors: [0, 1]
      output_colors: [0, 1]
      input_top_left: 1
      output_top_left: 1
      input_in_output: True
      offsets: [(0, 0), (0, 3)] # Input appears twice, side-by-side, at (0,0) and (0,3)
      transformation: The input grid is duplicated horizontally.
  - example_3:
      input_dimensions: 3x6
      output_dimensions: 3x12
      input_colors: [0, 6, 8]
      output_colors: [0, 6, 8]
      input_top_left: 6
      output_top_left: 6
      input_in_output: True
      offsets: [(0, 0), (0, 6)]
      transformation: The input grid is duplicated horizontally.
  - example_4:
     input_dimensions: 4x7
     output_dimensions: 5x13
     input_colors: [1]
     output_colors: [1]
     input_top_left: 1
     output_top_left: 1
     input_in_output: False  # Note:  The code says False, but this will need adjustment.
     offsets: []
     transformation: The input grid appears to be *almost* duplicated and placed side-by-side with one row and one column added. It will need closer scrutiny.