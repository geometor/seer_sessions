{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nIdentify and shift colored objects (blue, yellow, and red) upwards by specific amounts,\nwhile respecting grid boundaries and preserving the position of other colored pixels.\n- Blue (color 1) objects shift up by 4 rows.\n- Yellow (color 4) objects shift up by 2 rows.\n- Red (color 2) objects shift up by 1 row.\n\"\"\"\n\nimport numpy as np\n\ndef find_colored_objects(grid, color):\n    \"\"\"Finds the coordinates of all pixels of a specified color.\"\"\"\n    return np.argwhere(grid == color)\n\ndef shift_object_up(grid, coords, shift_amount):\n    \"\"\"Shifts a set of coordinates upwards by a specified amount, respecting grid boundaries.\"\"\"\n    new_grid = np.copy(grid)\n\n    # Remove original object\n    for r, c in coords:\n        new_grid[r, c] = 0\n\n    # Add object back at shifted position, checking boundaries\n    for r, c in coords:\n        new_r = max(0, r - shift_amount)  # Ensure new row is within bounds (>=0)\n        new_grid[new_r, c] = grid[r,c]\n\n    return new_grid\n\ndef transform(input_grid):\n    \"\"\"Transforms the input grid by shifting colored objects upwards.\"\"\"\n    output_grid = np.copy(input_grid)\n\n    # Shift blue objects (color 1) up by 4\n    blue_coords = find_colored_objects(output_grid, 1)\n    if len(blue_coords) > 0:\n        output_grid = shift_object_up(output_grid, blue_coords, 4)\n\n    # Shift yellow objects (color 4) up by 2\n    yellow_coords = find_colored_objects(output_grid, 4)\n    if len(yellow_coords) > 0:\n        output_grid = shift_object_up(output_grid, yellow_coords, 2)\n\n    # Shift red objects (color 2) up by 1\n    red_coords = find_colored_objects(output_grid, 2)\n    if len(red_coords) > 0:\n        output_grid = shift_object_up(output_grid, red_coords, 1)\n        \n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 8414,
    "candidates_token_count": 535,
    "total_token_count": 8949,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 6.199817,
  "response_file": "018-response.json"
}