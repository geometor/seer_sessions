observations:
  - example_0:
      input:
        objects:
          - color: 0  # black
            shape: rectangle
            dimensions: 5x5
          - color: 8  # azure
            positions: [(2,0), (2,2), (2,4)]
        grid_size: 5x5

      output:
        objects:
          - color: 8  # azure
            shape: rectangle
            dimensions: 5x5
        grid_size: 5x5
      transformation: The output grid is completely filled with azure.  The input azure pixels act as a seed.
  - example_1:
      input:
        objects:
          - color: 0
            shape: rectangle
            dimensions: 6x6
          - color: 8
            positions:  [(2,1), (2,4), (3,5)]
        grid_size: 6x6
      output:
        objects:
          - color: 0
            shape: partial rectangle
            positions:  top three rows, first column
          - color: 8
            shape: fills rest of grid
        grid_size: 6x6
      transformation:  The output keeps the original grid and extends azure (8) vertically from each original azure pixel, filling in the area.
  - example_2:
      input:
        objects:
          - color: 0
            shape: rectangle
            dimensions: 4x4
          - color: 8
            positions: [(2,1), (2,2), (3,0), (3,3)]
        grid_size: 4x4

      output:
        objects:
           - color: 0
             shape: partial rectangle
             positions: top two rows, first col
           - color: 8
             shape: fills rest of grid
        grid_size: 4x4
      transformation: The output keeps the original grid and extends azure (8) vertically from each original azure pixel, filling in the area.
