observations:
  - object: grid
    properties:
      - dimensions: input_rows x input_columns, output_rows x (input_columns / 2)
      - data_type: integer (0-9, representing colors)
    transformations:
      - description: "Pixels with values 3 (green) or 4 (yellow) in the input grid are replaced by 6 (magenta) in the output grid *only if* they fall within the first half of the columns, after rounding down. All other pixels are unchanged from the left side of input."
        conditions:
          - "input pixel value is 3 or 4 AND input pixel column index < (input_columns // 2)"
        actions:
            output_pixel_value = 6
  - color_counts:
      example_1:
        input: {0: 11, 3: 4, 4: 3}
        output: {0: 5, 6: 4}
      example_2:
        input: {0: 10, 3: 4, 4: 4}
        output: {0: 5, 6: 4}
      example_3:
        input: {0: 9, 3: 4, 4: 5}
        output: {0: 4, 6: 5}
      example_4:
        input: {0: 13, 3: 2, 4: 3}
        output: {0: 5, 6: 4}
      example_5:
        input: {0: 13, 3: 3, 4: 2}
        output: {0: 6, 6: 3}