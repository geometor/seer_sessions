{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\n1. Identify Source Rows: Scan the input grid row by row. A row is considered a \"source row\" if it contains *any* non-zero values.\n\n2. Propagate Source Rows:\n   - If a row is a source row, copy it directly to the output grid.\n   - For all subsequent rows, replace the *entire* row with the content of the *last encountered* source row.\n   - Continue this replacement until another source row is found or the end of the input grid is reached.\n\n3. Handle Non-Source Initial Rows: If rows at the beginning of the grid are *not* source rows, copy to the output unchanged.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    # Initialize output_grid\n    input_grid = np.array(input_grid)\n    output_grid = []\n\n    # Identify source rows (rows where any element is not zero)\n    source_rows_indices = [i for i, row in enumerate(input_grid) if np.any(row != 0)]\n\n    last_source_row = None\n\n    for i, row in enumerate(input_grid):\n        if i in source_rows_indices:\n            # Copy the source row to output and update last_source_row\n            output_grid.append(row.tolist())\n            last_source_row = row.tolist()\n        else:\n            # If not a source row, check if we have a last_source_row\n            if last_source_row is not None:\n                # Replace the entire row with the last_source_row\n                output_grid.append(last_source_row)\n            else:\n                # If no last_source_row (initial rows), copy as is\n                output_grid.append(row.tolist())\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3581,
    "candidates_token_count": 411,
    "total_token_count": 3992,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 5.9329
}