examples:
  - example_id: 1
    input:
      objects:
        - color: 2
          shape: irregular
          count: 8 # Pixel count, not distinct objects
        - color: 1
          shape: irregular
          count: 13
        - color: 0
          shape: irregular
          count: 4
    output:
      selection_criteria: "2x2 subgrid containing colors 1 and 2"
      extracted_region: "Top-left corner of the largest contiguous block of color 1"
    notes: Colors 1 and 2 are in proximity

  - example_id: 2
    input:
      objects:
        - color: 8
          shape: irregular
          count: 7
        - color: 6
          shape: irregular
          count: 8
        - color: 0
          shape: irregular
          count: 1
    output:
      selection_criteria: "Single pixel of the most frequent color, if unique, otherwise -1"
      extracted_region: "Top-left corner of the input grid"
    notes: Color 8 is one of most frequent, output contains only color 8

  - example_id: 3
    input:
      objects:
        - color: 5
          shape: irregular
          count: 21
        - color: 2
          shape: irregular
          count: 24
        - color: 0
          shape: irregular
          count: 4
    output:
      selection_criteria: "2x2 subgrid containing both colors 5 and 2"
      extracted_region: "Region where colors 5 and 2 are adjacent"
    notes:  The interaction area of colors 5 and 2 is prioritized