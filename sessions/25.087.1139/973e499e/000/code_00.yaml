task_description: Tile the output grid with filtered versions of the input grid.
constants:
  background_color: 0 # white
definitions:
  input_grid:
    type: 2D array of integers (pixels)
    properties:
      height: H
      width: W
      square: H == W
      size: S = H = W
  output_grid:
    type: 2D array of integers (pixels)
    properties:
      height: S * H
      width: S * W
transformations:
  - name: Create Output Grid
    input: input_grid dimensions (H, W), scale factor S=H
    output: empty output_grid of size (S*H) x (S*W)
  - name: Generate Subgrids and Tile
    scope: Iterate through each cell (r, c) of the input_grid
    variables:
      input_cell_value: V = input_grid[r][c]
      output_subgrid_origin: (R_start, C_start) = (r * S, c * S)
    actions:
      - name: Filter Input Grid
        input: input_grid, input_cell_value (V)
        output: temporary_subgrid (S x S)
        logic: |
          Create temporary_subgrid of size S x S.
          For each cell (ir, ic) from 0 to S-1:
            If input_grid[ir][ic] == V:
              temporary_subgrid[ir][ic] = V
            Else:
              temporary_subgrid[ir][ic] = background_color (0)
      - name: Place Subgrid in Output
        input: output_grid, temporary_subgrid, output_subgrid_origin (R_start, C_start)
        action: |
          Copy the contents of temporary_subgrid into the output_grid,
          starting at position (R_start, C_start).
          output_grid[R_start + ir][C_start + ic] = temporary_subgrid[ir][ic]
          for ir from 0 to S-1, ic from 0 to S-1.
relationships:
  - Each cell (r, c) in the input grid determines the filter value (V) for one S x S subgrid in the output.
  - The position (r, c) of the input cell determines the position (r * S, c * S) of the top-left corner of the corresponding subgrid in the output.
  - The content of each output subgrid is a filtered representation of the entire input grid.