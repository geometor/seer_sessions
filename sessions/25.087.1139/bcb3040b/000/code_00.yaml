task_description: "Fill the space between two aligned red markers based on original pixel color."
elements:
  - object: grid
    description: A 2D array of pixels with colors 0-9.
  - object: pixel
    properties:
      - color: Integer (0=white, 1=blue, 2=red, 3=green, ...)
      - location: (row, column) tuple
  - object: red_marker
    description: A pixel with color red (2). Acts as a boundary marker.
    count_constraint: Exactly two red markers must exist in the input for the transformation to occur.
relationships:
  - type: alignment
    description: The two red markers must lie on the same row, same column, or same main diagonal.
    properties:
      - axis: horizontal (same row), vertical (same column), diagonal (abs(row_diff) == abs(col_diff))
  - type: betweenness
    description: Pixels located on the line segment strictly between the two aligned red markers.
actions:
  - action: find_markers
    input: input_grid
    output: list_of_red_marker_locations
  - action: check_alignment
    input: list_of_red_marker_locations
    output: alignment_type (horizontal, vertical, diagonal, none)
  - action: iterate_between
    input: marker_locations, alignment_type, input_grid
    output: list_of_pixels_to_change
  - action: apply_color_change
    input: pixel_location, input_grid_color_at_location
    output: output_grid_color
    rule: |
      If input color is white (0), output color is red (2).
      If input color is blue (1), output color is green (3).
      Otherwise, output color is the same as input color.
  - action: modify_grid
    input: input_grid, list_of_pixels_to_change, color_change_rule
    output: output_grid