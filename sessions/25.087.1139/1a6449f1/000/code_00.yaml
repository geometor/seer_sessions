task_elements:
  - element: grid
    description: The input and output are 2D grids of colored pixels (0-9).
  - element: horizontal_line
    description: A contiguous horizontal sequence of pixels of the same non-white color.
    properties:
      - color: The color of the pixels in the line.
      - row_index: The row where the line is located.
      - start_column: The starting column index of the line.
      - end_column: The ending column index of the line.
      - width: The number of pixels in the line (end_column - start_column + 1).
  - element: line_pair
    description: Two horizontal lines identified in the input grid.
    relationship:
      - type: identity
        property: color
        value: Must have the same color.
      - type: alignment
        property: start_column
        value: Must have the same start_column.
      - type: alignment
        property: end_column
        value: Must have the same end_column.
      - type: vertical_separation
        property: row_index
        value: Must be in different rows (one above the other).
      - type: distinction
        property: width
        value: This pair must have the maximum width among all such qualifying pairs in the grid.
  - element: target_subgrid
    description: The portion of the input grid that becomes the output grid.
    relationship:
      - type: spatial_containment
        property: boundaries
        value: Defined by the coordinates of the widest line_pair found.
        details:
          - top_row: row_index of the top line + 1
          - bottom_row: row_index of the bottom line - 1
          - left_column: start_column of the lines + 1
          - right_column: end_column of the lines - 1
actions:
  - action: find_horizontal_lines
    description: Identify all maximal horizontal lines of non-white colors in the input grid.
    inputs: input_grid
    outputs: list_of_lines (with properties: color, row, start_col, end_col, width)
  - action: find_widest_aligned_pair
    description: Filter the identified lines to find pairs with the same color, same start/end columns, and select the pair with the maximum width.
    inputs: list_of_lines
    outputs: widest_pair (top_line, bottom_line) or null if no pair exists.
  - action: extract_subgrid
    description: Extract the subgrid based on the coordinates derived from the widest_pair.
    inputs: input_grid, widest_pair
    outputs: output_grid
    details: Extracts region from row (top_line.row + 1) to (bottom_line.row - 1) and column (top_line.start_col + 1) to (top_line.end_col - 1). Handles cases where the resulting dimensions might be zero or negative (e.g., adjacent lines or lines of width 1 or 2), likely resulting in an empty grid.