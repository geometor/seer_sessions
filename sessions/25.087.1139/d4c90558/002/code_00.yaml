task_description: Create an output grid summarizing colored shapes from the input grid, where each output row represents one input shape and its length is determined by the count of gray pixels within the shape's bounding box. The rows are ordered based on this gray pixel count.

definitions:
  - &background_color white # Color 0
  - &ignored_color_1 gray # Color 5
  - &shape_colors any color except *background_color and *ignored_color_1

input_grid:
  description: A 2D grid of pixels with integer values 0-9 representing colors. Contains various colored shapes and potentially gray pixels.
  objects:
    - type: shape
      properties:
        - color: *shape_colors
        - pixels: A set of contiguous pixels of the same color.
        - bounding_box: The minimum rectangle enclosing the shape's pixels.
        - gray_count: The number of gray pixels located within the shape's bounding box.

output_grid:
  description: A 2D grid where each row summarizes one shape from the input.
  properties:
    - height: Equal to the number of identified shapes in the input.
    - width: Equal to the maximum gray_count found among all shapes.
    - background: *background_color (used for padding)
  rows:
    - description: Each row corresponds to one input shape.
    - content: Contains the shape's color repeated N times, where N is the shape's gray_count. The remainder of the row is padded with *background_color.
    - ordering: Rows are ordered based on the gray_count of their corresponding shapes, in ascending order. If multiple shapes have the same gray_count, their relative order is currently undefined by the examples but might follow top_row or another secondary sort key if needed (though not observed yet).

actions:
  - identify_shapes: Find all distinct, contiguous shapes of *shape_colors in the input_grid.
  - calculate_bounding_box: For each identified shape, determine its bounding box (min_row, max_row, min_col, max_col).
  - count_grays_in_bbox: For each shape, count the number of *ignored_color_1 pixels within its calculated bounding_box.
  - determine_output_dimensions: Set output height to the number of shapes and output width to the maximum gray_count found.
  - sort_shapes: Order the identified shapes based on their gray_count in ascending order.
  - construct_output: Create the output_grid, populating each row according to the sorted shapes and their gray_counts, padding with *background_color.

constants:
  - background_color_value: 0
  - gray_color_value: 5