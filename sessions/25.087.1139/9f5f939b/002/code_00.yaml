description: "Identifies specific azure pixels based on surrounding patterns and changes their color."
input_features:
  - object: grid
    type: 2D array of integers (0-9)
    properties:
      - contains pixels of different colors.
      - azure pixels (8) are the primary focus.
      - blue pixels (1) act as markers.
output_features:
  - object: grid
    type: 2D array of integers (0-9)
    properties:
      - same dimensions as the input grid.
      - most pixels retain their original color.
      - specific azure pixels (8) are changed to yellow (4).
transformation:
  actions:
    - action: identify target pixels
      conditions:
        - pixel color is azure (8).
    - action: check neighborhood conditions for target pixels
      conditions:
        - Condition A: Pixels exactly two steps away in all four cardinal directions (up, down, left, right) must exist within the grid boundaries AND be blue (1).
        - Condition B: Pixels exactly one step away (immediately adjacent) in all four cardinal directions must exist within the grid boundaries AND be azure (8).
    - action: change color
      conditions:
        - Both Condition A AND Condition B are met for an azure pixel.
      effect:
        - Change the color of the central azure pixel to yellow (4).
    - action: retain color
      conditions:
        - Pixel is not azure (8).
        - OR Pixel is azure (8) but either Condition A or Condition B (or both) is not met.
      effect:
        - Pixel color remains unchanged from the input.
colors:
  - azure: 8 (target, potentially changes, also required for adjacency check)
  - blue: 1 (marker color at distance 2)
  - yellow: 4 (replacement color)
geometry:
  - involves checking pixels at specific relative cardinal positions:
    - distance 1: (-1, 0), (1, 0), (0, -1), (0, 1)
    - distance 2: (-2, 0), (2, 0), (0, -2), (0, 2)
  - grid boundary checks are essential.