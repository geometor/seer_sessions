task_description: Relocate gray objects into the gap defined by static red structures.

static_elements:
  - color: 2 # Red
  - role: Define a gap or separation between its constituent parts. Remains unchanged in the output.

mobile_elements:
  - color: 5 # Gray
  - role: Objects to be moved. Their original positions are cleared (set to white 0).
  - properties:
      - Consist of one or more connected pixels (including diagonals).
      - Retain their original shape and size after transformation.

background:
  - color: 0 # White
  - role: Empty space, including the gap between red structures and the original locations of gray objects after they are moved.

transformation_rule:
  - Identify red pixel coordinates and gray pixel coordinates.
  - Determine the primary separation axis of the red structures:
      - Calculate the bounding box of all red pixels.
      - Check for contiguous empty rows within the bounding box (excluding top/bottom edges) -> Vertical Separation (Horizontal Gap).
      - If no horizontal gap, check for contiguous empty columns within the bounding box (excluding left/right edges) -> Horizontal Separation (Vertical Gap).
  - Identify individual connected gray objects from the input grid.
  - Clear the original locations of all gray pixels in the output grid.
  - Based on the separation axis:
      - **If Vertical Separation (Horizontal Gap):**
          - Identify the gap rows (`gap_min_r`, `gap_max_r`).
          - For each gray object:
              - Determine if it's above (`obj_max_r < gap_min_r`) or below (`obj_min_r > gap_max_r`) the gap.
              - Calculate the vertical shift (`delta_r`) needed to move the object's edge adjacent to the gap boundary (top edge for objects above, bottom edge for objects below).
              - Translate the object vertically by `delta_r`, preserving its horizontal position and shape, painting the pixels gray in the output grid.
      - **If Horizontal Separation (Vertical Gap):**
          - Identify the gap columns (`gap_min_c`, `gap_max_c`).
          - For each gray object:
              - Determine if it's left (`obj_max_c < gap_min_c`) or right (`obj_min_c > gap_max_c`) of the gap.
              - Calculate the horizontal shift (`delta_c`) needed to move the object's edge adjacent to the gap boundary (right edge for objects left, left edge for objects right).
              - Translate the object horizontally by `delta_c`, preserving its vertical position and shape, painting the pixels gray in the output grid.
  - Red pixels remain unchanged from input to output.