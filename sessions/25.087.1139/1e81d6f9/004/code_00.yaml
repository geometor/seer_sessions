task_description: Transforms the input grid based on the counts and locations of single green and single yellow pixels.

definitions:
  - object: single_pixel
    color: [green, yellow]
    description: A pixel of a given color (green=3, yellow=4) that has no neighbors of the same color, considering 8-way adjacency (including diagonals).
  - property: count
    applies_to: single_pixel
    description: The total number of single pixels of a specific color (N_green for green, N_yellow for yellow).
  - property: locations
    applies_to: single_pixel
    description: A list of (row, col) coordinates for each single pixel of a specific color.
  - property: top_leftmost
    applies_to: locations
    description: The location with the minimum row index, breaking ties with the minimum column index.
  - property: second_top_leftmost
    applies_to: locations
    description: The location that comes second when locations are sorted by row, then column.

transformation_rules:
  - condition:
      - N_green == 2
      - N_yellow == 6
    action:
      - find: single yellow pixel locations (Loc_yellow)
      - identify: the top_leftmost pixel in Loc_yellow (P_keep)
      - modify: change color to white (0) for all pixels in Loc_yellow except P_keep.
  - condition:
      - N_green == 6
      - N_yellow == 7
    action:
      - find: single green pixel locations (Loc_green)
      - identify: the second_top_leftmost pixel in Loc_green (P_keep)
      - modify: change color to white (0) for all pixels in Loc_green except P_keep.
  - condition: otherwise
    action:
      - modify: No changes to the grid.

output_grid: The modified grid resulting from applying the first matching transformation rule, or the original input grid if no rule matches.