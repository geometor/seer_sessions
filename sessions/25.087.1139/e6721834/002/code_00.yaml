task_description: Copy shapes from a source region onto the background of a target region.

definitions:
  - name: grid_split
    description: The input grid is divided into two equal subgrids (halves).
    properties:
      - orientation: Determined by comparing background colors of potential halves. If vertical halves have different backgrounds, split is vertical. Else, if horizontal halves have different backgrounds, split is horizontal.
      - criteria: Split occurs along the midpoint (height/2 or width/2). Input dimensions (height or width) must be even for the corresponding split.
      - background_color: The most frequent pixel color within a subgrid.
  - name: source_region
    description: One of the two subgrids resulting from the grid_split.
    properties:
      - background_color: Must be magenta (6) or azure (8).
      - content: Contains background pixels and potentially other pixels forming shapes.
  - name: target_region
    description: The other subgrid resulting from the grid_split.
    properties:
      - background_color: Any color except the one defining the source_region (cannot be both 6 and 8 simultaneously).
      - content: Contains background pixels and potentially other pixels (ignored in output construction).
  - name: output_grid
    description: The final transformed grid.
    properties:
      - dimensions: Same height and width as the source_region (and target_region).
      - background_color: Same as the target_region's background color.
      - content: Composed of the target_region's background color and the non-background pixels (shapes) from the source_region.

actions:
  - name: identify_split_and_regions
    description: Analyze the input grid to find the split line and determine which half is Source and which is Target based on background colors (6 or 8 for Source).
  - name: create_base_output
    description: Generate a new grid with the dimensions of one half and fill it entirely with the target_region's background color.
  - name: transfer_shapes
    description: Iterate through each pixel of the source_region. If a pixel's color is *not* the source_region's background color, copy that pixel's color to the *exact same coordinates* (row, column) in the output_grid, overwriting the background color at that position.

flow:
  - step: Perform identify_split_and_regions on the input grid.
  - step: Perform create_base_output using the identified target_region background and dimensions.
  - step: Perform transfer_shapes from the identified source_region to the base output grid.
  - step: Return the resulting output_grid.