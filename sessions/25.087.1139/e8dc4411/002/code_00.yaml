task_description: "Identify a unique source pixel (not background, not white) in the input grid. Based on the color of this source pixel, apply a specific, predefined pattern of relative coordinates. Change the pixels in the output grid at these target coordinates (source location + relative offset) to the source pixel's color. Other pixels remain unchanged."

examples:
  - id: 1
    input_grid: Grid(shape=(13, 15), background=1 (blue))
    objects:
      - type: source_pixel
        color: 3 (green)
        location: (7, 4)
        properties: Unique pixel that is not background (1) and not white (0).
      - type: background
        color: 1 (blue)
      - type: decoration
        color: 0 (white)
        locations: [(5, 6), (6, 5), (6, 6), (6, 7), (7, 6)]
    action:
      type: apply_pattern
      source_object: source_pixel (3 at 7, 4)
      target_color: 3 (green)
      relative_coordinates: [(0, 0), (1, -1), (1, 0), (1, 1), (2, -2), (2, 0), (3, -3), (3, -2), (3, -1), (4, -4), (4, -2), (5, -4), (5, -3)] # Corrected pattern
    output_grid: Grid(shape=(13, 15)) showing the pattern applied.

  - id: 2
    input_grid: Grid(shape=(12, 14), background=8 (azure))
    objects:
      - type: source_pixel
        color: 2 (red)
        location: (5, 6)
        properties: Unique pixel that is not background (8) and not white (0).
      - type: background
        color: 8 (azure)
      - type: decoration
        color: 0 (white)
        locations: [(3, 4), (4, 3), (4, 5), (5, 4)]
    action:
      type: apply_pattern
      source_object: source_pixel (2 at 5, 6)
      target_color: 2 (red)
      relative_coordinates: [(0, 0), (1, -1), (1, 1), (2, 0), (2, 2), (3, 1), (3, 3), (4, 2), (4, 4), (5, 3), (5, 5), (6, 4), (6, 6)]
    output_grid: Grid(shape=(12, 14)) showing the pattern applied.

  - id: 3
    input_grid: Grid(shape=(12, 16), background=4 (yellow))
    objects:
      - type: source_pixel
        color: 8 (azure)
        location: (4, 11)
        properties: Unique pixel that is not background (4) and not white (0).
      - type: background
        color: 4 (yellow)
      - type: decoration
        color: 0 (white)
        locations: [(5, 6), (5, 7), (5, 9), (5, 10), (6, 6), (6, 7), (6, 9), (6, 10), (7, 8), (8, 6), (8, 7), (8, 9), (8, 10), (9, 6), (9, 7), (9, 9), (9, 10)]
    action:
      type: apply_pattern
      source_object: source_pixel (8 at 4, 11)
      target_color: 8 (azure)
      relative_coordinates: [(-4, 0), (-4, 1), (-4, 3), (-4, 4), (-3, 0), (-3, 1), (-3, 3), (-3, 4), (-2, 2), (-1, 0), (-1, 1), (-1, 3), (-1, 4), (0, 0), (0, 1), (0, 3), (0, 4)]
    output_grid: Grid(shape=(12, 16)) showing the pattern applied.

validation:
  - strategy: Identify background, find unique non-background/non-white source pixel, select pattern based on source color, apply pattern relative to source pixel.
  - constraints: Assumes exactly one source pixel per input grid. Assumes patterns are fixed per color.
