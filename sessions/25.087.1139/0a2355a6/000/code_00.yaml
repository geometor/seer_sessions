Input:
  grid_elements:
    - type: pixel
      color: white (0)
      role: background
    - type: pixel
      color: azure (8)
      role: object_component
  objects:
    - type: contiguous_group
      description: Shapes formed by connected azure (8) pixels.
      properties:
        - shape
        - position (defined by top-left coordinate)
        - count (N)

Output:
  grid_elements:
    - type: pixel
      color: white (0)
      role: background
    - type: pixel
      colors: [blue (1), red (2), green (3), yellow (4)]
      role: object_component
  objects:
    - type: contiguous_group
      description: Shapes identical to input objects but with new colors.
      properties:
        - shape (preserved from input)
        - position (preserved from input)
        - color (determined by rule)

Transformation:
  action: identify_objects
  input: input_grid
  criteria: contiguous azure (8) pixels
  output: list_of_objects (N objects)

  action: sort_objects
  input: list_of_objects
  criteria: top-left coordinate (row first, then column)
  output: sorted_list_of_objects

  action: determine_color_sequence
  input: N (count of objects)
  output: color_sequence (list of N colors)
  rule:
    - N=3 -> [1, 1, 3]
    - N=4 -> [2, 1, 3, 1]
    - N=5 -> [4, 4, 3, 2, 1]
    - Note: The specific colors are Blue(1), Red(2), Green(3), Yellow(4).

  action: recolor_objects
  input: sorted_list_of_objects, color_sequence
  process: Assign the k-th color from color_sequence to the k-th object in sorted_list_of_objects.
  output: output_grid (where each object's azure pixels are replaced by its assigned color)

Relationships:
  - Each azure object in the input maps uniquely to a colored object in the output.
  - The shape and position of objects are preserved.
  - The color assigned to an object depends on the total number of objects (N) and the object's rank in the sorted order.