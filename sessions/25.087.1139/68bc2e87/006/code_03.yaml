Context:
  InputGrid: A 2D grid of pixels with colors 0-9.
  OutputGrid: Either a 1x1 grid containing Red (2) or an empty grid ([]).
  Background: Color Azure (8) forms a background connected to the grid border.
  CoreObjects: Contiguous regions (layers) of single colors nested within the background.
  TargetColor: Red (2).

Input Analysis:
  - All examples have an Azure (8) background connected to the border.
  - Nested structures are formed by contiguous regions of solid colors.
  - Layers are adjacent, moving inwards from the background.
  - Adjacency is orthogonal.

Transformation Process:
  Action: Identify Layer Sequence
    - Start: Find the full Azure (8) region connected to the border. Mark it as 'visited'.
    - Iteration:
      - Find all unvisited pixels orthogonally adjacent to the 'current region'.
      - Determine the unique colors of these adjacent pixels.
      - Condition 1: If no adjacent unvisited pixels exist, STOP iteration.
      - Condition 2: If adjacent pixels have *more than one* unique color, STOP iteration.
      - Condition 3: If adjacent pixels have *exactly one* unique color:
        - Record this color in a sequence.
        - Find the full contiguous region of this color starting from these adjacent pixels.
        - Mark this new region as 'visited'.
        - Set this new region as the 'current region'.
        - Continue iteration.
  Action: Determine Output
    - Check if the recorded sequence of layer colors contains Red (2).
    - If True: Output is `[[2]]`.
    - If False: Output is `[]`.

Output Properties:
  - If Red (2) layer found: 1x1 grid, color Red (2).
  - Otherwise: Empty grid ([]).

Example Specifics:
  - Example 1: Layers [Yellow(4), Green(3), Red(2)]. Red is present. Output: [[2]].
  - Example 2: Layers [Green(3), Yellow(4), Green(3)]. Red is absent. Output: [].
  - Example 3: Layers [Yellow(4), Green(3)]. Stops because Green(3) borders Yellow(4) and Red(2). Red not in sequence. Output: [].
  - Example 4: Layers [Green(3)]. Red is absent. Output: [].