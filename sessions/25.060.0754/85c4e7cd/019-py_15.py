import numpy as np

def print_grid_info(grid, title):
    print(f"\n{title}:\n{grid}")
    print(f"Shape: {grid.shape}")

# Example Usage (replace with actual grids)
input_grid = np.array([
    [2, 2, 2, 2, 2, 2, 2],
    [2, 4, 4, 4, 4, 4, 2],
    [2, 4, 8, 4, 8, 4, 2],
    [2, 4, 4, 4, 4, 4, 2],
    [2, 4, 8, 4, 8, 4, 2],
    [2, 4, 4, 4, 4, 4, 2],
    [2, 2, 2, 2, 2, 2, 2]
])
expected_output_grid = np.array([
   [2, 2, 2, 2, 2, 2, 2],
   [2, 8, 8, 8, 8, 8, 2],
   [2, 8, 4, 8, 4, 8, 2],
   [2, 8, 8, 8, 8, 8, 2],
   [2, 8, 4, 8, 4, 8, 2],
   [2, 8, 8, 8, 8, 8, 2],
   [2, 2, 2, 2, 2, 2, 2]
])

print_grid_info(input_grid, "Input Grid")
print_grid_info(expected_output_grid, "Expected Output Grid")
#print_grid_info(transform(input_grid), "Actual Output Grid") # need transform defined

input_grid2 = np.array([
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
    [8, 1, 2, 1, 2, 1, 2, 1, 2, 1, 8],
    [8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
    [8, 1, 2, 1, 2, 1, 2, 1, 2, 1, 8],
    [8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
    [8, 1, 2, 1, 2, 1, 2, 1, 2, 1, 8],
    [8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
    [8, 1, 2, 1, 2, 1, 2, 1, 2, 1, 8],
    [8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
])
expected_output_grid2 = np.array([
  [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
  [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8],
  [8, 2, 1, 2, 1, 2, 1, 2, 1, 2, 8],
  [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8],
  [8, 2, 1, 2, 1, 2, 1, 2, 1, 2, 8],
  [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8],
  [8, 2, 1, 2, 1, 2, 1, 2, 1, 2, 8],
  [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8],
  [8, 2, 1, 2, 1, 2, 1, 2, 1, 2, 8],
  [8, 2, 2, 2, 2, 2, 2, 2, 2, 2, 8],
  [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
])

print_grid_info(input_grid2, "Input Grid 2")
print_grid_info(expected_output_grid2, "Expected Output Grid 2")
#print_grid_info(transform(input_grid2), "Actual Output Grid 2")

input_grid3 = np.array([
    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
    [4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4],
    [4, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 4],
    [4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4],
    [4, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 4],
    [4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4],
    [4, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 4],
    [4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4],
    [4, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 4],
    [4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4],
    [4, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 4],
    [4, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 4],
    [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
])

expected_output_grid3 = np.array([
  [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
  [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
  [4, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 4],
  [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
  [4, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 4],
  [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
  [4, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 4],
  [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
  [4, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 4],
  [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
  [4, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 4],
  [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
  [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
])

print_grid_info(input_grid3, "Input Grid 3")
print_grid_info(expected_output_grid3, "Expected Output Grid 3")
#print_grid_info(transform(input_grid3), "Actual Output Grid 3")