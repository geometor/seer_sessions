import json
from pathlib import Path
import numpy as np

task_file = Path('data/training/d515c4bd.json')
with open(task_file, 'r') as f:
    task = json.load(f)

def transform(input_grid):
    """
    Transforms the input grid according to the observed rule.
    """
    # Initialize output grid with the same dimensions as the input.
    input_grid = np.array(input_grid)
    output_grid = np.zeros_like(input_grid)
    rows, cols = input_grid.shape
    
    # Iterate over rows, mapping colors per row.
    for i in range(rows):
       for j in range(cols):
        if i == 0:
            output_grid[i,j] = 3
        elif i == 1:
            output_grid[i,j] = 4
        elif i == 2:
            output_grid[i,j] = 2

    return output_grid.tolist()

def compare_grids(grid1, grid2):
     return np.array_equal(np.array(grid1), np.array(grid2))
    
results = {}
for i, example in enumerate(task['train']):
    input_grid = example['input']
    expected_output = example['output']
    predicted_output = transform(input_grid)    
    results[i] = {
      'correct': compare_grids(predicted_output, expected_output),
      'input': input_grid,
      'expected': expected_output,
      'predicted': predicted_output,
      }

print(json.dumps(results, indent=2))