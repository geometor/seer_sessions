{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4321,
        "candidates": 660,
        "total": 4981,
        "cached": 0
      },
      "response_time": 9.983393
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4842,
        "candidates": 597,
        "total": 5439,
        "cached": 0
      },
      "response_time": 6.801535
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 510,
        "total": 2407,
        "cached": 0
      },
      "response_time": 7.330222
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2268,
        "candidates": 857,
        "total": 3125,
        "cached": 0
      },
      "response_time": 8.749067
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2108,
        "candidates": 3439,
        "total": 5547,
        "cached": 0
      },
      "response_time": 30.070262
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 5343,
        "candidates": 1162,
        "total": 6505,
        "cached": 0
      },
      "response_time": 10.558759
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 2414,
        "candidates": 5572,
        "total": 7986,
        "cached": 0
      },
      "response_time": 44.799926
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 7787,
        "candidates": 830,
        "total": 8617,
        "cached": 0
      },
      "response_time": 7.768444
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 677,
        "total": 2574,
        "cached": 0
      },
      "response_time": 8.558217
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2435,
        "candidates": 519,
        "total": 2954,
        "cached": 0
      },
      "response_time": 5.059225
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1769,
        "candidates": 2738,
        "total": 4507,
        "cached": 0
      },
      "response_time": 26.220392
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4309,
        "candidates": 467,
        "total": 4776,
        "cached": 0
      },
      "response_time": 4.966949
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1718,
        "candidates": 2984,
        "total": 4702,
        "cached": 0
      },
      "response_time": 23.562837
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 4497,
        "candidates": 412,
        "total": 4909,
        "cached": 0
      },
      "response_time": 3.820865
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 535,
        "total": 2432,
        "cached": 0
      },
      "response_time": 7.828907
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2294,
        "candidates": 261,
        "total": 2555,
        "cached": 0
      },
      "response_time": 3.879186
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1513,
        "candidates": 2407,
        "total": 3920,
        "cached": 0
      },
      "response_time": 23.848167
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3714,
        "candidates": 416,
        "total": 4130,
        "cached": 0
      },
      "response_time": 4.561977
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1668,
        "candidates": 2375,
        "total": 4043,
        "cached": 0
      },
      "response_time": 21.034097
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 3856,
        "candidates": 956,
        "total": 4812,
        "cached": 0
      },
      "response_time": 10.097438
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 553,
        "total": 2450,
        "cached": 0
      },
      "response_time": 8.769668
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2311,
        "candidates": 189,
        "total": 2500,
        "cached": 0
      },
      "response_time": 3.010791
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1441,
        "candidates": 3469,
        "total": 4910,
        "cached": 0
      },
      "response_time": 28.800704
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 4706,
        "candidates": 536,
        "total": 5242,
        "cached": 0
      },
      "response_time": 5.765649
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1787,
        "candidates": 2749,
        "total": 4536,
        "cached": 0
      },
      "response_time": 23.010891
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 4335,
        "candidates": 552,
        "total": 4887,
        "cached": 0
      },
      "response_time": 6.604859
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "8 1 8\n1 8 1\n1 8 1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "8 1 8\n1 1 8\n8 8 1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "8 1 8\n1 1 8\n1 8 1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "1 1 8\n8 8 1\n1 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "8 8 8\n8 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "8 8 0\n8 8 0\n8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "0 1 8\n0 1 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "005-py_03-train": [],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "8 8 0\n8 8 1\n0 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "8 1 0\n1 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "8 8 0\n1 8 1\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "1 1 8\n8 8 0\n0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "0 0 0\n0 8 0\n1 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "0 0 0\n0 8 0\n1 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "1 1 8\n8 1 1\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "1 1 1\n1 1 1\n8 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "8 1 8\n1 0 1\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "1 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "011-py_07-train": [],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "1 1 8\n8 1 1\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "1 1 1\n1 1 1\n8 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "8 1 8\n1 0 1\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "1 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "013-py_09-train": [],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "1 1 8\n8 1 1\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "1 1 1\n1 1 1\n8 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "8 1 8\n1 0 1\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "1 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "0 8 8\n0 8 1\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "0 0 1\n0 0 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "8 1 8\n8 8 1\n1 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "8 8 1\n1 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "017-py_12-train": [],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "8 8 1 0 0 0 0 0\n8 1 8 0 8 1 8 0\n8 8 8 0 1 8 8 0\n0 0 0 0 8 8 1 0\n0 8 1 8 0 0 0 0\n0 1 1 8 0 0 0 0\n0 8 8 1 0 8 8 8\n0 0 0 0 0 8 8 8\n0 0 0 0 0 1 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "019-py_14-train": [],
    "020-py_15-train": [],
    "022-py_16-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "8 0 8\n8 0 1\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "1 8 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "8 0 8\n8 0 1\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "8 8 1\n1 1 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "024-py_17-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "8 8 8\n1 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "8 8 1\n8 1 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "0 0 0\n8 8 8\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "0 0 1\n0 0 8\n0 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "026-py_18-train": [
      {
        "example": 1,
        "input": "8 8 8 0 0 0 0 0 0\n1 8 8 0 8 1 8 0 0\n8 8 8 0 1 1 8 0 0\n0 0 0 0 8 8 8 0 0\n0 8 8 1 0 0 0 0 0\n0 8 8 8 0 0 8 1 8\n0 8 1 8 0 0 1 8 1\n0 0 0 0 0 0 1 8 1\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 8 1\n1 8 1",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "0 8 8 1 0 0 0 0 0\n0 8 1 8 0 8 1 8 0\n0 8 8 8 0 1 8 8 0\n0 0 0 0 0 8 8 1 0\n0 0 8 1 8 0 0 0 0\n0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 8 8\n0 0 0 0 0 0 8 8 8\n0 0 0 0 0 0 1 8 8",
        "expected_output": "8 1 8\n1 1 8\n8 8 1",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 8 8 0 0\n8 8 8 0 8 8 8 0 0\n8 8 8 0 1 8 8 0 0\n8 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 8 1 8\n8 1 8 0 0 0 1 1 8\n8 8 1 0 0 0 1 8 1\n1 8 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 8\n1 1 8\n1 8 1",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "0 0 1 1 8 0 0 0 0\n0 0 8 8 1 0 8 1 1\n0 0 1 1 8 0 1 1 1\n0 0 0 0 0 0 8 1 8\n8 8 8 0 0 0 0 0 0\n8 8 1 0 8 1 8 0 0\n1 8 8 0 1 8 8 0 0\n0 0 0 0 8 8 1 0 0\n0 0 0 0 0 0 0 0 0",
        "expected_output": "8 1 1\n1 1 1\n8 1 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      }
    ]
  },
  "best_train_results": {
    "passed": 3,
    "total": 4
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}