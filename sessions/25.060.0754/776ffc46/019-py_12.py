import numpy as np

def get_changed_colors(input_grid, output_grid):
    """
    Identifies color changes between input and output grids.
    """

    changed_colors_in = set()
    changed_colors_out = set()

    for r in range(input_grid.shape[0]):
        for c in range(input_grid.shape[1]):
            if input_grid[r,c] != output_grid[r,c]:
                changed_colors_in.add(input_grid[r,c])
                changed_colors_out.add(output_grid[r,c])
    return changed_colors_in, changed_colors_out

task_data = {
    "train": [
        {
            "input": [
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
            ],
            "output": [
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
            ]
        },
        {
            "input": [
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
            ],
            "output": [
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
            ]
        },
        {
            "input": [
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
            ],
            "output": [
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
            ]
        },
        {
            "input": [
                [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 4],
                [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            ],
            "output": [
                [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 7],
                [7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7]
            ]
        },
        {
            "input": [
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 2, 2, 2, 2, 2, 2, 5, 5, 2],
                [2, 5, 5, 2, 5, 5, 5, 5, 2, 5, 5, 2],
                [2, 5, 5, 2, 5, 5, 5, 5, 2, 5, 5, 2],
                [2, 5, 5, 2, 5, 5, 5, 5, 2, 5, 5, 2],
                [2, 5, 5, 2, 5, 5, 5, 5, 2, 5, 5, 2],
                [2, 5, 5, 2, 5, 5, 5, 5, 2, 5, 5, 2],
                [2, 5, 5, 2, 2, 2, 2, 2, 2, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 2],
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
            ],
            "output": [
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 1],
                [1, 5, 5, 1, 5, 5, 5, 5, 1, 5, 5, 1],
                [1, 5, 5, 1, 5, 5, 5, 5, 1, 5, 5, 1],
                [1, 5, 5, 1, 5, 5, 5, 5, 1, 5, 5, 1],
                [1, 5, 5, 1, 5, 5, 5, 5, 1, 5, 5, 1],
                [1, 5, 5, 1, 5, 5, 5, 5, 1, 5, 5, 1],
                [1, 5, 5, 1, 1, 1, 1, 1, 1, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 1],
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
            ]
        }
    ]
}

for i, example in enumerate(task_data["train"]):
  input_grid = np.array(example["input"])
  output_grid = np.array(example["output"])
  changed_in, changed_out = get_changed_colors(input_grid, output_grid)
  print (f"Example {i}:")
  print (f"changed_in: {changed_in}")
  print (f"changed_out: {changed_out}")