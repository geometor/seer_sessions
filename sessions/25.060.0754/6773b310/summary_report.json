{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4641,
        "candidates": 614,
        "total": 5255,
        "cached": 0
      },
      "response_time": 8.36715
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 5116,
        "candidates": 670,
        "total": 5786,
        "cached": 0
      },
      "response_time": 6.947279
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1977,
        "candidates": 640,
        "total": 2617,
        "cached": 0
      },
      "response_time": 8.64724
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2478,
        "candidates": 339,
        "total": 2817,
        "cached": 0
      },
      "response_time": 18.289658
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1590,
        "candidates": 2422,
        "total": 4012,
        "cached": 0
      },
      "response_time": 41.339368
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3809,
        "candidates": 433,
        "total": 4242,
        "cached": 0
      },
      "response_time": 4.937306
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1684,
        "candidates": 3279,
        "total": 4963,
        "cached": 0
      },
      "response_time": 29.462857
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 4759,
        "candidates": 551,
        "total": 5310,
        "cached": 0
      },
      "response_time": 5.784443
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1977,
        "candidates": 633,
        "total": 2610,
        "cached": 0
      },
      "response_time": 8.859418
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2470,
        "candidates": 362,
        "total": 2832,
        "cached": 0
      },
      "response_time": 4.547946
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1613,
        "candidates": 1660,
        "total": 3273,
        "cached": 0
      },
      "response_time": 15.139672
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3069,
        "candidates": 491,
        "total": 3560,
        "cached": 0
      },
      "response_time": 4.86361
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1742,
        "candidates": 1491,
        "total": 3233,
        "cached": 0
      },
      "response_time": 16.624163
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3028,
        "candidates": 485,
        "total": 3513,
        "cached": 0
      },
      "response_time": 5.452503
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1977,
        "candidates": 676,
        "total": 2653,
        "cached": 0
      },
      "response_time": 9.756178
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2514,
        "candidates": 626,
        "total": 3140,
        "cached": 0
      },
      "response_time": 6.624942
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1876,
        "candidates": 1602,
        "total": 3478,
        "cached": 0
      },
      "response_time": 17.865693
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3273,
        "candidates": 925,
        "total": 4198,
        "cached": 0
      },
      "response_time": 7.692512
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 2175,
        "candidates": 1347,
        "total": 3522,
        "cached": 0
      },
      "response_time": 15.523691
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 3318,
        "candidates": 983,
        "total": 4301,
        "cached": 0
      },
      "response_time": 8.208584
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1977,
        "candidates": 464,
        "total": 2441,
        "cached": 0
      },
      "response_time": 7.105579
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2303,
        "candidates": 381,
        "total": 2684,
        "cached": 0
      },
      "response_time": 4.85558
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1632,
        "candidates": 8192,
        "total": 9824,
        "cached": 0
      },
      "response_time": 65.094916
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 9621,
        "candidates": 530,
        "total": 10151,
        "cached": 0
      },
      "response_time": 6.031505
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1781,
        "candidates": 2220,
        "total": 4001,
        "cached": 0
      },
      "response_time": 24.005651
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 3795,
        "candidates": 228,
        "total": 4023,
        "cached": 0
      },
      "response_time": 3.122226
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "1 1 1\n1 1 1\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "0 1 0\n0 1 1\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "1 1 1\n0 1 1\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "1 1 1\n0 1 1\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "1 1 0\n1 0 1\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "1 0 1\n1 0 0\n0 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "1 1 0\n0 1 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "1 1 1\n1 1 1\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "0 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "0 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "0 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "0 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "022-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "1 1 1\n1 1 1\n1 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "1 1 1\n1 1 1\n1 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "1 1 1\n1 1 1\n1 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "1 1 1\n1 1 1\n1 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "023-py_13-train": [],
    "024-py_14-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 1 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "0 0 0\n0 1 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "0 0 0\n0 1 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "0 0 0\n0 1 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "025-py_15-train": [],
    "026-py_16-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 6 0 8 0 0 6\n0 0 6 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 6 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 0 0 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 6 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "1 0 1\n1 0 0\n0 0 0",
        "transformed_output": "0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 6 8 0 0 6\n0 0 0 8 0 0 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n6 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n0 0 0 8 0 0 6 8 6 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 0 0\n0 6 0 8 0 6 0 8 0 0 6",
        "expected_output": "0 0 0\n0 0 1\n1 0 0",
        "transformed_output": "0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 6 0 8 0 0 6\n0 0 0 8 0 0 0 8 0 6 0\n0 6 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 6 0 0\n0 6 0 8 0 0 0 8 0 0 6\n0 0 0 8 6 0 0 8 0 0 0",
        "expected_output": "0 1 1\n0 0 0\n0 0 1",
        "transformed_output": "0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 8 0 0 0 8 0 0 6\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 6 0 8 0 0 0\n6 0 0 8 0 0 6 8 0 0 0\n0 0 0 8 0 0 0 8 0 6 0\n8 8 8 8 8 8 8 8 8 8 8\n0 0 0 8 0 0 0 8 0 0 0\n0 0 6 8 0 0 0 8 6 0 0\n0 0 0 8 0 6 0 8 0 0 0",
        "expected_output": "0 0 1\n0 1 0\n0 0 0",
        "transformed_output": "0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}