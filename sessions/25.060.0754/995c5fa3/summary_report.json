{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4121,
        "candidates": 604,
        "total": 4725,
        "cached": 0
      },
      "response_time": 12.122838
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4587,
        "candidates": 721,
        "total": 5308,
        "cached": 0
      },
      "response_time": 10.448328
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1847,
        "candidates": 509,
        "total": 2356,
        "cached": 0
      },
      "response_time": 9.525247
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2218,
        "candidates": 174,
        "total": 2392,
        "cached": 0
      },
      "response_time": 4.643365
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1425,
        "candidates": 441,
        "total": 1866,
        "cached": 0
      },
      "response_time": 10.935639
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 1662,
        "candidates": 209,
        "total": 1871,
        "cached": 0
      },
      "response_time": 13.144993
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1460,
        "candidates": 1682,
        "total": 3142,
        "cached": 0
      },
      "response_time": 19.792536
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2944,
        "candidates": 209,
        "total": 3153,
        "cached": 0
      },
      "response_time": 8.096543
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1847,
        "candidates": 841,
        "total": 2688,
        "cached": 0
      },
      "response_time": 20.148502
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2550,
        "candidates": 522,
        "total": 3072,
        "cached": 0
      },
      "response_time": 10.40334
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1773,
        "candidates": 2468,
        "total": 4241,
        "cached": 0
      },
      "response_time": 25.838264
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4039,
        "candidates": 767,
        "total": 4806,
        "cached": 0
      },
      "response_time": 12.075989
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 2018,
        "candidates": 1275,
        "total": 3293,
        "cached": 0
      },
      "response_time": 16.21196
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3088,
        "candidates": 590,
        "total": 3678,
        "cached": 0
      },
      "response_time": 9.490492
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1847,
        "candidates": 465,
        "total": 2312,
        "cached": 0
      },
      "response_time": 8.986269
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2173,
        "candidates": 208,
        "total": 2381,
        "cached": 0
      },
      "response_time": 5.34505
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1459,
        "candidates": 2335,
        "total": 3794,
        "cached": 0
      },
      "response_time": 26.352628
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3587,
        "candidates": 474,
        "total": 4061,
        "cached": 0
      },
      "response_time": 6.71802
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1721,
        "candidates": 2339,
        "total": 4060,
        "cached": 0
      },
      "response_time": 23.642209
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 3858,
        "candidates": 503,
        "total": 4361,
        "cached": 0
      },
      "response_time": 9.163255
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1847,
        "candidates": 563,
        "total": 2410,
        "cached": 0
      },
      "response_time": 9.486113
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2271,
        "candidates": 380,
        "total": 2651,
        "cached": 0
      },
      "response_time": 12.565623
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1630,
        "candidates": 802,
        "total": 2432,
        "cached": 0
      },
      "response_time": 11.550345
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 2233,
        "candidates": 245,
        "total": 2478,
        "cached": 0
      },
      "response_time": 11.336405
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1496,
        "candidates": 1222,
        "total": 2718,
        "cached": 0
      },
      "response_time": 13.636443
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2514,
        "candidates": 332,
        "total": 2846,
        "cached": 0
      },
      "response_time": 22.179858
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n8 8 8\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "3 4 4\n0 4 4\n0 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "3 4 4\n4 4 4\n4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "3 4 4\n4 4 4\n4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "3 4 4\n0 4 4\n0 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "011-py_07-train": [],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "3 4 4\n4 4 4\n2 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "3 4 4\n4 4 4\n2 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "3 4 4\n4 4 4\n2 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "3 4 4\n4 4 4\n2 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "3 4 4\n4 4 4\n2 2 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "3 4 4\n4 4 4\n2 2 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "3 4 4\n4 4 4\n2 2 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "3 4 4\n4 4 4\n2 2 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "2 2 2\n6 6 6\n6 6 6\n2 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n4 4 4\n6 6 6\n4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "2 2 2\n4 4 4\n6 6 6\n4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n2 2 2\n4 4 4\n4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "017-py_11-train": [],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "019-py_13-train": [],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "022-py_15-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "2 2 2\n4 4 4\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n4 4 4\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "2 2 2\n4 4 4\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n4 4 4\n2 2 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "023-py_16-train": [],
    "024-py_17-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "2 2 2\n4 4 4\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n4 4 4\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "2 2 2\n4 4 4\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2\n4 4 4\n2 2 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "026-py_18-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 0 0 5 0 0 5 5 0\n5 5 5 5 0 5 5 5 5 0 5 5 5 5",
        "expected_output": "2 2 2\n8 8 8\n3 3 3",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 5 5 5 0 5 5 5 5\n0 5 5 0 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "3 3 3\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 5 5 5\n5 0 0 5 0 5 5 5 5 0 5 0 0 5\n5 5 5 5 0 5 5 5 5 0 5 0 0 5",
        "expected_output": "8 8 8\n2 2 2\n4 4 4",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 5 5 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5\n5 5 5 5 0 5 0 0 5 0 5 5 5 5",
        "expected_output": "2 2 2\n4 4 4\n2 2 2",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 4
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}