import numpy as np

def find_top_left_nonzero(grid):
    """Finds the top-leftmost non-zero pixel's coordinates."""
    rows, cols = np.nonzero(grid)
    if len(rows) > 0:
        # Find the minimum row index
        min_row = np.min(rows)
        # Find the columns with the minimum row index
        min_cols = cols[rows == min_row]
        # Find the minimum column index among those
        min_col = np.min(min_cols)
        return min_row, min_col
    return None

examples = [
    (np.array([[0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 1],
              [0, 0, 0, 0, 0, 0]]),
     np.array([[0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0]])),

    (np.array([[0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 1, 0, 0],
              [0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0]]),
     np.array([[0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 8, 0, 7],
              [0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0]])),

    (np.array([[0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 1, 0, 0, 0, 0]]),
     np.array([[0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0],
              [0, 0, 0, 0, 0, 0, 0, 0]]))
    ]

for i, (input_grid, output_grid) in enumerate(examples):
    target = find_top_left_nonzero(input_grid)
    print(f"Example {i+1}:")
    print(f"  Input:\n{input_grid}")
    print(f"  Output:\n{output_grid}")    
    if target:
        print(f"  Top-left non-zero pixel: {target}, Color: {input_grid[target]}")
    else:
        print("  No non-zero pixel found.")
    print("---")