Task: Reverse the sequence of repeating patterns along a diagonal.

Input_Grid:
  - Type: 2D array of integers (pixels)
  - Properties: Contains a background color (0) and one or more non-background colors.
  - Contains multiple instances of a small, repeating pattern.
  - Pattern instances are arranged along a diagonal path.

Pattern:
  - Type: Object, defined by a small group of connected non-background pixels.
  - Properties:
    - Structure: Relative positions and colors of non-background pixels within a bounding box (typically 2x2).
    - Anchor Point: The top-left coordinate of the bounding box where an instance of the pattern is located.
    - Identification: Determined by the arrangement of non-background pixels relative to the top-leftmost non-background pixel in the entire grid. The bounding box includes background pixels if they are necessary to distinguish the pattern from other arrangements.
  - Instances: Multiple occurrences of the pattern exist in the input grid.

Pattern_Instances:
  - Type: Collection of Anchor Points.
  - Properties:
    - Location: Each instance has a unique anchor point (row, column) in the input grid.
    - Arrangement: Arranged linearly along a diagonal (either top-left to bottom-right or bottom-left to top-right).
    - Order: Can be sequenced based on their position (e.g., sorted by row, then column).

Output_Grid:
  - Type: 2D array of integers (pixels)
  - Properties:
    - Size: Same dimensions as the Input_Grid.
    - Content: Contains the same Pattern instances as the Input_Grid, but placed at different locations.
    - Background: Initially filled with the background color (0).

Transformation:
  - Action: Reordering
  - Object: Pattern_Instances
  - Rule: The sequence of Pattern_Instances found in the Input_Grid is reversed.
  - Implementation:
    1. Identify the Pattern based on the first occurrence found scanning top-to-bottom, left-to-right.
    2. Find all Anchor Points where this Pattern occurs in the Input_Grid.
    3. Sort these Input Anchor Points based on their position (row, then column) to establish the original sequence.
    4. Create a list of Target Anchor Points by reversing the sorted list of Input Anchor Points.
    5. Create an empty Output_Grid (filled with background color).
    6. For each index `i` from 0 to N-1 (where N is the number of instances):
       - Retrieve the Target Anchor Point at index `i` from the reversed list.
       - Draw the identified Pattern onto the Output_Grid at this Target Anchor Point.