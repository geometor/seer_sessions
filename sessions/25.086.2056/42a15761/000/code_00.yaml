task_context:
  grid_properties:
    - dimensions: Input and output grids have identical dimensions in each example.
    - colors_present: Primarily red (2) and white (0).
    - structure: Grids often contain vertical columns of white pixels separating blocks/patterns of red pixels.
transformation:
  type: Local pixel update based on neighborhood conditions.
  input_pixels_affected: Only white (0) pixels can potentially change.
  output_pixels_affected: Affected white pixels change to red (2).
  conditions_for_change:
    - target_pixel_color: Must be white (0).
    - neighbor_colors:
        - left_neighbor: Must be red (2).
        - right_neighbor: Must be red (2).
        - bottom_neighbor: Must be red (2).
    - location_constraints: The target pixel cannot be in the last row (requires a bottom neighbor) or in the first/last column (requires both left and right neighbors).
  unchanged_pixels: All pixels that do not meet the conditions for change retain their original color from the input grid.
objects:
  - type: Pixel
    properties:
      - color: (0-9, mainly 0 and 2)
      - location: (row, column)
  - type: Pattern
    properties:
      - shape: Horizontal sequences like `2 0 2` or `2 2 2`.
      - context: Often appear within blocks separated by white columns.
relationships:
  - type: Adjacency
    entities: [Pixel, Pixel]
    directions: [left, right, up, down]
  - type: Conditionality
    description: The change in a pixel's color depends on the color of its adjacent neighbors (left, right, down).
actions:
  - name: Update color
    target: White pixel
    condition: If left, right, and bottom neighbors are red.
    result: Target pixel becomes red.