- example: 1
  input_grid_shape: [12, 12]
  objects:
    - type: container
      color: 8 # Azure
      size: 15
      description: Largest non-background object.
    - type: source
      color: 3 # Green
      size: 1
      position: [8, 6]
      description: Single pixel object adjacent to the container object.
  properties:
    distances_from_source_to_non_container_boundary:
      up: 3
      down: 0
      left: 3
      right: 3 # Note: Analysis code had 2, manual recheck confirms 3. (8,7)=8, (8,8)=8, (8,9)=0. Ah, previous manual check was wrong. Code output right: (8,7)=8, (8,8)=8, (8,9)=0. Distance is 2. Let's re-run analysis code carefully. Ah, I see the bug in my analysis code. `right`: `grid[source_r, c]` should be used. Let's fix the analysis code.

- example: 1 (REVISED - after fixing distance calculation in analysis)
  input_grid_shape: [12, 12]
  objects:
    - type: container
      color: 8 # Azure
      size: 15
      description: Largest non-background object.
    - type: source
      color: 3 # Green
      size: 1
      position: [8, 6]
      description: Single pixel object adjacent to the container object.
  properties:
    distances_from_source_to_non_container_boundary:
      up: 3 # Steps into container color: (7,6), (6,6), (5,6)
      down: 0 # Step into container color: none, (9,6) is 0
      left: 3 # Steps into container color: (8,5), (8,4), (8,3)
      right: 2 # Steps into container color: (8,7), (8,8)
    min_distance: 0
    min_distance_direction: down
    projection_direction: up
  action:
    type: projection
    source_color: 3 # Green
    direction: up
    start_position: [7, 6] # Pixel adjacent to source in projection direction
    end_condition: grid_boundary
    overwrite: true # Overwrites existing pixels

- example: 2
  input_grid_shape: [10, 15]
  objects:
    - type: container
      color: 2 # Red
      size: 8
      description: Largest non-background object.
    - type: source
      color: 1 # Blue
      size: 1
      position: [4, 3]
      description: Single pixel object adjacent to the container object.
  properties:
    distances_from_source_to_non_container_boundary:
      up: 2 # Steps: (3,3), (2,3)
      down: 2 # Steps: (5,3), (6,3)
      left: 0 # Step: none, (4,2) is 0
      right: 2 # Steps: (4,4), (4,5)
    min_distance: 0
    min_distance_direction: left
    projection_direction: right
  action:
    type: projection
    source_color: 1 # Blue
    direction: right
    start_position: [4, 4]
    end_condition: grid_boundary
    overwrite: true

- example: 3
  input_grid_shape: [15, 12]
  objects:
    - type: container
      color: 3 # Green
      size: 8
      description: Largest non-background object.
    - type: source
      color: 2 # Red
      size: 1
      position: [2, 4]
      description: Single pixel object adjacent to the container object.
  properties:
    distances_from_source_to_non_container_boundary:
      up: 0 # Step: none, (1,4) is 0
      down: 2 # Steps: (3,4), (4,4)
      left: 2 # Steps: (2,3), (2,2)
      right: 2 # Steps: (2,5), (2,6)
    min_distance: 0
    min_distance_direction: up
    projection_direction: down
  action:
    type: projection
    source_color: 2 # Red
    direction: down
    start_position: [3, 4]
    end_condition: grid_boundary
    overwrite: true
