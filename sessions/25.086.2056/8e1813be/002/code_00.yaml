- task: Analyze colored objects (excluding white and gray) and create a square grid representing them.
- input: Grid containing colored pixels.
- objects:
    - definition: Contiguous blocks of pixels of the same color, excluding white (0) and gray (5).
    - properties:
        - color: The integer value (1-4, 6-9) of the pixels in the object.
        - pixels: Set of (row, col) coordinates belonging to the object.
        - bounding_box: (min_row, min_col, max_row, max_col) enclosing the object.
        - height: `max_row - min_row + 1`
        - width: `max_col - min_col + 1`
        - first_appearance: The (row, col) coordinate of the pixel belonging to this color that appears first when scanning the input grid top-to-bottom, then left-to-right.
- parameters:
    - N: The number of unique relevant colors found in the input grid.
    - overall_orientation:
        - 'Vertical' if ALL relevant objects have `height >= width`.
        - 'Horizontal' if ANY relevant object has `height < width`.
    - sorted_colors: A list of the unique relevant colors, sorted based on orientation.
        - If 'Horizontal': Sort by the row, then column of each color's `first_appearance`.
        - If 'Vertical': Sort by the column, then row of each color's `first_appearance`.
- output: An N x N grid.
- transformation:
    - action: Create an N x N grid initialized with white (0).
    - condition: If `overall_orientation` is 'Vertical'.
    - action: For each color `c` at index `j` in `sorted_colors`, fill the j-th column of the output grid with color `c`.
    - condition: If `overall_orientation` is 'Horizontal'.
    - action: For each color `c` at index `i` in `sorted_colors`, fill the i-th row of the output grid with color `c`.