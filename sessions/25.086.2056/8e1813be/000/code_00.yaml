task_context:
  - The task involves extracting specific colors from an input grid and arranging them into a smaller, square output grid.
  - Background color (white, 0) and gray color (5) are consistently ignored during color extraction.

input_elements:
  - type: grid
  - properties:
      - contains pixels of various colors (0-9)
      - features identifiable objects (contiguous blocks of non-background color)
      - objects can be lines (horizontal/vertical) or rectangles.
      - gray objects may be present but are irrelevant to the output colors.

output_elements:
  - type: grid
  - properties:
      - always square (NxN)
      - N equals the count of unique, non-white, non-gray colors in the input.
      - contains only the unique, non-white, non-gray colors from the input.
      - colors are arranged either in rows or columns.

transformation_rules:
  - action: identify_colors
    - description: Find all unique pixel colors in the input grid, excluding white (0) and gray (5).
    - result: a set of relevant colors.
  - action: determine_order
    - description: Order the relevant colors based on their first appearance in the input grid (minimum row index first, then minimum column index as a tie-breaker).
    - result: an ordered list of colors.
  - action: detect_orientation
    - description: Analyze the shapes formed by the relevant colors. If all shapes are predominantly vertical (height >= width), the orientation is 'vertical'. Otherwise, it's 'horizontal'.
    - input: shapes/objects corresponding to relevant colors.
    - result: 'vertical' or 'horizontal'.
  - action: construct_output
    - description: Create a square grid of size NxN, where N is the number of relevant colors.
    - input: N (count of relevant colors).
    - result: an empty NxN grid.
  - action: populate_output
    - description: Fill the output grid based on the determined orientation and color order.
    - input: empty NxN grid, ordered list of colors, orientation.
    - rule_if_vertical: Fill the j-th column entirely with the j-th color from the ordered list.
    - rule_if_horizontal: Fill the i-th row entirely with the i-th color from the ordered list.
    - result: the final output grid.

relationships:
  - The size of the output grid is directly determined by the count of unique relevant colors in the input.
  - The order of colors in the output depends on the spatial order (top-to-bottom, left-to-right) of their first appearance in the input.
  - The arrangement pattern (rows vs. columns) in the output depends on the geometric orientation (vertical vs. horizontal/mixed) of the colored shapes in the input.