task_description: Removes secondary color pixels (C2) from within the main shape (C1) and redraws the C2 pixels as shifted lines outside the main shape's bounding box.

definitions:
  - &white 0
  - &main_shape_color C1
  - &crosshair_color C2

elements:
  - object: main_shape
    description: A large contiguous block of a single color (C1), distinct from white and C2.
    properties:
      - color: C1 (varies per example: blue(1), red(2), green(3))
      - shape: contiguous, varies (H, square-like, plus-like)
      - location: typically central within the grid
      - bounding_box: defined by min/max row and column indices
      - width: W (number of columns in bounding box)
      - height: H (number of rows in bounding box)
  - object: crosshair_pixels
    description: Pixels of a second color (C2), often forming intersecting lines in the input.
    properties:
      - color: C2 (varies per example: azure(8), green(3), yellow(4))
      - structure: often linear (vertical/horizontal lines) or cross-shaped
      - location: extends across grid, potentially intersecting main_shape
      - center_row: row index containing the most C2 pixels in the input
      - center_col: column index containing the most C2 pixels in the input

actions:
  - action: identify_colors
    description: Determine the main shape color (C1) and the crosshair color (C2). C1 is the color of the large central object. C2 is the other non-white color.
  - action: find_main_shape_bounds
    description: Locate the main shape object (color C1) and determine its bounding box (min_row, max_row, min_col, max_col) and width (W).
  - action: find_crosshair_center
    description: Determine the dominant row (center_row) and column (center_col) of the crosshair pixels (C2) in the input grid, typically by finding the row/column with the maximum count of C2 pixels.
  - action: calculate_shift
    description: Calculate the shift amount S based on the main shape's width, S = floor(W / 2).
  - action: calculate_target_lines
    description: Calculate the target row (target_row = center_row - S) and column (target_col = center_col + S) for the new crosshair lines.
  - action: create_output_grid
    description: Initialize the output grid, possibly by copying the input grid.
  - action: remove_internal_crosshair
    description: Iterate through the grid. If a pixel (r, c) has color C2 and is within the main shape's bounding box (min_row <= r <= max_row AND min_col <= c <= max_col), change its color to white (*white) in the output grid.
  - action: draw_new_crosshair
    description: >
      Draw the new crosshair lines in the output grid using color C2:
      1. For each row 'r' where r < min_row or r > max_row, set the pixel at (r, target_col) to C2.
      2. For each column 'c' where c < min_col or c > max_col, set the pixel at (target_row, c) to C2.

relationships:
  - relationship: containment
    description: Some crosshair pixels (C2) are contained within or are on the boundary of the main shape (C1) in the input.
  - relationship: displacement
    description: The output crosshair position is displaced from the input crosshair center based on the main shape's width. The vertical line shifts right by S columns, and the horizontal line shifts up by S rows.