task_description: Identify enclosed white regions bordered exclusively by azure pixels and change their color to green.

definitions:
  - name: grid
    type: data_structure
    description: A 2D array of pixels, where each pixel has an integer color value from 0-9.
  - name: pixel
    type: element
    description: A single cell within the grid, having coordinates (row, column) and a color value.
  - name: white_pixel
    type: pixel
    description: A pixel with the color value 0 ('white').
  - name: azure_pixel
    type: pixel
    description: A pixel with the color value 8 ('azure').
  - name: green_pixel
    type: pixel
    description: A pixel with the color value 3 ('green').
  - name: white_region
    type: object
    description: A contiguous group of one or more 'white_pixel's connected 4-directionally (up, down, left, right).
  - name: boundary
    type: property
    description: The set of pixels forming the outermost edges (first/last row, first/last column) of the grid.
  - name: neighbor
    type: relationship
    description: A pixel P2 is a neighbor of pixel P1 if P2 is adjacent to P1 4-directionally.
  - name: region_neighbor_colors
    type: property
    description: For a 'white_region', the set of unique colors of all non-'white' pixels that are neighbors to any pixel within the region.

actions:
  - name: find_regions
    description: Identify all distinct 'white_region's in the input grid using a connectivity search (like BFS or DFS).
  - name: check_enclosure
    description: For each 'white_region', determine if any of its pixels are part of the grid 'boundary'. A region is 'enclosed' if it does not touch the boundary.
  - name: get_neighbor_colors
    description: For each 'white_region', find its 'region_neighbor_colors'.
  - name: evaluate_conditions
    description: Check if a 'white_region' is 'enclosed' AND its 'region_neighbor_colors' set is exactly equal to {azure (8)}.
  - name: color_region
    description: If a 'white_region' satisfies the conditions, change the color of all pixels within that region to green (3) in the output grid.
  - name: copy_pixels
    description: All pixels from the input grid that are not part of a 'white_region' satisfying the conditions retain their original color in the output grid.

output_generation:
  process:
    - Initialize an output grid as a copy of the input grid.
    - Perform 'find_regions' to identify all 'white_region's.
    - For each 'white_region':
      - Perform 'check_enclosure'.
      - Perform 'get_neighbor_colors'.
      - Perform 'evaluate_conditions'.
      - If conditions are met, perform 'color_region' on the output grid.
    - Return the final output grid.