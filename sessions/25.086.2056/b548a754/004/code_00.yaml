preprocessing:
  - Step: Identify the single azure (8) pixel, designated as the 'marker'.
  - Step: Identify the contiguous shape composed of non-white (0) and non-azure (8) pixels. Determine its bounding box [min_row, max_row, min_col, max_col].

analysis:
  - Observation: The marker pixel always appears outside the bounding box of the main shape.
  - Observation: The marker's position relative to the shape's bounding box indicates the direction of transformation.
    - If `marker_col > max_col`, the extension is horizontal (rightward).
    - If `marker_row > max_row`, the extension is vertical (downward).
  - Observation: The transformation involves extending the shape by repeating a pattern.
  - Key Finding: The pattern used for extension is the column or row of pixels from the shape located *at* the edge closest to the marker.
    - For horizontal extension (marker right): The pattern is the column at `max_col`, spanning rows `min_row` to `max_row`.
    - For vertical extension (marker below): The pattern is the row at `max_row`, spanning columns `min_col` to `max_col`.
  - Observation: The extension fills the grid cells between the original shape's edge and the marker's row/column (inclusive).
  - Observation: The marker pixel itself is removed (set to white 0) in the output grid.

postprocessing:
  - Step: Create the output grid by copying the input grid.
  - Step: Apply the determined pattern (edge row/column) to the appropriate rows/columns in the output grid, starting from the position immediately adjacent to the original shape's edge up to and including the marker's row/column index.
  - Step: Set the marker pixel's location in the output grid to white (0).