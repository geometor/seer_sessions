task_description: Fill the interior of a red rectangular frame, but stop filling where obstructed by gray pixels.
objects:
  - name: background
    color: white (0)
    location: Outside the frame.
    properties: Unchanging.
  - name: frame
    color: red (2)
    shape: Rectangle (potentially incomplete, but defines boundaries).
    location: Surrounds the interior.
    properties: Unchanging. Defines the bounds for the fill operation.
  - name: interior_region
    location: Strictly inside the boundaries defined by the frame.
    contains:
      - white (0) pixels: Subject to potential change.
      - gray (5) pixels: Act as obstacles.
      - other colored pixels: (None observed in examples, but assumed unchanging if present).
    properties: The area where transformation occurs.
  - name: obstacles
    color: gray (5)
    location: Within the interior_region.
    properties: Block the fill operation. Unchanging.
actions:
  - name: identify_frame
    input: grid
    output: frame_boundaries (min_row, max_row, min_col, max_col)
    description: Find the minimum and maximum row and column indices of red (2) pixels.
  - name: identify_interior
    input: frame_boundaries
    output: interior_coordinates
    description: Define the region strictly inside the frame (min_row+1 to max_row-1, min_col+1 to max_col-1).
  - name: directional_fill
    input: grid, interior_coordinates, obstacles
    output: modified_grid
    description: |
      Simulate filling the interior region with red (2) starting from each of the four sides of the frame.
      The fill propagates inwards (horizontally from left/right edges, vertically from top/bottom edges).
      For each path (row or column) starting from an edge, the fill converts white (0) pixels to red (2).
      The fill stops along a path if it encounters a gray (5) obstacle or the opposite frame boundary.
      A white pixel is changed to red only if it can be reached by the fill from at least one of the four directions without being blocked by a gray obstacle.
      Gray pixels and pixels outside the interior remain unchanged.