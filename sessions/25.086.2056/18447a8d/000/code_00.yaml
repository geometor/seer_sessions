task_context:
  grid_properties:
    - background_color: orange (7)
    - separators: horizontal rows of background_color
  bands:
    - definition: Regions between separator rows or between grid edges and separators.
    - content: Each band contains two main objects against the background.
  objects:
    - type: anchor_object
      color: azure (8)
      position: Left side of the band.
      action: Remains static.
    - type: target_object
      color: Varies (not orange or azure)
      position: Right side of the band.
      action: Moved and potentially color-transformed.

transformation_rules:
  - rule: Identify bands based on orange (7) separator rows.
  - rule: Identify anchor (azure, 8) and target (other color) objects within each band.
  - rule: Determine the set of all target_object colors across the entire input grid.
  - rule: Define a color_map based on the set of target_object colors:
      - if {blue(1), green(3), maroon(9)} are present: apply cycle 1->3, 3->9, 9->1. Other colors map to themselves.
      - if {green(3), yellow(4), magenta(6)} are present: apply cycle 3->6, 6->4, 4->3. Other colors map to themselves.
      - otherwise: all colors map to themselves (identity map).
  - rule: For each band:
      - Find the rightmost column index of the anchor_object.
      - Determine the bounding box of the target_object.
      - Get the original color (`input_color`) of the target_object.
      - Calculate the transformed color (`output_color`) using the determined color_map.
      - Create the output grid (initially a copy of input).
      - Erase the original target_object in the output grid (replace with orange, 7).
      - Draw the target_object shape using the `output_color` in the output grid, positioning it immediately to the right of the anchor_object's rightmost extent within the band's rows, maintaining its internal structure relative to its bounding box.