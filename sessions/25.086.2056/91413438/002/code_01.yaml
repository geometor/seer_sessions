Input:
  - object: input_grid
    properties:
      - type: 2D grid
      - dimensions: 3x3
      - pixels: Contains white (0) and exactly one other color (C).
      - C_options: [2 (Red), 3 (Green), 4 (Yellow), 6 (Magenta)]

Parameters:
  - object: transformation_parameters
    properties:
      - source: Determined by the non-white color (C) in the input_grid.
      - values:
          - horizontal_repetition (H_rep): Integer count for tiling horizontally.
          - vertical_repetition (V_rep): Integer count for tiling vertically.
          - output_size (S): Integer dimension for the square output grid.
      - mapping: # Defines how C determines the parameters
          - condition: C is 2 (Red)
            results: { H_rep: 3, V_rep: 1, S: 18 }
          - condition: C is 3 (Green)
            results: { H_rep: 3, V_rep: 2, S: 9 }
          - condition: C is 4 (Yellow)
            results: { H_rep: 4, V_rep: 1, S: 15 }
          - condition: C is 6 (Magenta)
            results: { H_rep: 4, V_rep: 2, S: 12 }

Output:
  - object: output_grid
    properties:
      - type: 2D grid
      - dimensions: S x S (square, size determined by S parameter)
      - background: white (0)

Actions:
  - action: identify_color
    description: Find the unique non-white color (C) in the input_grid.
  - action: determine_parameters
    description: Use the identified color (C) and the predefined mapping to find H_rep, V_rep, and S.
  - action: create_output_canvas
    description: Generate an S x S grid filled with white (0).
  - action: tile_pattern
    description: >
      Copy the 3x3 input_grid pattern H_rep times horizontally and V_rep times vertically
      onto the output_canvas, starting at the top-left corner (0,0).
    details: The tiled area occupies the top `V_rep * 3` rows and the left `H_rep * 3` columns of the output_grid.
    effect: The specified top-left region of the output_grid is overwritten by the tiled pattern; the rest remains white.