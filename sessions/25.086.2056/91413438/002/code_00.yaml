Input:
  - object: input_grid
    properties:
      - type: 2D grid
      - dimensions: 3x3
      - pixels: Contains white (0) and exactly one other color (C).
      - C_options: [2 (Red), 3 (Green), 4 (Yellow), 6 (Magenta)]

Parameters:
  - object: transformation_parameters
    properties:
      - source: Determined by the non-white color (C) in the input_grid.
      - values:
          - horizontal_repetition (H_rep): Integer count.
          - vertical_repetition (V_rep): Integer count.
          - output_size (S): Integer dimension for the square output grid.
      - mapping:
          - if C is 2 (Red): H_rep=3, V_rep=1, S=18
          - if C is 3 (Green): H_rep=3, V_rep=2, S=9
          - if C is 4 (Yellow): H_rep=4, V_rep=1, S=15
          - if C is 6 (Magenta): H_rep=4, V_rep=2, S=12

Output:
  - object: output_grid
    properties:
      - type: 2D grid
      - dimensions: S x S (square)
      - pixels: Initially all white (0).

Actions:
  - action: identify_color
    actor: system
    input: input_grid
    output: non-white color C
  - action: determine_parameters
    actor: system
    input: color C
    output: H_rep, V_rep, S (using the predefined mapping)
  - action: create_output_canvas
    actor: system
    input: size S
    output: S x S white grid (output_grid)
  - action: tile_pattern
    actor: system
    input:
      - input_grid (pattern)
      - H_rep (horizontal count)
      - V_rep (vertical count)
      - output_grid (canvas)
    process: Copy the input_grid pattern repeatedly H_rep times horizontally and V_rep times vertically.
    placement: Place the tiled pattern starting at the top-left corner (0,0) of the output_grid.
    affected_area: output_grid[0 : V_rep*3, 0 : H_rep*3]
    result: The top-left portion of output_grid contains the tiled pattern; the remaining area stays white.