task_context:
  problem_description: Given an input grid containing exactly two non-white pixels aligned either horizontally or vertically, transform it into an output grid featuring two colored shapes.
  input_grid:
    dimensionality: 2D
    cell_values: Integers 0-9 (colors), 0 represents white (background).
    constraints:
      - Contains exactly two non-white pixels.
      - The two non-white pixels are always aligned perfectly horizontally or vertically.
  output_grid:
    dimensionality: 2D, same dimensions as input.
    cell_values: Integers 0-9 (colors), 0 represents white (background).
    content: Contains two 5x5 plus-shaped objects, colored according to the input pixels.

objects:
  - name: input_pixel_1
    identified_by: First non-white pixel when sorted by row, then column index.
    properties:
      - coordinate: (r1, c1)
      - color: color1
  - name: input_pixel_2
    identified_by: Second non-white pixel when sorted by row, then column index.
    properties:
      - coordinate: (r2, c2)
      - color: color2
  - name: output_shape_1
    derived_from: input_pixel_1
    properties:
      - shape: 5x5 plus sign (+)
      - color: color1
      - center_coordinate: Calculated based on (r1, c1) and the midpoint between (r1, c1) and (r2, c2).
  - name: output_shape_2
    derived_from: input_pixel_2
    properties:
      - shape: 5x5 plus sign (+)
      - color: color2
      - center_coordinate: Calculated based on (r2, c2) and the midpoint between (r1, c1) and (r2, c2).

transformation_details:
  alignment: Determined by comparing coordinates of input_pixel_1 and input_pixel_2 (r1==r2 or c1==c2).
  midpoint_calculation:
    - if horizontal: mid_c = (c1 + c2) / 2.0
    - if vertical: mid_r = (r1 + r2) / 2.0
  center_calculation:
    - shape_1_center:
        - if horizontal: (r1, c1 + floor((floor(mid_c) - c1) / 2))
        - if vertical: (r1 + floor((floor(mid_r) - r1) / 2), c1)
    - shape_2_center:
        - if horizontal: (r2, c2 - floor((c2 - ceil(mid_c)) / 2))
        - if vertical: (r2 - floor((r2 - ceil(mid_r)) / 2), c2)
  drawing_action: Draw a 5x5 plus shape (9 pixels total: center, +/-1 and +/-2 steps horizontally and vertically) centered at the calculated center coordinates for each shape, using the corresponding color.
  background: The output grid is initialized to white (0).