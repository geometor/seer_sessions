task_description: Vertically tile a pattern derived from the input grid to fill the output grid.
grid_properties:
  - background_color: 0 (white)
  - output_grid_dims: Same as input grid dimensions.

objects:
  - name: source_block
    description: A contiguous block of rows in the input grid defined by the minimum and maximum row indices containing any non-background pixels.
    properties:
      - min_row: The index of the first row containing non-background pixels.
      - max_row: The index of the last row containing non-background pixels.
      - height: h = max_row - min_row + 1
      - rows: A list of 1D arrays representing the pixel data for each row from min_row to max_row.

parameters:
  - name: shift
    description: An integer offset used to determine the starting row within the source_block for tiling.
    calculation: shift = (-min_row) % height

actions:
  - action: identify_source_block
    input: input_grid
    output: source_block (including min_row, max_row, height)
    condition: If no non-background pixels exist, the source_block is considered empty or non-existent.
  - action: calculate_shift
    input: min_row, height
    output: shift
  - action: generate_output_grid
    input: input_grid_dimensions, source_block, height, shift
    output: output_grid
    description: |
      Create an output grid of the same dimensions as the input.
      For each output row index `r` (from 0 to output_height - 1):
      1. Determine the index within the repeating pattern cycle: `output_row_index = r % height`.
      2. Determine the corresponding row index within the source_block using the shift: `source_index = (output_row_index + shift) % height`.
      3. Copy the row `source_block.rows[source_index]` to the output grid at row `r`.
    condition: If source_block is empty, fill the output grid with the background color.
