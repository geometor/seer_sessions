- task_description: Swaps the colors associated with two distinct sets of pixel locations in a grid.
- grid_properties:
    - dimensions: Input and output grids have the same height and width in all examples.
    - background_color: White (0) pixels consistently remain unchanged.
- objects:
    - type: Sets of pixels defined by their color.
    - count: Exactly two distinct non-white colors are present in each input grid. Let these be ColorA and ColorB.
    - properties:
        - ColorA_pixels: A set of coordinates `(r, c)` where the input grid has ColorA.
        - ColorB_pixels: A set of coordinates `(r, c)` where the input grid has ColorB.
        - shape/contiguity: The pixels of a given color might form one or more contiguous or non-contiguous shapes. (This detail seems less relevant to the core transformation rule itself, which operates on coordinates).
- actions:
    - identification: Identify ColorA and ColorB.
    - mapping: Determine the set of coordinates `CoordsA` for ColorA and `CoordsB` for ColorB in the input grid.
    - transformation:
        - Create a new grid of the same dimensions, initialized to white (0).
        - For each coordinate `(r, c)` in `CoordsA`, set the output pixel `(r, c)` to ColorB.
        - For each coordinate `(r, c)` in `CoordsB`, set the output pixel `(r, c)` to ColorA.
- relationship_input_output:
    - color_palette: The set of non-white colors remains the same, but their assignments to locations are swapped.
    - counts: The number of pixels originally colored ColorA in the input becomes the number of pixels colored ColorB in the output. The number of pixels originally colored ColorB in the input becomes the number of pixels colored ColorA in the output. (Verified by metrics: e.g., Ex1 Input: 8x Green(3), 5x Azure(8); Output: 4x Green(3), 10x Azure(8) - Wait, this count verification fails for Ex1, but holds for Ex2, Ex3, Ex4. Let me re-check Ex1 manually.)

Re-checking Ex1 counts:
Input: Green(3) count = 8. Azure(8) count = 5.
Output: Green(3) count = 5. Azure(8) count = 8.
The code output for Ex1 counts was wrong: `output_color_counts': {3: 4, 8: 10}`. This seems like a mistake in the expected output provided in the previous prompt, not the metric calculation. Let me compare the provided Expected Output grid for Ex1 with my count:
Expected Output Ex1: