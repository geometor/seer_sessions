task_description: Select one of three 3x3 subgrids from a 9x3 input grid based on color frequency analysis.

grid_properties:
  input_size: 9x3
  output_size: 3x3
  input_subdivision: Vertically into three 3x3 subgrids (S1, S2, S3).

objects:
  - name: Subgrid
    type: 3x3 pixel grid
    count: 3 per input (S1, S2, S3)
    properties:
      - index: Position in the stack (0 for S1, 1 for S2, 2 for S3).
      - pixels: 9 pixels, each with a color value (0-9).
      - mfc: Count of the most frequent color within the subgrid.

actions:
  - name: Identify Subgrids
    input: 9x3 input grid
    output: Three 3x3 subgrids (S1, S2, S3).
  - name: Calculate MFC
    input: One 3x3 subgrid
    output: Integer count of the most frequent color (MFC value).
  - name: Analyze MFC Distribution
    input: List of three MFC values [mfc1, mfc2, mfc3]
    output: Index of the selected subgrid (0, 1, or 2).
    logic:
      - Find min_mfc and max_mfc.
      - Count occurrences of min_mfc and max_mfc.
      - Apply selection rules based on counts and values.
  - name: Select Subgrid
    input: Three 3x3 subgrids, selected index
    output: The 3x3 subgrid corresponding to the selected index.

selection_rules:
  - rule: Shared Minimum MFC
    condition: Exactly two subgrids share the minimum MFC value.
    action: Select the subgrid with the higher index among the two minimums.
    examples: [train_1, train_4]
  - rule: Unique Maximum MFC
    condition: Exactly one subgrid has the maximum MFC value.
    action: Select the subgrid with the unique maximum MFC.
    examples: [train_2]
  - rule: All Distinct MFCs
    condition: All three subgrids have different MFC values.
    action: Select the first subgrid (index 0).
    examples: [train_3]

output_generation: The final output grid is the 3x3 subgrid selected according to the rules.