task_description: Flood fill within a contained area defined by non-white pixels and grid boundaries.

grid_properties:
  - dimensions: variable (height/width between 1 and 30)
  - background_color: white (0)
  - colors: [white (0), blue (1), red (2), green (3)] are consistently present in inputs.

objects:
  - object: source_pixel
    color: red (2)
    count: 1 (exactly one in each input)
    location: variable
    role: starting point for the fill operation
  - object: boundary_pixels
    color: [blue (1), green (3)]
    count: variable
    location: variable, often forming shapes or lines
    role: act as barriers to the fill operation; remain unchanged in the output.
  - object: fillable_pixels
    color: white (0)
    count: variable
    location: variable, representing the background or empty space
    role: potential candidates for being filled with red.
  - object: grid_boundary
    role: implicit barrier to the fill operation.

actions:
  - action: identify_boundaries
    input: input_grid
    elements: blue pixels (1), green pixels (3), grid edges
    output: a set of coordinates representing barriers
  - action: identify_external_region
    description: Perform a flood fill starting from all white (0) pixels located on the grid border.
    start_points: white pixels (0) at row 0, row H-1, col 0, col W-1
    fillable_color: white (0)
    barrier_colors: [blue (1), green (3)]
    barrier_elements: grid_boundary
    output: mark all reachable white pixels as 'external' (e.g., with a temporary value)
  - action: fill_internal_region
    input: input_grid, marked external_region
    output: output_grid
    process:
      - Create a copy of the input grid.
      - Iterate through the input grid.
      - If a pixel is white (0) AND it was *not* marked as 'external':
          - Change its color to red (2) in the output grid.
      - Ensure the original red source pixel remains red (2) in the output grid (it might already be handled if it's inside the fill area, but good to confirm).

invariants:
  - The position and color of blue (1) and green (3) pixels remain unchanged.
  - The original red (2) pixel remains red (2).
  - Only white (0) pixels can change color.
  - Pixels outside the grid boundaries are not considered.
  - The grid dimensions remain unchanged.