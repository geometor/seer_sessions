task_description: Reflect a red object based on a green marker.
grid_properties:
  background_color: 0 (white)
  relevant_colors: 2 (red), 3 (green)
object_definitions:
  connectivity: 8-way (horizontal, vertical, diagonal)
  objects: Contiguous blocks of non-background color.
transformation_conditions:
  - condition: Exactly one red object exists in the input grid.
  - condition: Exactly one green object exists in the input grid.
  - condition: The single green object must be a 2x2 square.
transformation_rule:
  - if conditions are met:
    - action: Identify the coordinates of the single red object.
    - action: Identify the coordinates of the single 2x2 green object.
    - action: Determine the top-left coordinate (min_r, min_c) of the green square.
    - action: Define reflection axes based on the green square center:
        - horizontal_axis_y = min_r + 0.5
        - vertical_axis_x = min_c + 0.5
        - center_point = (min_r + 0.5, min_c + 0.5)
    - action: For each pixel (r, c) in the red object:
        - calculate_horizontal_reflection: (r_h, c_h) = (2*min_r + 1 - r, c)
        - calculate_vertical_reflection: (r_v, c_v) = (r, 2*min_c + 1 - c)
        - calculate_center_reflection: (r_c, c_c) = (2*min_r + 1 - r, 2*min_c + 1 - c)
    - action: Create the output grid as a copy of the input grid.
    - action: Add the calculated reflected red pixels to the output grid:
        - For each reflected coordinate (r', c'):
          - If (r', c') is within grid bounds:
            - Set output_grid[r', c'] = 2 (red)
  - else:
    - action: Return the input grid unchanged.
