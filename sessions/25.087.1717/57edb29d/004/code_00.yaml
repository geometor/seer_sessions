task_description: Identify and extract a specific object enclosed within a border, based on color rules.
constants:
  BORDER_COLOR: 4 # Yellow
  BACKGROUND_COLOR: 0 # White
  TARGET_COLOR_ABSENT_BLUE: 8 # Azure
  CONDITIONAL_COLOR: 1 # Blue

definitions:
  object: A contiguous block of pixels of the same color, excluding BACKGROUND_COLOR and BORDER_COLOR.
  enclosed_object: An object that does not touch the grid's outer edges, and all its adjacent pixels (up, down, left, right) that are not part of the object itself are either BORDER_COLOR or BACKGROUND_COLOR.
  bounding_box: The smallest rectangle containing all pixels of an object, defined by (min_row, min_col, max_row, max_col).
  top_left: The coordinate (min_row, min_col) of an object's bounding box.

actions:
  find_components: Identify all connected components (objects) of non-BACKGROUND and non-BORDER colors in the input grid.
  filter_enclosed: Select only the components that meet the definition of an 'enclosed_object'.
  check_blue: Determine if any enclosed_object has the color Blue (1).
  select_object:
    - if Blue (1) is NOT present among enclosed_objects:
        select the enclosed_object with color Azure (8).
    - if Blue (1) IS present among enclosed_objects:
        sort enclosed_objects based on their top_left coordinate (first by row, then by column).
        select the first object in the sorted list (the top-leftmost one).
  extract_object: Create a new grid containing only the selected object.
  create_output:
    - determine dimensions from the selected object's bounding_box (height = max_row - min_row + 1, width = max_col - min_col + 1).
    - create an output grid of these dimensions, filled with BACKGROUND_COLOR.
    - copy the pixels of the selected object into the output grid, adjusting coordinates relative to the object's top_left position (input pixel at (r, c) goes to output pixel at (r - min_row, c - min_col)).

assumptions:
  - There is always a unique Yellow (4) border present, though its exact shape may vary slightly.
  - There is always at least one enclosed object according to the revised definition.
  - If Rule A (No Blue -> Select Azure) applies, there will always be exactly one Azure object enclosed.
  - If Rule B (Blue present -> Select Top-Leftmost) applies, there will always be at least one enclosed object.
  - Objects are monochromatic.