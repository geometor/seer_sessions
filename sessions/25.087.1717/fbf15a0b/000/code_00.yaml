task_type: cropping
input_features:
  - grid: 2D array of integers (colors 0-9)
  - marker_pixels:
      color: 5 (gray)
      count: 2 (in all examples)
      role: define crop parameters
output_features:
  - grid: cropped subgrid of the input
cropping_logic:
  - condition: gray pixels share the same column index `c`
    parameters:
      - row_coords: set of row indices `r` for gray pixels at `(r, c)`
      - start_row: max(row_coords) - min(row_coords)
      - output_height: input_height // 2
      - start_col: 0
      - output_width: input_width
    action: extract subgrid from input using rows `start_row` to `start_row + output_height - 1` and all columns.
  - condition: gray pixels share the same row index `r`
    parameters:
      - col_coords: set of column indices `c` for gray pixels at `(r, c)`
      - start_col: max(col_coords) - min(col_coords)
      - output_width: input_width // 2
      - start_row: 0
      - output_height: input_height
    action: extract subgrid from input using columns `start_col` to `start_col + output_width - 1` and all rows.
assumptions:
  - Integer division is used for halving dimensions.
  - There will always be exactly two gray pixels.
  - The two gray pixels will always be aligned either vertically or horizontally.