task_description: Generate a symmetrical pattern by drawing rectangular frames based on reflections of non-white input pixels.
grid_properties:
  - dimensions: Input and output grids share identical height and width.
  - background_color: White (0) serves as the default background.
objects:
  - type: Pixel
    properties:
      - position: Defined by (row, column) coordinates.
      - color: An integer value from 0-9. Non-white pixels (value > 0) are the active elements.
actions:
  - name: Initialize Output Grid
    details: Create a blank output grid matching the input dimensions, filled entirely with the background color (white, 0).
  - name: Identify Active Pixels
    details: Scan the input grid to locate all pixels that are not white (color != 0).
  - name: Calculate Reflection Corners
    inputs: A non-white pixel at position (r, c) with color C, within a grid of height H and width W.
    outputs: Four corner coordinates defining a rectangle:
      - Top-Left: (min(r, H-1-r), min(c, W-1-c))
      - Top-Right: (min(r, H-1-r), max(c, W-1-c))
      - Bottom-Left: (max(r, H-1-r), min(c, W-1-c))
      - Bottom-Right: (max(r, H-1-r), max(c, W-1-c))
    details: These corners are derived from the original pixel (r, c) and its horizontal (r, W-1-c), vertical (H-1-r, c), and diagonal (H-1-r, W-1-c) reflections.
  - name: Draw Rectangular Frame
    inputs: The four corner points defining the rectangle and the color C of the original pixel.
    outputs: The output grid is modified by drawing the frame.
    details: Draw only the perimeter of the rectangle using color C. This consists of four line segments:
      - Top edge: Horizontal line connecting the Top-Left and Top-Right corners.
      - Bottom edge: Horizontal line connecting the Bottom-Left and Bottom-Right corners.
      - Left edge: Vertical line connecting the Top-Left and Bottom-Left corners.
      - Right edge: Vertical line connecting the Top-Right and Bottom-Right corners.
    overlap_rule: When frames overlap, the color of the frame drawn later prevails at the points of intersection.
final_output: The state of the output grid after all frames corresponding to the non-white input pixels have been drawn.