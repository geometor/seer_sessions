task_description: Fill the largest white square with azure.
grid_properties:
  - dimensionality: 2D
  - color_palette: [0, 1, 2, 5, 8] # Observed colors: white, blue, red, gray, azure
  - grid_size_varies: true

objects:
  - object_type: square_area
    properties:
      - color: white (0)
      - shape: square (NxN pixels)
      - contiguity: solid block of same color
    identification: Scan the grid for all possible square subgrids composed entirely of white pixels.

actions:
  - action: find_largest
    description: Identify all white squares present in the input grid. Determine the maximum size (N) among these squares.
    input: list of identified white squares (location and size)
    output: size (N_max) and list of all squares with size N_max.

  - action: tie_break
    description: If multiple white squares share the maximum size, select the one whose top-left corner (r, c) has the largest row index (r), and among those, the largest column index (c). (i.e., bottom-most, then right-most).
    input: list of white squares with maximum size N_max.
    output: the single selected white square (location and size).

  - action: fill_area
    description: Create the output grid by copying the input grid. Then, replace the pixels within the bounds of the selected largest white square with the azure color (8).
    input: input grid, selected white square (location and size).
    output: output grid.

constraints:
  - If no white squares exist, the output grid is identical to the input grid.
  - The transformation only affects the area of the selected largest white square.
  - The output grid has the same dimensions as the input grid.