task_description: Identify gray pixels that are orthogonally adjacent to exactly two yellow pixels and change their color to red.

elements:
  - element: grid
    description: A 2D array of integers representing pixel colors. Dimensions vary.
  - element: pixel
    description: Represents a single cell in the grid with a color value (0-9).
    properties:
      - color: The integer value representing the color.
      - position: Coordinates (row, column) within the grid.
      - neighbors: Pixels directly above, below, left, and right (orthogonal adjacency).

colors:
  - color: white (0)
    role: Background, unchanged.
  - color: gray (5)
    role: Structural element, potentially modified.
  - color: yellow (4)
    role: Trigger element, unchanged. Influences adjacent gray pixels.
  - color: red (2)
    role: Result element, appears only in the output. Replaces specific gray pixels.

transformation:
  - action: Iterate through each pixel of the input grid.
  - condition: Check if the current pixel's color is gray (5).
  - sub_condition: If it is gray, count its orthogonal neighbors (up, down, left, right).
  - sub_condition_check: Count how many of these neighbors have the color yellow (4).
  - rule:
      - If the count of yellow neighbors is exactly 2:
          - Change the color of the current pixel to red (2) in the output grid.
      - Otherwise (count is 0, 1, 3, or 4):
          - Keep the pixel's color as gray (5) in the output grid.
  - default_action: If the current pixel's color is *not* gray (5), keep its original color in the output grid.
  - output: The resulting grid after applying the transformation to all relevant pixels. It has the same dimensions as the input grid.

relationships:
  - type: adjacency
    description: Orthogonal adjacency (sharing an edge) between pixels is crucial.
  - type: trigger
    description: Yellow (4) pixels trigger a change in adjacent gray (5) pixels based on a specific count (exactly 2).