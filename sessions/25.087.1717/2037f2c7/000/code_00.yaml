task_description: Count the number of distinct, contiguous, multi-colored objects in the input grid and output a stylized representation of that count using azure (8) on a white (0) background.

definitions:
  - object: A contiguous block of non-white (non-zero) pixels. Adjacency includes diagonals.
  - multi-colored_object: An object containing pixels of at least two different colors.

input_elements:
  - type: grid
    properties:
      - contains multiple distinct objects on a white background.
      - objects can be composed of various colors (1-9).
      - some objects are monochromatic, others are multi-colored.

output_elements:
  - type: grid
    properties:
      - contains only white (0) and azure (8) pixels.
      - represents a single digit (the count).
      - uses a specific, stylized pattern for each digit.
      - the size of the grid varies depending on the digit represented.

transformation:
  - action: identify_objects
    input: input grid
    output: list of distinct contiguous non-white objects
  - action: filter_objects
    input: list of objects
    condition: object must contain at least two different colors
    output: list of multi-colored objects
  - action: count_objects
    input: list of multi-colored objects
    output: integer N (the count)
  - action: generate_digit_representation
    input: integer N
    output: output grid
    details: Use a predefined mapping from N to a specific azure/white grid pattern and size. The mapping is learned from examples:
      - N=2 -> 2x6 grid [[8,8,8,0,8,8], [0,0,8,0,0,0]]
      - N=7 -> 3x7 grid [[8,0,0,0,0,0,8], [8,8,0,0,0,8,8], [8,0,0,0,0,0,8]]
      - N=8 -> 4x8 grid [[0,8,0,0,0,0,8,8], [8,8,8,8,0,8,8,8], [0,0,8,0,0,0,0,8], [0,0,0,0,0,0,0,8]]
      - (Other digits N would require definition if encountered in test cases).

relationships:
  - The number of multi-colored objects in the input directly determines which digit pattern is generated in the output.
  - The output grid's content and size are solely dependent on this count, not on the specific shapes, colors, or locations of the input objects.