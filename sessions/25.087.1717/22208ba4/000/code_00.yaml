task_description: Move specific corner objects one step diagonally inwards based on their color relative to other corner objects and grid dimensions.

grid_properties:
  - background_color: orange (7) is the predominant color, fills empty space.
  - dimensions: Variable height and width across examples.

objects:
  - type: Contiguous blocks of a single non-background color.
  - location: Relevant objects are those located at or touching one of the four corners (top-left, top-right, bottom-left, bottom-right) of the input grid.

actions:
  - identify_corner_objects: Find all distinct non-background objects touching the grid corners.
  - collect_corner_colors: Create a set of unique colors from these identified corner objects.
  - determine_target_color: Based on the count (N) of unique corner colors and grid dimensions (H, W):
      - If N=1: Target is the single color.
      - If N=2: Target is min(colors) if H and W are both odd, else max(colors).
      - If N=3: Target is median(colors).
      - (Rule for N=4 is undefined by examples).
  - move_objects: For each corner object whose color matches the target color:
      - Calculate the one-step diagonal inward displacement vector based on the corner (e.g., top-left moves (+1, +1)).
      - Translate the object by this vector.
  - update_grid:
      - Place the moved object pixels at their new locations.
      - Fill the original locations of the moved object pixels with the background color (orange, 7).

relationships:
  - The decision of which color objects move depends on the *set* of all colors present in the corner objects.
  - For the N=2 case, the decision also depends on the parity (odd/even) of the grid's height and width.
  - Objects move towards the grid center.
  - Non-target corner objects remain stationary.
  - The background color fills the void left by moved objects.