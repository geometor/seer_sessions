objects:
  - type: grid
    properties:
      - height: integer (1-30)
      - width: integer (1-30)
      - pixels: 2D array of colors (0-9)
  - type: column
    properties:
      - index: integer (0 to width-1)
      - pixels: 1D array (subset of grid pixels)
      - is_all_white: boolean (true if all pixels in column are white (0))
  - type: block_of_white_columns
    properties:
      - start_column_index: integer
      - end_column_index: integer
      - width: integer (end_column_index - start_column_index + 1)
      - is_widest: boolean
      - is_leftmost_among_widest: boolean
  - type: target_block
    relation: The specific block_of_white_columns that is widest, and leftmost among ties.
  - type: color
    values: [white(0), blue(1), red(2), green(3), ...]

actions:
  - name: identify_all_white_columns
    input: grid
    output: list of booleans (one per column)
  - name: find_contiguous_blocks
    input: list of booleans (from identify_all_white_columns)
    output: list of block_of_white_columns
  - name: select_target_block
    input: list of block_of_white_columns
    output: target_block (or null if no blocks exist)
    logic: Find block(s) with maximum width. From those, select the one with the minimum start_column_index.
  - name: fill_block_with_green
    input: grid, target_block
    output: modified_grid
    logic: Change the color of all pixels within the target_block's column range (start to end) and row range (0 to height-1) to green (3).
  - name: copy_grid
    input: grid
    output: identical grid