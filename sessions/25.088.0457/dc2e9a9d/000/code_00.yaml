task_context:
  description: Reflect green objects based on symmetry or aspect ratio, placing the reflection adjacent to the original.
  grid_properties:
    - background_color: white (0)
    - objects_exist: true
    - grid_size_dynamic: can expand based on output placement

objects:
  - object_type: primary
    color: green (3)
    description: Input shapes, possibly letters or abstract forms. Remain unchanged in the output.
    properties:
      - connectivity: connected components of green pixels
      - symmetry: vertical or horizontal symmetry is checked
      - aspect_ratio: bounding box height vs. width is checked if no symmetry exists
  - object_type: derived
    color: blue (1)
    description: Horizontally reflected copy of a green object.
    source_object_color: green (3)
    derivation_rule: created if source is vertically symmetric OR not symmetric and width >= height.
    placement: placed immediately to the right of the source object's bounding box.
  - object_type: derived
    color: azure (8)
    description: Vertically reflected copy of a green object.
    source_object_color: green (3)
    derivation_rule: created if source is horizontally symmetric (and not vertically symmetric) OR not symmetric and height > width.
    placement: placed immediately below the source object's bounding box.

actions:
  - action: identify_objects
    input: input_grid
    output: list of green (3) connected components (objects)
    description: Find all distinct green shapes.
  - action: analyze_object
    input: green_object
    output: symmetry_type (vertical, horizontal, none), aspect_ratio (h, w)
    description: Determine symmetry and bounding box dimensions for a green object.
  - action: reflect_and_color
    input: green_object, analysis_results (symmetry, aspect_ratio)
    output: new_object (color, shape, relative_position)
    description: Based on analysis, determine reflection type (H/V), color (blue/azure), and relative placement (right/below).
  - action: place_object
    input: original_grid, new_object, source_object_bbox
    output: modified_grid
    description: Add the newly created reflected object to the grid at the calculated position, expanding the grid if necessary.

relationships:
  - type: derivation
    from: green_object
    to: blue_object or azure_object
    rule: Based on symmetry/aspect ratio analysis results. Each green object produces one derived object.
  - type: spatial
    object1: green_object
    object2: derived_blue_object
    relation: object2 is placed immediately to the right (adjacent bounding boxes) of object1.
  - type: spatial
    object1: green_object
    object2: derived_azure_object
    relation: object2 is placed immediately below (adjacent bounding boxes) of object1.

order_of_operations:
  - Find all green objects.
  - For each green object:
    - Check for vertical symmetry. If true, generate blue object to the right.
    - Else, check for horizontal symmetry. If true, generate azure object below.
    - Else, check aspect ratio (h > w). If true, generate azure object below.
    - Else (w >= h), generate blue object to the right.
  - Combine original grid and all generated objects into the final output grid.