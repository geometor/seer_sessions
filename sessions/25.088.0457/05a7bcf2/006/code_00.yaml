task_description: The grid is divided into two regions by a solid line (row or column) of azure pixels. Transformations are applied independently within each region based on the colors present in that region in the input grid.

objects:
  - name: grid
    properties:
      - shape (height, width)
      - pixels (color values 0-9)
  - name: divider
    properties:
      - color: azure (8)
      - shape: single complete row or column
      - orientation: horizontal or vertical
      - index: row or column number
  - name: region
    properties:
      - location: area on one side of the divider (e.g., above/below, left/right)
      - content: subset of grid pixels
  - name: key_pixels_input
    properties:
      - color: yellow (4) or red (2)
      - location: position within a region in the input grid
  - name: transformed_pixels_output
    properties:
      - color: green (3) - replaces original yellow (4)
      - location: position of original yellow pixels
  - name: fill_pixels_output
    properties:
      - color: yellow (4) or azure (8)
      - location: occupies originally white (0) cells between key_pixels_input and the divider

actions:
  - name: find_divider
    input: grid
    output: divider object (orientation, index)
    description: Locate the single, complete row or column of azure pixels.
  - name: define_regions
    input: grid, divider
    output: two region objects
    description: Identify the two areas separated by the divider.
  - name: process_region
    input: input_region_pixels, divider_info
    output: output_region_pixels
    description: Apply transformations within a region based on its input content. Consists of sub-actions color_change and fill_empty_space.
  - name: color_change
    input: input_region_pixels
    output: partially_modified_region_pixels
    description: If yellow (4) pixels exist in the input region, change them to green (3) in the output region. Red (2) pixels remain red.
  - name: fill_empty_space
    input: input_region_pixels, partially_modified_region_pixels, divider_info
    output: final_output_region_pixels
    description: For each line (column if horizontal divider, row if vertical) within the region:
      - If the input region contained yellow (4): Find the original yellow pixel closest to the divider on that line. Fill the white (0) cells between this pixel and the divider with yellow (4) in the output.
      - If the input region contained red (2): Find the original red pixel closest to the divider on that line. Fill the white (0) cells between this pixel and the divider with azure (8) in the output.
      - Precedence: If both fills target the same white cell (unlikely based on examples but possible if red/yellow align), the rule needs clarification. Assume independence unless examples show otherwise. The metric analysis suggests fills only target white cells, reducing conflict potential.
