task_context:
  grid_properties:
    - input_output_size_identical: True
    - background_color_exists: True
      # Example 1: Azure (8)
      # Example 2: Orange (7)
  object_identification:
    - type: background
      description: The most frequent color in the input grid. Persists in the output except where modified by transformation rules.
    - type: seed_pixels
      description: Pixels located in the first row (row 0) whose color is different from the background color.
      properties: [color, column_index]
    - type: target_columns
      description: The columns corresponding to the column indices of the seed_pixels.
    - type: existing_pixels
      description: Pixels in the target_columns below the first row in the input grid.

transformation_logic:
  actions:
    - action: identify_background_color
      inputs: [input_grid]
      outputs: [background_color]
    - action: identify_seed_pixels
      inputs: [input_grid, background_color]
      outputs: [list_of_seed_pixels] # Each element is {color: C, column: c}
    - action: initialize_output
      inputs: [input_grid]
      outputs: [output_grid] # Starts as a copy of input_grid
    - action: process_columns
      inputs: [list_of_seed_pixels, input_grid, output_grid, background_color]
      outputs: [modified_output_grid]
      sub_steps:
        - For each seed {color: C, column: c}:
        - For each row `r` from 1 to grid_height - 1:
            - Get input_pixel_color = input_grid[r, c]
            - Apply transformation rules:
                - IF input_pixel_color == background_color THEN set output_grid[r, c] = C
                - ELSE IF input_pixel_color == C THEN set output_grid[r, c] = background_color
                - ELSE set output_grid[r, c] = C # Overwrite other colors
  rule_summary: For each column containing a non-background seed pixel in the first row, transform the pixels below the first row based on the seed color (C) and the background color (BKG). Pixels matching BKG become C, pixels matching C become BKG, and all other pixels become C. The first row remains unchanged from the input.