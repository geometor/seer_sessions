task_description: Recolor white pixels based on their adjacency to the grid's outer border.

grid_properties:
  - dimensions: Variable height and width across examples.
  - background_color: Not explicitly defined, but areas outside the main pattern are typically blue (1).

objects:
  - object: boundary_lines
    color: blue (1)
    description: Forms a grid structure or frame. Remains static between input and output.
    attributes:
      - position: Forms rows and columns dividing the grid. Includes the outermost border.
  - object: fill_pixels
    color: white (0) in input
    description: Pixels located within the areas defined by boundary_lines. These are the pixels subject to transformation.
    attributes:
      - position: Specific row and column within the grid.
      - adjacency_to_border: Boolean property indicating if the pixel has at least one neighbour (including diagonals) located on the outermost row or column of the grid.

actions:
  - action: identify_white_pixels
    input: input_grid
    output: list of coordinates of white (0) pixels
  - action: check_border_adjacency
    input: coordinates of a white pixel, grid dimensions
    output: boolean (True if adjacent to border, False otherwise)
    description: Checks the 8 neighbours of the pixel. If any neighbour's row is 0 or max_row-1, or column is 0 or max_col-1, returns True.
  - action: recolor_pixel
    input: input_grid, pixel_coordinates, adjacency_result
    output: output_grid
    description: >
      Copies the input grid to the output grid.
      For the given pixel coordinates:
      If the input pixel is white (0) and adjacency_result is True, set the output pixel to red (2).
      If the input pixel is white (0) and adjacency_result is False, set the output pixel to green (3).
      Otherwise (if the input pixel is not white), keep the original color in the output grid.

relationships:
  - relationship: adjacency
    between: fill_pixels (white), outermost_border_pixels
    description: The core condition determining the output color for white pixels. Adjacency includes horizontal, vertical, and diagonal neighbours.

transformation_rule:
  - condition: Pixel color is white (0).
  - check: Is the pixel adjacent (including diagonals) to the absolute outermost border of the grid?
  - result:
    - If yes: Change color to red (2).
    - If no: Change color to green (3).
  - fallback: If pixel color is not white (0), keep the original color.