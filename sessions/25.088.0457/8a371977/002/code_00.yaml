task_description: Recolor connected components of white pixels based on their adjacency to the grid's border.

definitions:
  grid: A 2D array of pixels with integer values 0-9 representing colors.
  border: The set of pixels located at row 0, row height-1, column 0, or column width-1.
  white_pixel: A pixel with value 0.
  white_component: A contiguous region of white pixels where connectivity includes diagonals (8 neighbours).
  border_adjacent_component: A white_component where at least one pixel in the component shares an edge or corner with a pixel on the grid border.
  interior_component: A white_component that is not a border_adjacent_component.

input_features:
  - grid: The input 2D array.
  - white_pixels: Pixels with value 0.
  - blue_pixels: Pixels with value 1 (forming separators and the border).

output_features:
  - grid: The output 2D array, same dimensions as the input.
  - red_pixels: Pixels with value 2. These replace white_pixels belonging to border_adjacent_components.
  - green_pixels: Pixels with value 3. These replace white_pixels belonging to interior_components.
  - blue_pixels: Pixels with value 1 remain unchanged.

transformation_rules:
  - Identify all distinct white_components in the input grid.
  - For each white_component:
      - Check if any pixel within the component is adjacent (8-way) to any pixel on the grid border.
      - If yes (border_adjacent_component): Change the color of all pixels in this component to red (2).
      - If no (interior_component): Change the color of all pixels in this component to green (3).
  - All non-white pixels retain their original color.