Input_Features:
  - Grid: A 2D array of pixels with integer values 0-9 representing colors.
  - Pixels: Individual cells in the grid.
  - Colors: Discrete values (0-9) assigned to pixels.
  - Color_Counts: Frequency of each color in the input grid.

Derived_Concepts:
  - Background_Color: The color with the highest frequency in the input grid.
    - Condition: Must have at least 3 unique colors present.
  - Non_Background_Colors: Colors present in the input grid that are not the Background_Color.
    - Condition: Exactly two Non_Background_Colors must exist.
  - Fill_Color: The Non_Background_Color with the lower frequency count.
    - Tie-breaking: If counts are equal, the color with the lower numerical value is the Fill_Color.
  - Barrier_Color: The Non_Background_Color that is not the Fill_Color.
  - Adjacency: Two pixels are adjacent if they share an edge (up, down, left, or right), not just a corner.
  - Initial_Adjacency_Condition: A boolean value indicating if any pixel of the Fill_Color is adjacent to any pixel of the Background_Color in the input grid.

Transformation_Rule:
  - Type: Conditional Color Replacement.
  - Trigger_Condition:
    1. Exactly 3 unique colors are present in the input grid.
    2. The Initial_Adjacency_Condition is true (at least one Fill_Color pixel touches a Background_Color pixel).
  - Action:
    - If the Trigger_Condition is met: Change the color of *all* pixels that originally had the Background_Color to the Fill_Color. Pixels with the Barrier_Color or original Fill_Color remain unchanged.
    - If the Trigger_Condition is not met: The output grid is identical to the input grid.
  - Scope: Grid-wide replacement based on initial state, not a propagating fill.

Output_Features:
  - Grid: A 2D array representing the transformed state.
    - Dimensions: Same as the input grid.
    - Colors: Contains Background_Color (only if Trigger_Condition was false), Fill_Color, and Barrier_Color. If the transformation occurred, Background_Color pixels are replaced by Fill_Color.