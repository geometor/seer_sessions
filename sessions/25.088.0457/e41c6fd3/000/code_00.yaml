elements:
  - type: grid
    description: A 2D array of pixels with colors represented by integers 0-9. White (0) is the background.
  - type: object
    description: Contiguous blocks of pixels of the same non-white color. These represent distinct shapes.
    properties:
      - color: The integer value (1-9) representing the color of the object's pixels.
      - shape: The specific arrangement of pixels forming the object.
      - bounding_box: The smallest rectangle enclosing the object. Defined by top-left (y_min, x_min) and bottom-right (y_max, x_max) coordinates.
      - position: The location of the object's bounding box within the grid.
      - size: Height and width of the bounding box.

actions:
  - action: identify_objects
    description: Find all distinct contiguous blocks of non-white pixels in the input grid.
  - action: find_bounding_boxes
    description: Determine the bounding box for each identified object.
  - action: locate_reference_object
    description: Find the object with the specific color Azure (8).
  - action: determine_alignment_row
    description: Get the top y-coordinate (y_min) from the bounding box of the Azure (8) object.
  - action: create_output_grid
    description: Initialize a new grid with the same dimensions as the input, filled with the background color (white, 0).
  - action: reposition_objects
    description: >
      For each object identified in the input, copy its pixels to the output grid.
      The object's new top-left position in the output grid is set to (alignment_row, original_x_min),
      where alignment_row is the determined alignment row and original_x_min is the
      leftmost x-coordinate of the object's bounding box in the input grid.

relationships:
  - relationship: spatial_alignment
    description: >
      All objects in the output grid are aligned horizontally along a common row,
      determined by the Azure object's position in the input.
  - relationship: horizontal_order_preservation
    description: >
      The relative horizontal order of the objects (based on their leftmost x-coordinates)
      is preserved from input to output.