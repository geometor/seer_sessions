Background:
  - color: orange (7)
Input_Objects:
  - type: colored pixels/segments
  - colors: [azure (8), red (2)]
  - properties:
      - vertical extent (min_row, max_row)
      - horizontal extent (min_col, max_col)
Output_Objects:
  - type: original input objects + new gray segment
  - colors: [azure (8), red (2), gray (5)]
Transformation:
  - action: add_vertical_segment
  - color_added: gray (5)
  - location_rule:
      - column: Determined by the maximum column index (`max_c`) of any non-orange pixel in the input. `gray_column = max_c + 2`.
      - rows: Determined by the vertical extent and colors of non-orange pixels.
          - end_row: The maximum row index (`max_r`) of any non-orange pixel in the input.
          - start_row: Dependent on the presence and relative vertical position of red (2) and azure (8) pixels:
              - If no red pixels: Start at row index 1.
              - If red pixels exist:
                  - Find the minimum row index of azure pixels (`min_r_azure`).
                  - Find the minimum row index of red pixels (`min_r_red`).
                  - If azure starts higher (`min_r_azure < min_r_red`): Start at `end_row`.
                  - If red starts higher or at the same row (`min_r_red <= min_r_azure`): Start at `min_r_red + 2`.
Relationships:
  - The position and extent of the added gray segment are directly derived from the spatial properties (max row, max column, min row of specific colors) of the existing non-background objects in the input grid.
  - The background color (orange) remains unchanged unless overwritten by the new gray segment.