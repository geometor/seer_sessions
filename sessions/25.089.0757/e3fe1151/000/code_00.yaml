task_description: Change the color of specific orange pixels based on their non-orange neighbors.
grid_properties:
  size: 5x5 for all examples
 ثابت_elements:
  - type: structure
    shape: cross
    color: orange (7)
    location: central (middle row and middle column)
    behavior: remains unchanged in the output
  - type: pixels
    color: any color except orange (7) located outside the central cross region
    behavior: remains unchanged in the output
transformed_elements:
  - type: pixels
    initial_color: orange (7)
    location: outside the central cross
    trigger: presence of non-orange neighbors
    action: color changes based on a rule
transformation_rule:
  - condition: Pixel is orange (7) AND is NOT part of the central cross.
  - process:
      - step: Identify all 8 neighbors (cardinal and diagonal) of the target orange pixel.
      - step: Collect the colors of these neighbors.
      - step: Filter out any orange (7) neighbors.
      - step: Create a unique set of the remaining non-orange neighbor colors.
      - step: Determine the new color for the target pixel using a mapping based on this set of neighbor colors.
  - specific_mappings_observed: # (Neighbor Set -> Output Color)
      - {white(0), blue(1), azure(8)} -> gray(5)
      - {blue(1), gray(5), azure(8)} -> white(0)
      - {green(3), azure(8), maroon(9)} -> red(2)
      - {red(2), azure(8), maroon(9)} -> green(3)
      - {green(3), yellow(4)} -> gray(5)
      - {green(3), yellow(4), gray(5)} -> yellow(4)
      - {green(3), gray(5)} -> yellow(4)
output_grid_construction:
  - Copy all unchanged pixels (central orange cross, non-orange pixels) from the input.
  - Place the newly calculated colors for the transformed orange pixels into their corresponding positions.