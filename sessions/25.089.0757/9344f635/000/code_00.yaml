task_context:
  background_color: 7 # Gray seems to be the consistent background fill color

examples:
  - id: train_1
    input_grid_size: [8, 8]
    output_grid_size: [8, 8]
    input_objects:
      - color: 9 # maroon
        count: 1
        location: [[1, 1]]
      - color: 5 # gray
        count: 4
        location: [[1, 5], [1, 6], [2, 3], [2, 4]]
      - color: 4 # yellow
        count: 2
        location: [[6, 5], [6, 6]]
    row_transformations:
      - row_index: 1
        input_colors: {9: 1, 5: 2}
        action: fill
        fill_color: 5
      - row_index: 2
        input_colors: {9: 1, 5: 2}
        action: fill
        fill_color: 5
      - row_index: 6
        input_colors: {4: 2}
        action: fill
        fill_color: 4
      - row_index: [0, 3, 4, 5, 7] # Indices of rows that receive the pattern
        action: apply_pattern
        pattern_source_pixels: [{color: 9, column: 1}] # Pixel from non-filling rows
        output_pattern: "7 9 7 7 7 7 7 7"

  - id: train_2
    input_grid_size: [7, 7]
    output_grid_size: [7, 7]
    input_objects:
      - color: 6 # magenta
        count: 2
        location: [[1, 2], [2, 2]]
      - color: 2 # red
        count: 2
        location: [[2, 4], [3, 4]]
      - color: 5 # gray
        count: 2
        location: [[4, 1], [4, 2]]
      - color: 1 # blue
        count: 2
        location: [[5, 4], [5, 5]]
    row_transformations:
      - row_index: 4
        input_colors: {5: 2}
        action: fill
        fill_color: 5
      - row_index: 5
        input_colors: {1: 2}
        action: fill
        fill_color: 1
      - row_index: [0, 1, 2, 3, 6]
        action: apply_pattern
        pattern_source_pixels: [{color: 6, column: 2}, {color: 2, column: 4}] # Pixels from non-filling rows
        output_pattern: "7 7 6 7 2 7 7"

  - id: train_3
    input_grid_size: [9, 9]
    output_grid_size: [9, 9]
    input_objects:
      - color: 0 # white
        count: 4
        location: [[1, 0], [2, 0], [5, 6], [5, 7]]
      - color: 1 # blue
        count: 2
        location: [[2, 4], [3, 4]]
      - color: 3 # green
        count: 2
        location: [[2, 6], [2, 7]]
      - color: 6 # magenta
        count: 2
        location: [[7, 1], [7, 2]]
    row_transformations:
      - row_index: 2
        input_colors: {0: 1, 1: 1, 3: 2}
        action: fill
        fill_color: 3
      - row_index: 5
        input_colors: {0: 2}
        action: fill
        fill_color: 0
      - row_index: 7
        input_colors: {6: 2}
        action: fill
        fill_color: 6
      - row_index: [0, 1, 3, 4, 6, 8]
        action: apply_pattern
        pattern_source_pixels: [{color: 0, column: 0}, {color: 1, column: 4}] # Pixels from non-filling rows
        output_pattern: "0 7 7 7 1 7 7 7 7" # Note background is 7, not 0

rule_logic:
  - step: Identify background color (assumed to be 7/gray).
  - step: Determine row action type by analyzing non-background colors in each input row.
    - condition: If a row contains >= 2 pixels of the *same* non-background color C.
      - action: Mark row as "fill" type with color C.
    - condition: Otherwise.
      - action: Mark row as "pattern" type.
  - step: Define the pattern for "pattern" rows.
    - source: Collect all non-background pixels (color, column) from all input rows marked as "pattern" type.
    - result: Create a template row (width of the grid, filled with background color 7) and place each unique collected pixel's color at its specified column.
  - step: Construct the output grid.
    - For each row marked "fill": Fill the output row completely with the determined fill color C.
    - For each row marked "pattern": Copy the pattern template row into the output row.
