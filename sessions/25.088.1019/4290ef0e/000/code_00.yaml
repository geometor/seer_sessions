task_description: Overlay non-background objects from the input grid onto a new grid, centered according to specific rules, and crop to the bounding box of the result.

definitions:
  background_color: The color that appears most frequently in the input grid.
  object: A contiguous group of pixels of the same non-background color.
  center_pixel: A pixel whose color appears exactly once in the entire input grid and is not the background color. If it exists, its location defines the alignment center, and its color defines the output's center pixel color.
  center_point: If no center_pixel exists, the geometric center coordinates of the 'plus' shaped object define the alignment center.
  plus_shape: An object typically 3x3 pixels, where the center pixel and its four orthogonal neighbors have the same color, and the corner pixels are different (usually background).
  composite_shape: The shape formed by virtually overlaying all non-background objects relative to the alignment center (center_pixel location or center_point).
  bounding_box: The smallest rectangle containing all non-background pixels of the composite_shape.

input_grid_properties:
  - Contains multiple non-background objects.
  - Contains one background color.
  - May contain a unique 'center_pixel'.
  - If no 'center_pixel', contains exactly one 'plus_shape' object.

output_grid_properties:
  - Dimensions match the bounding_box of the composite_shape.
  - Contains the overlaid non-background objects.
  - Background is filled with the input grid's background_color.
  - The central pixel's color is determined by the center_pixel's color (if one exists), otherwise by the color resulting from the overlay at the center_point.

transformations:
  - Identify background_color.
  - Find all non-background objects.
  - Determine alignment center (using center_pixel or center_point of plus_shape).
  - Calculate relative positions of all pixels of all non-background objects with respect to the alignment center.
  - Create a conceptual canvas and place all non-background object pixels onto it based on their calculated relative positions (pixels overwrite previous pixels at the same location).
  - Determine the bounding_box of the placed pixels on the canvas.
  - Create the output grid with the dimensions of the bounding_box, filled initially with the background_color.
  - Copy the relevant section of the canvas (defined by the bounding_box) to the output grid.
  - If a center_pixel was used for alignment, set the corresponding central pixel in the output grid to the center_pixel's color.