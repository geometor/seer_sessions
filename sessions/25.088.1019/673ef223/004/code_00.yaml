task_description: Process rows in a grid based on the presence of red pixels at the edges and azure pixels within the row.
colors:
  RED: 2
  AZURE: 8
  YELLOW: 4
  BACKGROUND: 0 # Assuming white/0 is the background
grid_properties:
  dimensionality: 2D array (rows, columns)
  size: variable height and width (up to 30x30)
row_processing_logic:
  trigger: Presence of a RED (2) pixel at either the start (column 0) or the end (column num_cols - 1) of a row.
  priority: Process based on the left edge (column 0) first. If a red pixel is found and processed there, skip checking the right edge for that row.
  action_left_edge: # If row[0] == RED
    scan_direction: Left-to-right (from column 1 to num_cols - 1).
    scan_target: First AZURE (8) pixel.
    result_if_target_found:
      - fill_color: AZURE (8)
      - fill_range: From column 1 up to (but not including) the target's column.
      - target_change: Change the found AZURE (8) pixel to YELLOW (4).
    result_if_target_not_found:
      - fill_color: AZURE (8)
      - fill_range: From column 1 up to (and including) the last column (num_cols - 1).
      - target_change: None.
  action_right_edge: # If row[0] != RED AND row[num_cols - 1] == RED
    scan_direction: Right-to-left (from column num_cols - 2 down to 0).
    scan_target: First AZURE (8) pixel.
    result_if_target_found:
      - fill_color: AZURE (8)
      - fill_range: From the column after the target (target_col + 1) up to (but not including) the last column (num_cols - 1).
      - target_change: Change the found AZURE (8) pixel to YELLOW (4).
    result_if_target_not_found:
      - fill_color: AZURE (8)
      - fill_range: From the first column (0) up to (but not including) the second-to-last column (num_cols - 2).
      - target_change: None.
output_grid: Initialized as a copy of the input grid, modified in place based on row processing.