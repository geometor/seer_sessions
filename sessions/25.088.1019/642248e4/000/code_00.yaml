task_description: "Place colored pixels adjacent to blue pixels based on border colors and locations."

elements:
  - type: background
    color: white (0)
  - type: border
    count: 2
    properties:
      - fixed_position: Top/Bottom rows or Left/Right columns
      - single_color_per_border
      - colors_vary_between_examples
      - persist_unchanged_in_output
  - type: primary_object
    color: blue (1)
    properties:
      - located_within_borders
      - persist_unchanged_in_output
      - triggers_placement_of_new_pixels
  - type: generated_object
    properties:
      - color_matches_adjacent_border
      - appears_only_in_output
      - placed_adjacent_to_blue_pixels
      - placement_direction_matches_border_direction (e.g., above for top border)
      - only_placed_if_target_cell_is_white_in_input

relationships:
  - type: adjacency
    description: "Generated pixels are placed orthogonally adjacent (up/down or left/right) to blue pixels."
  - type: color_matching
    description: "The color of a generated pixel matches the color of the border in the direction of placement relative to the blue pixel."
  - type: conditional_placement
    description: "Placement of a generated pixel occurs only if the target adjacent cell is white (0)."

actions:
  - identify_borders: Determine the location (Top/Bottom or Left/Right) and color of the two border lines.
  - scan_grid: Iterate through each cell of the input grid.
  - check_for_blue: If a cell contains a blue (1) pixel.
  - check_adjacency: Examine the orthogonally adjacent cells in the directions of the identified borders.
  - place_pixel: If an adjacent cell in a border's direction is white (0), place a pixel of that border's color in that cell in the output grid.
  - copy_unchanged: All other pixels (borders, original blue pixels, background white pixels not adjacent to blue) are copied directly from input to output.