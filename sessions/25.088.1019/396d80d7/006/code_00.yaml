task_description: Fill background pixels adjacent to 'frame' objects with a 'fill' color, based on frame object size and geometry.

definitions:
  - background_color: The most frequent color in the input grid.
  - non_background_colors: The two colors present in the input grid that are not the background color.
  - frame_color: The non_background_color with more orthogonal adjacencies to the background_color. If counts are equal, the one with the lower numerical value.
  - fill_color: The non_background_color that is not the frame_color.
  - frame_object: A group of one or more orthogonally connected pixels of the frame_color.
  - adjacent_background_pixel: A pixel of background_color that shares an edge (orthogonal adjacency) with any pixel of a frame_object.
  - frame_object_size: The number of pixels in a frame_object.
  - convex_hull_area: (Conceptual) The set of grid cells covered by the filled convex hull polygon defined by the pixels of a frame_object.

rules:
  - identify_colors:
      - Find the background_color (most frequent).
      - Find the two non_background_colors.
      - Count orthogonal adjacencies between each non_background_color and the background_color.
      - Determine frame_color (more adjacencies or lower value in ties) and fill_color.
      - If not exactly 3 colors, or if neither non-background color touches the background, return input unchanged.
  - process_frame_objects:
      - Find all distinct frame_objects.
      - For each frame_object:
          - Find all adjacent_background_pixels.
          - Determine frame_object_size.
          - If frame_object_size is 1 or 2:
              - target_pixels: All adjacent_background_pixels.
          - If frame_object_size is 3 or more:
              - Calculate convex_hull_area for the frame_object.
              - target_pixels: Set of adjacent_background_pixels that are *not* within the convex_hull_area.
          - Change the color of target_pixels in the output grid to fill_color.