task_id: 6150236d # Assumed based on previous context
description: Modify a grid by filling specific background pixels adjacent to 'frame' objects with a 'fill' color. The rules for identifying colors and determining which pixels to fill depend on adjacency counts and potentially object geometry.

definitions:
  - background_color: The color with the highest pixel count in the input grid.
  - color1: One of the two non-background colors.
  - color2: The other non-background color.
  - frame_color: The non-background color (color1 or color2) determined to be the 'frame'. Identification criteria: higher count of orthogonal adjacencies to background_color, or lower numerical value in case of a tie.
  - fill_color: The non-background color that is not the frame_color.
  - frame_object: A set of orthogonally connected pixels all having the frame_color.
  - object_pixel: A pixel belonging to a frame_object.
  - adjacent_background_pixel: A pixel with background_color that is orthogonally adjacent to at least one object_pixel from a specific frame_object.
  - frame_object_size: The number of pixels in a frame_object.
  # - convex_hull_area: (Hypothesized based on previous code) The set of grid coordinates covered by the filled convex hull of a frame_object's pixels. # NOTE: This concept needs verification.

actions:
  - identify_colors:
      - Calculate color frequencies to find background_color.
      - Identify color1 and color2.
      - Count orthogonal adjacencies for color1 and color2 with background_color.
      - Assign frame_color and fill_color based on adjacency counts and tie-breaking rules.
  - find_frame_objects:
      - Locate all pixels with frame_color.
      - Group these pixels into distinct frame_objects based on orthogonal connectivity.
  - determine_pixels_to_fill:
      - For each frame_object:
          - Find all adjacent_background_pixels.
          - Apply a rule (based on frame_object_size and potentially geometry) to select a subset of these adjacent_background_pixels.
            # NOTE: The exact rule (e.g., all adjacent, outside convex hull, etc.) needs confirmation from examples.
  - fill_pixels:
      - Create a copy of the input grid.
      - Change the color of the selected pixels_to_fill to fill_color in the copied grid.

input_constraints:
  - Grid contains exactly 3 colors (background, color1, color2).
  - At least one of color1 or color2 must be adjacent to the background_color for the transformation to occur.

output_description: The output grid is the input grid modified by the fill_pixels action. If constraints are not met, the output is identical to the input.