objects:
  - type: background
    color: orange (7)
    scope: entire_grid
  - type: boundary_lines
    count: 2
    color: white (0)
    arrangement: parallel (either horizontal or vertical)
    properties:
      - orientation (horizontal or vertical)
      - position (row or column indices)
      - distance_between
  - type: enclosed_object
    color: gray (5)
    location: geometrically between the boundary_lines
    properties:
      - shape (variable, can be line, square, T-shape)
      - pixel_count
      - bounding_box
      - horizontal_span
      - vertical_span
  - type: output_line
    color: gray (5)
    properties:
      - orientation (matches boundary_lines orientation)
      - length (depends on boundary_lines orientation)
      - position (centered between moved boundary_lines)

actions:
  - identify: find the pair of parallel white boundary_lines
  - identify: determine the orientation of boundary_lines
  - identify: find the gray enclosed_object between the boundary_lines
  - calculate: count the pixels of the enclosed_object (N)
  - transform: move the boundary_lines one step inwards
  - calculate: determine the center row/column index (C_idx) of the region between the moved lines
  - calculate: determine the orientation of the output_line (matches boundary_lines orientation)
  - calculate: determine the length of the output_line:
      - if boundary_lines are vertical: length = grid_height - 2
      - if boundary_lines are horizontal: length = N
  - calculate: determine the position (start row/col) of the output_line by centering it within the grid dimension perpendicular to its orientation.
  - construct: create the output grid with the background, moved boundary_lines, and the calculated output_line.

relationships:
  - enclosed_object is spatially located between the boundary_lines in the input.
  - The orientation of the output_line is determined by the orientation of the input boundary_lines.
  - The length of the output_line depends on the orientation of the boundary_lines (either grid dimension or pixel count).
  - The output_line is positioned centrally between the moved boundary_lines along one axis and centrally within the grid along the other axis.