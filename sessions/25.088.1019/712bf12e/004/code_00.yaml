task_description: "Paint upwards from red pixels, converting white pixels to red until a non-white pixel is encountered."
grid_properties:
  - dimensions_preserved: True # Input and output grids have the same height and width.
  - palette: [0, 2, 5] # Colors present are white(0), red(2), gray(5).
  - gray_pixels_static: True # Gray(5) pixels remain unchanged in position and color. They act as obstacles.
objects:
  - type: pixel
    properties:
      - color: Can be white(0), red(2), or gray(5).
  - type: source_pixel
    description: "A pixel that is red(2) in the input grid."
    properties:
      - color: red(2)
  - type: obstacle_pixel
    description: "A pixel that is not white(0) in the input grid (can be red(2) or gray(5))."
    properties:
      - color: red(2) or gray(5)
  - type: paintable_pixel
    description: "A pixel that is white(0) in the input grid."
    properties:
      - color: white(0)
actions:
  - name: paint_upwards
    input: source_pixel (at row `r`, column `c`)
    output: modified output grid
    description: >
      Starting from the cell directly above the source_pixel (at row `r-1`, column `c`),
      move upwards row by row towards row 0. For each cell encountered at `(i, c)` (where `i` ranges from `r-1` down to 0):
      Check the color of the cell `(i, c)` in the *input* grid.
      If the input cell `(i, c)` is white(0), change the output grid cell `(i, c)` to red(2).
      If the input cell `(i, c)` is *not* white(0) (i.e., it's an obstacle_pixel), stop painting upwards for this specific source_pixel `(r, c)`.
      The original source_pixel at `(r, c)` remains red(2) in the output grid.
      Other pixels not affected by painting retain their original color from the input grid.