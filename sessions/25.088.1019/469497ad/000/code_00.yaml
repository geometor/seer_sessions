task_type: Grid Transformation (Scaling and Pattern Replacement)

observations:
  - transformation: Scaling
    input_property: Grid Dimensions (height H_in, width W_in)
    output_property: Grid Dimensions (height H_out, width W_out)
    relationship: H_out = H_in * S, W_out = W_in * S, where S is an integer scaling factor.
    details: The scaling factor S is constant for a given example pair but varies between examples. S = H_out / H_in = W_out / W_in.
  - element: Pixel
    input_location: (r, c)
    input_value: V
    output_mapping: Maps to an S x S block in the output grid starting at (r * S, c * S).
    conditions:
      - condition: Input pixel value V is not white (V != 0)
        output_block_content: Filled entirely with color V.
      - condition: Input pixel value V is white (V == 0)
        output_block_content:
          background: White (0)
          pattern: Red pixels (2) placed along the main diagonal of the S x S block.
          pattern_details: For a block pixel at local coordinates (br, bc) where 0 <= br < S and 0 <= bc < S, the pixel value is 2 if br == bc, otherwise it is 0.

examples_scaling_factors:
  - example: train_1
    input_dims: 5x5
    output_dims: 15x15
    scaling_factor_S: 3
  - example: train_2
    input_dims: 5x5
    output_dims: 10x10
    scaling_factor_S: 2
  - example: train_3
    input_dims: 5x5
    output_dims: 20x20
    scaling_factor_S: 4

involved_colors:
  - White (0): Background color in input and special output blocks.
  - Red (2): Used for the diagonal pattern in blocks corresponding to white input pixels.
  - Other colors (1, 3, 4, 6, 7, 8, 9): Copied directly when scaling non-white pixels.