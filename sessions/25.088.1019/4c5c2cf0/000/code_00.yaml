task_description: Reflect one object through the center of another object based on size and color comparison.

definitions:
  - &object
    description: A contiguous block of pixels of the same non-white color.
    properties:
      - color: The numerical index (1-9) of the object's pixels.
      - pixels: A list of (row, column) coordinates occupied by the object.
      - size: The number of pixels in the object.
      - bounding_box: The minimum and maximum row and column indices (r_min, r_max, c_min, c_max).
      - center_coords: Calculated center based on bounding box: ((r_min + r_max), (c_min + c_max)). Note: These are twice the float center coordinates, used for integer math reflection.

grid_elements:
  - type: background
    color: white (0)
  - type: object
    <<: *object
    count: Exactly two per input grid.

actions:
  - name: identify_objects
    input: input_grid
    output: list_of_two_objects_with_properties
    description: Finds the two distinct non-white objects and calculates their properties (color, pixels, size, bounding_box).
  - name: determine_pivot_and_mobile
    input: list_of_two_objects
    output: 
      - pivot_object: The object acting as the center of reflection.
      - mobile_object: The object that gets reflected.
    logic:
      - Compare the sizes (number of pixels) of the two objects.
      - If sizes differ, the object with the smaller size is the pivot.
      - If sizes are equal, compare the color indices of the two objects. The object with the higher color index is the pivot.
      - The other object is the mobile object.
  - name: calculate_pivot_center
    input: pivot_object
    output: center_coords (sum_r, sum_c)
    logic: Calculate sum_r = r_min + r_max and sum_c = c_min + c_max from the pivot's bounding_box.
  - name: reflect_mobile_object
    input:
      - mobile_object
      - center_coords (sum_r, sum_c)
      - output_grid (initially a copy of input_grid)
    output: modified_output_grid
    logic:
      - For each pixel (r, c) with color `obj_color` in the mobile_object:
        - Calculate reflected coordinates: r' = sum_r - r, c' = sum_c - c.
        - If (r', c') are valid coordinates within the grid bounds:
          - Set the pixel at (r', c') in the output_grid to `obj_color`.

relationships:
  - type: reflection_relationship
    between: [pivot_object, mobile_object]
    description: The mobile_object is reflected through the geometric center of the pivot_object's bounding box to create a new shape in the output grid. The original objects remain.

final_output:
  - The output grid contains the original pivot_object, the original mobile_object, and the newly created reflected version of the mobile_object.