task_context:
  description: The task transforms an input grid into an output grid with a fixed height and conditional pattern placement.
  background_color: 7 # Orange
  output_grid_properties:
    height: 16
    width: Same as input grid width
    base_fill: background_color

transformation_rule:
  condition: Input grid contains at least one pixel color different from the background_color.
  action_if_true:
    - step: Identify all non-background pixels in the input grid.
    - step: Determine the maximum color value ('max_color') among these non-background pixels.
    - step: Select a predefined pattern object based on 'max_color'.
      pattern_details:
        height: 5
        width: Varies based on 'max_color' (e.g., 10 for max_color=8, 7 for max_color=5)
        colors: Contains only Red (2) and Yellow (4).
        position_in_output: Top-left corner at row 11, column 0.
    - step: Create the output grid (16xW) filled with the background color.
    - step: Place the selected pattern onto the output grid at the specified position.
  action_if_false:
    - step: Create the output grid (16xW) filled entirely with the background color.

known_patterns:
  - trigger_max_color: 8
    pattern_grid: # 5x10
      - [2, 2, 2, 2, 4, 4, 2, 2, 2, 2]
      - [2, 2, 2, 4, 2, 2, 4, 2, 2, 2]
      - [2, 2, 4, 2, 2, 2, 2, 4, 2, 2]
      - [2, 4, 2, 2, 2, 2, 2, 2, 4, 2]
      - [4, 2, 2, 2, 2, 2, 2, 2, 2, 4]
  - trigger_max_color: 5
    pattern_grid: # 5x7
      - [2, 2, 4, 2, 4, 2, 2]
      - [2, 2, 2, 4, 2, 2, 2]
      - [2, 2, 4, 2, 4, 2, 2]
      - [2, 4, 2, 2, 2, 4, 2]
      - [4, 2, 2, 2, 2, 2, 4]

assumptions:
  - There is a unique, predefined pattern associated with each possible maximum non-background color value that might appear in inputs.
  - The background color will always be orange (7).