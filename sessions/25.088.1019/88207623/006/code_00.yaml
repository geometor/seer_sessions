task_description: Flood fill areas adjacent to vertical red lines using specified colors, bounded by non-white pixels from the input.

objects:
  - type: grid
    properties:
      - 2D array of integers (0-9) representing colors.
      - Size varies (up to 30x30).
  - type: vertical_red_line
    properties:
      - A contiguous segment of red (2) pixels in a single column.
      - Defined by column index, start row, end row.
      - Acts as a trigger for a fill operation.
      - Acts as a boundary for fills originating from other lines.
  - type: fill_color_source
    properties:
      - Pixels with colors other than white (0), red (2), or yellow (4).
      - Their values determine the colors used for filling.
      - The order they appear in a top-to-bottom, left-to-right scan matters.
  - type: white_area
    properties:
      - Contiguous regions of white (0) pixels in the input grid.
      - Target areas for flood fills.
  - type: boundary_pixels
    properties:
      - Any non-white (0) pixel in the input grid (e.g., red (2), yellow (4), initial fill_color_source pixels, potentially others).
      - Define the limits of the flood fill propagation.
      - Grid edges also act as boundaries.

actions:
  - name: find_fill_colors
    description: Identify unique colors (not 0, 2, 4) in scan order (top-down, left-right).
  - name: find_red_segments
    description: Locate all vertical contiguous red (2) pixel segments. Record column, start row, end row for each.
  - name: sort_red_segments
    description: Order the found red segments primarily by start row (ascending), secondarily by column index (ascending).
  - name: associate_colors_segments
    description: Pair the Nth sorted red segment with the Nth found fill color.
  - name: determine_fill_side
    description: For each segment, count the white (0) pixels in the input grid immediately left and right, within the segment's row bounds. Fill the side with more white pixels. If equal and >0, fill right.
  - name: flood_fill_adjacent_area
    description: >
      For each (segment, fill_color, side) triplet:
      1. Identify initial seed points: white (0) pixels in the current grid state, located in the column adjacent to the segment on the chosen side, and within the segment's original row bounds.
      2. If seeds exist, perform a flood fill starting from these seeds:
         - The fill modifies the output grid.
         - The fill changes only pixels that were originally white (0) in the input grid to the `fill_color`.
         - The fill propagates horizontally and vertically.
         - The fill stops at grid boundaries or any pixel that was *not* white (0) in the *input* grid.

final_state: The output grid reflects the input grid with the specified white areas flood-filled according to the rules.