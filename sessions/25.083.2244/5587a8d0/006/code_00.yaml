facts:
  - task: "Border Transformation"
  - objects:
    - outer_border:
        description: "The outermost layer of pixels."
        properties:
          color: "Varies (7 in examples), changes based on core content."
    - inner_border:
        description: "A contiguous region of pixels inside the outer border."
        properties:
          color: "Varies (4, 1, or 8 in examples)."
          presence: "May or may not exist."
    - core:
        description: "The innermost region, surrounded by either the outer border or the inner border."
        properties:
          colors: "Varies, transforms based on task-specific rules."
  - actions:
    - identify_outer_border: "Determine the color of the outermost border."
    - identify_inner_border: "If present, find the contiguous region inside the outer border and its color."
    - extract_core: "Isolate the innermost region."
    - transform_core_colors: "Apply color mapping rules to the core based on initial colors and border colors."
    - construct_output: "Create the output grid by filling the outer border, inner border (if applicable), and transformed core."
  - rules:
     - output border: "Based on specific rules, if input border is color 7, output color can change."
     - example 1: "If outer is color 7, inner is color 4. Core contains 6. Output has outer border color 4, inner color 4, core colors are mapped as 4->6"
     - example 2: "If outer is color 7, inner is color 1. Core contains 8,5. Output has outer border color 1, inner color 1. Core colors mapped as 1->8. 5 and 8 stay the same."
     - example 3: "If outer is color 7, inner is color 8 and 0. Core contains 9,3. Output has outer border color 8, inner border colors 8,0. Core colors mapped as 8->0, 9->3. Color 3 stays the same"