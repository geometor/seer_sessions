{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4643,
        "candidates": 572,
        "total": 5215,
        "cached": 0
      },
      "response_time": 8.8778
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 5075,
        "candidates": 733,
        "total": 5808,
        "cached": 0
      },
      "response_time": 6.899068
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 524,
        "total": 2341,
        "cached": 0
      },
      "response_time": 7.545631
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2203,
        "candidates": 405,
        "total": 2608,
        "cached": 0
      },
      "response_time": 5.066114
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1656,
        "candidates": 2444,
        "total": 4100,
        "cached": 0
      },
      "response_time": 21.984504
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3902,
        "candidates": 472,
        "total": 4374,
        "cached": 0
      },
      "response_time": 3.889186
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1724,
        "candidates": 1595,
        "total": 3319,
        "cached": 0
      },
      "response_time": 18.143831
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 3122,
        "candidates": 476,
        "total": 3598,
        "cached": 0
      },
      "response_time": 4.309139
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 611,
        "total": 2428,
        "cached": 0
      },
      "response_time": 7.56541
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2290,
        "candidates": 385,
        "total": 2675,
        "cached": 0
      },
      "response_time": 4.142318
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1637,
        "candidates": 1143,
        "total": 2780,
        "cached": 0
      },
      "response_time": 13.0859
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2575,
        "candidates": 697,
        "total": 3272,
        "cached": 0
      },
      "response_time": 5.863437
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1947,
        "candidates": 2146,
        "total": 4093,
        "cached": 0
      },
      "response_time": 37.754467
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3887,
        "candidates": 594,
        "total": 4481,
        "cached": 0
      },
      "response_time": 5.296328
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 523,
        "total": 2340,
        "cached": 0
      },
      "response_time": 7.537644
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2201,
        "candidates": 600,
        "total": 2801,
        "cached": 0
      },
      "response_time": 7.004136
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1850,
        "candidates": 6668,
        "total": 8518,
        "cached": 0
      },
      "response_time": 53.779542
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 8313,
        "candidates": 364,
        "total": 8677,
        "cached": 0
      },
      "response_time": 4.172045
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1615,
        "candidates": 2459,
        "total": 4074,
        "cached": 0
      },
      "response_time": 22.401724
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 3885,
        "candidates": 319,
        "total": 4204,
        "cached": 0
      },
      "response_time": 3.185007
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 493,
        "total": 2310,
        "cached": 0
      },
      "response_time": 7.001281
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2172,
        "candidates": 522,
        "total": 2694,
        "cached": 0
      },
      "response_time": 5.58131
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1769,
        "candidates": 2798,
        "total": 4567,
        "cached": 0
      },
      "response_time": 24.960006
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 4362,
        "candidates": 324,
        "total": 4686,
        "cached": 0
      },
      "response_time": 3.351142
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1575,
        "candidates": 2397,
        "total": 3972,
        "cached": 0
      },
      "response_time": 22.578392
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 3770,
        "candidates": 408,
        "total": 4178,
        "cached": 0
      },
      "response_time": 3.835231
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 492,
        "total": 2309,
        "cached": 0
      },
      "response_time": 6.839541
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 2170,
        "candidates": 396,
        "total": 2566,
        "cached": 0
      },
      "response_time": 4.427351
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 1646,
        "candidates": 2908,
        "total": 4554,
        "cached": 0
      },
      "response_time": 26.599346
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 4343,
        "candidates": 880,
        "total": 5223,
        "cached": 0
      },
      "response_time": 7.750483
    },
    {
      "response_file": "031-response.json",
      "token_usage": {
        "prompt": 2131,
        "candidates": 3761,
        "total": 5892,
        "cached": 0
      },
      "response_time": 33.023909
    },
    {
      "response_file": "032-response.json",
      "token_usage": {
        "prompt": 5680,
        "candidates": 1045,
        "total": 6725,
        "cached": 0
      },
      "response_time": 8.665062
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 8 8\n8 0 0\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 0 0\n0 8 8\n0 8 8\n8 0 0\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 0 0\n0 8 0\n8 0 0\n0 0 8\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n8 0 0\n0 8 8\n0 8 0\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 0 8\n8 0 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 40.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      }
    ],
    "005-py_03-train": [],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 8 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      }
    ],
    "013-py_08-train": [],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "8\n8\n8\n8\n8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8\n8\n8\n8\n8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8\n8\n8\n8\n8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "017-py_11-train": [],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "019-py_13-train": [],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 9 9 8 9 9 9\n0 0 9 8 9 9 0\n9 0 9 8 9 9 0\n0 0 0 8 9 0 0\n0 9 9 8 9 9 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0 8 9 0 0\n9 0 9 8 9 9 9\n0 9 9 8 9 9 9\n0 0 0 8 9 9 9\n0 9 9 8 9 9 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "9 0 0 8 9 0 9\n9 0 0 8 0 9 0\n9 0 0 8 9 0 0\n0 9 9 8 0 9 9\n0 0 9 8 0 9 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 9 9 8 9 0 9\n9 0 0 8 9 0 0\n9 9 9 8 9 9 9\n0 9 0 8 0 0 0\n9 0 0 8 9 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 9 9 8 9 0 9\n9 0 9 8 9 9 9\n9 9 9 8 0 0 9\n9 0 0 8 9 0 0\n9 9 9 8 0 0 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "022-py_15-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      }
    ],
    "024-py_16-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      }
    ],
    "025-py_17-train": [],
    "026-py_18-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8\n8 0 8\n0 8 8\n8 0 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      }
    ],
    "028-py_19-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "029-py_20-train": [],
    "030-py_21-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0\n0 0 0 8 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "031-py_22-train": [],
    "032-py_23-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0\n0 0 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 2,
    "total": 5
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}