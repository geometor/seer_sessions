import numpy as np

def describe_grid(grid):
    rows, cols = grid.shape
    description = {
        'shape': (rows, cols),
        'pixels': {}
    }
    for i in range(rows):
        for j in range(cols):
            color = grid[i, j]
            if color not in description['pixels']:
                description['pixels'][color] = []
            description['pixels'][color].append((i, j))
    return description

def compare_grids(input_grid, output_grid):
    input_desc = describe_grid(input_grid)
    output_desc = describe_grid(output_grid)
    changes = []

    # Detect changes using numpy
    diff = input_grid != output_grid
    changed_indices = np.where(diff)
    for i,j in zip(changed_indices[0], changed_indices[1]):
      changes.append({
                'location': (i, j),
                'from': int(input_grid[i,j]),
                'to': int(output_grid[i,j])
            })

    return {
        'input': input_desc,
        'output': output_desc,
        'changes': changes
    }

# Example usage (replace with actual task data)
task_data = [
  {
    "input": [
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [2, 2, 2, 2, 3, 2, 2, 2, 2, 2],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ],
    "output": [
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [2, 2, 2, 2, 0, 2, 2, 2, 2, 2],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ]
  },
  {
    "input": [
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [2, 2, 2, 2, 3, 2, 2, 2, 2, 2],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ],
    "output": [
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
      [2, 2, 2, 2, 0, 2, 2, 2, 2, 2],
      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    ]
  },
    {
    "input": [
      [0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0],
      [2, 2, 2, 2, 3, 2, 2, 2],
      [0, 0, 0, 0, 0, 0, 0, 0]
    ],
    "output": [
      [0, 0, 0, 0, 0, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0],
      [0, 0, 0, 0, 3, 0, 0, 0],
      [2, 2, 2, 2, 0, 2, 2, 2],
      [0, 0, 0, 0, 0, 0, 0, 0]
    ]
  }
]

results = [compare_grids(np.array(item['input']), np.array(item['output'])) for item in task_data]
for i, result in enumerate(results):
    print(f"Example {i}:")
    print(f"  Changes: {result['changes']}")