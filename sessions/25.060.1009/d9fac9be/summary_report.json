{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4287,
        "candidates": 360,
        "total": 4647,
        "cached": 0
      },
      "response_time": 6.128923
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4508,
        "candidates": 363,
        "total": 4871,
        "cached": 0
      },
      "response_time": 29.871435
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1809,
        "candidates": 492,
        "total": 2301,
        "cached": 0
      },
      "response_time": 7.578408
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2163,
        "candidates": 247,
        "total": 2410,
        "cached": 0
      },
      "response_time": 3.210447
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1498,
        "candidates": 1028,
        "total": 2526,
        "cached": 0
      },
      "response_time": 12.122778
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2319,
        "candidates": 579,
        "total": 2898,
        "cached": 0
      },
      "response_time": 5.766047
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1829,
        "candidates": 2803,
        "total": 4632,
        "cached": 0
      },
      "response_time": 25.06009
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 4427,
        "candidates": 516,
        "total": 4943,
        "cached": 0
      },
      "response_time": 4.855766
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1845,
        "candidates": 1857,
        "total": 3702,
        "cached": 0
      },
      "response_time": 16.22965
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3563,
        "candidates": 283,
        "total": 3846,
        "cached": 0
      },
      "response_time": 3.373977
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1917,
        "candidates": 327,
        "total": 2244,
        "cached": 0
      },
      "response_time": 5.411413
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2106,
        "candidates": 188,
        "total": 2294,
        "cached": 0
      },
      "response_time": 2.692796
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1440,
        "candidates": 1741,
        "total": 3181,
        "cached": 0
      },
      "response_time": 14.350819
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2992,
        "candidates": 218,
        "total": 3210,
        "cached": 0
      },
      "response_time": 16.386706
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1470,
        "candidates": 768,
        "total": 2238,
        "cached": 0
      },
      "response_time": 9.051829
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2034,
        "candidates": 218,
        "total": 2252,
        "cached": 0
      },
      "response_time": 2.230957
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1983,
        "candidates": 354,
        "total": 2337,
        "cached": 0
      },
      "response_time": 5.091682
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2199,
        "candidates": 138,
        "total": 2337,
        "cached": 0
      },
      "response_time": 2.429968
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1389,
        "candidates": 4333,
        "total": 5722,
        "cached": 0
      },
      "response_time": 33.399318
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 5524,
        "candidates": 326,
        "total": 5850,
        "cached": 0
      },
      "response_time": 3.179851
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1575,
        "candidates": 1030,
        "total": 2605,
        "cached": 0
      },
      "response_time": 11.817065
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2398,
        "candidates": 209,
        "total": 2607,
        "cached": 0
      },
      "response_time": 2.895668
    }
  ],
  "test_report": {
    "002-py_01-train": [],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0 2 0 0 2\n0 4 4 4 0 0 0 0 0\n0 4 2 4 0 0 2 0 0\n0 4 4 4 0 0 0 2 0\n2 0 0 0 0 2 0 0 0",
        "expected_output": "2",
        "transformed_output": "2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "8 0 8 0 0 0 0 0 8\n0 0 0 0 8 0 0 0 0\n0 0 8 0 0 3 3 3 0\n8 0 0 3 0 3 8 3 0\n0 0 0 0 0 3 3 3 0\n0 0 8 0 0 0 0 0 0\n3 0 0 8 0 0 0 8 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "1 2 0 0 0 2 0 0 0\n0 0 2 0 0 0 0 0 0\n2 0 1 2 0 2 0 1 1\n0 1 0 0 2 0 0 0 2\n0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0\n0 2 2 2 0 0 0 0 0\n1 2 1 2 0 0 0 2 0\n0 2 2 2 0 0 0 0 2\n0 0 1 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0",
        "expected_output": "1",
        "transformed_output": "2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "0 8 0 0 0 0 0 0 0 0 3 8\n3 0 0 0 0 0 0 8 0 3 0 0\n0 3 3 8 0 0 0 0 0 0 0 8\n0 0 0 3 8 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0 8 0\n0 0 0 3 8 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 8 0 3 0\n0 0 3 3 8 3 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0 0 0\n0 0 3 0 0 0 0 0 0 0 0 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0 2 0 0 2\n0 4 4 4 0 0 0 0 0\n0 4 2 4 0 0 2 0 0\n0 4 4 4 0 0 0 2 0\n2 0 0 0 0 2 0 0 0",
        "expected_output": "2",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "8 0 8 0 0 0 0 0 8\n0 0 0 0 8 0 0 0 0\n0 0 8 0 0 3 3 3 0\n8 0 0 3 0 3 8 3 0\n0 0 0 0 0 3 3 3 0\n0 0 8 0 0 0 0 0 0\n3 0 0 8 0 0 0 8 0",
        "expected_output": "8",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "1 2 0 0 0 2 0 0 0\n0 0 2 0 0 0 0 0 0\n2 0 1 2 0 2 0 1 1\n0 1 0 0 2 0 0 0 2\n0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0\n0 2 2 2 0 0 0 0 0\n1 2 1 2 0 0 0 2 0\n0 2 2 2 0 0 0 0 2\n0 0 1 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0",
        "expected_output": "1",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0 0 0 0 0 0 0 0 3 8\n3 0 0 0 0 0 0 8 0 3 0 0\n0 3 3 8 0 0 0 0 0 0 0 8\n0 0 0 3 8 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0 8 0\n0 0 0 3 8 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 8 0 3 0\n0 0 3 3 8 3 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0 0 0\n0 0 3 0 0 0 0 0 0 0 0 0",
        "expected_output": "8",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0 2 0 0 2\n0 4 4 4 0 0 0 0 0\n0 4 2 4 0 0 2 0 0\n0 4 4 4 0 0 0 2 0\n2 0 0 0 0 2 0 0 0",
        "expected_output": "2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "8 0 8 0 0 0 0 0 8\n0 0 0 0 8 0 0 0 0\n0 0 8 0 0 3 3 3 0\n8 0 0 3 0 3 8 3 0\n0 0 0 0 0 3 3 3 0\n0 0 8 0 0 0 0 0 0\n3 0 0 8 0 0 0 8 0",
        "expected_output": "8",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "1 2 0 0 0 2 0 0 0\n0 0 2 0 0 0 0 0 0\n2 0 1 2 0 2 0 1 1\n0 1 0 0 2 0 0 0 2\n0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0\n0 2 2 2 0 0 0 0 0\n1 2 1 2 0 0 0 2 0\n0 2 2 2 0 0 0 0 2\n0 0 1 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0",
        "expected_output": "1",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 8 0 0 0 0 0 0 0 0 3 8\n3 0 0 0 0 0 0 8 0 3 0 0\n0 3 3 8 0 0 0 0 0 0 0 8\n0 0 0 3 8 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0 8 0\n0 0 0 3 8 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 8 0 3 0\n0 0 3 3 8 3 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0 0 0\n0 0 3 0 0 0 0 0 0 0 0 0",
        "expected_output": "8",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_06-train": [],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0 2 0 0 2\n0 4 4 4 0 0 0 0 0\n0 4 2 4 0 0 2 0 0\n0 4 4 4 0 0 0 2 0\n2 0 0 0 0 2 0 0 0",
        "expected_output": "2",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "8 0 8 0 0 0 0 0 8\n0 0 0 0 8 0 0 0 0\n0 0 8 0 0 3 3 3 0\n8 0 0 3 0 3 8 3 0\n0 0 0 0 0 3 3 3 0\n0 0 8 0 0 0 0 0 0\n3 0 0 8 0 0 0 8 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "1 2 0 0 0 2 0 0 0\n0 0 2 0 0 0 0 0 0\n2 0 1 2 0 2 0 1 1\n0 1 0 0 2 0 0 0 2\n0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0\n0 2 2 2 0 0 0 0 0\n1 2 1 2 0 0 0 2 0\n0 2 2 2 0 0 0 0 2\n0 0 1 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0",
        "expected_output": "1",
        "transformed_output": "1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 8 0 0 0 0 0 0 0 0 3 8\n3 0 0 0 0 0 0 8 0 3 0 0\n0 3 3 8 0 0 0 0 0 0 0 8\n0 0 0 3 8 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0 8 0\n0 0 0 3 8 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 8 0 3 0\n0 0 3 3 8 3 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0 0 0\n0 0 3 0 0 0 0 0 0 0 0 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      }
    ],
    "013-py_08-train": [],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0 2 0 0 2\n0 4 4 4 0 0 0 0 0\n0 4 2 4 0 0 2 0 0\n0 4 4 4 0 0 0 2 0\n2 0 0 0 0 2 0 0 0",
        "expected_output": "2",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "8 0 8 0 0 0 0 0 8\n0 0 0 0 8 0 0 0 0\n0 0 8 0 0 3 3 3 0\n8 0 0 3 0 3 8 3 0\n0 0 0 0 0 3 3 3 0\n0 0 8 0 0 0 0 0 0\n3 0 0 8 0 0 0 8 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "1 2 0 0 0 2 0 0 0\n0 0 2 0 0 0 0 0 0\n2 0 1 2 0 2 0 1 1\n0 1 0 0 2 0 0 0 2\n0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0\n0 2 2 2 0 0 0 0 0\n1 2 1 2 0 0 0 2 0\n0 2 2 2 0 0 0 0 2\n0 0 1 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0",
        "expected_output": "1",
        "transformed_output": "1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 8 0 0 0 0 0 0 0 0 3 8\n3 0 0 0 0 0 0 8 0 3 0 0\n0 3 3 8 0 0 0 0 0 0 0 8\n0 0 0 3 8 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0 8 0\n0 0 0 3 8 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 8 0 3 0\n0 0 3 3 8 3 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0 0 0\n0 0 3 0 0 0 0 0 0 0 0 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0 2 0 0 2\n0 4 4 4 0 0 0 0 0\n0 4 2 4 0 0 2 0 0\n0 4 4 4 0 0 0 2 0\n2 0 0 0 0 2 0 0 0",
        "expected_output": "2",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "8 0 8 0 0 0 0 0 8\n0 0 0 0 8 0 0 0 0\n0 0 8 0 0 3 3 3 0\n8 0 0 3 0 3 8 3 0\n0 0 0 0 0 3 3 3 0\n0 0 8 0 0 0 0 0 0\n3 0 0 8 0 0 0 8 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "1 2 0 0 0 2 0 0 0\n0 0 2 0 0 0 0 0 0\n2 0 1 2 0 2 0 1 1\n0 1 0 0 2 0 0 0 2\n0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0\n0 2 2 2 0 0 0 0 0\n1 2 1 2 0 0 0 2 0\n0 2 2 2 0 0 0 0 2\n0 0 1 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0",
        "expected_output": "1",
        "transformed_output": "1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 8 0 0 0 0 0 0 0 0 3 8\n3 0 0 0 0 0 0 8 0 3 0 0\n0 3 3 8 0 0 0 0 0 0 0 8\n0 0 0 3 8 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0 8 0\n0 0 0 3 8 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 8 0 3 0\n0 0 3 3 8 3 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0 0 0\n0 0 3 0 0 0 0 0 0 0 0 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      }
    ],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0 2 0 0 2\n0 4 4 4 0 0 0 0 0\n0 4 2 4 0 0 2 0 0\n0 4 4 4 0 0 0 2 0\n2 0 0 0 0 2 0 0 0",
        "expected_output": "2",
        "transformed_output": "8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "8 0 8 0 0 0 0 0 8\n0 0 0 0 8 0 0 0 0\n0 0 8 0 0 3 3 3 0\n8 0 0 3 0 3 8 3 0\n0 0 0 0 0 3 3 3 0\n0 0 8 0 0 0 0 0 0\n3 0 0 8 0 0 0 8 0",
        "expected_output": "8",
        "transformed_output": "8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "1 2 0 0 0 2 0 0 0\n0 0 2 0 0 0 0 0 0\n2 0 1 2 0 2 0 1 1\n0 1 0 0 2 0 0 0 2\n0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0\n0 2 2 2 0 0 0 0 0\n1 2 1 2 0 0 0 2 0\n0 2 2 2 0 0 0 0 2\n0 0 1 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0",
        "expected_output": "1",
        "transformed_output": "8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "0 8 0 0 0 0 0 0 0 0 3 8\n3 0 0 0 0 0 0 8 0 3 0 0\n0 3 3 8 0 0 0 0 0 0 0 8\n0 0 0 3 8 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0 8 0\n0 0 0 3 8 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 8 0 3 0\n0 0 3 3 8 3 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0 0 0\n0 0 3 0 0 0 0 0 0 0 0 0",
        "expected_output": "8",
        "transformed_output": "8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "019-py_12-train": [],
    "019-py_13-train": [],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0 2 0 0 2\n0 4 4 4 0 0 0 0 0\n0 4 2 4 0 0 2 0 0\n0 4 4 4 0 0 0 2 0\n2 0 0 0 0 2 0 0 0",
        "expected_output": "2",
        "transformed_output": "2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "8 0 8 0 0 0 0 0 8\n0 0 0 0 8 0 0 0 0\n0 0 8 0 0 3 3 3 0\n8 0 0 3 0 3 8 3 0\n0 0 0 0 0 3 3 3 0\n0 0 8 0 0 0 0 0 0\n3 0 0 8 0 0 0 8 0",
        "expected_output": "8",
        "transformed_output": "8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "1 2 0 0 0 2 0 0 0\n0 0 2 0 0 0 0 0 0\n2 0 1 2 0 2 0 1 1\n0 1 0 0 2 0 0 0 2\n0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0\n0 2 2 2 0 0 0 0 0\n1 2 1 2 0 0 0 2 0\n0 2 2 2 0 0 0 0 2\n0 0 1 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0",
        "expected_output": "1",
        "transformed_output": "2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "0 8 0 0 0 0 0 0 0 0 3 8\n3 0 0 0 0 0 0 8 0 3 0 0\n0 3 3 8 0 0 0 0 0 0 0 8\n0 0 0 3 8 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0 8 0\n0 0 0 3 8 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 8 0 3 0\n0 0 3 3 8 3 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0 0 0\n0 0 3 0 0 0 0 0 0 0 0 0",
        "expected_output": "8",
        "transformed_output": "3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      }
    ],
    "022-py_15-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0 2 0 0 2\n0 4 4 4 0 0 0 0 0\n0 4 2 4 0 0 2 0 0\n0 4 4 4 0 0 0 2 0\n2 0 0 0 0 2 0 0 0",
        "expected_output": "2",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "8 0 8 0 0 0 0 0 8\n0 0 0 0 8 0 0 0 0\n0 0 8 0 0 3 3 3 0\n8 0 0 3 0 3 8 3 0\n0 0 0 0 0 3 3 3 0\n0 0 8 0 0 0 0 0 0\n3 0 0 8 0 0 0 8 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "1 2 0 0 0 2 0 0 0\n0 0 2 0 0 0 0 0 0\n2 0 1 2 0 2 0 1 1\n0 1 0 0 2 0 0 0 2\n0 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0\n0 2 2 2 0 0 0 0 0\n1 2 1 2 0 0 0 2 0\n0 2 2 2 0 0 0 0 2\n0 0 1 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0",
        "expected_output": "1",
        "transformed_output": "1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 8 0 0 0 0 0 0 0 0 3 8\n3 0 0 0 0 0 0 8 0 3 0 0\n0 3 3 8 0 0 0 0 0 0 0 8\n0 0 0 3 8 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0 0 8 0\n0 0 0 3 8 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 8 0 3 0\n0 0 3 3 8 3 0 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0 0 0\n0 0 3 0 0 0 0 0 0 0 0 0",
        "expected_output": "8",
        "transformed_output": "0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 0.0
      }
    ]
  },
  "best_train_results": {
    "passed": 2,
    "total": 4
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}