import numpy as np

def describe_grid(grid):
    shape = grid.shape
    unique_values = np.unique(grid)
    value_counts = {val: np.count_nonzero(grid == val) for val in unique_values}
    return {
        "shape": shape,
        "unique_values": unique_values.tolist(),
        "value_counts": value_counts,
    }

examples = [
    {
        "input": [[0, 1], [1, 0]],
        "output": [[0, 2], [2, 0], [0, 2]],
    },
    {
        "input": [[0, 1, 0, 1], [1, 0, 1, 0], [0, 1, 0, 1], [1, 0, 1, 0]],
        "output": [[0, 2, 0, 2], [2, 0, 2, 0], [0, 2, 0, 2]],
    },
    {
        "input": [[0, 1, 0, 1, 0, 1], [1, 0, 1, 0, 1, 0]],
        "output": [[0, 2, 0, 2, 0, 2], [2, 0, 2, 0, 2, 0], [0, 2, 0, 2, 0, 2]],
    },
    {
        "input": [[0, 1], [1, 0], [0, 1], [1, 0], [0, 1], [1, 0]],
        "output": [[0, 2], [2, 0], [0, 2]],
    },
]

results = []
for example in examples:
      input_grid = np.array(example["input"])
      output_grid = np.array(example["output"])
      result = {
          "input": describe_grid(input_grid),
          "output": describe_grid(output_grid),
      }
      results.append(result)

print(results)