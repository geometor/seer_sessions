task_description: Crop and potentially rescale/reposition objects based on size and role.

definitions:
  object: A contiguous area of non-white pixels (using 4-way adjacency).
  ignored_object: An object with size = 1 pixel.
  ignored_color: The color of an ignored_object.
  kept_object: An object that is not an ignored_object.
  background_object: The kept_object with the largest size (pixel count).
  background_color: The color of the background_object.
  foreground_object: Any kept_object that is not the background_object.

input_grid:
  properties:
    - contains: multiple objects of different colors.
    - contains: single-pixel objects.
    - contains: a white background (color 0).

output_grid:
  properties:
    - dimensions: Equal to 2 times the dimensions (height and width) of the bounding box of the background_object from the input grid.
    - background: Filled entirely with the background_color.
    - content: Contains pixels corresponding to the foreground_objects from the input grid.

transformations:
  - action: identify_objects
    input: input_grid
    output: list of objects with color, size, pixels, bbox.
  - action: identify_ignored_colors
    input: list of objects
    output: set of colors corresponding to objects with size 1.
  - action: filter_kept_objects
    input: list of objects, set of ignored_colors
    output: list of kept_objects.
  - action: select_background_object
    input: list of kept_objects
    output: background_object (largest by size).
  - action: determine_background_color
    input: background_object
    output: background_color.
  - action: determine_output_size
    input: background_object.bbox
    output: H_out = (bbox.height * 2), W_out = (bbox.width * 2).
  - action: initialize_output_grid
    input: H_out, W_out, background_color
    output: output_grid filled with background_color.
  - action: select_foreground_objects
    input: list of kept_objects, background_object
    output: list of foreground_objects.
  - action: place_foreground_objects
    input: output_grid, list of foreground_objects, input_grid (for reference), background_object (for reference)
    output: modified output_grid with foreground objects placed.
    details:
      - Foreground objects retain their original shape and pixel colors.
      - Foreground objects retain their spatial arrangement relative to each other.
      - The specific offset (anchor point) used to place the group of foreground objects onto the output grid needs further definition but appears related to the relative positions of foreground and background objects in the input. It is NOT simply mapping based on the combined foreground bounding box origin.

uncertainties:
  - The exact algorithm for calculating the placement offset (anchor point) of the foreground objects within the output grid. It must map the input foreground pixels correctly into the (potentially larger or smaller) output grid while respecting the doubled background bbox dimensions.