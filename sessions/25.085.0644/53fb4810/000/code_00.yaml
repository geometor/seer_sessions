Task: Modify columns based on the location of unique Red and Yellow pixels relative to each other and a lower Blue object.

Input_Features:
  - Object: Background
    Color: Azure (8)
    Role: Unchanged backdrop
  - Object: Yellow_Marker
    Color: Yellow (4)
    Count: 1
    Role: Defines a target column (C_y) and a fill color (Yellow).
  - Object: Red_Marker
    Color: Red (2)
    Count: 1
    Role: Defines a target column (C_r) and a fill color (Red).
  - Object: Blue_Shapes
    Color: Blue (1)
    Count: Variable (>=1)
    Property: Can be composed of multiple pixels, forming shapes.
    Role: The lowest Blue shape intersecting a target column defines the lower boundary for column modification.
  - Object: Green_Pixels (Optional)
    Color: Green (3)
    Role: May be modified if located within a target column under specific conditions (Case 1).

Relationships:
  - Spatial_Relationship: Position of Yellow_Marker (C_y) relative to Red_Marker (C_r).
    - Case 1: C_y == C_r (Markers in the same column)
    - Case 2: C_y != C_r (Markers in different columns)
  - Vertical_Position: Blue_Shapes are located below the Yellow_Marker and Red_Marker.

Actions:
  - Find_Markers: Locate the coordinates (R_y, C_y) of the Yellow_Marker and (R_r, C_r) of the Red_Marker.
  - Find_Lowest_Blue_Boundary: For each target column C, find the minimum row index (R_boundary) occupied by the lowest Blue (1) shape intersecting that column C. If no blue shape intersects, the boundary is the grid height.
  - Modify_Column(s):
    - If C_y == C_r (Case 1):
        - Target_Column: C = C_y
        - Boundary_Row: R_stop = Find_Lowest_Blue_Boundary(C)
        - Action: Fill column C from row 0 to R_stop - 1 with an alternating pattern [Red (2), Yellow (4), Red (2), ...], starting with Red (2).
        - Secondary_Action: Check if any Green (3) pixel exists at (R_green, C) in the input. If yes, change the output pixel at (R_green, C) to Yellow (4).
    - If C_y != C_r (Case 2):
        - Target_Column_Y: C_y
        - Boundary_Row_Y: R_stop_y = Find_Lowest_Blue_Boundary(C_y)
        - Action_Y: Fill column C_y from row 0 to R_stop_y - 1 with solid Yellow (4).
        - Target_Column_R: C_r
        - Boundary_Row_R: R_stop_r = Find_Lowest_Blue_Boundary(C_r)
        - Action_R: Fill column C_r from row 0 to R_stop_r - 1 with solid Red (2).

Output_Grid: The modified input grid, preserving original dimensions and background. Unmodified pixels retain their original color.