facts:
  - object: grid
    properties:
      - background_color: white (0)
      - contains: gray_pixels (5)
      - contains: azure_pixels (8)
      - contains: white_pixels (0)
  - object: gray_pixel
    properties:
      - color: 5
      - role: static_obstacle
      - role: trigger_for_red
      - role: boundary_for_yellow
  - object: azure_pixel
    properties:
      - color: 8
      - role: static_obstacle
      - role: boundary_for_yellow
  - object: white_pixel
    properties:
      - color: 0
      - role: background
      - role: potential_transformation_target
  - object: red_pixel
    properties:
      - color: 2
      - role: generated_pixel
      - role: trigger_for_yellow
      - role: boundary_for_yellow
  - object: yellow_pixel
    properties:
      - color: 4
      - role: generated_pixel
      - role: filled_area
  - relationship: red_generation
    condition: A white (0) pixel in the input becomes red (2) if it has at least one diagonally adjacent gray (5) neighbor in the input grid.
  - relationship: yellow_generation
    condition: >
      Yellow (4) pixels are generated via a flood fill process.
      The fill starts from all white (0) pixels that are orthogonally adjacent
      to any red (2) pixel (after all red pixels have been determined).
      The fill propagates orthogonally through contiguous white (0) pixels.
      The fill is bounded by grid edges, gray (5) pixels, azure (8) pixels,
      and red (2) pixels.
  - action: copy_static_pixels
    description: Gray (5) and Azure (8) pixels from the input are copied directly to the output grid in the same locations.
  - action: determine_red_pixels
    description: Identify all white (0) input pixels that meet the red_generation condition and mark their corresponding output locations as red (2).
  - action: flood_fill_yellow
    description: Perform the flood fill described in yellow_generation, changing eligible white (0) pixels to yellow (4) in the output grid.