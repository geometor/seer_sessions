elements:
  - object: grid
    attributes:
      - type: input / output
      - size: constant (25x25 in examples)
  - object: pattern
    attributes:
      - type: repeating / tiled
      - location: covers most of the grid, excluding potential border
      - state: can be obscured / damaged
    relationships:
      - defined_by: a smaller rectangular tile
  - object: tile
    attributes:
      - shape: rectangle
      - content: specific arrangement of colors
      - size: (H, W), varies between examples (e.g., 6x6, 7x7, 4x4)
    relationships:
      - repeats: horizontally and vertically to form the pattern
  - object: border
    attributes:
      - color: typically blue (1)
      - location: often the first row and first column
      - function: separates pattern tiles
    relationships:
      - contains: the repeating pattern area
  - object: damage
    attributes:
      - representation: white pixels (color 0)
      - location: appears within the pattern area
      - shape: contiguous or scattered blocks
    relationships:
      - obscures: the underlying pattern

actions:
  - action: identify_periodicity
    actor: system
    input: input grid
    output: tile dimensions (H, W)
    description: Find the vertical (H) and horizontal (W) period of the repeating pattern, ignoring borders and white pixels.
  - action: infer_pattern
    actor: system
    input: input grid, tile dimensions (H, W)
    output: reference tile pattern
    description: For each position within a tile, determine the correct color by finding the most frequent non-white, non-border color at corresponding positions across all repetitions in the input grid.
  - action: repair_grid
    actor: system
    input: input grid, reference tile pattern, tile dimensions (H, W)
    output: output grid
    description: Iterate through the input grid. If a pixel is white and located within the pattern area (not the border), replace it with the color from the reference tile pattern corresponding to its position within the tile's structure. Otherwise, keep the original pixel color.

transformations:
  - type: pattern_restoration
    input: grid with damaged pattern
    output: grid with restored pattern
    steps:
      - identify_periodicity
      - infer_pattern
      - repair_grid