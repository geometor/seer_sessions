task_context:
  environment: "ARC grid world"
  colors:
    background: 4 # yellow
    objects: 1 # blue
    output_frame: 2 # red
    output_outer_fill: 8 # azure
    output_inner_fill: 6 # magenta
    unchanged: [0, 1, 3, 4, 5, 6, 7, 8, 9] # Colors other than initial yellow (4) adjacent to blue (1) are unchanged. Initial blue (1) pixels are unchanged. Yellow pixels not adjacent to blue are unchanged.

input_features:
  - type: grid
    description: "Input grid containing a background (yellow) and one or more objects (blue)."
    properties:
      - name: background_pixels
        value: "All pixels with value 4 (yellow)."
      - name: object_pixels
        value: "All pixels with value 1 (blue), forming one or more connected components (including diagonals)."
      - name: adjacent_yellow_pixels
        value: "Set of yellow pixels that are orthogonally or diagonally adjacent to at least one blue pixel."
      - name: non_adjacent_yellow_pixels
        value: "Set of yellow pixels that are not orthogonally or diagonally adjacent to any blue pixel."

output_features:
  - type: grid
    description: "Output grid where some yellow pixels adjacent to blue objects are recolored."
    properties:
      - name: frame_pixels
        value: "Pixels that were originally in 'adjacent_yellow_pixels' AND are orthogonally or diagonally adjacent to at least one pixel in 'non_adjacent_yellow_pixels'. These become color 2 (red)."
      - name: potential_fill_pixels
        value: "Pixels that were originally in 'adjacent_yellow_pixels' but are NOT 'frame_pixels'."
      - name: outer_fill_pixels
        value: "Pixels from 'potential_fill_pixels' that are orthogonally or diagonally adjacent to at least one 'frame_pixel' (which is now red). These become color 8 (azure)."
      - name: inner_fill_pixels
        value: "Pixels from 'potential_fill_pixels' that are NOT adjacent (orthogonally or diagonally) to any 'frame_pixel'. These become color 6 (magenta)."
      - name: unchanged_pixels
        value: "All original blue pixels, original non-adjacent yellow pixels, and any pixels of colors other than yellow remain unchanged."

actions:
  - name: identify_sets
    description: "Identify the sets of blue pixels, all yellow pixels, adjacent yellow pixels, and non-adjacent yellow pixels based on the input grid."
    inputs: [input_grid]
    outputs: [object_pixels, all_yellow_pixels, adjacent_yellow_pixels, non_adjacent_yellow_pixels]
  - name: classify_adjacent_yellow
    description: "Partition the 'adjacent_yellow_pixels' set into three categories based on adjacency rules relative to 'non_adjacent_yellow_pixels'."
    inputs: [adjacent_yellow_pixels, non_adjacent_yellow_pixels]
    outputs: [frame_coords, potential_fill_coords] # Intermediate step 1
  - name: classify_potential_fill
    description: "Partition the 'potential_fill_coords' based on adjacency to 'frame_coords'."
    inputs: [potential_fill_coords, frame_coords]
    outputs: [outer_fill_coords, inner_fill_coords] # Intermediate step 2
  - name: generate_output_grid
    description: "Create the output grid by coloring the identified pixel coordinates with their designated colors (red, azure, magenta) and keeping all other pixels unchanged."
    inputs: [input_grid, frame_coords, outer_fill_coords, inner_fill_coords]
    outputs: [output_grid]

transformatiom_logic_summary: "The transformation identifies yellow pixels adjacent to any blue object(s). These adjacent yellow pixels are then categorized and recolored based on their proximity to other yellow pixels that are *not* adjacent to any blue objects ('frame' = red), and subsequently based on their proximity to these newly defined 'frame' pixels ('outer_fill' = azure, 'inner_fill' = magenta). All other pixels retain their original color."
