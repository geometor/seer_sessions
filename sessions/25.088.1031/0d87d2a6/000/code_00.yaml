task_description: Create horizontal and vertical blue lines connecting the extreme pairs of blue pixels found in each row and column of the input grid.
grid_properties:
  - dimensions: Variable height and width (observed: 20x20, 10x20, 13x14)
  - colors: white (0), blue (1), red (2)

objects:
  - type: pixel
    properties:
      - color: white (0), blue (1), red (2)
      - location: (row, column)
  - type: blue_pixel_grouping
    properties:
      - axis: row or column
      - condition: Contains two or more blue (1) pixels from the input grid.
      - definition_points:
          - row: (row_index, min_col_index), (row_index, max_col_index) of input blue pixels
          - column: (min_row_index, col_index), (max_row_index, col_index) of input blue pixels

actions:
  - action: identify_input_blue_pixels
    description: Find the coordinates of all pixels with value 1 in the input grid.
  - action: draw_horizontal_segments
    description: For each row containing >= 2 input blue pixels, determine the min and max column index (c_min, c_max) of those blue pixels. Fill the corresponding segment [c_min, c_max] in that row of the output grid with blue (1).
  - action: draw_vertical_segments
    description: For each column containing >= 2 input blue pixels, determine the min and max row index (r_min, r_max) of those blue pixels. Fill the corresponding segment [r_min, r_max] in that column of the output grid with blue (1).
  - action: copy_input
    description: Initialize the output grid as a direct copy of the input grid before drawing segments.

relationships:
  - relationship: segment_source
    source: Locations of blue (1) pixels in the *input* grid.
    target: Horizontal and vertical segments drawn in the *output* grid.
  - relationship: overwriting
    element: Blue (1) segments drawn.
    overwrites: Any pre-existing pixel color (white, red, or even original blue) in the output grid along the segment's path.

transformation_logic:
  - The transformation generates blue line segments based on the distribution of blue pixels in the input.
  - Red pixels do not block segment creation; they are overwritten if they lie on a segment path.
  - The final output combines the results of horizontal and vertical segment drawing onto an initial copy of the input grid.