# Natural Language Program: Shape Substitution with 8-Way Adjacency

1.  **Define Object Connectivity:** Consider pixels to be part of the same object if they share the same color and are connected horizontally, vertically, or diagonally (8-way adjacency).
2.  **Identify Azure Template Shapes:** Find all distinct contiguous blocks (objects) of azure (8) pixels in the input grid based on 8-way adjacency.
3.  **Characterize Templates:** For each unique azure object found:
    a.  Calculate its bounding box (minimum enclosing rectangle).
    b.  Determine its shape by recording the coordinates of its pixels relative to the top-left corner of its bounding box.
    c.  Store the unique combination of (shape, bounding_box_height, bounding_box_width) as a valid template pattern.
4.  **Identify Red Candidate Shapes:** Find all distinct contiguous blocks (objects) of red (2) pixels in the input grid based on 8-way adjacency.
5.  **Perform Substitution:** Iterate through each red object found:
    a.  Calculate its shape and bounding box dimensions using the same method as for templates (step 3a-b).
    b.  Check if the combination (shape, bounding_box_height, bounding_box_width) for this red object exactly matches any of the valid template patterns stored in step 3c.
    c.  If an exact match is found, update the output grid by changing the color of all pixels belonging to this specific red object to azure (8).
6.  **Construct Output:** The final output grid is the input grid modified only by the color changes specified in step 5c. All other pixels remain unchanged.