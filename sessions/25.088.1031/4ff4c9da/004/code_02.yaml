facts:
  - Abstraction: Identify template shapes (azure) and target shapes (red), then perform substitution based on shape matching.
  - Objects:
      - Definition: Contiguous blocks of pixels of the same color.
      - Connectivity: Pixels are considered contiguous if they are adjacent orthogonally or diagonally (8-way adjacency).
      - Template Objects: Identified by finding contiguous blocks of azure (8) pixels.
      - Target Objects: Identified by finding contiguous blocks of red (2) pixels.
  - Properties:
      - Shape: The set of relative coordinates {(dr, dc)} of pixels within a block, normalized to the (min_row, min_col) of its bounding box. Requires 8-way adjacency to define the block correctly.
      - Bounding Box (BBox): The minimum rectangle enclosing the block, defined by its height and width.
  - Actions:
      - Find Templates:
          - Identify all azure (8) objects using 8-way adjacency.
          - For each object, compute its shape and bbox dimensions (height, width).
          - Store the unique (Shape, BBox Height, BBox Width) tuples as the set of valid templates.
      - Find Targets:
          - Identify all red (2) objects using 8-way adjacency.
      - Match and Transform:
          - For each red object:
              - Compute its shape and bbox dimensions.
              - Check if its (Shape, BBox Height, BBox Width) tuple exists in the set of valid templates.
              - If a match is found, change the color of all pixels constituting that red object to azure (8) in the output grid.
      - Preserve Others: All pixels not part of a transformed red object retain their original color in the output grid.