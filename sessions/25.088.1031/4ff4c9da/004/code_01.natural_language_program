# Natural Language Program: Shape Substitution with Diagonal Adjacency

1.  **Define Objects:** Objects are contiguous blocks of pixels of the same color. Connectivity is defined by 8-way adjacency (pixels are connected if they touch orthogonally or diagonally).
2.  **Identify Azure Templates:** Find all distinct contiguous blocks of azure (8) pixels in the input grid using 8-way adjacency.
3.  **Extract Template Properties:** For each unique azure block found, determine its shape (the set of relative pixel coordinates within its bounding box) and the dimensions (height, width) of its bounding box. Store these unique (shape, bbox_height, bbox_w) tuples as the set of valid templates.
4.  **Identify Red Candidates:** Find all distinct contiguous blocks of red (2) pixels in the input grid using 8-way adjacency.
5.  **Match and Transform:** Iterate through each red block found.
    a.  Determine its shape and bounding box dimensions.
    b.  Check if the tuple (shape, bbox_height, bbox_w) for this red block exists in the set of valid azure templates identified in step 3.
    c.  If an exact match is found, recolor all pixels belonging to this red block to azure (8) in the output grid.
6.  **Output:** The output grid contains the original pixels, except for the red blocks that matched an azure template, which are now azure.