Task: Fill background based on adjacent identical squares

Objects:
  - type: FramedSquare
    properties:
      - frame_color: (integer) color of the square's border
      - center_color: (integer) color of the pixel(s) at the center
      - center_location: (tuple/list) coordinates (row, col) or range of center pixels
      - position: (tuple) top-left corner coordinates (row, col)
      - size: (tuple) height and width (e.g., 3x3, 4x4)
      - bounding_box: (tuple) (min_row, min_col, max_row, max_col)
  - type: Background
    properties:
      - color: (integer) typically 0 (white)

Relationships:
  - type: HorizontallyAdjacent
    arguments: [FramedSquare, FramedSquare]
    condition: Share same row range, separated only by background color columns.
  - type: SameCenterColor
    arguments: [FramedSquare, FramedSquare]
    condition: The center_color property is identical for both squares.

Actions:
  - name: IdentifyFramedSquares
    input: input_grid
    output: list of FramedSquare objects
  - name: FindQualifyingPairs
    input: list of FramedSquare objects
    output: list of pairs (Square1, Square2) meeting HorizontallyAdjacent and SameCenterColor conditions
    constraints: Square1 is to the left of Square2.
  - name: CalculateGap
    input: (Square1, Square2) pair
    output:
      - gap_cols: (list) column indices between Square1 and Square2
      - gap_width: (integer) number of columns in gap_cols
  - name: FillBetween
    input: output_grid, Square1, Square2, gap_cols, fill_color (center_color)
    effect: Modifies output_grid by changing background pixels to fill_color in gap_cols and center rows.
  - name: FillBelow
    input: output_grid, Square1, gap_width, fill_color (center_color)
    effect: Modifies output_grid by changing background pixels to fill_color in a rectangle below Square1's center.
      - location: Starts 2 rows below Square1's center, aligned with Square1's center columns.
      - dimensions: Width matches Square1's center width, height is 3 if gap_width is 3, else 2.

Transformation:
  - Step 1: Initialize output_grid as a copy of input_grid.
  - Step 2: Identify all FramedSquare objects in the input_grid.
  - Step 3: Find all QualifyingPairs (Square1, Square2).
  - Step 4: For each pair:
      - Get fill_color = Square1.center_color.
      - Calculate gap_cols and gap_width.
      - Perform FillBetween action on output_grid.
      - Perform FillBelow action on output_grid.