task_description: Copy the internal color pattern from a 'source' object onto one or more 'target' objects that share the same primary color.

definitions:
  background_color: 0 (white)
  object: A connected component of non-background pixels. Connectivity is 4-directional (up, down, left, right).
  primary_color: The dominant color of an object's border or main body. For this task, it appears to be the color of the pixels forming the outer layer or the majority color if ambiguous. Alternatively, using the color of the top-left-most pixel of the object component works if the component finding correctly identifies all pixels.
  internal_pattern: Pixels within an object that have a color different from its primary color.
  source_object: An object that contains an internal pattern.
  target_object: An object that consists solely of its primary color (no internal pattern).

rules:
  - Identify all distinct objects (connected components of non-background pixels) in the input grid.
  - For each object:
      - Determine its set of pixels.
      - Determine its bounding box.
      - Determine its primary color (e.g., color of the top-left-most pixel of the component).
      - Classify it as 'source' (contains pixels != primary color) or 'target' (all pixels == primary color).
  - Group objects by their primary color.
  - For each group that contains exactly one source object and one or more target objects:
      - Let S be the source object and P be its primary color.
      - Let (min_r_src, min_c_src) be the top-left coordinates of S's bounding box.
      - For each target object T in the group:
          - Let (min_r_tgt, min_c_tgt) be the top-left coordinates of T's bounding box.
          - Let target_pixels be the set of (row, col) coordinates belonging to T.
          - Iterate through each pixel (sr, sc) within the source object S:
              - If the color of (sr, sc) in the input grid is *not* equal to the primary color P (i.e., it's part of the internal pattern):
                  - Calculate the relative coordinates: dr = sr - min_r_src, dc = sc - min_c_src.
                  - Calculate the corresponding potential target coordinates: tr = min_r_tgt + dr, tc = min_c_tgt + dc.
                  - Check if the coordinates (tr, tc) are within the grid boundaries AND if (tr, tc) is in the set target_pixels.
                  - If both conditions are true, update the output grid at (tr, tc) with the color of the source pixel (sr, sc).
  - The initial output grid is a copy of the input grid. Updates only happen where pattern pixels are copied onto valid target pixels.
