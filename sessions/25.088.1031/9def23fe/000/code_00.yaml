elements:
  - object: grid
    properties:
      - height: H
      - width: W
  - object: background_pixels
    properties:
      - color: white (0)
  - object: pattern_object
    properties:
      - connectivity: contiguous
      - size: largest non-white object
      - color: C (e.g., red(2))
      - shape: variable (rectangle, L-shape)
      - bounding_box: BB (min_row, max_row, min_col, max_col)
  - object: marker_pixels
    properties:
      - connectivity: non-contiguous (usually single pixels)
      - color: M (any non-white color different from C, e.g., azure(8), green(3), yellow(4))
      - location: coordinates (r, c)
relationships:
  - type: defines
    subject: marker_pixels
    object: inhibited_rows (R_marker)
    detail: Set of row indices containing at least one marker pixel.
  - type: defines
    subject: marker_pixels
    object: inhibited_columns (C_marker)
    detail: Set of column indices containing at least one marker pixel.
  - type: determines_fill
    subject: inhibited_rows
    object: horizontal_fill_lines
    detail: Rows within pattern_object's vertical extent (BB.min_row to BB.max_row) NOT in inhibited_rows are candidates for filling.
  - type: determines_fill
    subject: inhibited_columns
    object: vertical_fill_lines
    detail: Columns within pattern_object's horizontal extent (BB.min_col to BB.max_col) NOT in inhibited_columns are candidates for filling.
actions:
  - action: identify
    actor: system
    target: pattern_object
    result: color C, bounding_box BB
  - action: identify
    actor: system
    target: marker_pixels
    result: color M, locations, inhibited_rows R_marker, inhibited_columns C_marker
  - action: initialize_output
    actor: system
    target: output_grid
    detail: Create grid of same dimensions (H, W) as input, filled with white(0).
  - action: draw_horizontal_lines
    actor: system
    target: output_grid
    condition: For each row 'r' from BB.min_row to BB.max_row, if 'r' is NOT in R_marker.
    detail: Fill the entire row 'r' of the output_grid with color C.
  - action: draw_vertical_lines
    actor: system
    target: output_grid
    condition: For each column 'c' from BB.min_col to BB.max_col, if 'c' is NOT in C_marker.
    detail: Fill the entire column 'c' of the output_grid with color C.
  - action: overlay_pattern
    actor: system
    target: output_grid
    detail: For every pixel (r, c) that was part of the original pattern_object in the input, set output_grid[r, c] = C.
  - action: overlay_markers
    actor: system
    target: output_grid
    detail: For every pixel (r, c) that was a marker_pixel in the input, set output_grid[r, c] = M.
