Grid:
  - type: object
  - properties:
      height: H
      width: W
      pixels: 2D array of color values (0-9)

Pixel:
  - type: object
  - properties:
      color: integer (0-9)
      position: (row, column)

Transformation:
  - type: action
  - steps:
      - Step 1: Color Modification
          - input: input_grid
          - process: Create an intermediate_grid by copying the input_grid. Iterate through each pixel in intermediate_grid. If a pixel's color is blue (1), change it to red (2). Leave white (0) pixels unchanged.
          - output: intermediate_grid
      - Step 2: Conditional Row Selection for Appending
          - input: input_grid, intermediate_grid
          - parameters:
              - append_height: H // 2
              - condition_row_index: H // 2
              - condition_pattern: [white, blue, blue] (or [0, 1, 1])
          - process:
              - Check if the row at condition_row_index in the *input_grid* matches the condition_pattern.
              - If true: Set append_start_row = 2.
              - If false: Set append_start_row = 0.
              - Select the block of rows from intermediate_grid starting at append_start_row and extending for append_height rows.
          - output: rows_to_append
      - Step 3: Concatenation
          - input: intermediate_grid, rows_to_append
          - process: Vertically stack intermediate_grid on top of rows_to_append.
          - output: output_grid