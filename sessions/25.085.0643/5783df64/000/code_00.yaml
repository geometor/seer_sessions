task_description: "Extract non-white pixels from a 3x3 grid of blocks within the input and arrange them into a 3x3 output grid based on their block origin."

input_characteristics:
  - type: grid
  - dimensions: Square, width and height are multiples of 3 (e.g., 6x6, 9x9).
  - content:
      - Mostly 'white' pixels (value 0).
      - Exactly nine non-'white' pixels (values 1-9).
  - structure: Can be divided into a 3x3 grid of equal-sized blocks. Each block contains exactly one non-'white' pixel.

output_characteristics:
  - type: grid
  - dimensions: Always 3x3.
  - content: Contains only the non-'white' pixels from the input grid. No 'white' pixels.

transformation:
  - name: Block Division
    details: Divide the input grid into nine equal-sized subgrids (blocks) arranged in a 3x3 pattern. The size of each block is (input_height/3) x (input_width/3).
  - name: Pixel Extraction
    details: Iterate through the nine blocks in row-major order (top-left to bottom-right). For each block, find the single non-'white' pixel within it.
  - name: Output Grid Construction
    details: Create a new 3x3 grid. Place the extracted non-'white' pixel from the input block at position (block_row, block_col) into the output grid at the corresponding position (block_row, block_col).

examples_summary:
  - example_1: 9x9 input -> nine 3x3 blocks. The non-white pixel from block (0,0) goes to output (0,0), from block (0,1) goes to output (0,1), ..., from block (2,2) goes to output (2,2).
  - example_2: 6x6 input -> nine 2x2 blocks. Same mapping logic applies.
  - example_3: 6x6 input -> nine 2x2 blocks. Same mapping logic applies.

relationship:
  - The spatial position (in the 3x3 block grid) of the block containing a non-white pixel in the input determines the position of that pixel in the 3x3 output grid.