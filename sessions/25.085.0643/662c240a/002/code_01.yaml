task_structure:
  - input_grid: 9x3 grid of pixels (colors 0-9)
  - output_grid: 3x3 grid of pixels, selected from input

input_decomposition:
  - divides the 9x3 input into three contiguous 3x3 subgrids:
    - Top: rows 0-2
    - Middle: rows 3-5
    - Bottom: rows 6-8

subgrid_properties:
  - each 3x3 subgrid contains exactly two distinct pixel colors.
  - one color is the 'majority_color' (appears more times).
  - the other color is the 'minority_color' (appears fewer times).
  - minority_pixels: pixels matching the minority_color.
  - minority_components: connected components (4-way adjacency) formed by minority_pixels.

transformation_rule:
  - analyze each of the three subgrids (Top, Middle, Bottom).
  - for each subgrid:
    - identify the minority_color.
    - count the number of minority_components.
  - selection_criterion: choose the subgrid with the minimum number of minority_components.
  - tie_breaking_rule: if multiple subgrids share the minimum number of minority_components, select the one among them whose minority_color has the highest numerical value.
  - output: the selected 3x3 subgrid.