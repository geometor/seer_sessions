task_description: Expands an input grid by scaling pixels based on their position relative to the grid boundaries. Pixels on the first or last row/column are duplicated along that axis.

definitions:
  - object: grid
    properties:
      - height: H
      - width: W
      - pixels: 2D array of color values
  - object: pixel
    properties:
      - position: (row, col)
      - value: color
      - is_boundary_row: boolean (true if row is 0 or H-1, and H > 1)
      - is_boundary_col: boolean (true if col is 0 or W-1, and W > 1)

input_grid:
  type: grid
  properties:
    - height: H_in
    - width: W_in

output_grid:
  type: grid
  properties:
    - height: H_out
    - width: W_out
    - relationship_to_input: Generated by mapping each input pixel to an expanded block in the output.

transformation_rules:
  - rule: calculate_scale_factors
    for_each: input pixel at (r, c)
    condition: H_in > 1 and (r == 0 or r == H_in - 1)
    output: row_scale_factor = 2
    default: row_scale_factor = 1
  - rule: calculate_scale_factors
    for_each: input pixel at (r, c)
    condition: W_in > 1 and (c == 0 or c == W_in - 1)
    output: col_scale_factor = 2
    default: col_scale_factor = 1

  - rule: calculate_output_dimensions
    inputs: [H_in, W_in]
    outputs: [H_out, W_out]
    logic: |
      H_out is the sum of row_scale_factors for all rows r from 0 to H_in-1.
      W_out is the sum of col_scale_factors for all columns c from 0 to W_in-1.

  - rule: map_pixels
    for_each: input pixel p at (r, c) with value v
    actions:
      - Determine row_scale_factor (rf) and col_scale_factor (cf) for p.
      - Calculate start row in output: R_start = sum of row_scale_factors for rows 0 to r-1.
      - Calculate start column in output: C_start = sum of col_scale_factors for columns 0 to c-1.
      - Fill the output grid block from (R_start, C_start) to (R_start + rf - 1, C_start + cf - 1) with value v.