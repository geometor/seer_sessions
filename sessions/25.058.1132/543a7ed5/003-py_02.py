def get_grid_string(grid):
    return '\n'.join(''.join(str(cell) for cell in row) for row in grid)

task_data = {
"train": [
    {
      "input": [
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 6, 6, 6, 6, 6, 6, 8, 8, 8],
        [8, 8, 8, 6, 8, 8, 8, 8, 6, 8, 8, 8],
        [8, 8, 8, 6, 8, 8, 8, 8, 6, 8, 8, 8],
        [8, 8, 8, 6, 8, 8, 8, 8, 6, 8, 8, 8],
        [8, 8, 8, 6, 6, 6, 6, 6, 6, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      ],
      "output": [
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 6, 4, 4, 4, 4, 6, 3, 3, 3],
        [3, 3, 3, 6, 4, 4, 4, 4, 6, 3, 3, 3],
        [3, 3, 3, 6, 4, 4, 4, 4, 6, 3, 3, 3],
        [3, 3, 3, 6, 6, 6, 6, 6, 6, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3],
        [3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3]
      ]
    },
    {
      "input": [
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 6, 6, 6, 6, 8, 8, 8, 8],
        [8, 8, 8, 6, 8, 8, 6, 8, 8, 8, 8],
        [8, 8, 8, 6, 8, 8, 6, 8, 8, 8, 8],
        [8, 8, 8, 6, 6, 6, 6, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      ],
      "output": [
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 3, 3, 3, 3, 8, 8, 8, 8],
        [8, 8, 8, 3, 8, 8, 3, 8, 8, 8, 8],
        [8, 8, 8, 3, 8, 8, 3, 8, 8, 8, 8],
        [8, 8, 8, 3, 3, 3, 3, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      ]
    },
    {
      "input": [
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 6, 8, 8, 8, 6, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 6, 8, 8, 8, 6, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 6, 6, 6, 6, 6, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      ],
      "output": [
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 3, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 3, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 3, 3, 3, 3, 3, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
        [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
      ]
    },
        {
      "input": [
        [6, 6, 6, 6, 6, 6],
        [6, 8, 8, 8, 8, 6],
        [6, 8, 8, 8, 8, 6],
        [6, 8, 8, 8, 8, 6],
        [6, 8, 8, 8, 8, 6],
        [6, 6, 6, 6, 6, 6],
      ],
      "output": [
        [6, 6, 6, 6, 6, 6],
        [6, 4, 4, 4, 4, 6],
        [6, 4, 4, 4, 4, 6],
        [6, 4, 4, 4, 4, 6],
        [6, 4, 4, 4, 4, 6],
        [6, 6, 6, 6, 6, 6],
      ]
    }
  ]
}

import numpy as np

for i in range(len(task_data["train"])):

    input_grid = np.array(task_data["train"][i]["input"])
    expected_output = np.array(task_data["train"][i]["output"])
    predicted_output = transform(input_grid)

    print(f"Example {i+1}:")
    print("Input:")
    print(get_grid_string(input_grid))
    print("Expected Output:")
    print(get_grid_string(expected_output))
    print("Predicted Output:")
    print(get_grid_string(predicted_output))
    print("Match:", np.array_equal(expected_output, predicted_output))
    print("-" * 20)