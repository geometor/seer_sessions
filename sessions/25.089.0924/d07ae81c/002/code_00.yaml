GridProperties:
  - Input and output grids have the same dimensions.
  - The transformation preserves the grid size.

PixelColors:
  - Pixels are represented by integers 0-9 (colors).
  - Specific colors have roles:
    - Source Colors (Initiate painting): Blue(1), Red(2), Green(3), Yellow(4), Azure(8)
    - Target Colors (Can be painted over): Blue(1), Red(2), Green(3), Magenta(6), Azure(8)
    - Uninvolved Colors: White(0), Gray(5), Orange(7), Maroon(9) seem unaffected and do not participate in painting.

Actions:
  - Painting: A source color pixel influences the color of an adjacent target pixel in the *next* iteration step.
  - Iteration: The grid state updates simultaneously based on neighbor interactions defined by rules. The process repeats until no pixels change color between two consecutive iterations.

Relationships:
  - Adjacency: Painting influence occurs between orthogonally adjacent pixels (sharing an edge).
  - Painting Rules (Source -> Target):
    - Blue(1) can paint over Red(2) or Azure(8).
    - Red(2) can paint over Blue(1).
    - Green(3) can paint over Blue(1) or Magenta(6).
    - Yellow(4) can paint over Red(2).
    - Azure(8) can paint over Blue(1), Green(3), or Magenta(6).
  - Update Conflict: If multiple neighbors attempt to paint the same target cell in one iteration, the behavior needs clarification. (Hypothesis: The simulation might proceed such that only one 'wins' based on iteration order, or perhaps such conflicts are designed not to occur critically in the test cases).
  - Stability: The process terminates when a full iteration pass results in a grid identical to the previous iteration's grid. Potential oscillations (e.g., 1<->2, 1<->8) must be handled implicitly or explicitly by the update logic to ensure termination.
