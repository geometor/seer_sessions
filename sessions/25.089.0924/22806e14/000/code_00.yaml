Background_Color: 7 (Orange)

Input_Colors:
  - Always includes Background_Color (7).
  - Always includes exactly two other distinct non-background colors (Color A, Color B).

Objects:
  - Defined as contiguous regions of the same non-background color.
  - Each object has a bounding box.
  - Bounding boxes have height and width.
  - Objects with odd height and odd width have a unique center pixel.

Color_Roles:
  - One non-background color acts as the Target_Color.
  - The other non-background color acts as the Replacement_Color.

Role_Determination:
  - Count_Odd_Objects(Color): Function that counts the number of objects of a given Color whose bounding box has odd height AND odd width.
  - Let countA = Count_Odd_Objects(Color A)
  - Let countB = Count_Odd_Objects(Color B)
  - IF countA > countB THEN Target_Color = Color A, Replacement_Color = Color B
  - ELSE IF countB > countA THEN Target_Color = Color B, Replacement_Color = Color A
  - ELSE (countA == countB) THEN Target_Color = max(Color A, Color B), Replacement_Color = min(Color A, Color B)

Transformation_Rules:
  - Rule 1: All pixels belonging to objects of the Replacement_Color in the input are changed to the Background_Color in the output.
  - Rule 2: For each object of the Target_Color in the input:
      - IF the object's bounding box has odd height AND odd width:
          - Find the coordinates of the center pixel of the bounding box.
          - Change the color of this center pixel in the output to the Replacement_Color.
  - Rule 3: All other pixels (Background_Color pixels, Target_Color pixels not part of odd-dimensioned objects, non-center pixels of odd-dimensioned Target_Color objects) retain their original color in the output.

Output_Grid:
  - Initially a copy of the input grid.
  - Modified according to Transformation_Rules 1, 2, and 3.