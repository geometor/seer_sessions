task_description: Selectively move border objects towards the center based on color frequency at the borders, with the movement distance determined by the object's size.

definitions:
  background_color: The color that occupies the most cells in the input grid (orange, 7 in examples).
  object: A contiguous block of cells of the same non-background color (using 4-way connectivity).
  border_object: An object where at least one of its cells touches the outer edge (border) of the grid.
  object_dimension: The height (or width) of a square object. Determined from its bounding box.
  moving_color: The non-background color corresponding to the highest number of distinct border_objects. If there's a tie in count, the color with the numerically lowest value is chosen.
  stationary_color: Any non-background color that is not the moving_color.

transformation_steps:
  - step: Identify the background_color.
  - step: Find all distinct objects made of non-background colors.
  - step: For each object, determine if it is a border_object and calculate its dimensions (height/width). Assume square objects for dimension calculation based on examples (use height).
  - step: Count the number of border_objects for each non-background color.
  - step: Determine the moving_color based on the maximum count of border_objects (lowest color value breaks ties).
  - step: Initialize the output grid filled entirely with the background_color.
  - step: Iterate through all found objects:
      - if the object's color is the moving_color AND it is a border_object:
          - determine its corner proximity (top-left, top-right, bottom-left, bottom-right).
          - get its dimension (e.g., height).
          - calculate the shift vector based on the corner:
              - Top-left: (+dimension, +dimension)
              - Top-right: (+dimension, -dimension)
              - Bottom-left: (-dimension, +dimension)
              - Bottom-right: (-dimension, -dimension)
          - redraw the object by applying the shift vector to each of its original coordinates, placing the object's color at the new coordinates in the output grid. Ensure coordinates stay within grid bounds.
      - else (object is stationary):
          - redraw the object at its original coordinates in the output grid using its original color.

input_output_relationship:
  grid_size: Preserved between input and output.
  background: Fills the output grid initially and replaces the original positions of moved objects.
  moving_objects: Shift position diagonally inwards by a distance equal to their dimension. Shape is preserved.
  stationary_objects: Remain in their original positions.