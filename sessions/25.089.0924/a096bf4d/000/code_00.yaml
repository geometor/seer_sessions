Grid:
  Structure: Composed of repeating subgrids (Blocks) separated by borders.
  Border_Color: 0 (white) separating Blocks.
Block:
  Type: Subgrid object.
  Size: 4x4 pixels.
  Structure:
    - Outer_Border: 1-pixel thick border, color varies per task (e.g., 2=red, 1=blue, 8=azure).
    - Center: Inner 2x2 pixel area.
  Arrangement: Tiled grid layout (e.g., 5 rows x 4 columns of Blocks).
Center_Region:
  Size: 2x2 pixels.
  Location: Inner area of a Block.
  Pixel_Colors:
    - Default_Color: The most frequent color found across all Center_Regions in the input grid (e.g., 3=green, 8=azure, 4=yellow). Identified per task.
    - Non_Default_Colors: Other colors appearing in Center_Regions.
Transformation:
  Scope: Affects only pixels within the Center_Regions.
  Condition: Applies only to pixels that have the Default_Color in the input grid.
  Rule:
    - For a pixel at relative position (dr, dc) within a Center_Region (where dr, dc can be 0 or 1):
      - If its color is the Default_Color:
        - Examine all 8 neighboring Blocks (adjacent/diagonal).
        - Check the pixel at the same relative position (dr, dc) within each neighbor's Center_Region in the *input* grid.
        - Collect the colors found in those corresponding positions.
        - Filter these collected colors to find any Non_Default_Colors.
        - If exactly one unique Non_Default_Color is found among neighbors:
          - Change the current pixel's color to that Non_Default_Color in the output grid.
        - Else (no Non_Default_Colors found, or multiple different ones - though the latter isn't observed):
          - The pixel retains its Default_Color in the output grid.
      - If its color is already a Non_Default_Color:
        - The pixel remains unchanged in the output grid.
  Invariance:
    - Grid borders (white=0) remain unchanged.
    - Block borders (red=2, blue=1, azure=8, etc.) remain unchanged.
    - Pixels within Center_Regions that are initially Non_Default_Colors remain unchanged.