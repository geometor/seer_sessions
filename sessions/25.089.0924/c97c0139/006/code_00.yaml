Input_Features:
  - Background:
      Color: white (0)
  - Objects:
      Type: Connected Components (8-way connectivity)
      Color: red (2)
      Quantity: 1 or more
      Shape: Variable (lines observed)
      Properties:
        - Coordinates: List of (row, col) tuples for each pixel.
        - Size (L): Count of pixels in the object.

Transformation:
  Action: Conditional coloring of white pixels based on proximity to red objects.
  Target_Pixels: Pixels that are white (0) in the input grid.
  Coloring_Rule:
    - For each white pixel P(r, c):
      - Calculate Manhattan distance `d` to every red pixel in the grid.
      - Find the minimum distance `d_min`.
      - Identify the specific red object (`closest_object`) that contains the red pixel yielding `d_min`.
        (If multiple objects tie for minimum distance, the choice doesn't affect the outcome as they would share the same `d_min`).
      - Retrieve the size `L_closest` of the `closest_object`.
      - Calculate the threshold `k_closest = floor((L_closest - 1) / 2)`.
      - Condition: If `0 < d_min <= k_closest`, change the color of pixel P(r, c) to azure (8) in the output grid.
  Output_Features:
    - Original red objects remain unchanged.
    - Original white pixels that do not meet the coloring rule remain white.
    - White pixels meeting the coloring rule become azure (8).
    - Other colored pixels (if any) remain unchanged.

Derived_Properties:
  - Object_Size (L): Number of pixels in a connected red component.
  - Distance_Threshold (k): Calculated per object as `floor((L - 1) / 2)`.
  - Minimum_Manhattan_Distance: Calculated from a white pixel to the nearest red pixel overall.
  - Closest_Object: The red object containing the nearest red pixel to a given white pixel.