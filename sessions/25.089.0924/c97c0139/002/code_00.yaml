Initial_State:
  Grid:
    Contains:
      - Background:
          Color: white (0)
          Coverage: Most of the grid
      - Objects:
          Type: Connected Components
          Color: red (2)
          Connectivity: 8-way (includes diagonals)
          Quantity: One or more
Final_State:
  Grid:
    Contains:
      - Background:
          Color: white (0)
      - Original_Objects:
          Type: Connected Components
          Color: red (2)
          Persistence: Unchanged from input
      - Added_Shapes:
          Type: Diamond shapes centered on Original_Objects
          Color: azure (8)
          Generation_Method: Wave propagation / BFS
          Relationship_to_Original:
            - Each azure shape corresponds to one red object.
            - The shape consists of all pixels reachable from the corresponding red object via a path of white pixels, where the path length (Manhattan distance from the original red object pixel) is greater than 0 and less than or equal to a threshold 'k'.
Transformation_Rule:
  Action: Add azure diamond shapes around red objects.
  Steps:
    - Create a copy of the input grid for the output.
    - Identify all distinct red (2) connected components (objects) using 8-way connectivity.
    - For each red object:
      - Calculate its size 'L' (pixel count).
      - Calculate the propagation distance threshold 'k' using the formula: k = floor((L - 1) / 2).
      - If k < 1, skip to the next object.
      - Perform a Breadth-First Search (BFS) starting simultaneously from all pixels of the current red object:
        - Initialize a distance grid (same size as input) with 0 for the object's pixels and infinity elsewhere.
        - Initialize a queue with all pixels of the red object.
        - While the queue is not empty:
          - Dequeue a pixel `p` with distance `d`.
          - If `d >= k`, continue (do not explore further from this path).
          - For each neighbor `n` (4 cardinal directions) of `p`:
            - If `n` is within grid bounds AND the output grid at `n` is currently white (0) AND the recorded distance to `n` is infinity (or greater than `d + 1`):
              - Set the distance to `n` as `d + 1`.
              - Change the color of `n` in the output grid to azure (8).
              - Enqueue `n`.
  Properties_Used:
    - Pixel Color
    - Pixel Coordinates
    - Object Connectivity (Connected Components, 8-way)
    - Object Size (Pixel Count)
    - Manhattan Distance (implicitly via BFS steps)
  Output_Color: azure (8) for added pixels.
  Input_Colors_Unaffected: red (2)
  Processing_Order: Each red object's propagation is calculated independently, but modifications (coloring azure) are made to the shared output grid.