Initial_State:
  Grid:
    Contains:
      - Background:
          Color: white (0)
          Coverage: Most of the grid
      - Objects:
          Type: Connected Components
          Color: red (2)
          Quantity: One or more
          Shape: Primarily lines (horizontal/vertical), but can be any contiguous shape.
Final_State:
  Grid:
    Contains:
      - Background:
          Color: white (0)
      - Original_Objects:
          Type: Connected Components
          Color: red (2)
          Persistence: Unchanged from input
      - Added_Objects:
          Type: Area surrounding Original_Objects
          Color: azure (8)
          Shape: Diamond-like (related to Manhattan distance)
          Relationship_to_Original:
            - Each azure area corresponds to one red object.
            - Azure pixels occupy locations within a specific maximum Manhattan distance from the corresponding red object.
Transformation_Rule:
  Action: Add azure pixels based on red objects.
  Steps:
    - Identify distinct red (2) connected components (objects).
    - For each red object:
      - Calculate its size 'L' (pixel count).
      - Calculate a distance threshold 'k' using the formula: k = floor((L - 1) / 2).
      - Identify all pixels currently colored white (0).
      - For each white pixel:
        - Calculate the minimum Manhattan distance 'd_min' to any pixel within the current red object.
        - If 0 < d_min <= k:
          - Change the white pixel's color to azure (8).
  Properties_Used:
    - Pixel Color
    - Pixel Coordinates
    - Object Connectivity (Connected Components)
    - Object Size (Pixel Count)
    - Manhattan Distance
  Output_Color: azure (8) for added pixels.
  Input_Colors_Unaffected: red (2)