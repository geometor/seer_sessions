task_elements:
  - element: background
    color: white (0)
    role: fills empty space

  - element: palette_region
    color: gray (5)
    shape: rectangle (usually)
    location: varies (top-right in train_1, middle-left in train_2)
    properties:
      - contains distinct 'palette_colors'
      - remains unchanged in the output
    role: defines the set of replacement colors and potentially their order

  - element: palette_colors
    location: within the palette_region
    properties:
      - single pixels
      - colors are distinct (excluding gray/white)
      - count matches the number of 'target_objects'
      - remain unchanged in the output
      - sorted by position (row, then column) define the replacement color sequence
    role: source colors for the transformation

  - element: target_objects
    location: outside the palette_region
    properties:
      - composed of a single 'target_color'
      - 'target_color' is the most frequent non-background, non-gray color outside the palette_region
      - shapes and positions are varied
      - sorted by position (top-most, then left-most pixel) define the object sequence
    role: objects to be recolored

transformation:
  type: recoloring
  input_elements: [target_objects, palette_colors]
  output_elements: modified target_objects (same shape/position, new color)
  rule:
    - Identify the palette_region (gray object).
    - Identify the palette_colors within the palette_region (non-gray, non-white pixels).
    - Sort palette_colors by position (row, then column) to get an ordered list of replacement_colors.
    - Identify the target_color (most frequent non-gray, non-white color outside the palette_region).
    - Identify all distinct target_objects made of the target_color.
    - Sort target_objects by position (top-most, then left-most pixel).
    - For each target_object `i` in the sorted list, recolor it using the replacement_color `i` from the sorted list.
  unchanged_elements: [background, palette_region, palette_colors]