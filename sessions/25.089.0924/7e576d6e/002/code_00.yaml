task_description: Find and draw the shortest path between two designated points on a grid, navigating around obstacles.

elements:
  - type: grid
    properties:
      - dimensions: Variable, up to 30x30. Examples observed are 30x30.
      - background_color: The most frequent color in the input grid, representing traversable space.
      - path_endpoints: Exactly two pixels of the same unique color (path_color), distinct from the background and obstacles. These define the start and end of the path.
      - path_color: The color of the path_endpoints.
      - obstacles: Pixels or contiguous regions of colors different from the background_color and the path_color. These form structures that block movement for the path.

actions:
  - identify_background_color: Determine the color covering the largest area.
  - identify_path_endpoints_and_color: Find the color that appears exactly twice; note this color (path_color) and the coordinates of these two pixels (path_endpoints).
  - identify_obstacles: Define all pixels whose colors are neither the background_color nor the path_color as non-traversable obstacles.
  - find_shortest_path: Determine the shortest sequence of adjacent (horizontal/vertical only) background-colored pixels connecting the two path_endpoints. The path must not pass through any obstacle pixels.
  - draw_path: Create the output grid by copying the input grid. Then, change the color of the pixels identified in the shortest path (excluding the endpoints themselves) to the path_color.

relationships:
  - The path connects the two path_endpoints.
  - The path consists only of pixels that were originally the background_color in the input.
  - The path does not intersect with any obstacle pixels (pixels that are not background or path_color).
  - The path uses the path_color.
  - Movement is restricted to orthogonal steps (up, down, left, right).