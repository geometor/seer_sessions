elements:
  - type: grid
    description: Input grid containing pixels of different colors (0-9).
    properties:
      size: Variable height and width (up to 30x30).
      background: Contains azure (8) and potentially white (0) pixels forming an initial 'outside' region.
      content: Contains nested objects/layers made of single colors (non-azure, non-white).
  - type: object
    description: A contiguous layer of pixels of the same color, excluding azure (8) and white (0).
    properties:
      color: A single digit (1-7 or 9).
      shape: Generally forms a frame or boundary, but can be irregular or fragmented within its layer.
      connectivity: Pixels within a layer are connected (8-way adjacency).
  - type: region
    description: A collection of pixels treated as a single area.
    properties:
      type: ['outside', 'layer']
      pixels: Set of (row, column) coordinates.
  - type: list
    description: Output list containing color values.
    properties:
      orientation: Vertical (single column grid).
      content: Sequence of colors corresponding to the nested object layers.
      order: From outermost layer color (adjacent to initial background) to innermost layer color.

relationships:
  - type: adjacency
    description: Pixels or regions touching horizontally, vertically, or diagonally.
  - type: nesting
    description: Colored object layers enclose subsequent inner layers. The outermost layer is adjacent to the initial background (azure/white pixels). Each subsequent inner layer is adjacent to the previously identified layer.

transformation:
  - action: initialize_boundary
    description: Identify all azure (8) and white (0) pixels as the initial 'outside' boundary region. Mark these pixels as visited. Place these pixels in a queue for exploration.
  - action: iterative_layer_finding
    description: Repeat the following steps until no more layers are found:
      - sub_action: expand_boundary_bfs
        description: Perform a Breadth-First Search (BFS) starting from the pixels in the current exploration queue. Examine neighbors of pixels popped from the queue.
      - sub_action: identify_next_layer_pixel
        description: During BFS, if an unvisited neighbor pixel is encountered that is *not* azure (8) or white (0), record its color and position as the candidate for the next layer. Stop searching for *other* layer candidates in this BFS pass, but continue the BFS to find all reachable background (8/0) pixels for the next boundary. Add visited background pixels to a 'next_queue'. Mark all encountered pixels (background or layer candidate) as visited.
      - sub_action: process_found_layer
        description: If a layer candidate pixel was identified in the BFS pass:
          - Record the candidate color as the next color in the output sequence.
          - Use flood fill (e.g., another BFS) starting from the candidate pixel to find all connected pixels of the same color (the complete layer object).
          - Ensure all pixels of this object are marked as visited.
          - Add all pixels of this object to the 'next_queue'.
      - sub_action: update_queue
        description: Set the exploration queue for the next iteration to be the 'next_queue' (containing newly found background pixels and all pixels from the just-processed layer).
      - sub_action: check_termination
        description: If no layer candidate was found during the BFS pass and the 'next_queue' is empty, terminate the loop.
  - action: format_output
    description: Arrange the recorded layer colors into a single-column grid.