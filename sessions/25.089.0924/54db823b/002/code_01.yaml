elements:
  - object: grid
    attributes:
      - width: Integer
      - height: Integer
      - pixels: 2D array of integers (0-9)
    colors_present: [white (0), green (3), maroon (9)]
  - object: shapes
    description: Contiguous areas of non-white (non-0) pixels within the grid.
    connectivity: Orthogonal (4-way adjacency: up, down, left, right).
    composition: Made of green (3) and/or maroon (9) pixels.
    properties:
      - maroon_count: The number of maroon (9) pixels within the shape.
      - total_size: The total number of pixels (green and maroon) within the shape.
      - location: The set of coordinates (row, column) occupied by the shape's pixels.
      - top_left: The coordinate (min_row, min_col) representing the top-most, left-most pixel of the shape, used for tie-breaking.

actions:
  - name: find_all_shapes
    description: Identifies all orthogonally connected shapes made of non-white pixels and calculates their properties.
    input: grid
    output: list of shapes, each with properties (maroon_count, total_size, location, top_left)
  - name: select_shape_for_removal
    description: Selects a single shape based on hierarchical criteria.
    input: list of shapes
    output: the single shape selected for removal
    logic:
      1. Identify shapes with the minimum `maroon_count`.
      2. If tied (multiple shapes have the minimum `maroon_count`), select from the tied shapes those with the maximum `total_size`.
      3. If still tied (multiple shapes have the minimum `maroon_count` and maximum `total_size`), select the shape with the minimum `top_left` coordinate (first by row, then by column).
  - name: generate_output_grid
    description: Creates the output grid by removing the selected shape.
    input:
      - input_grid: original grid
      - shape_to_remove: the shape selected by `select_shape_for_removal`
    output: output_grid
    logic:
      1. Create a copy of the `input_grid`.
      2. Iterate through all pixel coordinates specified in `shape_to_remove.location`.
      3. Set the pixel at each of these coordinates in the copied grid to white (0).
      4. Return the modified grid copy.

relationships:
  - The output grid is derived from the input grid by changing the color of all pixels belonging to one specific shape to white (0).
  - The shape selected for removal is determined by sequentially applying criteria: minimizing maroon pixels, maximizing total size, and resolving final ties by top-left position.