task_structure:
  - input_grid:
      parts:
        - pattern_definition:
            location: Top 6 rows (0-5), first 6 columns (0-5).
            size: 6x6
            content: Contains 3x3 grid of 2x2 solid color blocks.
            purpose: Defines the elementary pattern (tile).
        - separator:
            location: Row 6 (0-indexed).
            content: Horizontal line of gray pixels (color 5).
            purpose: Separates definition area from layout area.
        - layout_definition:
            location: Rows below separator (starting row 7), first 6 columns.
            conceptual_size: 6x6 (padded with background color 0 if needed).
            content: Configuration of red pixels (color 2) on background (color 0).
            purpose: Specifies locations for pattern placement in output.
  - output_grid:
      size: 18x18 (fixed).
      content: Background (color 0) with instances of the elementary pattern placed according to layout.

pattern:
  derivation: Extracted from the top-left pixel of each 2x2 block in the 6x6 pattern definition area.
  size: 3x3
  element: tile used for constructing the output.

layout_markers:
  color: red (2)
  location: Within the conceptual 6x6 layout area derived from the input grid below the separator.
  function: Each marker indicates a position to place the pattern in the output.

transformation:
  type: Tiling or stamping.
  scaling_factor: 3 (both height and width; layout 6x6 -> output 18x18; pattern 3x3).
  mapping: A red marker at relative layout coordinates (r, c) maps to the top-left corner (r*3, c*3) of a pattern instance in the output grid.
  output_initialization: Start with an 18x18 grid of background color (0).
  placement: Copy the 3x3 pattern onto the output grid at locations specified by the red markers. Overlapping writes are implicitly handled (last write wins, though no overlaps occur in examples).