objects:
  - id: obj1
    color: azure (8)
    initial_state: Present in the input grid as a contiguous shape. Position and specific shape vary between examples.
    properties: Consists of one or more pixels.
  - id: obj2
    color: green (3)
    initial_state: Present in the input grid as a contiguous shape. Position and specific shape vary between examples.
    properties: Consists of one or more pixels.
  - id: background
    color: white (0)
    initial_state: Fills the rest of the input grid.
    properties: The default color.
actions:
  - action: trace_path
    actor: each pixel of obj1 and obj2
    details:
      - Each non-white pixel from the input grid initiates a path.
      - The path moves diagonally, one step down and one step right, per step.
      - Boundary Handling (Wrap-around):
        - If row index exceeds grid height - 1, reset row to 0 and increment column index.
        - If column index exceeds grid width - 1, reset column to 0 and increment row index (apply row wrap-around logic if needed).
        - The path effectively continues until it returns to the starting column after traversing all rows, or vice-versa. (Essentially traces across the grid space).
  - action: render_output
    details:
      - Create an output grid of the same dimensions as the input, initialized to white (0).
      - Mark all cells visited by the path of an azure pixel with azure (8).
      - Mark all cells visited by the path of a green pixel with green (3).
  - action: handle_collision
    details:
      - Identify cells in the output grid that were marked by *both* an azure path and a green path.
      - Change the color of these collision cells to magenta (6).
relationships:
  - type: interaction
    between: obj1_path, obj2_path
    result: Where paths overlap, the pixel color becomes magenta (6) in the final output, overwriting the azure (8) or green (3).
grid_properties:
  - size: Varies between examples, but output size matches input size.
  - coordinate_system: (row, column), starting from (0, 0) at the top-left.