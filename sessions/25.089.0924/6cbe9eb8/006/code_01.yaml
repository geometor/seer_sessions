elements:
  - element: potential_background_pattern
    description: Pixels often composed of low-value colors (e.g., white, blue, red, green - 0, 1, 2, 3) sometimes forming a repeating pattern, primarily outside the main frame.
    properties:
      - low_value_colors
      - often_repetitive
      - primarily_outside_frame
  - element: frame_object
    description: A structure, typically rectangular but not always perfectly filled, exactly one pixel thick, composed of a single non-white color. It encloses the content objects. It's identified as the 'best' candidate frame, often the largest by area.
    properties:
      - hollow_structure
      - thickness_1_pixel
      - single_color (non-white)
      - encloses_content_objects
      - identified_via_heuristics (e.g., largest area among valid candidates)
  - element: content_objects
    description: Discrete shapes or blocks of pixels located spatially inside the frame_object, whose colors are distinct from the frame color and typically distinct from the colors identified as background for filtering purposes.
    properties:
      - located_inside_frame
      - colors_distinct_from_frame
      - colors_distinct_from_filtered_background
      - contiguous_shapes (usually)
  - element: filtered_background_colors
    description: A set of colors dynamically determined for filtering. Always includes white (0). Also includes all unique colors found immediately adjacent to the *outside* border of the identified frame_object.
    properties:
      - includes_white_0
      - includes_colors_adjacent_to_outside_of_frame

actions:
  - action: identify_candidate_frames
    description: Find all single-colored, non-white, 1-pixel thick, hollow rectangular structures based on their individual bounding boxes. Check for perimeter completeness, hollowness, and external thickness=1 relative to *that color*.
  - action: select_main_frame
    description: Choose the best frame from the candidates, typically the one with the largest area (height * width). Record its color (`frame_color`) and outer bounding box (`frame_bounds`). Handle cases where no valid frame is found.
  - action: determine_filtering_colors
    description: Identify the set of `filtered_background_colors` by taking white (0) and adding any unique colors adjacent to the outside perimeter defined by `frame_bounds`.
  - action: extract_inner_region
    description: Get the grid portion strictly inside `frame_bounds`.
  - action: filter_content
    description: Create a copy of the inner region. Replace pixels whose color is in `filtered_background_colors` with white (0).
  - action: construct_output
    description: Create a new grid sized for the filtered content plus a 1-pixel border. Draw the border using `frame_color`. Place the filtered content inside.

relationships:
  - relationship: enclosure
    description: The selected 'frame_object' spatially encloses the 'content_objects' and potentially some pixels matching 'filtered_background_colors'.
  - relationship: adjacency_based_filtering
    description: The set of 'filtered_background_colors' is determined by adjacency to the selected 'frame_object', linking the frame choice to the filtering process.
  - relationship: preservation_vs_removal
    description: Within the area defined by the frame, pixels matching 'filtered_background_colors' are removed (set to white), while other pixels ('content_objects') are preserved.