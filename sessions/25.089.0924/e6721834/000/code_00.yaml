task_description: Overlay foreground objects from one half of the input grid onto the background color of the other half.

definitions:
  half_A: The first half of the input grid after splitting.
  half_B: The second half of the input grid after splitting.
  bg_A: The most frequent color in half_A.
  bg_B: The most frequent color in half_B.
  foreground_A: Pixels in half_A whose color is not bg_A.
  foreground_B: Pixels in half_B whose color is not bg_B.
  source_half: The half (A or B) containing more foreground pixels.
  target_half: The half (A or B) containing fewer foreground pixels.
  bg_source: The background color of the source_half.
  bg_target: The background color of the target_half.
  output_grid: The resulting grid after transformation.

grid_properties:
  - input_grid: Variable dimensions (height H, width W).
  - output_grid: Dimensions match the dimensions of one input half (e.g., H/2 x W, H x W/2).

processing_steps:
  - step: Determine split axis based on input dimensions.
      - if H > W: Split horizontally into top (A) and bottom (B).
      - if W > H: Split vertically into left (A) and right (B).
      - if H == W: Split vertically into left (A) and right (B).
  - step: Identify background colors bg_A and bg_B by finding the most frequent color in each half.
  - step: Count the number of foreground pixels in each half (count_A, count_B).
  - step: Determine source_half and target_half based on counts (source has higher count).
  - step: Determine bg_source and bg_target based on which half is source/target.
  - step: Create output_grid with dimensions of one half, filled with bg_target.
  - step: Iterate through source_half. For each pixel P at relative coordinates (r, c):
      - if color(P) is not bg_source:
          - Set output_grid pixel at (r, c) to color(P).

examples:
  - example: train_1
    input_dims: 11x20
    split: Vertical (Left=A, Right=B)
    bg_A: gray(6)
    bg_B: blue(1)
    count_A: > count_B
    source_half: A (Left)
    target_half: B (Right)
    bg_source: gray(6)
    bg_target: blue(1)
    output_dims: 11x10
    output_bg: blue(1)
    output_fg: foreground_A pixels at original relative positions.
  - example: train_2
    input_dims: 30x17
    split: Horizontal (Top=A, Bottom=B)
    bg_A: azure(8)
    bg_B: white(0)
    count_A: > count_B
    source_half: A (Top)
    target_half: B (Bottom)
    bg_source: azure(8)
    bg_target: white(0)
    output_dims: 15x17
    output_bg: white(0)
    output_fg: foreground_A pixels at original relative positions.
  - example: train_3
    input_dims: 10x16
    split: Vertical (Left=A, Right=B)
    bg_A: yellow(4)
    bg_B: azure(8)
    count_B: > count_A
    source_half: B (Right)
    target_half: A (Left)
    bg_source: azure(8)
    bg_target: yellow(4)
    output_dims: 10x8
    output_bg: yellow(4)
    output_fg: foreground_B pixels at original relative positions.
