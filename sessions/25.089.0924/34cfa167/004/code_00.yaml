Data:
  Input: 2D grid of pixels (0-9)
  Output: 2D grid of pixels (0-9)
  Background_Color: The most frequent color in the input grid.

Objects:
  - Type: Anchor
    Designation: TL_Anchor (Top-Left)
    Identification: The non-background object whose bounding box top-left corner has the minimum row, then minimum column.
    Properties: Color (Anchor_Color), BoundingBox(min_r, min_c, max_r, max_c), Height, Width.
  - Type: Anchor
    Designation: BR_Anchor (Bottom-Right)
    Identification: The non-background object whose bounding box bottom-right corner has the maximum row, then maximum column.
    Constraint: Must have the same Anchor_Color, Height, and Width as TL_Anchor.
    Properties: Color (Anchor_Color), BoundingBox(min_r, min_c, max_r, max_c), Height, Width.
  - Type: Pattern_Source
    Designation: Vertical_Pattern
    Identification: The rectangular subgrid located entirely between the anchors, sharing rows with TL_Anchor.
    Location: Rows from TL_Anchor.min_r to TL_Anchor.max_r, Columns from TL_Anchor.max_c + 1 to BR_Anchor.min_c - 1.
    Properties: Subgrid (2D array).
  - Type: Pattern_Source
    Designation: Horizontal_Pattern
    Identification: The rectangular subgrid located entirely between the anchors, sharing columns with TL_Anchor.
    Location: Rows from TL_Anchor.max_r + 1 to BR_Anchor.min_r - 1, Columns from TL_Anchor.min_c to TL_Anchor.max_c.
    Properties: Subgrid (2D array).
  - Type: Frame
    Identification: A single-pixel-thick rectangle drawn one pixel outside the combined bounding box of TL_Anchor and BR_Anchor.
    Properties:
      - Vertical_Frame_Color: Color of the first non-background pixel found (scanning row-by-row, then column-by-column) within the full Vertical_Pattern region (Rows: TL_Anchor.min_r to TL_Anchor.max_r, Cols: TL_Anchor.max_c + 1 to BR_Anchor.min_c - 1).
      - Horizontal_Frame_Color: Color of the first non-background pixel found (scanning row-by-row, then column-by-column) within the full Horizontal_Pattern region (Rows: TL_Anchor.max_r + 1 to BR_Anchor.min_r - 1, Cols: TL_Anchor.min_c to TL_Anchor.max_c).
      - Application: Top/Bottom segments use Vertical_Frame_Color. Left/Right segments (including corners) use Horizontal_Frame_Color.

Relationships:
  - TL_Anchor and BR_Anchor define the bounds for pattern extraction, tiling, and framing.
  - Vertical_Pattern region is horizontally between the anchors and vertically aligned with TL_Anchor.
  - Horizontal_Pattern region is vertically between the anchors and horizontally aligned with TL_Anchor.

Actions:
  - Identify background color.
  - Find all non-background objects and their bounding boxes.
  - Identify TL_Anchor and BR_Anchor based on positional criteria.
  - Verify TL_Anchor and BR_Anchor match in color and dimensions. If not, return input unchanged.
  - Define the full Vertical_Pattern region based on anchor coordinates.
  - Define the full Horizontal_Pattern region based on anchor coordinates.
  - Extract Vertical_Pattern subgrid from the input using its full region definition.
  - Extract Horizontal_Pattern subgrid from the input using its full region definition.
  - Determine Vertical_Frame_Color from its full region.
  - Determine Horizontal_Frame_Color from its full region. If either color cannot be determined (region empty or all background), return input unchanged.
  - Create a copy of the input grid for the output.
  - Tile Vertical_Pattern horizontally into the output grid within the vertical pattern region, using modulo arithmetic on columns based on pattern width.
  - Tile Horizontal_Pattern vertically into the output grid within the horizontal pattern region, using modulo arithmetic on rows based on pattern height.
  - Calculate frame boundaries (one pixel outside the combined TL_Anchor/BR_Anchor extent).
  - Draw the frame onto the output grid (checking boundary conditions): Left/Right sides with Horizontal_Frame_Color, Top/Bottom sides with Vertical_Frame_Color.