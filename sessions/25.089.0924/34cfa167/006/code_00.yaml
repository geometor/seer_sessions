Data:
  Input: 2D grid of pixels (0-9)
  Output: 2D grid of pixels (0-9)
  Background_Color: The most frequent color in the input grid.

Objects:
  - Type: Anchor
    Designation: TL_Anchor (Top-Left)
    Identification: The non-background object whose bounding box top-left corner (min_row, min_col) is lexicographically smallest.
    Properties: Color (Anchor_Color), BoundingBox (min_row, min_col, max_row, max_col), Height, Width.
  - Type: Anchor
    Designation: BR_Anchor (Bottom-Right)
    Identification: The non-background object whose bounding box bottom-right corner (max_row, max_col) is lexicographically largest.
    Constraint: Must have the same Anchor_Color, Height, and Width as TL_Anchor. Must be a distinct object from TL_Anchor.
    Properties: Color (Anchor_Color), BoundingBox (min_row, min_col, max_row, max_col), Height, Width.
  - Type: Pattern_Source
    Designation: Vertical_Pattern_Region
    Identification: Rectangular region in the input grid.
    Properties: Rows = `TL_Anchor.min_row` to `TL_Anchor.max_row`. Columns = `TL_Anchor.max_col + 1` to `BR_Anchor.min_col - 1`. Contains the Vertical_Pattern. Must have height > 0 and width > 0.
  - Type: Pattern_Source
    Designation: Horizontal_Pattern_Region
    Identification: Rectangular region in the input grid.
    Properties: Rows = `TL_Anchor.max_row + 1` to `BR_Anchor.min_row - 1`. Columns = `TL_Anchor.min_col` to `TL_Anchor.max_col`. Contains the Horizontal_Pattern. Must have height > 0 and width > 0.
  - Type: Pattern
    Designation: Vertical_Pattern
    Source: Input grid subgrid defined by Vertical_Pattern_Region coordinates.
  - Type: Pattern
    Designation: Horizontal_Pattern
    Source: Input grid subgrid defined by Horizontal_Pattern_Region coordinates.
  - Type: Frame
    Identification: A single-pixel-thick rectangle surrounding the combined area defined by TL_Anchor and BR_Anchor.
    Properties:
      - Vertical_Frame_Color: Color of the first non-background pixel found scanning the Vertical_Pattern_Region (row-major).
      - Horizontal_Frame_Color: Color of the first non-background pixel found scanning the Horizontal_Pattern_Region (row-major).
      - Top/Bottom segments use Vertical_Frame_Color.
      - Left/Right segments (including corners) use Horizontal_Frame_Color.

Relationships:
  - TL_Anchor and BR_Anchor define the bounds for pattern extraction, tiling, and framing.
  - Vertical_Pattern_Region is adjacent (right) to TL_Anchor and aligned vertically.
  - Horizontal_Pattern_Region is adjacent (below) to TL_Anchor and aligned horizontally.

Actions:
  - Find background color.
  - Find all non-background objects and their bounding boxes.
  - Identify TL_Anchor and BR_Anchor based on bounding box positions.
  - Verify TL_Anchor and BR_Anchor are distinct and match in color and dimensions.
  - Define Vertical and Horizontal Pattern Regions based on anchor coordinates.
  - Verify pattern regions are valid (positive dimensions).
  - Extract Vertical_Pattern and Horizontal_Pattern subgrids.
  - Verify extracted patterns have non-zero dimensions.
  - Determine Vertical_Frame_Color and Horizontal_Frame_Color by scanning pattern regions.
  - Verify frame colors were found.
  - Copy input grid to create initial output grid.
  - Tile Vertical_Pattern horizontally into the output grid within the Vertical Pattern Region's column span and TL_Anchor's row span.
  - Tile Horizontal_Pattern vertically into the output grid within the Horizontal Pattern Region's row span and TL_Anchor's column span.
  - Calculate frame boundaries (one pixel outside the combined TL_Anchor and BR_Anchor bounding box).
  - Draw the frame onto the output grid using derived colors, respecting grid boundaries.