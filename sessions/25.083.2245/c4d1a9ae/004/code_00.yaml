example1:
  objects:
    - type: pixel
      properties:
        color: [2, 4, 5, 6]  # Colors present in the example
        neighbors: [left, right]
      actions:
        change_color:
          conditions:
            - "left neighbor color == right neighbor color == 4 AND current color == 4"
            - "left neighbor color == right neighbor color != 4 AND current color == 4"
            - "left neighbor color != 4 AND right neighbor == 4 AND current color == 6"
            - "left neighbor color == 4 AND right neighbor == 6 AND current color == 4"

          results:
            - change_to: 6  # If neighbors are 4 and current is 4
            - change_to: 5  # if current is 4
            - change_to: 5 # if neighbours not 4
            - change_to: 5

example2:
  objects:
    - type: pixel
      properties:
        color: [0, 3, 4, 9]  # Colors present in the example
        neighbors: [left, right, up, down]
      actions:
        change_color:
          conditions:
            - "current color == 0 AND (up neighbor == 0 OR down neighbor == 0)"
            - "current color == 0 AND (up neighbor != 0  and  down neighbor != 0)"
            - "current color == 0 AND up neighbor == 0 and down neighbor == 0"
            - "current color == 4 and left neighbor == 3 and right neighbor == 3"
          results:
            - change_to: 3  # If current is 0 and either up or down is 0
            - change_to: 9 # current is 0 and up or down is 4
            - change_to: 3 # current is zero.
            - change_to: 9
