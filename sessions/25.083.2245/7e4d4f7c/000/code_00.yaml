objects:
  - grid:
      type: 2D array
      properties:
        rows: variable
        columns: variable
        cells: single-digit integers (0-9) representing colors
  - row:
      type: horizontal sequence of cells
      properties:
          length: equal to grid's columns
          cell_values: inherit from grid

  - alternating_pattern_row:
      inherits_from: row
      properties:
        alternating_colors: two distinct colors alternating, only in the first row

actions:
  - copy_row:
      input: source_row, destination_grid
      effect: copies the source_row to the destination_grid at a specified index.
      constraints: source_row length equals destination_grid column count.

  - create_alternating_row:
      input: source_row, destination_grid
      effect: constructs third row in the destination_grid
      logic:
          if source_row.cell[index] equals source_row.cell[index+2]:
            output_row.cell[index] = 6
          else
            output_row.cell[index] = source_row.cell[index]

relationships:
  - input_output:
      type: transformation
      description: The output grid is derived from the input grid based on specific rules operating on rows.
  - row_grid:
    type: containment
    description: rows are contained with a grid