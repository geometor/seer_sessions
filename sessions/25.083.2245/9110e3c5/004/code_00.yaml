task:
  domain: ARC-AGI
  name: "3x3 Grid Transformation"
  description: |
    The task involves transforming an input grid of arbitrary size (within ARC limits) into a 3x3 output grid. 
    The output grid contains only black (0) and azure (8) pixels. The number and arrangement of azure pixels 
    vary, seemingly dependent on features within the input grid.
  input_features:
    - color_counts:
      - color_0: "Variable count of black pixels"
      - color_1: "Variable count of blue pixels"
      - color_2: "Variable count of red pixels"
      - color_3: "Variable count of green pixels"
      - color_4: "Variable count of yellow pixels"
      - color_5: "Variable count of gray pixels"
      - color_6: "Variable count of magenta pixels"
      - color_7: "Variable count of orange pixels"
      - color_8: "Variable count of azure pixels"
      - color_9: "Variable count of maroon pixels"
  output_features:
    - grid_size: "3x3"
    - color_palette: [0, 8]
    - azure_count: [3, 4]
    - patterns:
        - horizontal: "Three azure pixels in a horizontal line."
        - vertical: "Three azure pixels in a vertical line."
        - L_shape: "Four azure pixels forming an L-shape."
  relationships:
    - "input_features -> output_pattern: The arrangement and count of azure pixels in the output grid are determined by features of the input grid, including but not limited to the presence and count of specific colors."
  examples:
    - example_1:
      input_colors: {0: 26, 1: 14, 2: 2, 3: 2, 4: 1, 7: 2, 8: 1, 9: 1}
      output_pattern: "L-shape"
      azure_count: 4
    - example_2:
       input_colors: {0: 25, 1: 1, 3: 18, 4: 1, 5: 1, 8: 1, 9: 2}
       output_pattern: "L-shape"
       azure_count: 4
    - example_3:
        input_colors: {0: 20, 1: 1, 2: 20, 3: 1, 4: 2, 5: 2, 6: 1, 7: 1, 9: 1}
        output_pattern: "horizontal"
        azure_count: 3
    - example_4:
        input_colors:  {0: 31, 1: 2, 2: 12, 5: 1, 8: 1, 9: 2}
        output_pattern: "horizontal"
        azure_count: 3
    - example_5:
        input_colors:  {0: 20, 1: 2, 2: 1, 3: 21, 4: 4, 7: 1}
        output_pattern: "L-shape"
        azure_count: 4
    - example_6:
      input_colors:   {0: 23, 2: 16, 3: 1, 4: 2, 5: 1, 6: 2, 8: 1, 9: 3}
      output_pattern: "horizontal"
      azure_count: 3
    - example_7:
      input_colors:  {0: 26, 1: 18, 2: 1, 4: 2, 6: 1, 7: 1}
      output_pattern: "L-shape"
      azure_count: 4