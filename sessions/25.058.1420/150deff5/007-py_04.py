import numpy as np

def compare_grids(grid1, grid2):
    """
    Compares two grids and returns the coordinates where they differ.
    """
    grid1 = np.array(grid1)
    grid2 = np.array(grid2)
    if grid1.shape != grid2.shape:
        return "Grids have different shapes"
    diff_coords = np.where(grid1 != grid2)
    return list(zip(diff_coords[0], diff_coords[1]))

# Provided training examples
train_examples = [
    {
        "input": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 5, 5, 5, 0, 0, 0], [0, 0, 0, 0, 5, 5, 5, 0, 0, 0], [0, 0, 0, 0, 5, 5, 5, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
        "output": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 8, 8, 0, 0, 0], [0, 0, 0, 0, 8, 2, 8, 0, 0, 0], [0, 0, 0, 0, 8, 2, 8, 0, 0, 0], [0, 0, 0, 0, 8, 8, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
    },
    {
        "input": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 5, 5, 5, 5, 5, 0, 0], [0, 0, 0, 5, 5, 5, 5, 5, 0, 0], [0, 0, 0, 5, 5, 5, 5, 5, 0, 0], [0, 0, 0, 5, 5, 5, 5, 5, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
        "output": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 8, 8, 8, 8, 0, 0], [0, 0, 0, 8, 2, 2, 2, 8, 0, 0], [0, 0, 0, 8, 2, 2, 2, 8, 0, 0], [0, 0, 0, 8, 2, 2, 2, 8, 0, 0], [0, 0, 0, 8, 8, 8, 8, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
    },
    {
        "input": [[5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5, 5, 5]],
        "output": [[8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 2, 2, 2, 2, 2, 2, 2, 8], [8, 2, 2, 2, 2, 2, 2, 2, 8], [8, 2, 2, 2, 2, 2, 2, 2, 8], [8, 2, 2, 2, 2, 2, 2, 2, 8], [8, 2, 2, 2, 2, 2, 2, 2, 8], [8, 2, 2, 2, 2, 2, 2, 2, 8], [8, 2, 2, 2, 2, 2, 2, 2, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8]]
    },
    {
        "input" : [[0, 0, 0, 0, 0, 0, 0], [0, 5, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 0], [0, 5, 5, 5, 5, 5, 0], [0, 0, 0, 0, 0, 0, 0]],
        "output" : [[0, 0, 0, 0, 0, 0, 0], [0, 8, 8, 8, 8, 8, 0], [0, 8, 2, 2, 2, 8, 0], [0, 8, 2, 2, 2, 8, 0], [0, 8, 2, 2, 2, 8, 0], [0, 8, 8, 8, 8, 8, 0], [0, 0, 0, 0, 0, 0, 0]]
    }
]

# Perform the comparisons
for i, example in enumerate(train_examples):
    input_grid = example['input']
    expected_output = example['output']
    predicted_output = transform(input_grid)
    differences = compare_grids(predicted_output, expected_output)
    print(f"Example {i+1} Differences: {differences}")
