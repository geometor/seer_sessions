import numpy as np

def describe_grid(grid):
    """Provides a basic description of the grid."""
    rows, cols = grid.shape
    unique_colors = np.unique(grid)
    print(f"  Shape: ({rows}, {cols})")
    print(f"  Unique colors: {unique_colors}")

# Load the example data (replace with actual data loading)
task_data = {
"train": [
        {
            "input": np.array([[5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                               [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                               [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                               [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                               [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                               [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                               [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                               [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                               [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                               [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]]),
            "output": np.array([[5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                                [5, 5, 5, 5, 5, 5, 5, 5, 5, 5]]),
        },
        {
            "input": np.array([[8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [1, 1, 1, 1, 1, 1, 1, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]]),
            "output": np.array([[8, 8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8, 8]]),
        },
        {
            "input": np.array([[8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 1, 8, 1, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 1, 8, 1, 8],
                               [8, 8, 8, 8, 8, 8, 8, 1, 8, 8],
                               [1, 1, 1, 1, 1, 1, 1, 1, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]]),
            "output": np.array([[8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8, 8]]),
        },
        {
            "input": np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
                               [0, 0, 0, 0, 0, 0, 1, 0, 0, 0],
                               [0, 0, 0, 0, 0, 1, 0, 0, 0, 0],
                               [0, 0, 0, 0, 1, 0, 0, 0, 0, 0],
                               [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                               [0, 0, 1, 0, 0, 0, 0, 0, 0, 0],
                               [0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
                               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]),
            "output": np.array([[0, 0, 0, 0, 0, 0, 0],
                                [0, 0, 0, 0, 0, 0, 0],
                                [0, 0, 0, 0, 0, 0, 0],
                                [0, 0, 0, 0, 0, 0, 0],
                                [0, 0, 0, 0, 0, 0, 0],
                                [0, 0, 0, 0, 0, 0, 0],
                                [0, 0, 0, 0, 0, 0, 0]]),
        },

    ],
    "test": [
        {
            "input": np.array([[8, 8, 8, 8, 8, 8, 1, 8, 8, 8],
                               [8, 8, 8, 8, 8, 1, 8, 1, 8, 8],
                               [8, 8, 8, 8, 1, 8, 8, 8, 1, 8],
                               [8, 8, 8, 1, 8, 8, 8, 8, 8, 1],
                               [8, 8, 1, 8, 8, 8, 8, 8, 8, 8],
                               [8, 1, 8, 8, 8, 8, 8, 8, 8, 8],
                               [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                               [8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
                               [8, 8, 8, 8, 8, 8, 8, 8, 8, 8]]),
            "output": np.array([[8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8],
                                [8, 8, 8, 8, 8, 8]]),
        }
    ]
}

for i, example in enumerate(task_data['train']):
  print(f"Example Input {i + 1}:")
  describe_grid(example['input'])
  print(f"Example Output {i+1}:")
  describe_grid(example['output'])