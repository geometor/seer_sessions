import numpy as np

def transform(input_grid):
    input_grid = np.array(input_grid)
    output_grid = np.concatenate((input_grid, input_grid), axis=0)
    return output_grid

train_examples = [
    {
        "input": [[5, 5], [5, 8]],
        "output": [[5, 5], [5, 8], [5, 5], [5, 8]]
    },
    {
        "input": [[0, 8, 7], [0, 8, 0], [8, 7, 8], [1, 0, 0]],
        "output": [[0, 8, 7], [0, 8, 0], [8, 7, 8], [1, 0, 0], [0, 8, 7], [0, 8, 0], [8, 7, 8], [1, 0, 0]]
    },
    {
        "input" : [[7, 0, 7, 7, 7], [7, 0, 0, 0, 0], [0, 0, 7, 7, 0], [0, 0, 0, 0, 0], [7, 7, 7, 7, 7]],
        "output": [[7, 0, 7, 7, 7], [7, 0, 0, 0, 0], [0, 0, 7, 7, 0], [0, 0, 0, 0, 0], [7, 7, 7, 7, 7],
                   [7, 0, 7, 7, 7], [7, 0, 0, 0, 0], [0, 0, 7, 7, 0], [0, 0, 0, 0, 0], [7, 7, 7, 7, 7]]
    },
    {
        "input": [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]],
        "output": [[0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1],
                   [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 1]]
    }

]

for i, example in enumerate(train_examples):
    input_grid = example['input']
    expected_output = example['output']
    actual_output = transform(input_grid).tolist()  # Convert to list for comparison
    print(f"Example {i+1}:")
    print(f"  Input shape: {np.array(input_grid).shape}")
    print(f"  Output shape: {np.array(actual_output).shape}")
    print(f"  Output Matches Expected: {actual_output == expected_output}")