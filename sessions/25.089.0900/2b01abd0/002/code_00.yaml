elements:
  - type: grid
    description: Input and output are 2D grids of colored pixels (0-9).
    properties:
      - height
      - width
  - type: axis_line
    color: blue (1)
    orientation: horizontal or vertical
    composition: Consists of only blue (1) and white (0) pixels, with at least one blue pixel.
    role: separator & axis_of_reflection
    identification: The single candidate line (horizontal or vertical) with the most blue pixels.
    persistence: Remains unchanged between input and output grids.
  - type: object_pixel
    description: A single pixel that is not part of the background (white, 0) or the axis_line (blue, 1).
    properties:
      - color
      - location: (row, column)
actions:
  - name: find_reflection_axis
    input: input_grid
    output: axis_type ('horizontal' or 'vertical'), axis_index (row or column index)
    method: Identify the line (row or column) composed only of blue (1) and white (0) pixels that contains the maximum number of blue pixels.
  - name: initialize_output
    input: input_grid_dimensions
    output: output_grid (filled with white, 0)
  - name: copy_axis_line
    input: input_grid, output_grid, axis_type, axis_index
    process: Copy only the blue (1) pixels from the axis line in the input to the corresponding locations in the output grid.
  - name: reflect_and_swap_pixel
    input: pixel_location (r, c), pixel_color, axis_type, axis_index
    process:
      - If axis is 'horizontal': calculate reflected_row = 2 * axis_index - r, reflected_col = c.
      - If axis is 'vertical': calculate reflected_row = r, reflected_col = 2 * axis_index - c.
      - Determine swapped_color based on predefined pairs (8<>4, 2<>3, 5<>6).
      - Check if reflected location is within grid bounds.
    output: reflected_location (refl_r, refl_c), swapped_color
  - name: place_pixel_on_output
    input: output_grid, reflected_location, swapped_color
    process: Update the pixel at reflected_location in the output_grid with swapped_color.
color_swaps:
  - pair: [azure (8), yellow (4)]
  - pair: [red (2), green (3)]
  - pair: [gray (5), magenta (6)]
relationships:
  - input_pixel maps to reflected_output_pixel
  - distance from axis_line is preserved but mirrored across the axis
  - specific color pairs are mutually swapped during reflection