task_context:
  grid_size: constant (16x16 in examples)
  background_color: azure (8), determined as the most frequent color.
objects:
  - id: source_object
    description: A single contiguous shape composed of exactly two non-background colors found in the input grid.
    properties:
      colors: The set of two colors present in the object (e.g., {white, gray} or {blue, red}).
      pixels: List of coordinates (row, col) occupied by the object, along with their original color.
      anchor_pixel: The pixel within the object having the minimum row index, and among those, the minimum column index.
      anchor_color: The color of the anchor_pixel.
actions:
  - name: identify_background
    input: input_grid
    output: background_color
  - name: identify_object_pixels
    input: input_grid, background_color
    output: source_object_pixels (list of (row, col, color)), source_object_colors (set of unique non-background colors)
  - name: find_anchor_pixel
    input: source_object_pixels
    output: anchor_color
  - name: determine_shift
    input: anchor_color
    output: horizontal_shift (integer dx)
    logic: If anchor_color is white(0), dx=3; if anchor_color is blue(1), dx=5.
  - name: create_color_map
    input: source_object_colors
    output: color_map (dictionary)
    logic: If colors are {A, B}, map is {A: B, B: A}. Assumes exactly two colors.
  - name: translate_and_swap_colors
    input: input_grid_dimensions, source_object_pixels, background_color, horizontal_shift (dx), color_map
    output: output_grid
    logic: Create a new grid filled with background_color. For each pixel (r, c) with original_color in source_object_pixels, calculate the mapped_color using color_map. Calculate the new position (r, c + dx). If the new position is within bounds, place the mapped_color at (r, c + dx) in the output grid.
relationships:
  - The horizontal_shift amount depends solely on the anchor_color of the source_object.
  - The colors of the object pixels are swapped in the output based on the two colors present in the source_object.
  - The output grid is formed by translating the source_object by the calculated horizontal_shift and applying the color swap, leaving the background color in the original object location and elsewhere.