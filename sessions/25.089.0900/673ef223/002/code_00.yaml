elements:
  - object: background
    color: white (0)
    role: static_canvas
  - object: red_line_segment
    color: red (2)
    shape: vertical_line
    count: 2 (one left, one right)
    properties:
      - spans_multiple_rows
      - defines_boundaries_and_anchor_points
      - segments_define_corresponding_rows
    role: boundary/anchor
  - object: azure_marker
    color: azure (8)
    shape: pixel
    count: variable (>=1)
    location: on_a_row_spanned_by_a_red_line_segment
    role: trigger
  - object: generated_same_side_line
    color: azure (8)
    shape: horizontal_line_segment
    role: output_element
    relationship:
      - starts_adjacent_to_source_red_line
      - extends_towards_trigger_column_(exclusive)
      - exists_on_same_row_as_trigger
  - object: generated_yellow_endpoint
    color: yellow (4)
    shape: pixel
    role: output_element
    location: at_the_original_coordinates_of_an_azure_marker
    relationship: terminates_generated_same_side_line
  - object: generated_opposite_side_line
    color: azure (8)
    shape: horizontal_line_segment
    role: output_element
    relationship:
      - starts_at_the_target_red_line_column_(inclusive)
      - extends_towards_the_source_red_line_column_(exclusive)
      - overwrites_target_red_pixel_in_that_row
      - exists_on_row_corresponding_to_trigger_row_in_target_segment

actions:
  - identify: locate the two vertical red line segments and their row ranges.
  - identify: locate all azure marker pixels in the original input.
  - initialize: create output grid by copying input grid and removing azure markers (setting to white 0).
  - for_each: azure marker pixel at input coordinates (r, c):
      - determine: which red segment (source) row 'r' belongs to, and identify the other segment (target). Record source/target columns and row starts.
      - generate_same_side:
          - place: yellow (4) pixel at (r, c) in output.
          - draw: horizontal azure (8) line in row 'r' starting adjacent to the source red line column and ending just before column 'c'.
      - generate_opposite_side:
          - calculate: the corresponding row 'r_target' in the target segment's row range.
          - check: if 'r_target' is valid within the target segment's row range.
          - draw: horizontal azure (8) line in row 'r_target' starting *at* the target red line column and ending just before the source red line column. This overwrites the target red pixel at (r_target, target_col).
  - maintain: keep the original red lines (except where overwritten by opposite-side azure lines) and background white pixels.
