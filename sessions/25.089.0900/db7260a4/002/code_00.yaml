task_description: Conditionally fills regions or the bottom row based on a trigger pixel's location relative to a boundary structure.

elements:
  - id: background
    color: white (0)
    role: Default state, potentially fillable area.
  - id: trigger_pixel
    color: blue (1)
    count: 1
    role: Determines the fill condition based on its column relative to the boundary structure's horizontal span. Becomes white in the output.
  - id: boundary_structure
    color: red (2)
    role: Defines a horizontal span and potentially bounds white regions. Remains unchanged.
  - id: fill_pixels
    color: blue (1)
    role: Appear in the output, replacing specific white pixels according to the transformation rule (either in a region or the bottom row).
  - id: grid_boundary
    role: Implicit boundary used to determine if white regions are "enclosed" (do not touch the boundary).

properties:
  - element: boundary_structure
    property: horizontal_span
    definition: The range of column indices from the minimum to the maximum occupied by any red pixel.
  - element: background (white pixels)
    property: connected_components
    definition: Groups of adjacent (4-directionally) white pixels.
  - element: white_component
    property: touches_boundary
    definition: Boolean indicating if any pixel within the component lies on row 0, the last row, column 0, or the last column.

actions:
  - name: find_trigger_and_boundary
    input: input_grid
    output: trigger_coordinate, boundary_coordinates
  - name: calculate_boundary_span
    input: boundary_coordinates
    output: min_column, max_column
  - name: check_trigger_position
    input: trigger_coordinate, min_column, max_column
    output: boolean (is trigger column within boundary span?)
  - name: prepare_output_grid
    input: input_grid, trigger_coordinate
    action: Copy input grid, change trigger pixel to white.
    output: intermediate_grid
  - name: find_white_components
    input: intermediate_grid
    action: Use BFS/DFS on white pixels.
    output: list_of_white_components (each component is a set of coordinates)
  - name: identify_non_boundary_components
    input: list_of_white_components, grid_dimensions
    action: Filter components to find those where no pixel touches the grid boundary.
    output: list_of_non_boundary_components
  - name: select_largest_region
    input: list_of_non_boundary_components
    action: Find the component with the most pixels.
    output: largest_non_boundary_component (or None if list is empty)
  - name: determine_fill_rule
    input: is_trigger_inside_span, largest_non_boundary_component
    output: rule ('fill_region' or 'fill_bottom_row'), target_region (component or None)
  - name: apply_fill
    input: intermediate_grid, rule, target_region
    action: If rule is 'fill_region', change target_region pixels to blue. If rule is 'fill_bottom_row', change last row pixels to blue.
    output: final_output_grid
