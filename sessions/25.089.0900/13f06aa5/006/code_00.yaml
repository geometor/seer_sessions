task_description: Identify unique non-background pixels (triggers) in the input grid. For each trigger, replace it with the background color in the output grid and perform an action based on the trigger's color (C1) and position (r, c). Handle corner cases where actions affect the same corner pixel.

definitions:
  background_color: The most frequent color in the input grid.
  trigger_pixel: A pixel at (r, c) with color C1 such that C1 is not the background_color, and the count of C1 in the entire input grid is exactly 1.

grid_properties:
  - dimensions: Input and output grids have the same height and width.

actions_on_trigger:
  - trigger_color: Blue (1)
    location: (r, c)
    actions:
      - replace_pixel:
          location: (r, c)
          new_color: background_color
      - place_pixel:
          location: (0, c) # Top edge, same column
          color: Blue (1)
      - mark_edge_affected: Top

  - trigger_color: Green (3)
    location: (r, c)
    actions:
      - replace_pixel:
          location: (r, c)
          new_color: background_color
      - place_pixel:
          location: (0, c) # Top edge, same column
          color: Green (3)
      - mark_edge_affected: Top

  - trigger_color: Red (2)
    location: (r, c)
    actions:
      - replace_pixel:
          location: (r, c)
          new_color: background_color
      - place_pixel:
          location: (r, 0) # Left edge, same row
          color: Red (2)
      - mark_edge_affected: Left

  - trigger_color: Azure (8)
    location: (r, c)
    actions:
      - replace_pixel:
          location: (r, c)
          new_color: background_color
      - place_pixel:
          location: (r, width-1) # Right edge, same row
          color: Azure (8)
      - mark_edge_affected: Right

  - trigger_color: Magenta (6)
    location: (r, c)
    actions:
      - replace_pixel:
          location: (r, c)
          new_color: background_color # Although this might be immediately overwritten
      - fill_row:
          row_index: height-1 # Bottom edge
          color: Magenta (6)
      - place_pixels_vertically:
          column_index: c
          start_row: r + 2
          step: 2
          end_row_exclusive: height - 1 # Stop before the last row
          color: Magenta (6)
      # Note: Magenta does not mark edges as affected for corner intersection checks

corner_intersections:
  - condition: Top edge affected AND Left edge affected
    action: set_pixel
    location: (0, 0)
    color: White (0)
  - condition: Top edge affected AND Right edge affected
    action: set_pixel
    location: (0, width-1)
    color: White (0)

initialization:
  - step: Create the output grid as an identical copy of the input grid.

finalization:
  - step: Apply corner intersection rules after processing all triggers.
  - step: The resulting grid is the final output.

unchanged_elements:
  - Pixels that are not trigger pixels and are not modified by edge placement, row filling, vertical placement, or corner intersection rules remain unchanged from the input grid.