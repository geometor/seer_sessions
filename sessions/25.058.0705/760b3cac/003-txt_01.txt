        [[0, 0, 0, 0, 0, 0, 0, 8],
        [0, 0, 0, 0, 0, 0, 8, 0],
        [0, 0, 0, 0, 0, 8, 0, 0],
        [0, 0, 0, 0, 8, 0, 0, 0],
        [0, 0, 0, 8, 0, 0, 0, 0],
        [0, 0, 8, 0, 0, 0, 0, 0],
        [0, 8, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0]]
        ```
    *   Expected Output:
        ```
        [[8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0]]
        ```
    *   Actual Output:
        ```
        [[8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0],
        [8, 0, 0, 0, 0, 0, 0, 0]]
        ```
    *   Result: **Correct.** The azure pixels collapsed to a single azure pixel on the far left of each row.

*   **Example 3:**
    *   Input:
      ```
      [[0, 0, 8, 0, 0, 8, 8, 0, 0, 0, 0, 8],
      [0, 6, 6, 6, 0, 0, 8, 0, 0, 8, 0, 0],
      [8, 0, 0, 0, 0, 0, 8, 0, 6, 0, 6, 0],
      [0, 0, 8, 8, 0, 0, 0, 0, 6, 6, 6, 0]]
      ```

    *   Expected Output:
      ```
      [[8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [8, 8, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0],
      [8, 8, 0, 0, 0, 0, 0, 0, 6, 0, 6, 0],
      [8, 8, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0]]
      ```
    * Actual Output:
      ```
      [[8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0],
      [8, 8, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0],
      [8, 8, 0, 0, 0, 0, 0, 0, 6, 0, 6, 0],
      [8, 8, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0]]
      ```
    *   Result: **Correct.** The azure pixels move to the leftmost white spaces, combining.

**YAML Facts:**
