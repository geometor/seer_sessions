{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1815,
        "candidates": 639,
        "total": 2454,
        "cached": 0
      },
      "response_time": 9.487048
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2315,
        "candidates": 734,
        "total": 3049,
        "cached": 0
      },
      "response_time": 7.424416
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 3075,
        "candidates": 1313,
        "total": 4388,
        "cached": 0
      },
      "response_time": 14.935564
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 4182,
        "candidates": 1059,
        "total": 5241,
        "cached": 0
      },
      "response_time": 9.743153
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 3379,
        "candidates": 1572,
        "total": 4951,
        "cached": 0
      },
      "response_time": 18.187705
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4745,
        "candidates": 1172,
        "total": 5917,
        "cached": 0
      },
      "response_time": 9.156316
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1815,
        "candidates": 482,
        "total": 2297,
        "cached": 0
      },
      "response_time": 7.537739
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2159,
        "candidates": 512,
        "total": 2671,
        "cached": 0
      },
      "response_time": 5.530672
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2853,
        "candidates": 1397,
        "total": 4250,
        "cached": 0
      },
      "response_time": 17.544902
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 4045,
        "candidates": 624,
        "total": 4669,
        "cached": 0
      },
      "response_time": 6.179048
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2966,
        "candidates": 1432,
        "total": 4398,
        "cached": 0
      },
      "response_time": 16.74045
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4198,
        "candidates": 886,
        "total": 5084,
        "cached": 0
      },
      "response_time": 7.647125
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1815,
        "candidates": 642,
        "total": 2457,
        "cached": 0
      },
      "response_time": 9.283568
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2318,
        "candidates": 483,
        "total": 2801,
        "cached": 0
      },
      "response_time": 5.43379
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2829,
        "candidates": 1499,
        "total": 4328,
        "cached": 0
      },
      "response_time": 17.950529
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 4122,
        "candidates": 657,
        "total": 4779,
        "cached": 0
      },
      "response_time": 5.969175
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 3003,
        "candidates": 924,
        "total": 3927,
        "cached": 0
      },
      "response_time": 10.963642
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3723,
        "candidates": 565,
        "total": 4288,
        "cached": 0
      },
      "response_time": 4.956781
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1815,
        "candidates": 401,
        "total": 2216,
        "cached": 0
      },
      "response_time": 7.252052
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2078,
        "candidates": 401,
        "total": 2479,
        "cached": 0
      },
      "response_time": 4.77127
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2742,
        "candidates": 1878,
        "total": 4620,
        "cached": 0
      },
      "response_time": 17.701682
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 4417,
        "candidates": 841,
        "total": 5258,
        "cached": 0
      },
      "response_time": 8.085834
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 3182,
        "candidates": 3206,
        "total": 6388,
        "cached": 0
      },
      "response_time": 28.641603
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 6185,
        "candidates": 1051,
        "total": 7236,
        "cached": 0
      },
      "response_time": 9.730988
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1815,
        "candidates": 511,
        "total": 2326,
        "cached": 0
      },
      "response_time": 8.262457
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2187,
        "candidates": 633,
        "total": 2820,
        "cached": 0
      },
      "response_time": 6.703285
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 2974,
        "candidates": 1299,
        "total": 4273,
        "cached": 0
      },
      "response_time": 13.874
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 4066,
        "candidates": 720,
        "total": 4786,
        "cached": 0
      },
      "response_time": 5.968572
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 3060,
        "candidates": 823,
        "total": 3883,
        "cached": 0
      },
      "response_time": 9.721221
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 3678,
        "candidates": 762,
        "total": 4440,
        "cached": 0
      },
      "response_time": 6.638892
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8\n0 8\n0 8\n8 8\n0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 8\n0 8\n0 8\n8 8\n0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 8 0\n8 8 8\n8 8 0\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n8 8 0\n0 8 0\n8 8 8\n8 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 8\n8 8 0\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n8 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 8 0\n0 8 0\n0 8 0\n8 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 8 0\n8 8 8\n8 8 0\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n8 8 0\n0 8 0\n8 8 8\n8 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 8\n8 8 0\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 0 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 0 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 0 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 0 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 0 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      }
    ],
    "014-py_07-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 9\n0 8 9\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 9\n9 8 9\n9 8 9\n0 8 9\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 9\n0 8 0\n0 8 9\n9 8 0\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 8 9\n0 8 9\n9 8 9\n0 8 0\n0 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 0\n0 8 9\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      }
    ],
    "016-py_08-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 1 9\n9 1 9\n9 1 9\n0 1 9\n9 1 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 6.666666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 1 9\n9 1 9\n9 1 9\n0 1 9\n9 1 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 1 9\n0 1 0\n0 1 9\n9 1 0\n9 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 1 9\n0 1 9\n9 1 9\n0 1 0\n0 1 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 1 9\n9 1 9\n9 1 0\n0 1 9\n9 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      }
    ],
    "018-py_09-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "020-py_10-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "022-py_11-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "023-py_12-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "024-py_13-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 0 8\n0 8 8\n8 0 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 0 8\n0 8 8\n8 0 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 0 8\n0 8 8\n8 0 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 0 8\n0 8 8\n8 0 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 0 8\n0 8 8\n8 0 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      }
    ],
    "026-py_14-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 8\n0 0 8\n0 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n8 0 8\n0 8 8\n8 0 0\n8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 8\n0 0 0\n8 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 0 0\n8 8 0\n0 8 8\n8 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "028-py_15-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 8\n0 0 8\n0 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n8 0 8\n0 8 8\n8 0 0\n8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 8\n0 0 0\n8 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 0 0\n8 8 0\n0 8 8\n8 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "030-py_16-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 8\n0 0 8\n0 8 8\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n8 0 8\n0 8 8\n8 0 0\n8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 8\n0 0 0\n8 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 0 0\n8 8 0\n0 8 8\n8 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 5
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}