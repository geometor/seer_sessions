{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4259,
        "candidates": 450,
        "total": 4709,
        "cached": 0
      },
      "response_time": 10.817346
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4571,
        "candidates": 342,
        "total": 4913,
        "cached": 0
      },
      "response_time": 5.991696
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 810,
        "total": 2927,
        "cached": 0
      },
      "response_time": 11.683594
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2788,
        "candidates": 1381,
        "total": 4169,
        "cached": 0
      },
      "response_time": 14.244782
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2631,
        "candidates": 1227,
        "total": 3858,
        "cached": 0
      },
      "response_time": 15.632441
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3652,
        "candidates": 552,
        "total": 4204,
        "cached": 0
      },
      "response_time": 5.924972
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1801,
        "candidates": 2293,
        "total": 4094,
        "cached": 0
      },
      "response_time": 24.639711
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 3884,
        "candidates": 404,
        "total": 4288,
        "cached": 0
      },
      "response_time": 4.417448
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 574,
        "total": 2691,
        "cached": 0
      },
      "response_time": 8.899672
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2553,
        "candidates": 1208,
        "total": 3761,
        "cached": 0
      },
      "response_time": 13.145836
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2459,
        "candidates": 3661,
        "total": 6120,
        "cached": 0
      },
      "response_time": 37.23916
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 5914,
        "candidates": 1261,
        "total": 7175,
        "cached": 0
      },
      "response_time": 11.916919
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 2511,
        "candidates": 8192,
        "total": 10703,
        "cached": 0
      },
      "response_time": 70.277004
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 10499,
        "candidates": 1315,
        "total": 11814,
        "cached": 0
      },
      "response_time": 12.638888
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 607,
        "total": 2724,
        "cached": 0
      },
      "response_time": 9.356215
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2585,
        "candidates": 245,
        "total": 2830,
        "cached": 0
      },
      "response_time": 3.829311
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1496,
        "candidates": 1245,
        "total": 2741,
        "cached": 0
      },
      "response_time": 17.038771
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2538,
        "candidates": 250,
        "total": 2788,
        "cached": 0
      },
      "response_time": 3.618815
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1501,
        "candidates": 4256,
        "total": 5757,
        "cached": 0
      },
      "response_time": 42.870934
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 5552,
        "candidates": 273,
        "total": 5825,
        "cached": 0
      },
      "response_time": 3.325391
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 8 8 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 2 2 0 0 5 5 0 0 5\n0 2 2 0 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 88.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 3 3 3 3\n5 5 5 0 5 0 3 3 3 3\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 8 0 8\n9 9 9 0 0 0 8 8 0 0\n0 0 9 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n8 8 0 5 0 0 0 0 5 0\n8 8 0 5 5 5 5 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 68.0
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "8 8 0 0 5 5 5 5 5 5\n8 8 8 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 2 2 2 0\n5 5 5 5 5 0 0 0 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 20,
        "percent_correct": 80.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 88.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 20,
        "percent_correct": 80.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 88.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 20,
        "percent_correct": 80.0
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 0 0 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 0 0 5\n0 0 0 0 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n3 3 3 0 0 0 0 0 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n0 0 0 5 0 0 0 0 5 0\n0 0 0 5 5 5 5 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 68.0
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 85.0
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 3 5 0 6 6 0\n0 5 0 0 3 5 0 0 0 0\n0 5 3 3 3 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 9 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 3 3 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 26,
        "percent_correct": 74.0
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 20,
        "percent_correct": 80.0
      }
    ],
    "011-py_07-train": [],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 3 3 3 3 0 0 0 0\n0 3 0 0 3 3 0 6 6 0\n0 3 0 0 3 3 0 0 0 0\n0 3 3 3 3 3 0 0 0 0\n0 3 3 3 3 3 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 9 9 9 9 5\n0 8 8 0 0 9 9 0 0 9\n0 8 8 0 0 9 9 9 9 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 43,
        "percent_correct": 56.99999999999999
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 3 5 3 5 0 0 0 0 0\n3 0 0 0 3 0 9 9 9 9\n3 3 3 0 3 0 9 9 9 9\n3 3 3 3 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 9 5 5 9 5 0\n0 0 0 9 0 0 0 0 9 0\n6 6 0 9 0 0 0 0 9 0\n6 6 0 5 9 5 5 9 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 44,
        "percent_correct": 56.00000000000001
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 20,
        "percent_correct": 80.0
      }
    ],
    "013-py_09-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 3 3 3 3 0 0 0 0\n0 3 0 0 3 3 0 6 6 0\n0 3 0 0 3 3 0 0 0 0\n0 3 3 3 3 3 0 0 0 0\n0 3 3 3 3 3 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 9 9 9 9 5\n0 8 8 0 0 9 9 0 0 9\n0 8 8 0 0 9 9 9 9 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 43,
        "percent_correct": 56.99999999999999
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 3 5 3 5 0 0 0 0 0\n3 0 0 0 3 0 9 9 9 9\n3 3 3 0 3 0 9 9 9 9\n3 3 3 3 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 9 5 5 9 5 0\n0 0 0 9 0 0 0 0 9 0\n6 6 0 9 0 0 0 0 9 0\n6 6 0 5 9 5 5 9 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 44,
        "percent_correct": 56.00000000000001
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 20,
        "percent_correct": 80.0
      }
    ],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 3 3 3 3 0 0 0 0\n0 3 0 0 3 3 0 6 6 0\n0 3 0 0 3 3 0 0 0 0\n0 3 3 3 3 3 0 0 0 0\n0 3 3 3 3 3 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 9 9 9 9 5\n0 8 8 0 0 9 9 0 0 9\n0 8 8 0 0 9 9 9 9 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 43,
        "percent_correct": 56.99999999999999
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 3 5 3 5 0 0 0 0 0\n3 0 0 0 3 0 9 9 9 9\n3 3 3 0 3 0 9 9 9 9\n3 3 3 3 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 9 5 5 9 5 0\n0 0 0 9 0 0 0 0 9 0\n6 6 0 9 0 0 0 0 9 0\n6 6 0 5 9 5 5 9 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 44,
        "percent_correct": 56.00000000000001
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 20,
        "percent_correct": 80.0
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 0 0 5\n0 0 0 0 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 92.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 90.0
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 0 0 5\n0 0 0 0 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 92.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 90.0
      }
    ],
    "019-py_13-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 0 0 5\n0 0 0 0 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 92.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 90.0
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 8 8 0 0 5 5 0 0 5\n0 8 8 0 0 5 5 5 5 5",
        "expected_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 8 8 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 6 6 5\n0 0 0 0 0 5 5 5 5 5",
        "transformed_output": "7 0 0 0 0 0 0 0 7 7\n0 5 5 5 5 5 0 0 0 0\n0 5 0 0 5 5 0 6 6 0\n0 5 0 0 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 0 0\n0 5 5 5 5 5 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 5 5 5 5 5\n0 0 0 0 0 5 5 0 0 5\n0 0 0 0 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 92.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "expected_output": "5 5 5 5 5 0 0 0 0 0\n5 3 3 3 5 0 0 0 0 0\n5 5 5 3 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n0 0 0 0 0 0 6 6 0 0\n0 0 0 5 5 5 5 5 5 0\n0 0 0 5 9 9 9 9 5 0\n6 6 0 5 9 9 9 9 5 0\n6 6 0 5 5 5 5 5 5 0",
        "transformed_output": "5 5 5 5 5 0 0 0 0 0\n5 0 0 0 5 0 9 9 9 9\n5 5 5 0 5 0 9 9 9 9\n5 5 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 6 0 6\n3 3 3 0 0 0 6 6 0 0\n0 0 3 5 5 5 5 5 5 0\n0 0 0 5 0 0 0 0 5 0\n6 6 0 5 0 0 0 0 5 0\n6 6 0 5 5 5 5 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "2 2 0 0 5 5 5 5 5 5\n2 2 2 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 8 8 8 0\n5 5 5 5 5 0 0 0 8 8",
        "expected_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 8 8 8 5 5\n0 0 0 0 5 5 5 8 8 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 2 2 5 5 0 0 0 0 4\n5 2 2 2 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "transformed_output": "0 0 0 0 5 5 5 5 5 5\n0 0 0 0 5 0 0 0 5 5\n0 0 0 0 5 5 5 0 0 5\n0 4 4 0 5 5 5 5 5 5\n0 0 4 0 0 4 0 0 0 0\n5 5 5 5 5 0 0 4 4 0\n5 5 5 5 5 0 0 0 0 0\n5 0 0 5 5 0 0 0 0 4\n5 0 0 0 5 0 0 0 0 0\n5 5 5 5 5 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 90.0
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}