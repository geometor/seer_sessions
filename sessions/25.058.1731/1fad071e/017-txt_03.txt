import numpy as np

def count_2x2_blocks(input_grid):
    """Counts the number of 2x2 blocks of the same color."""
    count = {0: 0, 1: 0, 2: 0}
    rows, cols = input_grid.shape
    for i in range(rows - 1):
        for j in range(cols - 1):
            block = input_grid[i:i+2, j:j+2]
            if np.all(block == block[0, 0]):
                count[block[0,0]] += 1
    return count

def transform(input_grid):
    # Count the 2x2 blocks of the same color.
    counts = count_2x2_blocks(np.array(input_grid))

    # Create the output grid based on color counts.
    # Blue (1) counts will correspond to 1, others to 0
    output_values = []

    if counts[1] > 0:
      output_values = [1] * counts[1]
    
    if (counts[0] + counts[2]) > 0:
      output_values.append(0)

    # convert to numpy array

    output_grid = np.array(output_values, dtype=int).reshape(1,-1)

    return output_grid

def test():
    examples = [
        {
            "input": [[1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1]],
            "output": [[1, 1, 1]]
        },
        {
            "input": [[0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0]],
            "output": [[0]]
        },
        {
            "input": [[2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2, 2, 2]],
            "output": [[0]]
        },
        {
            "input": [[1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 1, 1, 1, 1], [1, 1, 1, 1, 0, 0, 0, 0]],
            "output": [[1, 1, 1]]
        }
    ]
    
    for i, example in enumerate(examples):
      input_grid = np.array(example['input'])
      output_grid = np.array(example['output'])
      
      counts = count_2x2_blocks(input_grid)
      
      predicted = transform(input_grid)

      print(f"Example {i+1}:")
      print(f"  Input:\n{input_grid}")
      print(f"  Expected Output:\n{output_grid}")
      print(f"  Predicted Output:\n{predicted}")
      print(f"  2x2 Block Counts: {counts}")
      print(f"  Match: {np.array_equal(output_grid, predicted)}")

      print("-" * 20)

test()