import numpy as np

# Define the example grids for task 5.
examples = [
    {
        "input": np.array([[0, 0, 3, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 3, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 3, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 4, 0, 0, 0, 0],
                           [0, 0, 0, 4, 4, 4, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0]]),
        "output": np.array([[0, 0, 4, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 4, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 4, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 7, 0, 0, 0, 0],
                            [0, 0, 0, 4, 4, 4, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0]])
    },
    {
        "input": np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [4, 4, 0, 0, 0, 0, 0, 4, 4],
                           [4, 4, 0, 0, 0, 0, 0, 4, 4],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0]]),
        "output": np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [7, 7, 0, 0, 0, 0, 0, 7, 7],
                            [4, 4, 0, 0, 0, 0, 0, 4, 4],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0]])
    },
    {
        "input": np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 4, 4, 4, 4, 4, 4, 4, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0]]),
        "output": np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 7, 7, 7, 7, 7, 7, 7, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0],
                            [0, 0, 0, 0, 0, 0, 0, 0, 0]])
    }
]

def transform(input_grid):
    """
    Transforms the input grid according to the specified rules.
    """
    output_grid = np.copy(input_grid)  # Initialize output grid as a copy of the input
    rows = output_grid.shape[0]
    cols = output_grid.shape[1]

    for i in range(rows):
        for j in range(cols):
            # Change green (3) to yellow (4)
            if output_grid[i, j] == 3:
                output_grid[i, j] = 4
            #change yellow(4) to orange (7) on 6th row, index 5
            if output_grid[i,j] == 4 and i == 5:
                output_grid[i,j] = 7

    return output_grid

results = []

for i, example in enumerate(examples):
  expected = example["output"]
  observed = transform(example["input"])
  diff = expected - observed
  results.append(
      {
          "example": i,
          "diff": diff,
          "same": np.array_equal(observed, expected)
      }
  )
print(results)