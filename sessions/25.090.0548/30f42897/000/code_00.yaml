task_description: Identify a single non-background object in the input grid and add new shapes of the same color to the grid based on the object's dimensions and type (vertical line or rectangle).

examples:
  - id: train_1
    input:
      grid_size: [7, 10]
      background_color: 8 # Azure
      objects:
        - id: obj1
          color: 2 # Red
          shape: vertical_line
          pixels: [[1, 9], [2, 9], [3, 9], [4, 9], [5, 9]]
          bounding_box: { top: 1, left: 9, height: 5, width: 1 }
    output:
      grid_size: [7, 10]
      background_color: 8 # Azure
      objects:
        - id: obj1 # Original object
          color: 2 # Red
          shape: vertical_line
          pixels: [[1, 9], [2, 9], [3, 9], [4, 9], [5, 9]]
        - id: added1
          color: 2 # Red
          shape: horizontal_line
          pixels: [[0, 0], [0, 1], [0, 2], [0, 3], [0, 4]] # Length 5 (H)
          position: top-left
        - id: added2
          color: 2 # Red
          shape: horizontal_line
          pixels: [[6, 0], [6, 1], [6, 2], [6, 3], [6, 4]] # Length 5 (H)
          position: bottom-left
    transformation_rule_applied: vertical_line_h5

  - id: train_2
    input:
      grid_size: [4, 10]
      background_color: 8 # Azure
      objects:
        - id: obj1
          color: 9 # Maroon
          shape: rectangle
          pixels: [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2]]
          bounding_box: { top: 0, left: 0, height: 2, width: 3 }
    output:
      grid_size: [4, 10]
      background_color: 8 # Azure
      objects:
        - id: obj1 # Original object
          color: 9 # Maroon
          shape: rectangle
          pixels: [[0, 0], [0, 1], [0, 2], [1, 0], [1, 1], [1, 2]]
        - id: added1 # Copy of obj1
          color: 9 # Maroon
          shape: rectangle
          pixels: [[0, 7], [0, 8], [0, 9], [1, 7], [1, 8], [1, 9]] # Size 2x3 (HxW)
          position: top-right
        - id: added2
          color: 9 # Maroon
          shape: horizontal_line
          pixels: [[3, 3], [3, 4], [3, 5], [3, 6]] # Length 4 (W+1)
          position: bottom-center
    transformation_rule_applied: rectangle

  - id: train_3
    input:
      grid_size: [7, 9]
      background_color: 8 # Azure
      objects:
        - id: obj1
          color: 4 # Yellow
          shape: vertical_line
          pixels: [[2, 0], [3, 0]]
          bounding_box: { top: 2, left: 0, height: 2, width: 1 }
    output:
      grid_size: [7, 9]
      background_color: 8 # Azure
      objects:
        - id: obj1 # Original object
          color: 4 # Yellow
          shape: vertical_line
          pixels: [[2, 0], [3, 0]]
        # Added shapes (all length H=2)
        - id: added_h1
          color: 4 # Yellow
          shape: horizontal_line
          pixels: [[0, 1], [0, 2]]
        - id: added_h2
          color: 4 # Yellow
          shape: horizontal_line
          pixels: [[0, 5], [0, 6]]
        - id: added_v1
          color: 4 # Yellow
          shape: vertical_line
          pixels: [[1, 8], [2, 8]]
        - id: added_v2
          color: 4 # Yellow
          shape: vertical_line
          pixels: [[5, 8], [6, 8]]
        - id: added_h3
          color: 4 # Yellow
          shape: horizontal_line
          pixels: [[6, 0], [6, 1]]
        - id: added_h4
          color: 4 # Yellow
          shape: horizontal_line
          pixels: [[6, 4], [6, 5]]
    transformation_rule_applied: vertical_line_h2

common_properties:
  background_color: 8 # Azure seems consistent as background
  object_count: Exactly one non-background object in input.
  action: Add shapes based on original object's properties (color, H, W).
  color_rule: Added shapes use the same color as the original object.
  original_object_persistence: The original object remains in the output grid.

relationships:
  - The type and placement of added shapes depend on the original object's shape category (vertical line vs. rectangle) and dimensions (H, W).
  - For vertical lines, the specific rule seems to vary based on height H (compare H=5 vs H=2).
  - For rectangles, a copy is added top-right, and a line of length W+1 is added bottom-center.
  - Added shapes are typically lines whose length is derived from the original object's height (H) or width (W), or are direct copies.