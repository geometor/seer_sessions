task_context:
  grid_transformation: true
  output_grid_properties:
    size_relation: Double height and double width compared to the input grid.
    structure: 2x2 tiling of a derived 'base_tile'.
base_tile_derivation:
  source: Input grid.
  dimensions: Same as input grid.
  pixel_mapping:
    - condition: Input pixel is non-white.
      action: Copy the input pixel's color to the corresponding position in the base_tile.
    - condition: Input pixel is white (0).
      action:
        - check: Does the input grid's row containing this pixel OR the input grid's column containing this pixel have any non-white pixels?
        - result_true: Set the corresponding base_tile pixel to azure (8).
        - result_false: Keep the corresponding base_tile pixel as white (0).
final_output_construction:
  method: Tiling.
  pattern: Repeat the derived base_tile grid 2 times horizontally and 2 times vertically.
  result_dimensions: 2 * input_height x 2 * input_width.
identified_objects:
  - background: White pixels (0).
  - foreground: Non-white pixels (variable colors). Their position dictates the transformation.
  - derived: Azure pixels (8), created based on the position of foreground pixels.
relationships:
  - Row/Column Containment: The key relationship is whether a given row or column in the input contains any non-white pixels. This determines the fate of white pixels in that row/column during the base tile creation.