Task: Rearrange horizontal colored lines by length, stacking them right-aligned above a fixed base.

Input_Features:
  - Grid: 2D array of integers (colors) with width W and height H.
  - Background_Color: White (0).
  - Base_Object:
      - Identifier: A horizontal line of Azure (8) pixels, typically full width.
      - Position: Usually occupies the bottom-most row (row H-1).
      - Behavior: Fixed; remains unchanged in the output at its original position. If absent, the effective base for stacking is the bottom edge of the grid.
  - Movable_Objects:
      - Identifier: Horizontal contiguous lines of a single color.
      - Exclusions: White (0) background pixels and Azure (8) base pixels.
      - Properties:
          - color: The integer value (1-7, 9).
          - length: The number of pixels (width) of the line.
          - original_row: Row index in the input grid.
          - original_col_start: Starting column index in the input grid.
          - original_col_end: Ending column index in the input grid.

Transformation:
  - Action: Collect, sort, and stack Movable_Objects vertically above the Base_Object (or grid bottom), applying right-alignment.
  - Process:
      1. Identify the Base_Object (Azure line) and its row index (`base_row`). If no base object exists, `base_row` is conceptually H.
      2. Identify all Movable_Objects and their properties (color, length, original_row, original_col_start, original_col_end).
      3. Sort the Movable_Objects:
          - Primary key: By `length` in descending order.
          - Secondary key: By `original_row` in ascending order (topmost first in case of length tie).
      4. Create an output grid of the same dimensions (W x H) as the input, initialized to White (0).
      5. If a Base_Object exists, copy it to the output grid at `base_row`.
      6. Initialize the `current_stack_row` to `base_row - 1`.
      7. Iterate through the sorted Movable_Objects:
          a. Calculate the target horizontal position for right-alignment:
             - `target_col_start = W - length`
             - `target_col_end = W - 1`
          b. Place the current object's `color` into the output grid at `current_stack_row`, spanning columns from `target_col_start` to `target_col_end`.
          c. Decrement `current_stack_row` by 1.

Output_Features:
  - Grid: Same dimensions (W x H) as input.
  - Base_Object: Azure line (if present in input) in the same bottom row position.
  - Stacked_Objects: The Movable_Objects from the input, stacked vertically above the Base_Object (or bottom edge).
      - Vertical Order: Determined by the sort (longest first, then topmost original position).
      - Horizontal Position: Each object is right-aligned within the grid width.
  - Background: Remaining grid cells are White (0).

Relationships:
  - The final vertical position of a Movable_Object depends on its length and original row relative to other Movable_Objects.
  - The final horizontal position depends *only* on the object's length and the grid width (right-aligned). Original horizontal position is ignored for placement.
  - All Movable_Objects are stacked contiguously above the fixed Base_Object or grid bottom.