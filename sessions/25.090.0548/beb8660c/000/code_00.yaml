Task: Rearrange horizontal colored lines based on length.

Input_Features:
  - Grid: 2D array of integers (colors).
  - Objects:
      - Type: Horizontal contiguous lines of a single color.
      - Exclusions: White (0) background pixels are not objects. Azure (8) pixels form a special base object.
  - Base_Object:
      - Color: Azure (8).
      - Shape: Always a full-width horizontal line.
      - Position: Always occupies the bottom-most row.
      - Behavior: Fixed; remains unchanged in the output.
  - Movable_Objects:
      - Colors: Any color except White (0) and Azure (8).
      - Shape: Horizontal lines of varying lengths (>= 1 pixel).
      - Properties:
          - color: The integer value (1-7, 9).
          - length: The number of pixels in the line.
          - position: Original row and column indices in the input.

Transformation:
  - Action: Vertical rearrangement and stacking of Movable_Objects above the Base_Object.
  - Process:
      1. Identify all Movable_Objects and their properties (color, length, original position).
      2. Identify the Base_Object (Azure line) and its row index.
      3. Sort the Movable_Objects primarily by length in descending order.
      4. Use the original relative vertical order (topmost first) as a secondary sort key for objects with equal length (although examples suggest bottom-most first might be the tie-breaker - let's stick to the observed Ex1: Red was above Green, Red is placed first -> bottom-most first). Let's re-check Ex1: Input Red(row 2), Green(row 4). Output Red(row 5), Green(row 4). Red is lower. So, original *lower* object comes first in sort tiebreak.
      5. Create an output grid of the same dimensions as the input, initialized to White (0).
      6. Place the fixed Base_Object (Azure line) in the output grid at its original position.
      7. Initialize the 'current stacking row' to the row directly above the Base_Object.
      8. Iterate through the sorted Movable_Objects (longest first):
          a. Place the current object in the 'current stacking row', maintaining its original column indices.
          b. Decrement the 'current stacking row' by 1 for the next object.

Output_Features:
  - Grid: Same dimensions as input.
  - Base_Object: Azure line in the same bottom row position.
  - Stacked_Objects: The Movable_Objects from the input, stacked vertically above the Base_Object according to the length-sorted order, preserving original horizontal positions.
  - Background: Remaining grid cells are White (0).

Relationships:
  - The final vertical position of a Movable_Object depends on its length relative to other Movable_Objects.
  - The horizontal position of each Movable_Object is preserved from input to output.
  - All Movable_Objects are stacked contiguously above the fixed Base_Object.