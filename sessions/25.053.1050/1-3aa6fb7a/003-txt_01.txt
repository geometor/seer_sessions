import numpy as np

def analyze_example(input_grid, expected_output, transformed_output):
    azure_pixels_input = np.argwhere(input_grid == 8)
    changed_pixels = np.argwhere(expected_output != input_grid)
    
    print(f"Azure Pixels (Input):\n{azure_pixels_input}")
    print(f"Changed Pixels (Expected Output):\n{changed_pixels}")
    
    if azure_pixels_input.size > 0:
        sorted_by_row_then_col = azure_pixels_input[np.lexsort((azure_pixels_input[:, 1], azure_pixels_input[:, 0]))]
        sorted_by_col_then_row = azure_pixels_input[np.lexsort((azure_pixels_input[:, 0], azure_pixels_input[:, 1]))]
        print(f"Sorted by Row then Column:\n{sorted_by_row_then_col}")
        print(f"Sorted by Column then Row:\n{sorted_by_col_then_row}")

    diff_pixels = np.argwhere(transformed_output != expected_output)
    print(f"Pixels that differ between transformed and expected:\n{diff_pixels}")
    
# Example Data (replace with actual data from the problem)
input_grid_1 = np.array([
    [0, 0, 0, 0, 0, 0, 0],
    [0, 8, 0, 0, 0, 0, 0],
    [0, 8, 8, 0, 0, 0, 0],
    [0, 0, 0, 0, 8, 8, 0],
    [0, 0, 0, 0, 0, 8, 0],
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0]
])
expected_output_1 = np.array([
    [0, 0, 0, 0, 0, 0, 0],
    [0, 8, 1, 0, 0, 0, 0],
    [0, 8, 8, 0, 0, 0, 0],
    [0, 0, 0, 0, 8, 8, 0],
    [0, 0, 0, 0, 1, 8, 0],
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0]
])
transformed_output_1 = np.array([
    [0, 0, 0, 0, 0, 0, 0],
    [0, 8, 0, 0, 0, 0, 0],
    [0, 1, 8, 0, 0, 0, 0],
    [0, 0, 0, 0, 8, 8, 0],
    [0, 0, 0, 0, 0, 8, 0],
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0]
])

input_grid_2 = np.array([
    [0, 0, 0, 0, 8, 8, 0],
    [0, 0, 0, 0, 0, 8, 0],
    [0, 0, 8, 0, 0, 0, 0],
    [0, 0, 8, 8, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 8, 0, 0],
    [0, 0, 0, 8, 8, 0, 0]
])
expected_output_2 = np.array([
    [0, 0, 0, 0, 8, 8, 0],
    [0, 0, 0, 0, 1, 8, 0],
    [0, 0, 8, 1, 0, 0, 0],
    [0, 0, 8, 8, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 1, 8, 0, 0],
    [0, 0, 0, 8, 8, 0, 0]
])
transformed_output_2 = np.array([
    [0, 0, 0, 0, 8, 8, 0],
    [0, 0, 0, 0, 0, 8, 0],
    [0, 0, 8, 0, 0, 0, 0],
    [0, 0, 1, 8, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 8, 0, 0],
    [0, 0, 0, 8, 8, 0, 0]
])


print("Analysis of Example 1:")
analyze_example(input_grid_1, expected_output_1, transformed_output_1)
print("\nAnalysis of Example 2:")
analyze_example(input_grid_2, expected_output_2, transformed_output_2)
