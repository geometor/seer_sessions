    0 4 0 9
    0 0 0 0
    0 4 6 0
    1 0 0 0
    ```
*   **Expected Output:**
    ```
    0 0 0 0
    0 0 0 0
    0 4 0 0
    1 4 6 9
    ```
*   **Observations:**
    *   Yellow (4) in the first row moves down to the last row where there is already a non-zero pixel in that column or below
    *   Maroon (9) in the first row moves to the last row.
    *   Yellow (4) in the third row stays in the same column.
    *   Magenta (6) in the third row moves to the last row.
    *   Blue(1) in the fourth row stays.

**Example 2:**

*   **Input:**
    ```
    0 0 0 0 0 9
    0 0 0 8 0 0
    0 0 0 0 0 0
    4 0 0 0 0 0
    4 0 7 8 0 0
    4 0 7 0 0 0
    ```
*   **Expected Output:**
    ```
    0 0 0 0 0 0
    0 0 0 0 0 0
    0 0 0 0 0 0
    4 0 0 0 0 0
    4 0 7 8 0 0
    4 0 7 8 0 9
    ```

*   **Observations:**
    *   Many pixels maintain their row.
    *   Maroon (9) in the top row now moves to the last row and the last column
    *    Blue (8) in the second row (col 3) moves down to row 5 (same col)
    *    Orange (7) in row 4 (col 2) stay in same row/col
    *   Yellow (4) in last row stays, and the next two remain

**Example 3:**

*   **Input:**
    ```
    0 0 0 1 0
    0 3 0 0 0
    0 3 0 1 2
    6 0 0 0 0
    0 3 0 0 0
    ```
*   **Expected Output:**
    ```
    0 0 0 0 0
    0 0 0 0 0
    0 3 0 0 0
    0 3 0 1 0
    6 3 0 1 2
    ```
*    **Observations:**
    *  Blue(1) at (0,3) moved down to (3,3), maintaining column
    *  Green(3) at (1,1) moved down to (2,1), maintaining column
    *  Green (3) at (2, 1) stays
    *  Blue (1) and red (2) on row 2, move to last row, last two columns
    * Gray(6) at (3,0) moved to (4,0)

**YAML Facts:**
