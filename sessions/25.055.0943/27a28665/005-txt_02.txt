import numpy as np

def get_grid_metrics(grid):
    grid = np.array(grid)
    unique_colors = np.unique(grid)
    num_unique_colors = len(unique_colors)
    height, width = grid.shape
    metrics = {
        'height': height,
        'width': width,
        'unique_colors': unique_colors.tolist(),
        'num_unique_colors': num_unique_colors,
        'has_gray': 5 in unique_colors
    }
    return metrics

examples = [
    {
        'input': [[5, 1, 5], [5, 5, 5], [5, 5, 5]],
        'output': [[1]]
    },
    {
        'input': [[1, 5, 5, 5, 5], [5, 5, 1, 5, 5], [5, 5, 5, 5, 1]],
        'output': [[1]]
    },
        {
        'input': [[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]],
        'output': [[0]]
    },
        {
       'input':  [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                  [0, 5, 5, 5, 5, 5, 5, 5, 5, 0],
                  [0, 5, 0, 0, 0, 0, 0, 0, 5, 0],
                  [0, 5, 0, 0, 0, 0, 0, 0, 5, 0],
                  [0, 5, 0, 0, 0, 0, 0, 0, 5, 0],
                  [0, 5, 0, 0, 0, 0, 0, 0, 5, 0],
                  [0, 5, 0, 0, 0, 0, 0, 0, 5, 0],
                  [0, 5, 0, 0, 0, 0, 0, 0, 5, 0],
                  [0, 5, 5, 5, 5, 5, 5, 5, 5, 0],
                  [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]],
        'output': [[1]]
    },
            {
        'input': [[1, 1, 1, 1, 1, 1, 1, 1, 1],
                  [1, 1, 1, 1, 1, 1, 1, 1, 1],
                  [1, 1, 1, 1, 1, 1, 1, 1, 1],
                  [1, 1, 1, 1, 1, 1, 1, 1, 1],
                  [1, 1, 1, 1, 1, 1, 1, 1, 1]],
        'output': [[0]]
    }
]

for i, example in enumerate(examples):
    input_metrics = get_grid_metrics(example['input'])
    output_metrics = get_grid_metrics(example['output'])
    print(f"Example {i+1}:")
    print(f"  Input: {input_metrics}")
    print(f"  Output: {output_metrics}")
    print("-" * 20)