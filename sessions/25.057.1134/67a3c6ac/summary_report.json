{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1781,
        "candidates": 312,
        "total": 2093,
        "cached": 0
      },
      "response_time": 6.47253
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 1956,
        "candidates": 136,
        "total": 2092,
        "cached": 0
      },
      "response_time": 2.199578
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1389,
        "candidates": 1569,
        "total": 2958,
        "cached": 0
      },
      "response_time": 17.482116
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 1399,
        "total": 3276,
        "cached": 0
      },
      "response_time": 36.399906
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 3071,
        "candidates": 461,
        "total": 3532,
        "cached": 0
      },
      "response_time": 5.146731
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2755,
        "candidates": 226,
        "total": 2981,
        "cached": 0
      },
      "response_time": 3.027559
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 345,
        "total": 2258,
        "cached": 0
      },
      "response_time": 5.867549
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2120,
        "candidates": 286,
        "total": 2406,
        "cached": 0
      },
      "response_time": 3.633274
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1539,
        "candidates": 1378,
        "total": 2917,
        "cached": 0
      },
      "response_time": 13.680713
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2169,
        "candidates": 2195,
        "total": 4364,
        "cached": 0
      },
      "response_time": 20.828877
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 4161,
        "candidates": 179,
        "total": 4340,
        "cached": 0
      },
      "response_time": 2.499187
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2715,
        "candidates": 168,
        "total": 2883,
        "cached": 0
      },
      "response_time": 2.225749
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 388,
        "total": 2249,
        "cached": 0
      },
      "response_time": 6.906949
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2111,
        "candidates": 210,
        "total": 2321,
        "cached": 0
      },
      "response_time": 3.120373
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1463,
        "candidates": 839,
        "total": 2302,
        "cached": 0
      },
      "response_time": 9.082035
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2097,
        "candidates": 369,
        "total": 2466,
        "cached": 0
      },
      "response_time": 22.706055
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1620,
        "candidates": 2068,
        "total": 3688,
        "cached": 0
      },
      "response_time": 19.59159
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3483,
        "candidates": 316,
        "total": 3799,
        "cached": 0
      },
      "response_time": 3.541118
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "1 7 6 6\n7 2 1 6\n2 7 6 6\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "6 6 7 2 7 6 7\n2 6 2 2 7 7 7\n6 6 7 7 2 1 7\n6 2 1 7 1 1 6\n6 2 2 7 2 7 6\n6 1 7 2 6 7 6\n6 1 2 2 6 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "2 2 1 2 2 1\n1 7 2 1 1 2\n6 1 1 2 7 7\n2 2 7 6 7 1\n7 7 6 2 2 1\n7 1 2 1 6 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 33.33333333333333
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "6 6 7 1\n6 1 2 7\n6 6 7 2\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "7 6 7 2 7 6 6\n7 7 7 2 2 6 2\n7 1 2 7 7 6 6\n6 1 1 7 1 2 6\n6 7 2 7 2 2 6\n6 7 6 2 7 1 6\n2 1 6 2 2 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 35,
        "percent_correct": 28.57142857142857
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 2 2 1 2 2\n2 1 1 2 7 1\n7 7 2 1 1 6\n1 7 6 7 2 2\n1 2 2 6 7 7\n1 6 1 2 1 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 28,
        "percent_correct": 42.857142857142854
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 30,
        "percent_correct": 16.666666666666664
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "6 6 7 1\n6 1 2 7\n6 6 7 2\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "7 6 7 2 7 6 6\n7 7 7 2 2 6 2\n7 1 2 7 7 6 6\n6 1 1 7 1 2 6\n6 7 2 7 2 2 6\n6 7 6 2 7 1 6\n2 1 6 2 2 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 35,
        "percent_correct": 28.57142857142857
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 2 2 1 2 2\n2 1 1 2 7 1\n7 7 2 1 1 6\n1 7 6 7 2 2\n1 2 2 6 7 7\n1 6 1 2 1 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      }
    ],
    "009-py_06-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "010-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_08-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "6 6 7 1\n6 1 2 7\n6 6 7 2\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "7 6 7 2 7 6 6\n7 7 7 2 2 6 2\n7 1 2 7 7 6 6\n6 1 1 7 1 2 6\n6 7 2 7 2 2 6\n6 7 6 2 7 1 6\n2 1 6 2 2 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 35,
        "percent_correct": 28.57142857142857
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 2 2 1 2 2\n2 1 1 2 7 1\n7 7 2 1 1 6\n1 7 6 7 2 2\n1 2 2 6 7 7\n1 6 1 2 1 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      }
    ],
    "012-py_09-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "6 6 7 1\n6 1 2 7\n6 6 7 2\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "7 6 7 2 7 6 6\n7 7 7 2 2 6 2\n7 1 2 7 7 6 6\n6 1 1 7 1 2 6\n6 7 2 7 2 2 6\n6 7 6 2 7 1 6\n2 1 6 2 2 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 35,
        "percent_correct": 28.57142857142857
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 2 2 1 2 2\n2 1 1 2 7 1\n7 7 2 1 1 6\n1 7 6 7 2 2\n1 2 2 6 7 7\n1 6 1 2 1 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      }
    ],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "6 6 7 1\n6 1 2 7\n6 6 7 2\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "7 6 7 2 7 6 6\n7 7 7 2 2 6 2\n7 1 2 7 7 6 6\n6 1 1 7 1 2 6\n6 7 2 7 2 2 6\n6 7 6 2 7 1 6\n2 1 6 2 2 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 35,
        "percent_correct": 28.57142857142857
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 2 2 1 2 2\n2 1 1 2 7 1\n7 7 2 1 1 6\n1 7 6 7 2 2\n1 2 2 6 7 7\n1 6 1 2 1 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 28,
        "percent_correct": 42.857142857142854
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 30,
        "percent_correct": 16.666666666666664
      }
    ],
    "017-py_12-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 28,
        "percent_correct": 42.857142857142854
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 30,
        "percent_correct": 16.666666666666664
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}