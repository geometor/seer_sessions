"""
The transformation rule involves doubling the dimensions of the input grid and creating a mirrored pattern in the output grid. The input grid essentially forms the top-left quadrant of the output grid, and the remaining quadrants are generated by horizontal and vertical reflections of the top-left quadrant.
"""

import numpy as np

def transform(input_grid):
    # Get input grid dimensions
    input_height, input_width = input_grid.shape

    # Initialize output grid with double the dimensions
    output_height = input_height * 2
    output_width = input_width * 2
    output_grid = np.zeros((output_height, output_width), dtype=int)

    # Copy the input grid to the top-left quadrant of the output grid
    output_grid[:input_height, :input_width] = input_grid

    # Horizontal reflection (Top-Right Quadrant)
    output_grid[:input_height, input_width:] = np.fliplr(input_grid)

    # Vertical reflection (Bottom-Left Quadrant)
    output_grid[input_height:, :input_width] = np.flipud(input_grid)

    # Diagonal reflection (Bottom-Right Quadrant)
    output_grid[input_height:, input_width:] = np.flipud(np.fliplr(input_grid))
    
    return output_grid