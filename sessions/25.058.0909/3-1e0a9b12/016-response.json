{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nStacks non-zero pixels in each column at the bottom of the grid, preserving their original vertical order within the column.\n\"\"\"\n\nimport numpy as np\n\ndef get_nonzero_cells_by_column(grid):\n    \"\"\"Finds and returns non-zero cells, grouped by column and sorted by row within each column.\"\"\"\n    columns = {}\n    for c in range(grid.shape[1]):\n        columns[c] = []\n        for r in range(grid.shape[0]):\n            if grid[r, c] != 0:\n                columns[c].append((r, c, grid[r, c]))\n    return columns\n\ndef transform(input_grid):\n    # Initialize output grid with zeros (white)\n    output_grid = np.zeros_like(input_grid)\n\n    # Get non-zero cells grouped by column and sorted by original row.\n    nonzero_cells_by_column = get_nonzero_cells_by_column(input_grid)\n\n    # Iterate through each column.\n    for col, cells in nonzero_cells_by_column.items():\n        # Start placing cells from the bottom row.\n        current_row = input_grid.shape[0] - 1\n        # Place each cell in the column, moving upwards.\n        for _, _, value in reversed(cells):  # Reverse to stack from bottom\n            output_grid[current_row, col] = value\n            current_row -= 1 # move to the row above\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 6835,
    "candidates_token_count": 343,
    "total_token_count": 7178,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.542947,
  "response_file": "016-response.json"
}