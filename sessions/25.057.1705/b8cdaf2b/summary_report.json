{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 506,
        "total": 2259,
        "cached": 0
      },
      "response_time": 8.547059
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2121,
        "candidates": 426,
        "total": 2547,
        "cached": 0
      },
      "response_time": 4.239187
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1677,
        "candidates": 3493,
        "total": 5170,
        "cached": 0
      },
      "response_time": 33.520309
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3873,
        "candidates": 1029,
        "total": 4902,
        "cached": 0
      },
      "response_time": 11.589257
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 4695,
        "candidates": 393,
        "total": 5088,
        "cached": 0
      },
      "response_time": 4.032583
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4950,
        "candidates": 360,
        "total": 5310,
        "cached": 0
      },
      "response_time": 4.860748
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 567,
        "total": 2384,
        "cached": 0
      },
      "response_time": 8.528206
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2246,
        "candidates": 426,
        "total": 2672,
        "cached": 0
      },
      "response_time": 5.528657
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1677,
        "candidates": 2620,
        "total": 4297,
        "cached": 0
      },
      "response_time": 20.642942
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 1694,
        "candidates": 1898,
        "total": 3592,
        "cached": 0
      },
      "response_time": 20.208927
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 3388,
        "candidates": 744,
        "total": 4132,
        "cached": 0
      },
      "response_time": 7.311911
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4092,
        "candidates": 429,
        "total": 4521,
        "cached": 0
      },
      "response_time": 6.128892
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 524,
        "total": 2341,
        "cached": 0
      },
      "response_time": 6.466801
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2203,
        "candidates": 246,
        "total": 2449,
        "cached": 0
      },
      "response_time": 3.628506
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1497,
        "candidates": 1849,
        "total": 3346,
        "cached": 0
      },
      "response_time": 20.926494
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2256,
        "candidates": 693,
        "total": 2949,
        "cached": 0
      },
      "response_time": 10.145918
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2745,
        "candidates": 242,
        "total": 2987,
        "cached": 0
      },
      "response_time": 3.440185
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3149,
        "candidates": 395,
        "total": 3544,
        "cached": 0
      },
      "response_time": 4.540571
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 433,
        "total": 2346,
        "cached": 0
      },
      "response_time": 10.458932
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2208,
        "candidates": 418,
        "total": 2626,
        "cached": 0
      },
      "response_time": 4.24106
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1669,
        "candidates": 873,
        "total": 2542,
        "cached": 0
      },
      "response_time": 11.54378
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2338,
        "candidates": 488,
        "total": 2826,
        "cached": 0
      },
      "response_time": 10.94507
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1739,
        "candidates": 1128,
        "total": 2867,
        "cached": 0
      },
      "response_time": 13.998489
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 2662,
        "candidates": 557,
        "total": 3219,
        "cached": 0
      },
      "response_time": 5.189387
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "4 4 4\n0 2 0\n2 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 84.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 92.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "4 4 4 4 4 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 77.55102040816327
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "4 4 4\n0 2 0\n2 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "3 3 3 3 3\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 64.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "1 1 1 1 1\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 72.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "4 4 4 4 4 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 77.55102040816327
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "4 4 4\n0 2 0\n2 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "4 4 4 4 4\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 64.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "4 4 4 4 4\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 72.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "4 4 4 4 4 4 4\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 77.55102040816327
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "0 0 0\n3 0 3\n0 3 0\n0 2 0\n2 4 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 6 6 6 0\n6 1 1 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 76.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "0 0 0 0 0 0 0\n3 0 0 0 0 0 3\n0 3 0 0 0 3 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "009-py_06-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "009-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "009-py_08-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "010-py_09-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "",
        "match": "ERROR: index 9 is out of bounds for axis 1 with size 3",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "",
        "match": "ERROR: index 9 is out of bounds for axis 1 with size 5",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "",
        "match": "ERROR: index 9 is out of bounds for axis 1 with size 5",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "",
        "match": "ERROR: index 9 is out of bounds for axis 1 with size 7",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "3 0 3\n0 2 0\n2 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "3 0 0 0 3\n0 3 0 3 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 68.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "3 0 0 0 3\n0 3 0 3 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 76.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "3 0 0 0 0 0 3\n0 3 0 0 0 3 0\n0 0 3 0 3 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 79.59183673469387
      }
    ],
    "014-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "0 0 0\n0 2 0\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 0 8 0 0\n8 8 3 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n1 0 0 0 0 0 1\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 87.75510204081633
      }
    ],
    "015-py_13-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "017-py_14-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "1 0 1\n0 2 0\n2 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "1 0 0 0 1\n1 0 0 0 1\n1 0 0 0 1\n0 0 8 0 0\n8 8 3 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 68.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "1 0 0 0 1\n1 0 0 0 1\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 84.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "1 0 0 0 0 0 1\n1 0 0 0 0 0 1\n1 0 0 0 0 0 1\n1 0 0 0 0 0 1\n1 0 0 0 0 0 1\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 75.51020408163265
      }
    ],
    "018-py_15-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "0 0 0\n0 2 0\n2 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "1 0 0 0 1\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "1 0 0 0 1\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 84.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 91.83673469387756
      }
    ],
    "020-py_16-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "0 4 0\n0 2 0\n2 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 84.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 92.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 4 4 4 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 85.71428571428571
      }
    ],
    "022-py_17-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "0 4 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 60.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 4 4 4 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 65.3061224489796
      }
    ],
    "024-py_18-train": [
      {
        "example": 1,
        "input": "0 0 0\n0 2 0\n2 4 2",
        "expected_output": "4 0 4\n0 2 0\n2 4 2",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 8 0 0\n8 8 3 8 8",
        "expected_output": "0 0 0 0 0\n3 0 0 0 3\n0 3 0 3 0\n0 0 8 0 0\n8 8 3 8 8",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 60.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 6 6 6 0\n6 1 1 1 6",
        "expected_output": "0 0 0 0 0\n0 0 0 0 0\n1 0 0 0 1\n0 6 6 6 0\n6 1 1 1 6",
        "transformed_output": "0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 4\n0 4 0 0 0 4 0\n0 0 2 2 2 0 0\n2 2 4 4 4 2 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 71.42857142857143
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 4
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}