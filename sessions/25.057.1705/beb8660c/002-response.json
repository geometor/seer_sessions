{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nTransforms the input grid by rearranging horizontal bars of colors. The bars are sorted by their original row position and then placed in the output grid, right-aligned.\n\"\"\"\n\nimport numpy as np\n\ndef find_bars(grid):\n    \"\"\"Finds all horizontal bars in the grid.\"\"\"\n    bars = []\n    for row_index, row in enumerate(grid):\n        col_index = 0\n        while col_index < len(row):\n            if row[col_index] != 0:\n                color = row[col_index]\n                start_col = col_index\n                length = 0\n                while col_index < len(row) and row[col_index] == color:\n                    length += 1\n                    col_index += 1\n                bars.append({'color': color, 'length': length, 'row': row_index, 'start_col': start_col})\n            else:\n                col_index += 1\n    return bars\n\ndef transform(input_grid):\n    # Initialize output grid\n    output_grid = np.zeros_like(input_grid)\n    grid_height, grid_width = input_grid.shape\n\n    # Find all horizontal bars\n    bars = find_bars(input_grid)\n\n    # Sort bars by row index\n    bars.sort(key=lambda bar: bar['row'])\n\n    # Place bars in the output grid\n    output_row = grid_height - len(bars)\n\n    for bar in bars:\n        start_col = grid_width - bar['length']\n        output_grid[output_row, start_col:start_col + bar['length']] = bar['color']\n        output_row += 1\n\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2354,
    "candidates_token_count": 395,
    "total_token_count": 2749,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.470894,
  "response_file": "002-response.json"
}