import numpy as np

def describe_grid(grid, grid_name):
    """Describes the contents of a grid."""

    print(f"Grid: {grid_name}")
    white_pixels = np.where(grid == 0)
    if len(white_pixels[0]) > 0:
        print(f"  White Pixels: {list(zip(white_pixels[0], white_pixels[1]))}")
    else:
        print("  White Pixels: None")
    maroon_pixels = np.where(grid == 9)
    if len(maroon_pixels[0]) > 0:
      print(f"  Maroon Pixels: {list(zip(maroon_pixels[0], maroon_pixels[1]))}")
    else:
      print("  Maroon Pixels: None")

    print(f"{grid_name} shape: {grid.shape}")


# input and output grid values from prompt history
example_grids = {
    "example_0_input": np.array([[9, 9, 0], [9, 9, 0], [9, 9, 9]]),
    "example_0_output": np.array([[0, 9, 9], [0, 9, 9], [9, 9, 9]]),
    "example_1_input": np.array([[9, 9, 9], [9, 9, 0], [9, 9, 0]]),
    "example_1_output": np.array([[0, 9, 9], [0, 9, 9], [9, 9, 9]]),
    "example_2_input": np.array([[9, 9, 0], [9, 9, 0], [9, 9, 9]]),
    "example_2_output": np.array([[0, 9, 9], [0, 9, 9], [9, 9, 9]]),
    "example_3_input": np.array([[0, 9, 9], [0, 9, 9], [9, 9, 9]]),
    "example_3_output": np.array([[0, 9, 9], [0, 9, 9], [9, 9, 9]]),
}

for grid_name, grid in example_grids.items():
    describe_grid(grid, grid_name)
