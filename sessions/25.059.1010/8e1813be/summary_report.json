{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4249,
        "candidates": 495,
        "total": 4744,
        "cached": 0
      },
      "response_time": 9.834846
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4606,
        "candidates": 514,
        "total": 5120,
        "cached": 0
      },
      "response_time": 7.11005
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2329,
        "candidates": 470,
        "total": 2799,
        "cached": 0
      },
      "response_time": 7.482951
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2659,
        "candidates": 379,
        "total": 3038,
        "cached": 0
      },
      "response_time": 4.764518
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1630,
        "candidates": 2152,
        "total": 3782,
        "cached": 0
      },
      "response_time": 26.087135
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3576,
        "candidates": 580,
        "total": 4156,
        "cached": 0
      },
      "response_time": 6.105151
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1829,
        "candidates": 2915,
        "total": 4744,
        "cached": 0
      },
      "response_time": 29.382812
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 4547,
        "candidates": 325,
        "total": 4872,
        "cached": 0
      },
      "response_time": 3.418003
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1975,
        "candidates": 606,
        "total": 2581,
        "cached": 0
      },
      "response_time": 9.650988
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2442,
        "candidates": 384,
        "total": 2826,
        "cached": 0
      },
      "response_time": 5.677681
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1635,
        "candidates": 1291,
        "total": 2926,
        "cached": 0
      },
      "response_time": 15.520199
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2721,
        "candidates": 520,
        "total": 3241,
        "cached": 0
      },
      "response_time": 5.352656
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1771,
        "candidates": 2321,
        "total": 4092,
        "cached": 0
      },
      "response_time": 23.205049
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3895,
        "candidates": 438,
        "total": 4333,
        "cached": 0
      },
      "response_time": 4.802931
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2037,
        "candidates": 528,
        "total": 2565,
        "cached": 0
      },
      "response_time": 7.695274
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2427,
        "candidates": 352,
        "total": 2779,
        "cached": 0
      },
      "response_time": 5.288805
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1605,
        "candidates": 4431,
        "total": 6036,
        "cached": 0
      },
      "response_time": 39.790896
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 5834,
        "candidates": 271,
        "total": 6105,
        "cached": 0
      },
      "response_time": 2.965128
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1524,
        "candidates": 947,
        "total": 2471,
        "cached": 0
      },
      "response_time": 12.661186
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2267,
        "candidates": 316,
        "total": 2583,
        "cached": 0
      },
      "response_time": 3.922097
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n6 6 6 6 6 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "4 4 4 4 4 4\n1 1 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "005-py_03-train": [],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "\n\n\n",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "\n",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "007-py_05-train": [],
    "008-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "4 4 4 4 4 4 4 4 4 4 4 4\n1 1 1 1 1 1 1 1 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "1 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "1 2 4\n1 2 4\n1 2 4",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "1 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "1 2 4\n1 2 4\n1 2 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "1 2 4\n1 2 4\n1 2 4",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "1 2 4\n1 2 4\n1 2 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "2 1 4\n2 1 4\n2 1 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "4 2 1\n4 2 1\n4 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "2 4 1\n2 4 1\n2 4 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 8 8 8 8 8 8 8 8 8 8 8\n4 4 4 4 4 4 4 4 4 4 4 4\n1 1 1 1 1 1 1 1 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "017-py_11-train": [],
    "017-py_12-train": [],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "2 2 2 2 2 0 5 5 5 5 0 2\n8 8 8 8 8 0 5 5 5 5 0 8\n4 4 4 4 4 4 4 4 4 4 4 4\n1 1 1 1 1 1 1 1 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 4 4 4 4 4 4 4\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 5 5 5 5 5 5 0 8 8 8 8 8 8 8\n0 5 5 5 5 5 5 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "expected_output": "2 2 2 2 2 2\n1 1 1 1 1 1\n3 3 3 3 3 3\n4 4 4 4 4 4\n8 8 8 8 8 8\n6 6 6 6 6 6",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 1 1 1 1 1 1 1 1 1 1 1 1\n3 3 3 3 3 3 3 3 3 3 3 3 3 3 3\n6 6 6 6 6 6 6 6 6 6 6 6 6 6 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 5 5 5 0 2 0 0 4 0\n0 0 0 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0\n0 0 1 0 0 2 0 0 4 0",
        "expected_output": "1 2 4\n1 2 4\n1 2 4",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n2 2 2 2 2 0 5 5 5 5 0 2\n0 0 0 0 0 0 5 5 5 5 0 0\n0 0 0 0 0 0 5 5 5 5 0 0\n8 8 8 8 8 0 5 5 5 5 0 8\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n4 4 4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 1 1 1 1 1 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "2 2 2 2\n8 8 8 8\n4 4 4 4\n1 1 1 1",
        "transformed_output": "2 2 2 2 2 0 5 5 5 5 0 2\n8 8 8 8 8 0 5 5 5 5 0 8\n4 4 4 4 4 4 4 4 4 4 4 4\n1 1 1 1 1 1 1 1 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}