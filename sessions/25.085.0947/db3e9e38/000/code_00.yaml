Input:
  - type: grid
  - properties:
      - width: variable
      - height: variable
      - pixels:
          - color: white (0) - background
          - color: orange (7) - source pixels, typically forming a vertical line segment

Output:
  - type: grid
  - properties:
      - width: same as input
      - height: same as input
      - pixels:
          - color: white (0) - background
          - color: orange (7) - part of the generated pattern
          - color: azure (8) - part of the generated pattern

Transformation:
  - name: Pattern Generation from Sources
  - steps:
      - identify_sources: Find all pixels with orange (7) color in the input grid.
      - calculate_max_row: Determine the maximum row index (`max_r_source`) among all source pixels.
      - process_pixels: For each pixel location (tr, tc) in the output grid:
          - calculate_distances: Compute the Manhattan distance `d = |tr - r_s| + |tc - c_s|` to every source pixel (r_s, c_s).
          - find_minimum: Find the minimum distance `min_d` and the corresponding source pixel(s) (min_r_s, min_c_s). If multiple sources give the same minimum distance, select one (e.g., the one with the lowest row index, though any should yield the same outcome based on the next step). Let the chosen source row be `r_s_for_min_d`.
          - determine_limit: Calculate the maximum allowed distance for this source: `max_d_allowed = max_r_source - r_s_for_min_d`.
          - apply_coloring_rule:
              - If `min_d <= max_d_allowed`:
                  - If `min_d` is even, set output pixel (tr, tc) to orange (7).
                  - If `min_d` is odd, set output pixel (tr, tc) to azure (8).
              - Else (`min_d > max_d_allowed`):
                  - Set output pixel (tr, tc) to white (0).

Definitions:
  - Manhattan distance: Between points (r1, c1) and (r2, c2) is |r1 - r2| + |c1 - c2|.