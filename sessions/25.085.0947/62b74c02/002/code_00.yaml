- task: fill_and_append
  observations:
    - object: input_grid
      property: grid with colored pixels (0-9) and white (0) areas.
      property: contains a colored pattern starting at the left edge (column 0).
    - object: pattern
      property: contiguous block of non-white columns starting from column 0.
      definition: ends just before the first column that is entirely white (0).
      property: has a width (`pattern_width`).
      property: occupies columns from index 0 to `pattern_width - 1`.
    - object: fill_area
      property: region in the output grid to be filled.
      location: for each row, starts at column index `pattern_width` and extends up to (but not including) the second-to-last column (`width - 2`).
      color: determined row-by-row by the color of the pixel in the first column (index 0) of the input grid for that row.
    - object: appended_columns
      property: two columns added to the right end of the output grid.
      location_1: second-to-last column of the output grid (index `width - 2`).
      source_1: the second-to-last column of the input pattern (index `pattern_width - 2`), if `pattern_width >= 2`.
      location_2: last column of the output grid (index `width - 1`).
      source_2: the last column of the input pattern (index `pattern_width - 1`), if `pattern_width >= 1`.
    - object: output_grid
      property: same dimensions as the input grid.
      content: combination of the original pattern, the filled area, and the appended columns.
  actions:
    - action: identify_pattern_width
      input: input_grid
      output: `pattern_width` (index of the first all-white column)
    - action: copy_input_to_output
      input: input_grid
      output: initial output_grid
    - action: fill_rows
      input: output_grid, pattern_width, input_grid column 0
      process: iterate through each row `r`, get fill color from `input_grid[r, 0]`, fill `output_grid[r, pattern_width : width - 2]` with that color.
      condition: only fill if `pattern_width < width - 2`.
    - action: append_columns
      input: output_grid, input_grid pattern columns, pattern_width, width
      process_1: copy column `pattern_width - 2` from input to column `width - 2` in output.
      condition_1: requires `pattern_width >= 2`.
      process_2: copy column `pattern_width - 1` from input to column `width - 1` in output.
      condition_2: requires `pattern_width >= 1`.