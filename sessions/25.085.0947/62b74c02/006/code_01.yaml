observations:
  - task: Extends a pattern found at the left edge of the grid by filling a central area and appending a copy of the original pattern to the right edge.
  - grid_structure:
      input_grid: Contains a colored pattern on the left, potentially followed by white pixels.
      output_grid: Has the same dimensions as the input. Is composed horizontally of three sections: the original pattern, a filled area, and an appended copy of the original pattern.
  - objects:
      - object: initial_pattern
        description: A contiguous block of columns starting from column 0 up to (but not including) the first column composed entirely of white pixels.
        properties:
          location: Columns 0 to `pattern_width - 1`.
          width: `pattern_width`.
          content: The pixel values within these columns in the input grid.
      - object: fill_area
        description: The area between the initial pattern and the appended pattern.
        properties:
          location: Columns `pattern_width` to `width - pattern_width - 1`.
          width: `width - 2 * pattern_width`. Exists only if `width > 2 * pattern_width`.
          color_rule: Each row `r` within this area is filled with the color found at `input_grid[r, 0]`.
      - object: appended_pattern
        description: A copy of the initial pattern placed at the right edge of the grid.
        properties:
          location: Columns `width - pattern_width` to `width - 1`.
          width: `pattern_width`. Exists only if `pattern_width >= 1`.
          content: Identical to the `initial_pattern`. Input column `i` maps to output column `(width - pattern_width) + i`.

actions:
  - action: identify_pattern_width
    input: input_grid
    output: pattern_width
    description: Find the index of the first column containing only white (0) pixels. If none exists, use the grid width.
  - action: initialize_output
    input: input_grid
    output: output_grid
    description: Create a new grid with the same dimensions and content as the input grid.
  - action: perform_fill
    condition: `pattern_width > 0` and `width > 2 * pattern_width`
    input: input_grid, output_grid, pattern_width
    description: For each row `r`, fill `output_grid` columns from `pattern_width` up to (but not including) `width - pattern_width` with the color `input_grid[r, 0]`.
  - action: perform_append
    condition: `pattern_width > 0`
    input: input_grid, output_grid, pattern_width
    description: Copy the `initial_pattern` (columns 0 to `pattern_width - 1` from `input_grid`) to the `appended_pattern` location (columns `width - pattern_width` to `width - 1` in `output_grid`).