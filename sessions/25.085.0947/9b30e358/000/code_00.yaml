task_context:
  grid_properties:
    - input_output_dimensions_match: true
  elements:
    - role: background
      identification: Dominant color, often filling entire rows contiguously, usually at the top.
      example_1: Gray (5)
      example_2: Green (3)
    - role: pattern_block
      identification: Contiguous block of rows containing non-background colors, typically found below the background rows.
      properties:
        - height: H_p
      example_1:
        rows: 5-9
        height: 5
      example_2:
        rows: 6-9
        height: 4
    - role: tile_block
      derivation: Based on pattern_block and grid height (H).
      conditional_logic:
        - condition: If pattern_block height (H_p) * 2 == total grid height (H)
          result: tile_block is identical to pattern_block.
        - condition: Otherwise
          result: tile_block is formed by splitting pattern_block at mid-height (H_p // 2), and concatenating the bottom half followed by the top half.
      example_1:
        condition_met: H_p * 2 == H (5 * 2 == 10)
        result: tile_block is rows 5-9 from input.
      example_2:
        condition_met: H_p * 2 != H (4 * 2 != 10)
        result: tile_block is rows (8, 9) + rows (6, 7) from input.
  actions:
    - action: identify_background_color
      input: input_grid
      output: background_color
    - action: identify_pattern_rows
      input: input_grid, background_color
      output: pattern_block (subgrid), H_p (height)
    - action: derive_tile_block
      input: pattern_block, H_p, H (total_height)
      output: tile_block
    - action: tile_output_grid
      input: tile_block, H_p, H
      output: output_grid
      details: Repeat tile_block vertically (H // H_p) times, then append the first (H % H_p) rows of tile_block.