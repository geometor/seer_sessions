task_context:
  description: Process grid rows independently based on pixel count and color pairs.
  background_color: white (0)

grid_properties:
  dimensionality: 2D
  content: colored pixels (0-9)

objects:
  - type: pixel
    properties:
      - color: integer 0-9
      - position: (row, column)
  - type: row
    properties:
      - pixels: list of pixels
      - non_white_pixels: list of non-white pixels in the row
      - non_white_count: count of non-white pixels
      - leftmost_pixel: the non-white pixel with the minimum column index (if count > 0)
      - rightmost_pixel: the non-white pixel with the maximum column index (if count > 0)

transformation_rule:
  scope: operates row by row
  conditions_for_action:
    - row must contain exactly two non-white pixels.
    - let the colors of these two pixels be C_left (leftmost) and C_right (rightmost).
    - the pair (C_left, C_right) must be one of the following:
      - (blue(1), azure(8))
      - (azure(8), blue(1))
      - (yellow(4), orange(7))
      - (orange(7), yellow(4))
  action:
    - if conditions are met:
      - identify the position of the leftmost pixel: (r, c_left)
      - identify the position of the rightmost pixel: (r, c_right)
      - identify the color of the rightmost pixel: C_right
      - change the color of the pixel at (r, c_left + 1) to C_right.
      - change the color of the pixel at (r, c_right) to white (0).
    - if conditions are not met:
      - the row remains unchanged.

output:
  structure: a grid of the same dimensions as the input, containing the transformed rows.