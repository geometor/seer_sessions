task_description: Scale the input grid by a factor of 2 and modify specific corners based on the original pixel color.

grid_properties:
  - input_height: H
  - input_width: W
  - output_height: H * 2
  - output_width: W * 2

transformation_steps:
  - step: 1
    action: Initialize output grid
    details: Create an output grid of size (H*2, W*2) filled with white (0) pixels.
  - step: 2
    action: Scale non-white pixels
    details: For each pixel at input coordinate (r, c) with a non-white color C:
      - Identify the corresponding 2x2 block in the output grid starting at (2*r, 2*c).
      - Fill this 2x2 block with color C.
  - step: 3
    action: Place blue pixels for white input pixels
    details: For each pixel at input coordinate (r, c) with the color white (0):
      - Identify the corresponding 2x2 block corners in the output grid:
        - Top-left corner: (2*r, 2*c)
        - Bottom-right corner: (2*r + 1, 2*c + 1)
      - Set the color of these two corner pixels in the output grid to blue (1). This overwrites any color placed in step 2 (which would only be white anyway, since step 2 skips white input pixels).

color_mapping:
  - white: 0
  - blue: 1
  - red: 2
  - green: 3
  - yellow: 4
  - gray: 5
  # Other colors (6-9) are treated like 2-5 if they appear.

key_observations:
  - The output grid dimensions are always double the input grid dimensions.
  - Each input pixel conceptually maps to a 2x2 area in the output grid.
  - Input pixels that are *not* white (0) result in a solid 2x2 block of their color in the output.
  - Input pixels that *are* white (0) result in a 2x2 block that is mostly white, but the top-left and bottom-right corners are changed to blue (1).