Grid:
  Properties:
    - BackgroundColor: Orange (7)
    - ActiveColors: [Red (2), Gray (5)]
    - DimensionRange: 1x1 to 30x30 (Standard ARC)
InputGrid:
  Structure:
    - TopRow: Contains a mixture of ActiveColors and potentially BackgroundColor.
    - SubsequentRows: Filled entirely with BackgroundColor (Orange).
OutputGrid:
  Structure:
    - TopRow: Identical to InputGrid TopRow.
    - SubsequentRows: Generated based on a row-by-row update rule, containing ActiveColors and BackgroundColor.
TransformationRule:
  Type: Cellular Automaton (1D applied vertically)
  InitialState: The TopRow of the InputGrid.
  ActiveStates: {Gray (5): 1, Red (2): 0} # Assigning binary values for clarity
  Neighborhood: For a cell at (r+1, c), the relevant neighbors are (r, c-1) and (r, c+1).
  UpdateLogic:
    - Applies only if both neighbors (r, c-1) and (r, c+1) are ActiveColors (Red or Gray).
    - If Neighbors = (Gray, Red), NewState = Red.
    - If Neighbors = (Red, Red), NewState = Gray.
    - If Neighbors = (Red, Gray), NewState = Gray.
    - If Neighbors = (Gray, Gray), NewState = Red.
    - Otherwise (if any neighbor is Orange or out of bounds), NewState = Orange (7).
  Propagation: The rule is applied iteratively for each row `r+1` (from r=0 to height-2), using the state of row `r` (where row 0 is the input top row, and subsequent rows `r>0` are the previously generated rows in the output).