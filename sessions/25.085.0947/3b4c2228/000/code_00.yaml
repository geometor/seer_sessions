task_description: Identify 2x2 green squares in the input grid and represent their count diagonally in a 3x3 output grid.

input_elements:
  - element: grid
    attributes:
      - variable height (H) and width (W)
      - contains pixels: white (0), green (3), red (2)
  - element: object
    type: square
    attributes:
      - size: 2x2 pixels
      - color: solid green (3) or solid red (2)
    identifier: 'green_square'
    selector: contiguous 2x2 block of color 3
    relation_to_output: The count of these determines the output pattern.
  - element: object
    type: square
    attributes:
      - size: 2x2 pixels
      - color: solid red (2)
    identifier: 'red_square'
    selector: contiguous 2x2 block of color 2
    relation_to_output: Ignored.

output_elements:
  - element: grid
    attributes:
      - fixed size: 3x3
      - contains pixels: white (0), blue (1)
  - element: pixel
    identifier: 'output_blue_pixel'
    value: 1 (blue)
    location:
      - determined by the count of input 'green_square' objects
      - Placed at (0,0) if count >= 1
      - Placed at (1,1) if count >= 2
      - Placed at (2,2) if count >= 3

transformation:
  - action: find_objects
    target: input grid
    object_type: green_square (2x2 block of green pixels)
    details: Identify all occurrences.
  - action: count_objects
    target: result of find_objects
    variable: green_square_count
  - action: initialize_grid
    target: output grid
    size: 3x3
    fill_value: 0 (white)
  - action: conditional_placement
    target: output grid
    condition: green_square_count >= 1
    location: (0, 0)
    value: 1 (blue)
  - action: conditional_placement
    target: output grid
    condition: green_square_count >= 2
    location: (1, 1)
    value: 1 (blue)
  - action: conditional_placement
    target: output grid
    condition: green_square_count >= 3
    location: (2, 2)
    value: 1 (blue)

ignored_elements:
  - red_square objects
  - individual pixels not part of a 2x2 green square