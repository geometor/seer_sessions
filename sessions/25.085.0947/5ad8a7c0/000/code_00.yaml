Grid:
  - dimensions: constant 4x6 for all examples
  - colors: [white (0), red (2)]

Objects:
  - type: Pixel
    properties:
      - color: white (0) or red (2)
      - location: (row, column)
  - type: Row
    properties:
      - index: 0 to 3
      - pixels: sequence of 6 pixels
      - classification:
          - HasPair: contains exactly two red pixels
          - IsEdgePair: HasPair is true AND red pixels are at col 0 and col 5
          - IsInternalPair: HasPair is true AND red pixels are NOT at col 0 and col 5

Relationships:
  - Set_EdgePairRows: The set of row indices where IsEdgePair is true.
  - Set_InternalPairRows: The set of row indices where IsInternalPair is true.
  - Input_Row0_Content: The specific pixel values in row 0 of the input grid.

Transformation:
  - name: Conditional Horizontal Fill
  - input: Input Grid
  - output: Output Grid (initially a copy of input)
  - condition: Determined by Set_EdgePairRows and Set_InternalPairRows, and potentially Input_Row0_Content.
      - IF Set_EdgePairRows == {0, 3}:
          - IF Set_InternalPairRows is empty: TargetRows = Set_EdgePairRows
          - ELSE: TargetRows = Set_InternalPairRows
      - ELIF Set_EdgePairRows == {2}:
          - IF Input_Row0_Content is all white (0): TargetRows = Set_InternalPairRows
          - ELSE: TargetRows = {}
      - ELIF Set_EdgePairRows == {0}: TargetRows = {}
      - ELSE (all other configurations): TargetRows = {}
  - action:
      - For each row_index in TargetRows:
          - Find column indices c1, c2 of the two red pixels in the input row at row_index (c1 < c2).
          - In the output grid's row at row_index, set all pixels from column c1 to c2 (inclusive) to red (2).