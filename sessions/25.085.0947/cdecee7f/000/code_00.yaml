task_context:
  grid_size_input: [10, 10]
  grid_size_output: [3, 3]
  background_color: 0 # white

objects:
  - type: pixel
    properties:
      color: integer (1-9)
      position: [row, column]
    relationship: Scattered across the input grid against a white background.

actions:
  - action: identify
    target: non-white pixels
    details: Locate all pixels in the input grid with color values from 1 to 9.
  - action: collect
    target: identified non-white pixel colors
    order: Column-major (scan columns left-to-right, then rows top-to-bottom within each column). Store colors in a sequence.
  - action: conditional_swap
    target: collected sequence
    condition: If the sequence length is 6 or more.
    details: Swap the element at index 3 with the element at index 5 in the sequence.
  - action: create_grid
    target: output grid
    properties:
      dimensions: [3, 3]
      initial_value: 0 # white
  - action: populate
    source: the (potentially swapped) sequence of colors
    target: the 3x3 output grid
    order: Row-major (fill rows top-to-bottom, then columns left-to-right within each row).
    details: Fill cells sequentially using colors from the sequence. Stop when the sequence is exhausted or the grid is full. Any remaining cells stay white.

relationships:
  - input_output: The colors in the output grid are derived exclusively from the non-white colors in the input grid.
  - order_transformation: The order of colors in the output grid depends on the column-major collection order from the input, followed by a specific conditional swap (indices 3 and 5), and then placement in row-major order into the 3x3 output grid.