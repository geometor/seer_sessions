{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 2629,
        "candidates": 464,
        "total": 3093,
        "cached": 0
      },
      "response_time": 7.540535
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2957,
        "candidates": 256,
        "total": 3213,
        "cached": 0
      },
      "response_time": 3.618496
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 5679,
        "candidates": 5190,
        "total": 10869,
        "cached": 0
      },
      "response_time": 45.146627
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 5693,
        "candidates": 5770,
        "total": 11463,
        "cached": 0
      },
      "response_time": 48.474936
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 11258,
        "candidates": 369,
        "total": 11627,
        "cached": 0
      },
      "response_time": 4.169391
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 10665,
        "candidates": 284,
        "total": 10949,
        "cached": 0
      },
      "response_time": 3.189036
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 2389,
        "candidates": 525,
        "total": 2914,
        "cached": 0
      },
      "response_time": 8.565105
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2773,
        "candidates": 333,
        "total": 3106,
        "cached": 0
      },
      "response_time": 3.981366
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 5755,
        "candidates": 1036,
        "total": 6791,
        "cached": 0
      },
      "response_time": 14.234112
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 6584,
        "candidates": 396,
        "total": 6980,
        "cached": 0
      },
      "response_time": 4.069559
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 5818,
        "candidates": 760,
        "total": 6578,
        "cached": 0
      },
      "response_time": 10.198541
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 6373,
        "candidates": 323,
        "total": 6696,
        "cached": 0
      },
      "response_time": 3.462597
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 2737,
        "candidates": 428,
        "total": 3165,
        "cached": 0
      },
      "response_time": 6.998695
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3025,
        "candidates": 498,
        "total": 3523,
        "cached": 0
      },
      "response_time": 5.746869
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1",
        "expected_output": "1 0 0 0 1 1 1 1 2 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 2 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 2 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 2 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 2 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 2 1 0 1 1 1 0 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 2 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 2 1 1 1 1 0 0 1 1 1 1",
        "transformed_output": "1 0 0 0 1 1 1 1 2 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 2 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 2 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 2 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 2 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 2 1 0 1 1 1 0 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 2 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 2 1 1 1 1 0 0 1 1 1 1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "8 8 8 8 0 8 8 8 8 8 0 0 8 8\n0 8 0 0 0 0 8 8 8 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 8\n8 0 8 8 0 8 8 0 0 8 0 8 8 0\n8 8 8 8 0 8 8 0 0 0 0 8 8 8\n8 8 8 0 0 8 8 0 8 0 0 8 8 8\n8 0 8 8 0 8 8 8 8 8 0 0 0 8\n8 8 0 0 0 8 0 0 8 8 0 0 8 8\n8 0 0 8 0 8 8 8 0 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 0\n0 8 0 8 0 0 0 0 0 0 0 8 0 8\n8 8 8 8 0 8 8 8 8 8 0 0 8 0",
        "expected_output": "8 8 8 8 2 8 8 8 8 8 2 0 8 8\n0 8 0 0 2 0 8 8 8 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 8\n8 0 8 8 2 8 8 0 0 8 2 8 8 0\n8 8 8 8 2 8 8 0 0 0 2 8 8 8\n8 8 8 0 2 8 8 0 8 0 2 8 8 8\n8 0 8 8 2 8 8 8 8 8 2 0 0 8\n8 8 0 0 2 8 0 0 8 8 2 0 8 8\n8 0 0 8 2 8 8 8 0 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 0\n0 8 0 8 2 0 0 0 0 0 2 8 0 8\n8 8 8 8 2 8 8 8 8 8 2 0 8 0",
        "transformed_output": "8 8 8 8 0 8 8 8 2 8 0 0 8 8\n0 8 0 0 0 0 8 8 2 8 0 8 8 8\n8 8 0 8 0 8 8 8 2 8 0 0 8 8\n8 0 8 8 0 8 8 0 2 8 0 8 8 0\n8 8 8 8 0 8 8 0 2 0 0 8 8 8\n8 8 8 0 0 8 8 0 2 0 0 8 8 8\n8 0 8 8 0 8 8 8 2 8 0 0 0 8\n8 8 0 0 0 8 0 0 2 8 0 0 8 8\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n8 8 0 8 0 8 8 8 2 8 0 0 8 0\n0 8 0 8 0 0 0 0 2 0 0 8 0 8\n8 8 8 8 0 8 8 8 2 8 0 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 73.21428571428571
      },
      {
        "example": 3,
        "input": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 3 0 3 0 0 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 0 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 0 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 0 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 0 3 0 3 3 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 0 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 0 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "expected_output": "3 2 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 2 3 0 3 3 3 0 3 0 3 0 0 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 2 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 2 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 2 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 2 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 2 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 2 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 2 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 2 3 3 3 0 3 0 0 3 0 3 3 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 2 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 2 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 2 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "transformed_output": "3 0 3 3 3 3 3 0 2 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 2 0 3 0 0 3 0\n0 0 0 0 0 0 0 0 2 0 0 0 0 0 0\n3 0 0 3 0 0 3 3 2 3 0 3 3 0 0\n3 0 3 3 3 3 3 3 2 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 2 0 3 3 0 3 3\n0 0 3 0 3 0 3 0 2 0 0 3 3 3 0\n3 0 0 3 3 3 0 0 2 0 3 3 0 0 3\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 0 0 3 3 0 3 3 2 3 3 3 3 3 0\n3 0 3 3 3 3 3 3 2 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 2 3 0 3 3 3 0\n0 0 0 0 0 0 0 0 2 0 0 0 0 0 0\n3 0 3 0 0 3 0 3 2 0 3 3 3 3 0\n3 0 0 3 0 3 3 0 2 0 3 3 0 0 3\n3 0 0 3 3 3 3 3 2 3 3 0 0 3 3\n0 0 3 3 0 3 3 0 2 3 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 70,
        "percent_correct": 72.54901960784314
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "004-py_03-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_04-train": [
      {
        "example": 1,
        "input": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1",
        "expected_output": "1 0 0 0 1 1 1 1 2 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 2 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 2 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 2 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 2 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 2 1 0 1 1 1 0 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 2 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 2 1 1 1 1 0 0 1 1 1 1",
        "transformed_output": "1 0 0 0 1 1 1 1 2 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 2 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 2 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 2 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 2 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 2 1 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 2 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 2 1 1 1 1 0 0 1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 92.10526315789474
      },
      {
        "example": 2,
        "input": "8 8 8 8 0 8 8 8 8 8 0 0 8 8\n0 8 0 0 0 0 8 8 8 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 8\n8 0 8 8 0 8 8 0 0 8 0 8 8 0\n8 8 8 8 0 8 8 0 0 0 0 8 8 8\n8 8 8 0 0 8 8 0 8 0 0 8 8 8\n8 0 8 8 0 8 8 8 8 8 0 0 0 8\n8 8 0 0 0 8 0 0 8 8 0 0 8 8\n8 0 0 8 0 8 8 8 0 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 0\n0 8 0 8 0 0 0 0 0 0 0 8 0 8\n8 8 8 8 0 8 8 8 8 8 0 0 8 0",
        "expected_output": "8 8 8 8 2 8 8 8 8 8 2 0 8 8\n0 8 0 0 2 0 8 8 8 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 8\n8 0 8 8 2 8 8 0 0 8 2 8 8 0\n8 8 8 8 2 8 8 0 0 0 2 8 8 8\n8 8 8 0 2 8 8 0 8 0 2 8 8 8\n8 0 8 8 2 8 8 8 8 8 2 0 0 8\n8 8 0 0 2 8 0 0 8 8 2 0 8 8\n8 0 0 8 2 8 8 8 0 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 0\n0 8 0 8 2 0 0 0 0 0 2 8 0 8\n8 8 8 8 2 8 8 8 8 8 2 0 8 0",
        "transformed_output": "8 8 8 8 2 8 8 8 8 8 0 0 8 8\n0 8 0 0 2 0 8 8 8 8 0 8 8 8\n8 8 0 8 2 8 8 8 8 8 0 0 8 8\n8 0 8 8 2 8 8 0 0 8 0 8 8 0\n8 8 8 8 2 8 8 0 0 0 0 8 8 8\n8 8 8 0 2 8 8 0 8 0 0 8 8 8\n8 0 8 8 2 8 8 8 8 8 0 0 0 8\n8 8 0 0 2 8 0 0 8 8 0 0 8 8\n8 0 0 8 2 8 8 8 0 8 0 8 8 8\n8 8 0 8 2 8 8 8 8 8 0 0 8 0\n0 8 0 8 2 0 0 0 0 0 0 8 0 8\n8 8 8 8 2 8 8 8 8 8 0 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 92.85714285714286
      },
      {
        "example": 3,
        "input": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 3 0 3 0 0 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 0 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 0 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 0 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 0 3 0 3 3 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 0 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 0 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "expected_output": "3 2 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 2 3 0 3 3 3 0 3 0 3 0 0 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 2 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 2 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 2 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 2 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 2 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 2 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 2 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 2 3 3 3 0 3 0 0 3 0 3 3 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 2 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 2 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 2 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "transformed_output": "3 2 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 2 3 0 3 3 3 0 3 0 3 0 0 3 0\n0 2 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 2 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 2 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 2 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 2 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 2 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 2 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 2 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 2 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 2 3 3 3 0 3 0 0 3 0 3 3 3 0\n0 2 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 2 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 2 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 2 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 2 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 89.01960784313725
      }
    ],
    "006-py_05-train": [
      {
        "example": 1,
        "input": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1",
        "expected_output": "1 0 0 0 1 1 1 1 2 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 2 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 2 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 2 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 2 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 2 1 0 1 1 1 0 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 2 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 2 1 1 1 1 0 0 1 1 1 1",
        "transformed_output": "1 0 0 0 1 1 1 1 0 2 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 2 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 0 2 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 0 2 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 0 2 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 0 2 0 1 0 1 1 0 0 0 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 0 0 1 1 1 1 0 2 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 0 2 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 2 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 2 1 1 1 0 0 1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 56,
        "percent_correct": 75.43859649122807
      },
      {
        "example": 2,
        "input": "8 8 8 8 0 8 8 8 8 8 0 0 8 8\n0 8 0 0 0 0 8 8 8 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 8\n8 0 8 8 0 8 8 0 0 8 0 8 8 0\n8 8 8 8 0 8 8 0 0 0 0 8 8 8\n8 8 8 0 0 8 8 0 8 0 0 8 8 8\n8 0 8 8 0 8 8 8 8 8 0 0 0 8\n8 8 0 0 0 8 0 0 8 8 0 0 8 8\n8 0 0 8 0 8 8 8 0 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 0\n0 8 0 8 0 0 0 0 0 0 0 8 0 8\n8 8 8 8 0 8 8 8 8 8 0 0 8 0",
        "expected_output": "8 8 8 8 2 8 8 8 8 8 2 0 8 8\n0 8 0 0 2 0 8 8 8 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 8\n8 0 8 8 2 8 8 0 0 8 2 8 8 0\n8 8 8 8 2 8 8 0 0 0 2 8 8 8\n8 8 8 0 2 8 8 0 8 0 2 8 8 8\n8 0 8 8 2 8 8 8 8 8 2 0 0 8\n8 8 0 0 2 8 0 0 8 8 2 0 8 8\n8 0 0 8 2 8 8 8 0 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 0\n0 8 0 8 2 0 0 0 0 0 2 8 0 8\n8 8 8 8 2 8 8 8 8 8 2 0 8 0",
        "transformed_output": "8 8 8 8 0 8 8 2 8 8 0 0 8 8\n0 8 0 0 0 0 8 2 8 8 0 8 8 8\n8 8 0 8 0 8 8 2 8 8 0 0 8 8\n8 0 8 8 0 8 8 2 0 8 0 8 8 0\n8 8 8 8 0 8 8 2 0 0 0 8 8 8\n8 8 8 0 0 8 8 2 8 0 0 8 8 8\n2 2 2 2 2 2 2 2 2 2 2 2 2 2\n8 8 0 0 0 8 0 2 8 8 0 0 8 8\n8 0 0 8 0 8 8 2 0 8 0 8 8 8\n8 8 0 8 0 8 8 2 8 8 0 0 8 0\n0 8 0 8 0 0 0 2 0 0 0 8 0 8\n8 8 8 8 0 8 8 2 8 8 0 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 73.21428571428571
      },
      {
        "example": 3,
        "input": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 3 0 3 0 0 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 0 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 0 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 0 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 0 3 0 3 3 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 0 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 0 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "expected_output": "3 2 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 2 3 0 3 3 3 0 3 0 3 0 0 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 2 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 2 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 2 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 2 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 2 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 2 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 2 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 2 3 3 3 0 3 0 0 3 0 3 3 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 2 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 2 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 2 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "transformed_output": "3 0 3 3 3 3 3 2 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 2 3 0 3 0 0 3 0\n0 0 0 0 0 0 0 2 0 0 0 0 0 0 0\n3 0 0 3 0 0 3 2 0 3 0 3 3 0 0\n3 0 3 3 3 3 3 2 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 2 0 0 3 3 0 3 3\n0 0 3 0 3 0 3 2 3 0 0 3 3 3 0\n3 0 0 3 3 3 0 2 3 0 3 3 0 0 3\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 0 0 3 3 0 3 2 3 3 3 3 3 3 0\n3 0 3 3 3 3 3 2 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 2 0 3 0 3 3 3 0\n0 0 0 0 0 0 0 2 0 0 0 0 0 0 0\n3 0 3 0 0 3 0 2 3 0 3 3 3 3 0\n3 0 0 3 0 3 3 2 3 0 3 3 0 0 3\n3 0 0 3 3 3 3 2 0 3 3 0 0 3 3\n0 0 3 3 0 3 3 2 0 3 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 70,
        "percent_correct": 72.54901960784314
      }
    ],
    "008-py_06-train": [
      {
        "example": 1,
        "input": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1",
        "expected_output": "1 0 0 0 1 1 1 1 2 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 2 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 2 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 2 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 2 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 2 1 0 1 1 1 0 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 2 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 2 1 1 1 1 0 0 1 1 1 1",
        "transformed_output": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 2 1 1 1 1 1 1 0 1 1\n1 1 1 1 2 0 1 1 0 1 0 0 0 1 2 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 2 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 2 1 1 0 0 2 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 2 1 1 1 1\n0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n1 1 1 0 2 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 2 1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 84.21052631578947
      },
      {
        "example": 2,
        "input": "8 8 8 8 0 8 8 8 8 8 0 0 8 8\n0 8 0 0 0 0 8 8 8 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 8\n8 0 8 8 0 8 8 0 0 8 0 8 8 0\n8 8 8 8 0 8 8 0 0 0 0 8 8 8\n8 8 8 0 0 8 8 0 8 0 0 8 8 8\n8 0 8 8 0 8 8 8 8 8 0 0 0 8\n8 8 0 0 0 8 0 0 8 8 0 0 8 8\n8 0 0 8 0 8 8 8 0 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 0\n0 8 0 8 0 0 0 0 0 0 0 8 0 8\n8 8 8 8 0 8 8 8 8 8 0 0 8 0",
        "expected_output": "8 8 8 8 2 8 8 8 8 8 2 0 8 8\n0 8 0 0 2 0 8 8 8 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 8\n8 0 8 8 2 8 8 0 0 8 2 8 8 0\n8 8 8 8 2 8 8 0 0 0 2 8 8 8\n8 8 8 0 2 8 8 0 8 0 2 8 8 8\n8 0 8 8 2 8 8 8 8 8 2 0 0 8\n8 8 0 0 2 8 0 0 8 8 2 0 8 8\n8 0 0 8 2 8 8 8 0 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 0\n0 8 0 8 2 0 0 0 0 0 2 8 0 8\n8 8 8 8 2 8 8 8 8 8 2 0 8 0",
        "transformed_output": "8 8 8 8 2 8 8 8 8 8 0 0 8 8\n0 8 0 0 2 0 8 8 8 8 0 8 8 8\n8 8 0 8 2 8 8 8 8 8 0 0 8 8\n8 0 8 8 2 8 8 0 0 8 0 8 8 0\n8 8 8 8 2 8 8 0 0 2 0 8 8 8\n8 8 8 0 2 8 8 0 8 2 0 8 8 8\n8 0 8 8 2 8 8 8 8 8 0 0 0 8\n8 8 0 0 2 8 0 0 8 8 0 0 8 8\n8 0 0 8 2 8 8 8 0 8 0 8 8 8\n8 8 0 8 2 8 8 8 8 8 0 0 8 0\n0 8 0 8 2 0 0 0 0 2 0 8 0 8\n8 8 8 8 2 8 8 8 8 8 0 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 91.07142857142857
      },
      {
        "example": 3,
        "input": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 3 0 3 0 0 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 0 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 0 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 0 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 0 3 0 3 3 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 0 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 0 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "expected_output": "3 2 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 2 3 0 3 3 3 0 3 0 3 0 0 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 2 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 2 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 2 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 2 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 2 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 2 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 2 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 2 3 3 3 0 3 0 0 3 0 3 3 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 2 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 2 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 2 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "transformed_output": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 3 2 3 0 0 3 2\n0 0 0 0 2 0 0 0 0 2 0 0 0 0 2\n3 0 0 3 2 0 3 3 0 3 0 3 3 0 2\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 0 2 3 3 0 3 3\n0 0 3 0 3 0 3 0 3 2 0 3 3 3 2\n3 0 0 3 3 3 0 0 3 2 3 3 0 0 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 0 0 3 3 0 3 3 3 3 3 3 3 3 2\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 0 3 0 3 3 3 2\n0 0 0 0 2 0 0 0 0 2 0 0 0 0 2\n3 0 3 0 2 3 0 3 3 2 3 3 3 3 2\n3 0 0 3 2 3 3 0 3 2 3 3 0 0 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 0 3 3 2 3 3 0 0 3 0 3 0 3 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 56,
        "percent_correct": 78.03921568627452
      }
    ],
    "010-py_07-train": [
      {
        "example": 1,
        "input": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1",
        "expected_output": "1 0 0 0 1 1 1 1 2 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 2 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 2 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 2 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 2 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 2 1 0 1 1 1 0 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 2 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 2 1 1 1 1 0 0 1 1 1 1",
        "transformed_output": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 2 1 2 1 1 1 1 2 2 1 1 1 1 1 1 2 1 1\n1 1 1 1 2 2 1 1 2 1 2 2 2 1 2 1 2 1 2\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 2 1 1 2 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 2 1 2 1 1 2 2 2 2 1 2 1 1 2 2 2 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 2 2 1 1 1 1 2 1 2 1 1 1 2 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 2 2 1 1 1 2 1 2 2 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 2 1 2 1 2 2 1 2 1 1 1 1 2 2 1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 41,
        "percent_correct": 82.01754385964912
      },
      {
        "example": 2,
        "input": "8 8 8 8 0 8 8 8 8 8 0 0 8 8\n0 8 0 0 0 0 8 8 8 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 8\n8 0 8 8 0 8 8 0 0 8 0 8 8 0\n8 8 8 8 0 8 8 0 0 0 0 8 8 8\n8 8 8 0 0 8 8 0 8 0 0 8 8 8\n8 0 8 8 0 8 8 8 8 8 0 0 0 8\n8 8 0 0 0 8 0 0 8 8 0 0 8 8\n8 0 0 8 0 8 8 8 0 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 0\n0 8 0 8 0 0 0 0 0 0 0 8 0 8\n8 8 8 8 0 8 8 8 8 8 0 0 8 0",
        "expected_output": "8 8 8 8 2 8 8 8 8 8 2 0 8 8\n0 8 0 0 2 0 8 8 8 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 8\n8 0 8 8 2 8 8 0 0 8 2 8 8 0\n8 8 8 8 2 8 8 0 0 0 2 8 8 8\n8 8 8 0 2 8 8 0 8 0 2 8 8 8\n8 0 8 8 2 8 8 8 8 8 2 0 0 8\n8 8 0 0 2 8 0 0 8 8 2 0 8 8\n8 0 0 8 2 8 8 8 0 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 0\n0 8 0 8 2 0 0 0 0 0 2 8 0 8\n8 8 8 8 2 8 8 8 8 8 2 0 8 0",
        "transformed_output": "8 8 8 8 2 8 8 8 8 8 2 2 8 8\n2 8 2 2 2 2 8 8 8 8 2 8 8 8\n8 8 2 8 2 8 8 8 8 8 2 2 8 8\n8 2 8 8 2 8 8 2 2 8 2 8 8 2\n8 8 8 8 2 8 8 2 2 2 2 8 8 8\n8 8 8 2 2 8 8 2 8 2 2 8 8 8\n8 2 8 8 2 8 8 8 8 8 2 2 2 8\n8 8 2 2 2 8 2 2 8 8 2 2 8 8\n8 2 2 8 2 8 8 8 2 8 2 8 8 8\n8 8 2 8 2 8 8 8 8 8 2 2 8 2\n2 8 2 8 2 2 2 2 2 2 2 8 2 8\n8 8 8 8 2 8 8 8 8 8 2 2 8 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 41,
        "percent_correct": 75.59523809523809
      },
      {
        "example": 3,
        "input": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 3 0 3 0 0 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 0 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 0 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 0 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 0 3 0 3 3 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 0 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 0 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "expected_output": "3 2 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 2 3 0 3 3 3 0 3 0 3 0 0 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 2 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 2 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 2 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 2 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 2 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 2 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 2 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 2 3 3 3 0 3 0 0 3 0 3 3 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 2 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 2 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 2 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "transformed_output": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 2 3 2 3 3 3 2 3 2 3 2 2 3 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 2 3 2 2 3 3 2 3 2 3 3 2 2\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 2 3 3 3 3 3 3 2 2 3 3 2 3 3\n2 2 3 2 3 2 3 2 3 2 2 3 3 3 2\n3 2 2 3 3 3 2 2 3 2 3 3 2 2 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 2 2 3 3 2 3 3 3 3 3 3 3 3 2\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 2 3 3 3 2 3 2 2 3 2 3 3 3 2\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 3 2 2 3 2 3 3 2 3 3 3 3 2\n3 2 2 3 2 3 3 2 3 2 3 3 2 2 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n2 2 3 3 2 3 3 2 2 3 2 3 2 3 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 60,
        "percent_correct": 76.47058823529412
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1",
        "expected_output": "1 0 0 0 1 1 1 1 2 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 2 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 2 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 2 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 2 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 2 1 0 1 1 1 0 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 2 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 2 1 1 1 1 0 0 1 1 1 1",
        "transformed_output": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 2 1 1 1 1 1 1 0 1 1\n1 1 1 1 2 0 1 1 0 1 0 0 0 1 2 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 2 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 2 1 1 0 0 2 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 2 1 1 1 1\n0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n1 1 1 0 2 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 2 1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 84.21052631578947
      },
      {
        "example": 2,
        "input": "8 8 8 8 0 8 8 8 8 8 0 0 8 8\n0 8 0 0 0 0 8 8 8 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 8\n8 0 8 8 0 8 8 0 0 8 0 8 8 0\n8 8 8 8 0 8 8 0 0 0 0 8 8 8\n8 8 8 0 0 8 8 0 8 0 0 8 8 8\n8 0 8 8 0 8 8 8 8 8 0 0 0 8\n8 8 0 0 0 8 0 0 8 8 0 0 8 8\n8 0 0 8 0 8 8 8 0 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 0\n0 8 0 8 0 0 0 0 0 0 0 8 0 8\n8 8 8 8 0 8 8 8 8 8 0 0 8 0",
        "expected_output": "8 8 8 8 2 8 8 8 8 8 2 0 8 8\n0 8 0 0 2 0 8 8 8 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 8\n8 0 8 8 2 8 8 0 0 8 2 8 8 0\n8 8 8 8 2 8 8 0 0 0 2 8 8 8\n8 8 8 0 2 8 8 0 8 0 2 8 8 8\n8 0 8 8 2 8 8 8 8 8 2 0 0 8\n8 8 0 0 2 8 0 0 8 8 2 0 8 8\n8 0 0 8 2 8 8 8 0 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 0\n0 8 0 8 2 0 0 0 0 0 2 8 0 8\n8 8 8 8 2 8 8 8 8 8 2 0 8 0",
        "transformed_output": "8 8 8 8 2 8 8 8 8 8 0 0 8 8\n0 8 0 0 2 0 8 8 8 8 0 8 8 8\n8 8 0 8 2 8 8 8 8 8 0 0 8 8\n8 0 8 8 2 8 8 0 0 8 0 8 8 0\n8 8 8 8 2 8 8 0 0 2 0 8 8 8\n8 8 8 0 2 8 8 0 8 2 0 8 8 8\n8 0 8 8 2 8 8 8 8 8 0 0 0 8\n8 8 0 0 2 8 0 0 8 8 0 0 8 8\n8 0 0 8 2 8 8 8 0 8 0 8 8 8\n8 8 0 8 2 8 8 8 8 8 0 0 8 0\n0 8 0 8 2 0 0 0 0 2 0 8 0 8\n8 8 8 8 2 8 8 8 8 8 0 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 91.07142857142857
      },
      {
        "example": 3,
        "input": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 3 0 3 0 0 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 0 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 0 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 0 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 0 3 0 3 3 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 0 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 0 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "expected_output": "3 2 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 2 3 0 3 3 3 0 3 0 3 0 0 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 2 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 2 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 2 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 2 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 2 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 2 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 2 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 2 3 3 3 0 3 0 0 3 0 3 3 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 2 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 2 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 2 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "transformed_output": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 3 2 3 0 0 3 2\n0 0 0 0 2 0 0 0 0 2 0 0 0 0 2\n3 0 0 3 2 0 3 3 0 3 0 3 3 0 2\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 0 2 3 3 0 3 3\n0 0 3 0 3 0 3 0 3 2 0 3 3 3 2\n3 0 0 3 3 3 0 0 3 2 3 3 0 0 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 0 0 3 3 0 3 3 3 3 3 3 3 3 2\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 0 3 0 3 3 3 2\n0 0 0 0 2 0 0 0 0 2 0 0 0 0 2\n3 0 3 0 2 3 0 3 3 2 3 3 3 3 2\n3 0 0 3 2 3 3 0 3 2 3 3 0 0 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 0 3 3 2 3 3 0 0 3 0 3 0 3 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 56,
        "percent_correct": 78.03921568627452
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1",
        "expected_output": "1 0 0 0 1 1 1 1 2 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 2 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 2 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 2 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 2 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 2 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 2 1 0 1 1 1 0 1 1 1 1\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n1 1 1 0 0 1 1 1 2 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 2 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 2 1 1 1 1 0 0 1 1 1 1",
        "transformed_output": "1 0 0 0 1 1 1 1 0 1 1 0 1 0 1 0 1 1 1\n1 0 1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1\n1 1 1 1 0 0 1 1 0 1 0 0 0 1 0 1 0 1 0\n1 0 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 0 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1 1\n1 1 0 1 0 1 1 0 0 0 0 1 0 1 1 0 0 0 1\n1 0 0 1 1 0 1 0 0 1 1 1 1 1 1 1 0 1 0\n1 1 0 0 1 1 1 1 0 1 0 1 1 1 0 1 1 1 1\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n1 1 1 0 0 1 1 1 0 1 0 0 1 1 1 1 1 1 1\n1 1 0 0 1 1 0 0 0 1 1 0 0 0 1 0 1 0 1\n1 0 1 0 1 0 0 1 0 1 1 1 1 0 0 1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 86.8421052631579
      },
      {
        "example": 2,
        "input": "8 8 8 8 0 8 8 8 8 8 0 0 8 8\n0 8 0 0 0 0 8 8 8 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 8\n8 0 8 8 0 8 8 0 0 8 0 8 8 0\n8 8 8 8 0 8 8 0 0 0 0 8 8 8\n8 8 8 0 0 8 8 0 8 0 0 8 8 8\n8 0 8 8 0 8 8 8 8 8 0 0 0 8\n8 8 0 0 0 8 0 0 8 8 0 0 8 8\n8 0 0 8 0 8 8 8 0 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 0\n0 8 0 8 0 0 0 0 0 0 0 8 0 8\n8 8 8 8 0 8 8 8 8 8 0 0 8 0",
        "expected_output": "8 8 8 8 2 8 8 8 8 8 2 0 8 8\n0 8 0 0 2 0 8 8 8 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 8\n8 0 8 8 2 8 8 0 0 8 2 8 8 0\n8 8 8 8 2 8 8 0 0 0 2 8 8 8\n8 8 8 0 2 8 8 0 8 0 2 8 8 8\n8 0 8 8 2 8 8 8 8 8 2 0 0 8\n8 8 0 0 2 8 0 0 8 8 2 0 8 8\n8 0 0 8 2 8 8 8 0 8 2 8 8 8\n8 8 0 8 2 8 8 8 8 8 2 0 8 0\n0 8 0 8 2 0 0 0 0 0 2 8 0 8\n8 8 8 8 2 8 8 8 8 8 2 0 8 0",
        "transformed_output": "8 8 8 8 0 8 8 8 8 8 0 0 8 8\n0 8 0 0 0 0 8 8 8 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 8\n8 0 8 8 0 8 8 0 0 8 0 8 8 0\n8 8 8 8 0 8 8 0 0 0 0 8 8 8\n8 8 8 0 0 8 8 0 8 0 0 8 8 8\n8 0 8 8 0 8 8 8 8 8 0 0 0 8\n8 8 0 0 0 8 0 0 8 8 0 0 8 8\n8 0 0 8 0 8 8 8 0 8 0 8 8 8\n8 8 0 8 0 8 8 8 8 8 0 0 8 0\n0 8 0 8 0 0 0 0 0 0 0 8 0 8\n8 8 8 8 0 8 8 8 8 8 0 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 85.71428571428571
      },
      {
        "example": 3,
        "input": "3 0 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 0 3 0 3 3 3 0 3 0 3 0 0 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 0 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 0 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 0 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 0 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 0 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 0 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 0 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 0 3 3 3 0 3 0 0 3 0 3 3 3 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 0 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 0 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 0 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 0 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "expected_output": "3 2 3 3 3 3 3 0 3 3 3 0 3 0 3\n3 2 3 0 3 3 3 0 3 0 3 0 0 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 0 3 0 0 3 3 0 3 0 3 3 0 0\n3 2 3 3 3 3 3 3 3 3 0 3 3 3 3\n3 2 3 3 3 3 3 3 0 0 3 3 0 3 3\n0 2 3 0 3 0 3 0 3 0 0 3 3 3 0\n3 2 0 3 3 3 0 0 3 0 3 3 0 0 3\n3 2 3 3 3 3 3 0 3 3 3 3 3 0 3\n3 2 0 3 3 0 3 3 3 3 3 3 3 3 0\n3 2 3 3 3 3 3 3 0 3 3 3 0 3 3\n3 2 3 3 3 0 3 0 0 3 0 3 3 3 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 2 3 0 0 3 0 3 3 0 3 3 3 3 0\n3 2 0 3 0 3 3 0 3 0 3 3 0 0 3\n3 2 0 3 3 3 3 3 0 3 3 0 0 3 3\n0 2 3 3 0 3 3 0 0 3 0 3 0 3 0",
        "transformed_output": "3 2 3 3 3 3 3 2 3 3 3 2 3 2 3\n3 2 3 2 3 3 3 2 3 2 3 2 2 3 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 2 2 3 2 2 3 3 2 3 2 3 3 2 2\n3 2 3 3 3 3 3 3 3 3 2 3 3 3 3\n3 2 3 3 3 3 3 3 2 2 3 3 2 3 3\n2 2 3 2 3 2 3 2 3 2 2 3 3 3 2\n3 2 2 3 3 3 2 2 3 2 3 3 2 2 3\n3 2 3 3 3 3 3 2 3 3 3 3 3 2 3\n3 2 2 3 3 2 3 3 3 3 3 3 3 3 2\n3 2 3 3 3 3 3 3 2 3 3 3 2 3 3\n3 2 3 3 3 2 3 2 2 3 2 3 3 3 2\n0 0 0 0 0 0 0 0 0 0 0 0 0 0 0\n3 2 3 2 2 3 2 3 3 2 3 3 3 3 2\n3 2 2 3 2 3 3 2 3 2 3 3 2 2 3\n3 2 2 3 3 3 3 3 2 3 3 2 2 3 3\n2 2 3 3 2 3 3 2 2 3 2 3 2 3 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 97,
        "percent_correct": 61.96078431372549
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}