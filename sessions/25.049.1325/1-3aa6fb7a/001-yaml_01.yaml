task_context: "The task involves transforming a grid based on the properties of connected components of color '8' (azure).  The transformation depends on the vertical position of each component."
objects:
  - type: "grid"
    description: "A 2D array of integers representing colors."
  - type: "connected component"
    color: 8
    description: "A group of contiguous cells of color '8', where contiguity is defined by adjacency (horizontally or vertically)."
predicates:
  - "connected": "(cell1, cell2) - True if cell1 and cell2 are adjacent and of the same color."
  - "color": "(cell, color_value) - True if the cell has the specified color."
  - "average_row_index": "(component, value) - The average row index of all cells in the component."
  - "top_left_cell": "(component, cell) - The cell in the component with the minimum row index, and then minimum column index among those with the minimum row index."
  - "bottom_right_cell": "(component, cell) - The cell in the component with the maximum row index, and then maximum column index among those with the maximum row index."
  - "middle_row_index": "(grid, value) - The integer part of half the height of the grid."
actions:
  - "find_connected_components": "(grid, color_value) -> list[component] - Identifies all connected components of the given color in the grid."
  - "calculate_average_row_index": "(component) -> value - Computes the average row index of cells in the component."
  - "get_top_left_cell": "(component) -> cell - Returns the top-left cell of the component."
  - "get_bottom_right_cell": "(component) -> cell - Returns the bottom-right cell of the component."
  - "get_middle_row_index": "(grid) -> value - Returns the middle row index of the grid."
  - "get_right_neighbor": "(cell) -> cell - Returns the cell immediately to the right of the given cell, if it exists within the grid."
  - "get_left_neighbor": "(cell) -> cell - Returns the cell immediately to the left of the given cell, if it exists within the grid."
  - "set_cell_color": "(grid, cell, color_value) - Sets the color of the specified cell in the grid."
transformation_rule: "For each connected component of color '8' in the input grid: 1. Calculate the average row index of the cells in the component. 2. Determine the middle row index of the input grid. 3. If the average row index is less than the middle row index, find the top-most, left-most cell of the component and change the color of its right neighbor to '1'. 4. If the average row index is greater than or equal to the middle row index, find the bottom-most, right-most cell of the component and change the color of its left neighbor to '1'."