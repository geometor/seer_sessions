{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 517,
        "total": 2314,
        "cached": 0
      },
      "response_time": 8.808039
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2176,
        "candidates": 281,
        "total": 2457,
        "cached": 0
      },
      "response_time": 13.677847
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1532,
        "candidates": 2339,
        "total": 3871,
        "cached": 0
      },
      "response_time": 22.253876
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2278,
        "candidates": 2582,
        "total": 4860,
        "cached": 0
      },
      "response_time": 26.469192
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 4659,
        "candidates": 645,
        "total": 5304,
        "cached": 0
      },
      "response_time": 6.606263
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3670,
        "candidates": 315,
        "total": 3985,
        "cached": 0
      },
      "response_time": 3.645272
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 573,
        "total": 2410,
        "cached": 0
      },
      "response_time": 8.525406
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2271,
        "candidates": 254,
        "total": 2525,
        "cached": 0
      },
      "response_time": 3.315639
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1505,
        "candidates": 2455,
        "total": 3960,
        "cached": 0
      },
      "response_time": 25.155885
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2650,
        "candidates": 1813,
        "total": 4463,
        "cached": 0
      },
      "response_time": 17.326069
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 4259,
        "candidates": 285,
        "total": 4544,
        "cached": 0
      },
      "response_time": 3.651568
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3756,
        "candidates": 414,
        "total": 4170,
        "cached": 0
      },
      "response_time": 4.376423
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 504,
        "total": 2381,
        "cached": 0
      },
      "response_time": 9.668286
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2243,
        "candidates": 466,
        "total": 2709,
        "cached": 0
      },
      "response_time": 5.375231
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1717,
        "candidates": 1651,
        "total": 3368,
        "cached": 0
      },
      "response_time": 18.785703
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2214,
        "candidates": 698,
        "total": 2912,
        "cached": 0
      },
      "response_time": 9.823677
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2706,
        "candidates": 209,
        "total": 2915,
        "cached": 0
      },
      "response_time": 7.733153
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3168,
        "candidates": 484,
        "total": 3652,
        "cached": 0
      },
      "response_time": 4.683293
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "004-py_03-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_04-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 55.00000000000001
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n1 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 70.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n1 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 77.5
      }
    ],
    "006-py_05-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "008-py_06-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n8 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 80.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n8 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 72.5
      }
    ],
    "009-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "010-py_08-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_09-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 20,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 16.666666666666664
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 25.0
      }
    ],
    "012-py_10-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 20,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 16.666666666666664
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 25.0
      }
    ],
    "014-py_11-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n1 8\n1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 45.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n1 8 8\n1 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n1 8 8 8\n1 1 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 72.5
      }
    ],
    "015-py_12-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n1 8\n1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 45.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n1 8 8\n1 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n1 8 8 8\n1 1 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 72.5
      }
    ],
    "017-py_13-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 55.00000000000001
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n1 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 70.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n1 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 77.5
      }
    ],
    "018-py_14-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n8 8\n1 8\n1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 45.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n8 8 8\n1 8 8\n1 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n8 8 8 8\n1 8 8 8\n1 1 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 72.5
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}