objects:
  - name: input_grid
    type: grid
    properties:
      height: variable
      width: variable
      colors: [0-9] # All colors can potentially exist
  - name: blue_stripe
    type: object
    properties:
      color: 1 (blue)
      shape: vertical line
      column_index: variable (can be -1 if not found)
  - name: output_grid
    type: grid
    properties:
      height: same as input_grid
      width: 3
      colors: [0, 3] # Only white and green observed so far
  - name: green_L_top
    type: object
      shape: L (two pixels: one vert, and one horiz to the right)
      color: 3 (green)
  - name: green_L_bottom
    type: object
      shape: mirrored-L (two pixels:one vert, and one horiz to the left)
      color: 3 (green)
actions:
  - find_blue_stripe:
      input: input_grid
      output: blue_stripe.column_index
  - create_output_grid:
      input: input_grid.height, fixed width of 3
      output: output_grid
  - place_green_L_top:
    input: output_grid, blue_stripe_exists
    rule: > # pseudocode
          if (blue_stripe.column_index != -1 AND output_grid.height > 2) 
             output_grid[1,0] = green
             output_grid[0,1] = green
  - place_green_L_bottom:
      input: output_grid, blue_stripe.column_index, input_grid.height
      rule: >
          if (blue_stripe.column_index != -1)
            if (input_grid.height > 1)
               output_grid[height - 2, 0] = green;
               output_grid[height - 1, 2] = green
