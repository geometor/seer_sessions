{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1785,
        "candidates": 679,
        "total": 2464,
        "cached": 0
      },
      "response_time": 9.474964
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2326,
        "candidates": 441,
        "total": 2767,
        "cached": 0
      },
      "response_time": 5.160868
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1692,
        "candidates": 952,
        "total": 2644,
        "cached": 0
      },
      "response_time": 12.712083
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2440,
        "candidates": 428,
        "total": 2868,
        "cached": 0
      },
      "response_time": 4.237126
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1679,
        "candidates": 2271,
        "total": 3950,
        "cached": 0
      },
      "response_time": 24.699525
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3749,
        "candidates": 434,
        "total": 4183,
        "cached": 0
      },
      "response_time": 4.330915
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1785,
        "candidates": 642,
        "total": 2427,
        "cached": 0
      },
      "response_time": 9.84669
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2289,
        "candidates": 571,
        "total": 2860,
        "cached": 0
      },
      "response_time": 5.987524
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1822,
        "candidates": 3388,
        "total": 5210,
        "cached": 0
      },
      "response_time": 31.333252
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3276,
        "candidates": 1940,
        "total": 5216,
        "cached": 0
      },
      "response_time": 19.004693
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 5007,
        "candidates": 582,
        "total": 5589,
        "cached": 0
      },
      "response_time": 4.753622
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 5007,
        "candidates": 435,
        "total": 5442,
        "cached": 0
      },
      "response_time": 5.235023
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1785,
        "candidates": 637,
        "total": 2422,
        "cached": 0
      },
      "response_time": 9.527021
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2281,
        "candidates": 577,
        "total": 2858,
        "cached": 0
      },
      "response_time": 7.719394
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1828,
        "candidates": 4209,
        "total": 6037,
        "cached": 0
      },
      "response_time": 37.730472
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 5831,
        "candidates": 449,
        "total": 6280,
        "cached": 0
      },
      "response_time": 5.42681
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1700,
        "candidates": 2729,
        "total": 4429,
        "cached": 0
      },
      "response_time": 27.516997
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 4219,
        "candidates": 357,
        "total": 4576,
        "cached": 0
      },
      "response_time": 4.621645
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1785,
        "candidates": 562,
        "total": 2347,
        "cached": 0
      },
      "response_time": 9.508767
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2209,
        "candidates": 357,
        "total": 2566,
        "cached": 0
      },
      "response_time": 5.065529
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1608,
        "candidates": 2026,
        "total": 3634,
        "cached": 0
      },
      "response_time": 22.640803
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2181,
        "candidates": 1982,
        "total": 4163,
        "cached": 0
      },
      "response_time": 21.336033
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 3959,
        "candidates": 317,
        "total": 4276,
        "cached": 0
      },
      "response_time": 4.221289
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3430,
        "candidates": 531,
        "total": 3961,
        "cached": 0
      },
      "response_time": 5.480281
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1785,
        "candidates": 567,
        "total": 2352,
        "cached": 0
      },
      "response_time": 9.228417
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2214,
        "candidates": 468,
        "total": 2682,
        "cached": 0
      },
      "response_time": 4.543409
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 1719,
        "candidates": 2297,
        "total": 4016,
        "cached": 0
      },
      "response_time": 26.150423
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 2572,
        "candidates": 1074,
        "total": 3646,
        "cached": 0
      },
      "response_time": 14.093117
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 3436,
        "candidates": 481,
        "total": 3917,
        "cached": 0
      },
      "response_time": 5.42862
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 3811,
        "candidates": 596,
        "total": 4407,
        "cached": 0
      },
      "response_time": 4.90634
    },
    {
      "response_file": "031-response.json",
      "token_usage": {
        "prompt": 1785,
        "candidates": 548,
        "total": 2333,
        "cached": 0
      },
      "response_time": 8.003762
    },
    {
      "response_file": "032-response.json",
      "token_usage": {
        "prompt": 2194,
        "candidates": 454,
        "total": 2648,
        "cached": 0
      },
      "response_time": 5.162043
    },
    {
      "response_file": "033-response.json",
      "token_usage": {
        "prompt": 1704,
        "candidates": 1540,
        "total": 3244,
        "cached": 0
      },
      "response_time": 18.342647
    },
    {
      "response_file": "034-response.json",
      "token_usage": {
        "prompt": 3039,
        "candidates": 830,
        "total": 3869,
        "cached": 0
      },
      "response_time": 6.664698
    },
    {
      "response_file": "035-response.json",
      "token_usage": {
        "prompt": 2081,
        "candidates": 8192,
        "total": 10273,
        "cached": 0
      },
      "response_time": 57.851333
    },
    {
      "response_file": "036-response.json",
      "token_usage": {
        "prompt": 10070,
        "candidates": 847,
        "total": 10917,
        "cached": 0
      },
      "response_time": 7.14169
    },
    {
      "response_file": "037-response.json",
      "token_usage": {
        "prompt": 1785,
        "candidates": 539,
        "total": 2324,
        "cached": 0
      },
      "response_time": 7.884995
    },
    {
      "response_file": "038-response.json",
      "token_usage": {
        "prompt": 2187,
        "candidates": 335,
        "total": 2522,
        "cached": 0
      },
      "response_time": 4.237797
    },
    {
      "response_file": "039-response.json",
      "token_usage": {
        "prompt": 1586,
        "candidates": 2382,
        "total": 3968,
        "cached": 0
      },
      "response_time": 22.8814
    },
    {
      "response_file": "040-response.json",
      "token_usage": {
        "prompt": 1481,
        "candidates": 1757,
        "total": 3238,
        "cached": 0
      },
      "response_time": 18.705568
    },
    {
      "response_file": "041-response.json",
      "token_usage": {
        "prompt": 3017,
        "candidates": 723,
        "total": 3740,
        "cached": 0
      },
      "response_time": 7.772483
    },
    {
      "response_file": "042-response.json",
      "token_usage": {
        "prompt": 3750,
        "candidates": 802,
        "total": 4552,
        "cached": 0
      },
      "response_time": 7.828161
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 0\n5 5 5\n5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5\n5 5 0\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5\n5 5 5\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 0\n5 5 5\n5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5\n5 5 0\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5\n5 5 5\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "005-py_03-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 0\n5 5 5\n5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5\n5 5 0\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5\n5 5 5\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 5 5 5\n5 0 5 5\n5 0 5 0\n0 0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 0 5 0 0\n5 0 0 5 5\n5 5 0 5 0\n0 5 0 5 0\n5 0 0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "009-py_06-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 5 5 5\n5 0 5 5\n5 0 5 0\n0 0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 0 5 0 0\n5 0 0 5 5\n5 5 0 5 0\n0 5 0 5 0\n5 0 0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 5 5 5\n5 0 5 5\n5 0 5 0\n0 0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 0 5 0 0\n5 0 0 5 5\n5 5 0 5 0\n0 5 0 5 0\n5 0 0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 5 5 5\n5 0 5 5\n5 0 5 0\n0 0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 0 5 0 0\n5 0 0 5 5\n5 5 0 5 0\n0 5 0 5 0\n5 0 0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 5 5\n0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "5 5 0\n0 5 0\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "5 0 0 0 0\n0 0 0 5 5\n0 5 5 0 0\n0 5 0 5 0\n5 0 5 5 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 5 0 5\n5 5 0 0\n0 5 0 0\n0 0 5 0\n5 5 5 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "017-py_11-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 5 5\n5 5 5\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 5 5\n5 5 5\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "021-py_14-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 5 5\n5 5 5\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 5 5\n5 5 5\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "022-py_15-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "023-py_16-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 5 5\n5 5 5\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 5 5\n5 5 5\n5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "024-py_17-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 0 5\n0 0 0\n5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "5 0 5\n0 0 0\n5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "026-py_18-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 5 0\n5 5 5\n0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 5 0\n5 5 5\n0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 5 0\n5 5 5\n0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "027-py_19-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "029-py_20-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5\n5 5 5 5 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "030-py_21-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 0 0 0 0\n0 5 0 0 5\n5 0 0 5 0\n0 0 0 5 5\n0 0 5 5 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 0 5 0 5\n5 0 0 0 5\n5 5 0 0 0\n5 0 0 5 5\n5 5 5 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 5 0 5 0\n0 5 5 5 0\n0 5 5 0 5\n5 5 5 0 0\n0 0 5 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "032-py_22-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 0 0\n0 0 5\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 1 1\n1 0 1\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 3\n3 3 0\n3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 1\n1 0 1\n1 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n5 0 0\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5\n5 5 0\n5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "3 0 0\n3 0 0\n0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      }
    ],
    "034-py_23-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 0 0\n0 0 5\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 2 2\n2 0 2\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 4\n4 4 0\n4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 2\n2 0 2\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n5 0 0\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5\n5 5 0\n5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "4 0 0\n4 0 0\n0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      }
    ],
    "036-py_24-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 0 0\n0 0 5\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 2 2\n2 0 2\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 4\n4 4 0\n4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 0 2\n2 0 2\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n5 0 0\n0 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "5 5 5\n5 5 0\n5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "4 0 0\n4 0 0\n0 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      }
    ],
    "038-py_25-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 2 0\n0 2 2\n2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 1 1\n0 1 0\n0 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "5 0 0\n0 5 0\n5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "0 1 0\n0 1 0\n0 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "0 0 0\n0 2 2\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "2 0 2\n2 0 0\n2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n5 0 0\n5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "039-py_26-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "040-py_27-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "041-py_28-test": [],
    "041-py_28-train": [],
    "042-py_29-train": [
      {
        "example": 1,
        "input": "2 0 0 0 0\n0 2 0 0 2\n2 0 0 2 0\n0 0 0 2 2\n0 0 2 2 0",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "",
        "match": "ERROR: transform function returned None",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0\n0 0 1 1 1\n0 1 0 1 1\n0 1 0 1 0\n0 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "",
        "match": "ERROR: transform function returned None",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "3 0 0 0 0\n0 0 0 3 3\n0 3 3 0 0\n0 3 0 3 0\n3 0 3 3 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 5 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "1 0 1 0 0\n1 0 0 1 1\n1 1 0 1 0\n0 1 0 1 0\n1 0 0 0 1",
        "expected_output": "0 5 0\n5 5 5\n0 5 0",
        "transformed_output": "",
        "match": "ERROR: transform function returned None",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "2 0 2 0 2\n2 0 0 0 2\n2 2 0 0 0\n2 0 0 2 2\n2 2 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "",
        "match": "ERROR: transform function returned None",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 6,
        "input": "0 2 0 2 0\n0 2 2 2 0\n0 2 2 0 2\n2 2 2 0 0\n0 0 2 0 2",
        "expected_output": "5 5 5\n0 5 0\n0 5 0",
        "transformed_output": "",
        "match": "ERROR: transform function returned None",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 7,
        "input": "0 3 0 3 0\n3 3 0 0 0\n0 3 0 0 0\n0 0 3 0 0\n3 3 3 0 0",
        "expected_output": "0 0 5\n0 0 5\n5 5 5",
        "transformed_output": "0 0 0\n0 5 0\n5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}