task_variant_observed: true # Example 1 seems to follow a different rule than Examples 2 and 3.
background_color: 7 # Orange
control_column_index: 2
separator_column_index: 3
regions:
  - name: control_column
    columns: [2]
  - name: left_region # Includes separator
    columns: <= 3
  - name: right_region
    columns: > 3
objects:
  - type: pixel
    properties: [color, row, column]
  - type: vertical_line # Implicit separator at column 3
    properties: [column_index: 3, color: 3 # Green (usually)]
transformation_rule_ex2_ex3: # Rule derived from Examples 2 and 3
  scope: right_region # Only pixels in output[r, c > 3] are potentially modified.
  dependency: input[row, control_column_index] # Behavior depends on the pixel at (row, 2).
  action: conditional_overwrite
  condition:
    - trigger_colors: # Colors in control column that trigger the action.
        list: [1, 2, 3, 4, 5, 6, 8, 9] # All colors except background (7) and white (0).
        description: Any color that is not orange (7) and not white (0).
      action_if_triggered:
        type: fill_region
        target_region: output[row, c > 3]
        fill_color: 7 # background_color
    - non_trigger_colors: # Colors in control column that do NOT trigger the action.
        list: [0, 7] # White (0) and background (7).
        description: White (0) or orange (7).
      action_if_not_triggered:
        type: preserve_region
        target_region: output[row, c > 3]
        source: input[row, c > 3] # Pixels remain as they were in the input.
transformation_rule_ex1: # Rule for Example 1 is different and not fully determined.
  status: unknown / complex
  observation: Involves changes even when control pixel is 7 or 0, and changes are not simple fills when control is non-7/non-0.