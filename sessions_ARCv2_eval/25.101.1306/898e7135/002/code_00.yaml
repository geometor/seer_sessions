Input_Grid:
  Pixels: Values 0-9 representing colors.
  Background: White (0).
  Objects: Contiguous blocks of non-zero colors.
  Marker_Colors:
    - Orange (7)
    - Azure (8)
  Content_Colors: {1, 2, 3, 4, 5, 6, 8, 9} # Note: Azure 8 can be content AND marker

Output_Grid:
  Derivation: Based on selection, background determination, and composition.
  Background_Color:
    - If input[0,0] is in Content_Colors (excluding 8 if it's only a marker? No, include 8), use input[0,0].
    - Else, use the most frequent color from Content_Colors present in the input grid.
  Content: A subset of input objects.

Actions:
  - Identify_Objects: Find all contiguous objects (colors 1-9) and their pixel coordinates/masks.
  - Identify_Markers: Find all pixels with Marker_Colors (7, 8).
  - Determine_Background: Apply the background color rule.
  - Select_Content:
    - Filter objects to include only those with Content_Colors.
    - Keep an object if any of its pixels are adjacent (8-way) to any marker pixel.
    - Exclude the object chosen as the background color (if applicable - need to check if background object can also be selected content). *Correction:* Output shows background object (Red 2 in Ex1) is not selected, even if adjacent to markers. So, exclude the background object first.
  - Calculate_Canvas: Find the minimum bounding box containing all pixels of the *selected* content objects in the input grid coordinates.
  - Create_Output: Make a new grid sized Canvas + (1-pixel padding on all sides), filled with Background_Color.
  - Draw_Content: Copy the exact pixel data of each selected content object from its input location to the corresponding location within the padded canvas on the output grid.
