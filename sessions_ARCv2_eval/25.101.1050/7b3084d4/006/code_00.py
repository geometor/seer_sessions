import numpy as np
import math

# --- Input/Output Data ---
inputs = [
    np.array([
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,9,0,9,0,0,0,0,0,0,0,7,7,5,0,0,0,0],[0,0,0,9,9,9,9,0,0,0,0,0,0,0,7,7,0,0,0,0],[0,0,0,9,9,9,0,0,0,0,0,0,0,7,0,7,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,4,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,4,4,4,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3]
    ]),
    np.array([
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,7,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,7,7,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,7,7,7,7,7,0,0,0,0,0,0,0,2,2,2,2,2],[0,0,0,5,7,7,7,7,0,0,0,0,0,0,0,2,2,2,2,2],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,2,2],[0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,2,2,0,2,2],[3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[3,3,3,3,3,3,3,0,0,0,6,0,0,0,0,0,0,0,0,0],[3,3,3,3,3,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0],[3,3,3,3,3,0,0,0,6,6,6,6,6,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,6,6,6,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,6,6,6,6,6,0,0,0,0,0,0,0]
    ]),
    np.array([
        [2,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0],[0,0,0,5,7,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ])
]
outputs = [
    np.array([
        [5,7,7,9,9,9],[7,7,9,9,9,9],[7,4,7,9,3,9],[4,4,4,3,3,3],[4,4,4,4,4,3],[4,4,4,3,3,3]
    ]),
    np.array([
        [5,7,7,7,7,2,2,2,2,2],[7,7,7,7,7,2,2,2,2,2],[7,7,7,7,7,7,2,2,2,2],[7,7,7,7,7,2,2,6,2,2],[7,7,3,7,7,2,2,6,2,2],[3,3,3,3,3,6,6,6,6,6],[3,3,3,3,3,6,6,6,6,6],[3,3,3,3,3,3,3,6,6,6],[3,3,3,3,3,6,6,6,6,6],[3,3,3,3,3,6,6,6,6,6]
    ]),
    np.array([
        [5,7,7,8],[7,8,8,8],[6,6,8,2],[6,6,2,2]
    ])
]

print("| Ex | Anchor    | N   | S | Rel Coord Range (dr, dc)        | Rel Coord Dim | Output Dim | Dim Match |")
print("| :- | :-------- | :-: | :-: | :------------------------------ | :------------ | :--------- | :-------- |")

for i, (inp, outp) in enumerate(zip(inputs, outputs)):
    N = np.count_nonzero(inp)
    S = int(math.sqrt(N)) if N > 0 else 0
    
    anchor_coords_arr = np.argwhere(inp == 5)
    anchor_pos = "N/A"
    min_dr, max_dr, min_dc, max_dc = "-", "-", "-", "-"
    dr_dim, dc_dim = "-", "-"
    dim_match = "-"
    rel_range_str = "N/A"
    rel_dim_str = "N/A"
    output_dim_str = f"({S}, {S})"

    if N > 0 and anchor_coords_arr.size > 0:
        ar, ac = anchor_coords_arr[0]
        anchor_pos = f"({ar}, {ac})"
        
        non_zero_coords = np.argwhere(inp != 0)
        if non_zero_coords.size > 0:
            rows, cols = non_zero_coords[:, 0], non_zero_coords[:, 1]
            dr, dc = rows - ar, cols - ac
            min_dr, max_dr = dr.min(), dr.max()
            min_dc, max_dc = dc.min(), dc.max()
            dr_dim = max_dr - min_dr + 1
            dc_dim = max_dc - min_dc + 1
            rel_range_str = f"({min_dr}..{max_dr}, {min_dc}..{max_dc})"
            rel_dim_str = f"({dr_dim}, {dc_dim})"
            dim_match = (dr_dim == S and dc_dim == S)
        else: # Should not happen if N > 0
             rel_range_str = "Error: No non-zero coords"
             rel_dim_str = "Error"
             dim_match = "Error"

    elif N == 0:
        anchor_pos = "N/A"
        rel_range_str = "N/A (Empty Input)"
        rel_dim_str = "(0, 0)"
        output_dim_str = "(0, 0)"
        dim_match = "N/A"
    elif anchor_coords_arr.size == 0:
         anchor_pos = "None"
         rel_range_str = "N/A (No Anchor)"
         rel_dim_str = "N/A"
         dim_match = "N/A"


    print(f"| {i+1}  | {anchor_pos:<9} | {N:<3} | {S:<1} | {rel_range_str:<31} | {rel_dim_str:<13} | {output_dim_str:<10} | {str(dim_match):<9} |")
