task_description: >
  Modifies one or two columns by drawing vertical patterns based on the location
  and relative position of a unique adjacent Red(2) and Yellow(4) pixel pair.
grid_properties:
  background_color: 8 # Azure
  static_elements: True # Most pixels/objects remain unchanged.
triggering_condition:
  type: adjacent_pixel_pair
  colors: [2, 4] # Red and Yellow
  adjacency: 8-connectivity # includes diagonals
  uniqueness: Assumed unique per grid based on examples.
  identified_pixels:
    red_pixel: (y_red, x_red)
    yellow_pixel: (y_yellow, x_yellow)
target_selection:
  based_on: trigger_pixel_pair_columns
  columns: [x_red, x_yellow] # Can be one or two columns
modification:
  type: column_fill
  vertical_range:
    start_row: 0
    end_row_exclusive: >
      Determined by the minimum row index `r` such that `r > max(y_red, y_yellow)`
      and either `grid[r, x_red]` or `grid[r, x_yellow]` is not the background color (8).
      If no such pixel exists below, use grid height.
  pattern_rule:
    condition: x_red == x_yellow # Pixels are in the same column
    action:
      type: alternating_colors
      target_column: x_red # or x_yellow
      colors: [2, 4] # Red and Yellow
      start_color_rule:
        if_red_below_yellow: # y_red > y_yellow
          start_color: 2 # Red
          alternate_color: 4 # Yellow
        else: # Red above or same row as Yellow
          start_color: 4 # Yellow
          alternate_color: 2 # Red
    fallback_condition: x_red != x_yellow # Pixels are in different columns
    fallback_action:
      type: solid_color_fill
      actions:
        - target_column: x_red
          fill_color: 2 # Red
        - target_column: x_yellow
          fill_color: 4 # Yellow
unchanged_elements:
  - background pixels (color 8)
  - all pixels outside the target column(s)
  - pixels in the target column(s) at or below the calculated end row