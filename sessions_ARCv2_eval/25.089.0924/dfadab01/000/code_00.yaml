task_context:
  grid_size: variable, input and output grids have the same dimensions.
  colors_used_input: [white(0), blue(1), red(2), green(3), yellow(4), gray(5), magenta(6)]
  colors_used_output: [white(0), blue(1), yellow(4), magenta(6)] # Note: Gray(5), Red(2), Green(3) disappear or transform
objects:
  - type: single_pixel
    properties:
      - color: red(2)
      - location: (r, c)
    actions:
      - condition: A 4x4 square anchored at (r, c) fits within grid boundaries.
      - transformation: Replace with a 4x4 hollow square of yellow(4) anchored at (r, c) in the output.
      - else: Remove (becomes white(0)).
  - type: single_pixel
    properties:
      - color: green(3)
      - location: (r, c)
    actions:
      - condition: A 4x4 square anchored at (r, c) fits within grid boundaries.
      - transformation: Replace with a 4x4 hollow square of blue(1) anchored at (r, c) in the output.
      - else: Remove (becomes white(0)).
  - type: single_pixel
    properties:
      - color: any color other than red(2) or green(3) (e.g., gray(5))
    actions:
      - transformation: Remove (becomes white(0)).
  - type: square_2x2
    properties:
      - color: magenta(6)
      - top_left_corner: (r, c)
    actions:
      - condition: r > 0 and c > 0
      - transformation: Draw a 2x2 magenta(6) square anchored at (r-1, c-1) in the output.
      - else: Remove? (Although not seen in examples, assume removal if shift goes out of bounds).
  - type: hollow_square_4x4
    properties:
      - color: blue(1)
      - top_left_corner: (r, c)
    actions:
      - transformation: Draw a 4x4 hollow blue(1) square anchored at (r, c) in the output.
  - type: any_other_object # e.g., hollow_square_4x4 of yellow(4)
    properties:
      - shape: not a single pixel, not 2x2 magenta, not 4x4 hollow blue
    actions:
      - transformation: Remove (becomes white(0)).
relationships:
  - Transformation depends on both the color and shape/size of the input object/pixel.
  - Positional constraints (fitting within bounds, specific shifts) are crucial.
  - Input objects that don't meet specific criteria are discarded.