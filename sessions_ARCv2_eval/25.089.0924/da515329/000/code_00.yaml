task_description: Identify enclosed white regions within an azure boundary and fill them with azure, while turning the boundary white.
grid_properties:
  - dimensions: Variable (e.g., 22x22, 12x12, 16x16)
  - colors: [white (0), azure (8)]
objects:
  - type: contiguous_shape
    color: azure (8)
    location: variable within the grid
    role: acts as a boundary or barrier
  - type: region
    color: white (0)
    properties:
      - location: surrounding the azure shape
      - classification:
          - exterior: reachable from grid border without crossing azure pixels
          - interior: not reachable from grid border without crossing azure pixels
relationships:
  - white pixels are classified based on their connectivity (8-directional adjacency, including diagonals) to the grid border, constrained by the azure pixels acting as barriers.
actions:
  - identify_boundary_pixels: Find all white pixels adjacent (including diagonals) to any edge of the grid.
  - flood_fill: Starting from the boundary white pixels, mark all reachable white pixels (traveling only through white pixels, using 8-directional adjacency). These are the 'exterior' white pixels.
  - transform_pixels:
    - Input azure (8) pixels become white (0) in the output.
    - Input white (0) pixels marked as 'exterior' remain white (0) in the output.
    - Input white (0) pixels *not* marked as 'exterior' (i.e., 'interior') become azure (8) in the output.
output_description: The output grid represents the 'interior' regions of the input grid filled with azure, while the original azure boundary and the 'exterior' regions are white.