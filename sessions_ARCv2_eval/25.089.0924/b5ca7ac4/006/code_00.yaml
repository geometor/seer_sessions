task_context:
  grid_properties:
    - dimensions: Consistent between input and output (22x22 for all examples).
    - background_color: Persists from input to output. Varies between examples (White, Yellow, Blue).
  elements:
    - type: regions
      description: The grid is conceptually divided into a 3x3 grid of 9 rectangular regions.
      properties:
        - size: Determined by dividing the input grid's height (H) and width (W) by 3.
        - row_boundaries: [0, H//3, 2*H//3, H] -> [0, 7, 14, 22]
        - col_boundaries: [0, W//3, 2*W//3, W] -> [0, 7, 14, 22]
        - content: Each region contains a subgrid of pixels from the input grid.
  transformation:
    type: region_permutation
    description: The content (subgrid) of the 9 input regions is copied to 9 output regions according to a fixed permutation map. The relative position of pixels within each region is maintained.
    permutation_map (input_region_index -> output_region_index): # Using 0-based indexing (row, col)
        (0, 0): (0, 0)
        (0, 1): (0, 2)
        (0, 2): (1, 0)
        (1, 0): (1, 1)
        (1, 1): (1, 2)
        (1, 2): (2, 1)
        (2, 0): (2, 2)
        (2, 1): (2, 0)
        (2, 2): (0, 1)
    output_grid:
      - dimensions: Same as input.
      - content: Constructed by placing the permuted region contents into their corresponding new locations, respecting the region boundaries.