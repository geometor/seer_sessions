task_context:
  grid_properties:
    - dimensions: Consistent between input and output (e.g., 22x22).
    - background_color: Persists from input to output. Varies between examples.
  elements:
    - type: regions
      description: The grid is divided into a 3x3 grid of 9 rectangular regions.
      properties:
        - division: Based on integer division of height (H) and width (W) by 3.
        - row_boundaries: [0, H // 3, 2 * H // 3, H]
        - col_boundaries: [0, W // 3, 2 * W // 3, W]
        - size: Regions may have slightly different dimensions due to remainders in division.
        - content: Each region contains the subgrid of pixels from the input grid defined by its boundaries.
  transformation:
    type: region_permutation
    description: The content (subgrid) of each of the 9 input regions is copied to a specific output region according to a fixed permutation map. The output grid is constructed by assembling these copied regions.
    permutation_map (input_region_index -> output_region_index): # Using 0-based indexing (row, col)
      (0,0) -> (0,0)
      (0,1) -> (1,0)
      (0,2) -> (0,1)
      (1,0) -> (2,1)
      (1,1) -> (1,1)
      (1,2) -> (0,2)
      (2,0) -> (1,2)
      (2,1) -> (2,2)
      (2,2) -> (2,0)
    output_grid:
      - dimensions: Same as input.
      - content: Constructed by placing the input region contents into their permuted output locations. The background color is effectively preserved as all pixels are copied.