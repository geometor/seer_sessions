task_elements:
  - grid:
      type: object
      description: A 2D array of digits.
      properties:
        - dimensions: variable (e.g., [12, 12] or [14, 14])
        - unique_values_input: [0, 1, 2, 3]
        - unique_values_output: [0, 1, 2, 3] # Updated based on train_2 output
  - border:
      type: object
      description: A frame composed of a single digit ('3') surrounding the grid's content.
      properties:
        - value: 3
        - thickness: 1 cell (observed)
      relationships:
        - unchanged: between input and output
  - digits:
      type: object
      description: Individual numerical values within the grid cells, excluding the border.
      properties:
        - value_map: conditional based on 2x2 blocks
  - two_by_two_block:
      type: object
      description: A 2x2 square of identical digits (0, 1, or 2).
      properties:
        - digit_value: The digit composing the block (0, 1, or 2).
        - top_left_coord: The (row, col) of the top-left cell of the block.
relationships:
  - identity: Grid dimensions remain constant between input and output for a given example.
  - identity: The border ('3') remains constant.
  - conditional_transformation:
      condition: Input contains a 2x2 block of '0's (L0_block) AND input does NOT contain a 2x2 block of '2's.
      actions:
        - change_value: at L0_block, input '0' -> output '1'.
        - change_value: for ALL input '2's (L2_any), input '2' -> output '0'.
        - identity: all input '1's -> output '1'.
  - conditional_transformation:
      condition: Input contains a 2x2 block of '0's (L0_block) AND input contains a 2x2 block of '2's (L2_block).
      actions:
        - change_value: at L0_block, input '0' -> output '1'.
        - identity: at L2_block, input '2' -> output '2'.
        - find_specific: identify ONE specific 2x2 block of '1's (L1_special). # Specific identification rule TBD (e.g., most central? first found?)
        - change_value: at L1_special, input '1' -> output '0'.
        - identity: all other input '1's -> output '1'.