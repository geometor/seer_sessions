task_type: grid_transformation
grid_properties:
  variable_dimensions: true
  variable_background: true # Identified as most frequent color
  value_set: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
object_roles:
  - role: anchor
    identification: Column (anc_c) with specific non-background values (anchor_vals), often known patterns [{2, 8}, {2}, {5}, {6}] or single consistent value. Priority given to known patterns.
    behavior: Preserved in place in the output. Overwrites initial background and static values in its column.
  - role: static
    identification: Non-background, non-anchor colors (S). Can include colors that act as movers in other examples.
    behavior: Copied from input to output initially. Overwrites initial background. Does *not* get overwritten by movers or conditional/shape generation. May serve as reference for right-side (M=7) generation (specifically S=9).
  - role: mover
    identification: Most frequent non-background, non-anchor color (M).
    behavior: Transformation depends on Mover value (M) and relative position to anchor (left/right). Resulting placements only overwrite background cells.
    left_rules: # Apply if input M coords are mostly < anc_c
      - relative_column: -1
        action: Calculate target (r+dr, c+dc) using M-specific shift (dr1(M), 0). Place M at target if valid coords and target cell is background.
            # dr1: M=4->0, M=3->-1, M=8->-4, M=9->0
      - relative_column: -2
        action: Calculate target (r+dr, c+dc) using M-specific shift (dr2(M), dc2(M)). Place M at target if valid coords and target cell is background. Track success flag_minus_2 if placement occurs.
            # dr2: M=4->-2, M=3->-1, M=8->-4, M=9->-2
            # dc2: M=9->0, else +1
      - relative_column: -3
        action: If M=9, calculate target (r-4, c+0). Place M at target if valid coords and target cell is background. Else (M!=9 or rel_c != -3) remove. # Adjusted dr from -5 to -4
      - relative_column: <-3 (and not M=9, rel=-3)
        action: Remove.
      - conditional_generation: If flag_minus_2 is true: Attempt to place M at specific coords, only if target cell is background.
          # M=4: Target (0, anc_c).
          # M=8: Target (0, anc_c - 1).
          # M=9: Targets (0, anc_c - 1) AND (1, anc_c - 1).
    right_rules: # Apply if input M coords are mostly > anc_c (Observed only for M=7)
      - preservation_rule: Preserve M=7 at (r, anc_c + 1) if input(r, anc_c) is anchor. Place M=7 at this coord in output (overwrites background/static). Store location (pr, pc).
      - removal_rule: Other input M=7 locations are effectively removed.
      - generation_rule: Generate 'V' shape using M=7, positioned relative to static object S=9 properties and (pr, pc). Place M=7 at shape coords if target cell is background.
anomaly_notes:
  - Mover=3 (Ex2): Expected output pattern deviates significantly from the standard left-mover shift rules. The current model cannot replicate this transformation.
  - Mover=8 (Ex4): The defined shift rules (`dr1=-4`, `dr2=-4`) do not accurately predict the expected output positions, even with the "Place on Background" rule correctly preventing static overwrite. The model likely has incorrect parameters for M=8.
  - Mover=9 (Ex5): Adjusting `dr3` to -4 resolves one pixel mismatch. A single pixel difference remains at (2,2) in the expected output, which is not generated by the current rules.
overwrite_logic:
  order:
    1. Background Initialization
    2. Static Placement (overwrites background)
    3. Anchor Placement (overwrites background/static)
    4. Mover Transformation Placement (only overwrites background)
    5. Conditional/Shape Generation Placement (only overwrites background)