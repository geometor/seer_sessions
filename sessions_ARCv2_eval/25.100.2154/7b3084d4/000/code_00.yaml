Example: train_1
Input_Grid:
  Properties:
    Size: 20x20
    Background_Digit: 0
    Foreground_Digits: [3, 4, 5, 7, 9]
  Objects:
    - Type: Cluster
      ID: C1 (9s)
      Digits: [9]
      Location: Top-left quadrant area (approx rows 3-5, cols 3-6)
      Bounding_Box_Content: [[9, 0, 9, 0], [9, 9, 9, 9], [9, 9, 9, 0]] # Size 3x4
    - Type: Cluster
      ID: C2 (7s/5s)
      Digits: [7, 5]
      Location: Top-right quadrant area (approx rows 3-5, cols 13-15)
      Bounding_Box_Content: [[7, 7, 5], [0, 7, 7], [7, 0, 7]] # Size 3x3
    - Type: Cluster
      ID: C3 (4s)
      Digits: [4]
      Location: Bottom-left quadrant area (approx rows 11-15, cols 4-6)
      Bounding_Box_Content: [[0, 4, 0], [0, 4, 0], [4, 4, 4], [4, 4, 4], [0, 4, 4]] # Size 5x3
    - Type: Cluster
      ID: C4 (3s)
      Digits: [3]
      Location: Bottom-right quadrant area (approx rows 16-19, cols 17-19)
      Bounding_Box_Content: [[0, 3, 0], [3, 3, 3], [0, 0, 3], [3, 3, 3]] # Size 4x3
Output_Grid:
  Properties:
    Size: 6x6
    Digits: [3, 4, 5, 7, 9]
    Structure: Appears to be a 2x2 composition of 3x3 subgrids.
  Subgrids:
    - Quadrant: Top-Left (Rows 0-2, Cols 0-2)
      Source_Object: C2 (7s/5s), potentially transformed (rotated)
      Content: [[5, 7, 7], [7, 7, 9], [7, 4, 7]]
    - Quadrant: Top-Right (Rows 0-2, Cols 3-5)
      Source_Object: C1 (9s)
      Content: [[9, 9, 9], [9, 9, 9], [9, 3, 9]] # Note: 3 appears here
    - Quadrant: Bottom-Left (Rows 3-5, Cols 0-2)
      Source_Object: C3 (4s)
      Content: [[4, 4, 4], [4, 4, 4], [4, 4, 4]]
    - Quadrant: Bottom-Right (Rows 3-5, Cols 3-5)
      Source_Object: C4 (3s)
      Content: [[3, 3, 3], [4, 4, 3], [3, 3, 3]] # Note: 4s appear here
Transformation:
  Actions:
    - Identification: Find 4 non-zero digit clusters (C1, C2, C3, C4).
    - Extraction: Get minimal bounding box for each cluster.
    - Cropping: Take the top-left 3x3 section of each cluster's bounding box content.
    - Transformation: Rotate the 3x3 section from C2 (7s/5s) 270 degrees clockwise.
    - Assembly: Arrange the 3x3 sections into a 6x6 grid (Rotated C2 -> TL, C1 -> TR, C3 -> BL, C4 -> BR).
    - Filling: Fill cells that were initially 0 in the assembled 3x3 sections.
      - Rule: Seems based on the dominant digit of the quadrant (TL=7, TR=9, BL=4, BR=3), but with specific exceptions for cells (1,2) and (2,1) which take values (9 and 4 respectively) from adjacent quadrants.
    - Overwriting: Modify specific cell values at the internal boundaries based on neighbor values.
      - Rule: Seems like cell[2,4] takes value from cell[3,4], cell[4,3] from cell[4,2], cell[4,4] from cell[4,3].