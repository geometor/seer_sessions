task_description: Draws red shapes on an azure background based on input blue/green shapes and a yellow marker. The drawing method depends on the number of blue/green shapes and the proximity of the yellow marker to them.

definitions:
  background_color: 8 # azure
  fill_color: 2 # red
  shape_colors: [1, 3] # blue, green
  marker_color: 4 # yellow
  connectivity: 8 # 8-way for identifying shapes

input_elements:
  - object: shape
    description: Contiguous block of pixels using shape_colors.
    properties:
      - count: N (number of distinct shapes)
      - pixels: set of (row, col) tuples for each shape
      - bounding_box: ((min_r, max_r), (min_c, max_c)) for each shape
      - centroid: (avg_r, avg_c) for each shape (relevant if N=1)
  - object: marker
    description: A single pixel with marker_color.
    properties:
      - position: (mr, mc)

derived_features:
  - feature: min_distance_marker_to_bbox
    description: Minimum Manhattan distance from the marker position to any coordinate (r, c) such that r is within [min_r, max_r] and c is within [min_c, max_c] for any shape's bounding box.
    value: min_dist
  - feature: centroid_column (if N=1)
    description: The column index derived from the single shape's centroid's column value (e.g., floor(avg_c)).
    value: cc

transformation_rules:
  - condition: N > 1
    actions:
      - Initialize output grid with background_color.
      - Fill bounding_box of ALL shapes with fill_color.
      - Fill column mc of output grid with fill_color (overwrites).
  - condition: N == 1
    sub_conditions:
      - condition: min_dist <= 2
        actions:
          - Initialize output grid with background_color.
          - Calculate centroid_column (cc) for the shape.
          - Fill the shape's bounding_box with fill_color.
          - Fill column cc of output grid with fill_color (overwrites).
      - condition: min_dist > 2
        actions:
          - Initialize output grid with background_color.
          - Fill pixel at marker position (mr, mc) with fill_color.

output_grid:
  properties:
    - dimensions: Same as input grid.
    - background: background_color (azure)
    - filled_pixels: fill_color (red) according to the applicable rule.