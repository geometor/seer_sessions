task_context:
  description: Draws red patterns on an azure background based on input object locations.
  input_colors:
    - azure (8): Background color.
    - blue (1): Forms shapes.
    - green (3): Forms shapes, treated identically to blue.
    - yellow (4): Single pixel marker.
    - red (2): Present in input, appear below the yellow marker in the same column, seem irrelevant to the output generation logic other than possibly reinforcing the marker's column.
  output_colors:
    - azure (8): Background color.
    - red (2): Color used for drawing output patterns.

input_objects:
  - object_type: shape
    description: Contiguous regions of blue (1) or green (3) pixels.
    properties:
      color: blue (1) or green (3)
      count: Variable (1 to 4 in examples)
      location: Various positions within the grid.
    derived_properties:
      bounding_box: Minimal rectangle enclosing all pixels of a single shape.
  - object_type: marker
    description: A single yellow (4) pixel.
    properties:
      color: yellow (4)
      count: Always 1.
      location: A specific coordinate (row, col) in the grid.
    derived_properties:
      column_index: The column number where the marker is located.

actions:
  - action: initialize_output
    description: Create an output grid of the same dimensions as the input, filled with azure (8).
  - action: find_shapes
    description: Identify all distinct contiguous shapes composed of blue (1) or green (3) pixels.
    tooling: Connected components algorithm (e.g., scipy.ndimage.label).
  - action: count_shapes
    description: Count the number of distinct shapes found.
  - action: find_marker_column
    description: Locate the yellow (4) pixel and determine its column index.
  - action: conditional_draw_boxes
    condition: Only if the number of shapes found is greater than 1.
    description: For each identified shape, calculate its minimal bounding box and fill that rectangular area with red (2) in the output grid.
  - action: draw_line
    description: Fill the entire column specified by the marker's column index with red (2) in the output grid. This overwrites any pixels previously drawn in that column by the draw_boxes action.
