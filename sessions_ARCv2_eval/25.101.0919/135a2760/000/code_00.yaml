elements:
  - object: grid
    properties:
      - height: H (variable)
      - width: W (variable)
      - pixels: 2D array of colors (0-9)
  - object: border
    properties:
      - type: outer (frame)
      - color: FrameColor (F) - varies per task/section (e.g., 3, 4)
      - location: typically row 0, row H-1, col 0, col W-1
      - type: inner (segment delimiter)
      - color: Red (2)
      - location: column 1 and column W-2 within specific rows
  - object: row_segment
    properties:
      - row_index: r
      - start_column: 2
      - end_column: W-3
      - content: sequence of pixels
      - associated_frame_color: F (from grid[r][0])
      - associated_pattern_color: P (non-F, non-Red color in the segment)
      - dominant_pattern: PUnit (repeating sequence of F and P)
  - object: pattern_unit
    properties:
      - colors: ordered list of F and P (e.g., [1, 3], [3, 3, 4], [9, 4])
      - length: L

relationships:
  - Grid contains Borders and Row Segments.
  - Inner Borders (Red=2) define the horizontal boundaries of Row Segments.
  - The Outer Border color defines the Frame Color (F) for Row Segments in that grid/section.
  - Each Row Segment has one Pattern Color (P) and follows one Dominant Pattern (PUnit).
  - Pixels within a Row Segment should ideally follow the sequence defined by the PUnit.

actions:
  - identify_pattern_rows: Find rows 'r' where grid[r][1] == Red(2) and grid[r][W-2] == Red(2).
  - identify_colors: For a pattern row 'r', find FrameColor F = grid[r][0] and PatternColor P.
  - determine_pattern_unit: Analyze the pixel sequence in the row segment (cols 2 to W-3) to find the repeating PUnit. This might involve finding the shortest repeating prefix or the most frequent repeating block.
  - scan_and_correct:
      - Iterate through columns 'c' from 2 to W-3 for the pattern row 'r'.
      - Calculate the expected color 'E' based on PUnit and the column index 'c'.
      - Compare input pixel grid[r][c] with 'E'.
      - If grid[r][c] != E, update the output pixel output[r][c] = E.