task_description: Extract framed content patterns from specific container objects, stack them vertically preserving order, duplicate rows with horizontally symmetrical content, and pad to uniform width.

elements:
  - type: background
    color_description: Most frequent color in the input grid.
    example_1: azure (8)
    example_2: blue (1)
  - type: container_color # Specific color used for framing
    color_description: The non-background color whose objects enclose and are adjacent to the most diverse set of other non-background colors ('true_content').
    example_1: blue (1)
    example_2: red (2)
  - type: container_object
    description: A connected object composed of the 'container_color'.
    properties:
      - must_be_adjacent_to_true_content # Only relevant if touching content
  - type: true_content # Pixels inside/adjacent to container, distinct from container & background
    color_description: Pixels of colors other than background and container_color, found adjacent to container_objects.
    example_1_colors: [orange (7), green (3), yellow (4), magenta (6), maroon (9)]
    example_2_colors: [yellow (4), green (3), azure (8)]
  - type: pattern_content_pixels
    description: A set of connected 'true_content' pixels associated with a single extraction instance.
    properties:
        - adjacent_to_container_object
  - type: pattern_frame_pixels
    description: The subset of 'container_color' pixels from a 'container_object' that are directly adjacent (8-way) to the 'pattern_content_pixels'.
  - type: pattern
    description: A rectangular subgrid extracted from the input, defined by the minimal bounding box enclosing 'pattern_content_pixels' and 'pattern_frame_pixels'.
  - type: output_row
    description: A single row within the final assembled output grid, derived from a row in an extracted 'pattern'.
    properties:
        - horizontally_symmetrical_content # Property determining duplication

actions:
  - identify_background_color: Find the most frequent pixel value.
  - identify_container_color: Find the non-background color C adjacent to the most diverse set of other non-background colors.
  - find_container_objects: Locate all connected objects of container_color C.
  - find_true_content_objects: Locate all connected objects of non-background, non-container colors.
  - group_content_and_extract_patterns:
      1. For each true_content_object (TCO):
          a. Find all container_object pixels adjacent (8-way) to TCO ('adjacent_frame').
          b. If 'adjacent_frame' is non-empty:
              i. Combine coordinates: `pattern_coords = TCO_coords U adjacent_frame_coords`.
              ii. Calculate the minimal bounding box (BB) enclosing `pattern_coords`.
              iii. Extract the subgrid ('pattern') using BB.
              iv. Record the pattern and the minimum row index of `TCO_coords`.
              v. Mark `TCO_coords` as processed to avoid re-extraction.
  - sort_patterns: Order the extracted patterns based on the minimum row index of their original true_content.
  - assemble_and_duplicate_rows:
      1. Create an initial list of rows by taking all rows from the sorted patterns sequentially.
      2. Create a final list of rows. For each row in the initial list:
          a. Add the row to the final list.
          b. Extract the 'true_content' pixels from the row (pixels != background and != container_color).
          c. Check if the sequence of true_content pixels is a horizontal palindrome (reads the same forwards and backwards).
          d. If it is a palindrome and non-empty, add the row to the final list *again*.
  - pad_rows: Calculate the maximum width among rows in the final list. Pad each row symmetrically with the background color to match this width.
  - construct_output: Stack the padded rows.

relationships:
  - pattern_content_pixels are adjacent to pattern_frame_pixels.
  - pattern is the minimal bounding box of pattern_content_pixels and pattern_frame_pixels.
  - output_rows are derived from pattern rows.
  - output_row duplication depends on content symmetry.
  - final_grid is composed of padded output_rows.