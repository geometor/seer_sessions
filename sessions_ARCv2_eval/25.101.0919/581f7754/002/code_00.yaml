Task: Horizontal Alignment Based on Isolated Marker

Input_Features:
  - Grid: 2D array of integers (colors).
  - Background_Color: The most frequent color in the grid.
  - Components: Contiguous blocks of non-background colors.
    - Markers:
      - Type: Strictly isolated single-pixel components (no non-background neighbors).
      - Properties: Position (row, col), Color.
      - Role: Define alignment target. The top-most, left-most marker is the 'Reference Marker'.
    - Objects:
      - Type: Components with size > 1 pixel, or single pixels that are not isolated.
      - Properties: Set of pixels [(r, c)], Set of colors, Center Column (calculated as round(mean(columns))).

Transformation_Rule:
  - Identify_Reference: Find all isolated markers. If none, stop. Select the one with the minimum row, then minimum column as the 'Reference Marker'. Get its column index (`ref_col`).
  - Initialize_Output: Create an output grid of the same dimensions as the input, filled with the Background_Color.
  - Place_Reference_Marker: Copy the Reference Marker to its original position in the output grid.
  - Move_Other_Markers: For each isolated marker *other* than the reference marker, place its color in the output grid at the same row but in column `ref_col`.
  - Move_Objects: For each object:
    - Calculate its center column (`center_col`).
    - Calculate the horizontal shift `dx = ref_col - center_col`.
    - For each pixel `(r, c)` in the object, place its original color in the output grid at `(r, c + dx)`, checking grid boundaries. Overwrite if necessary.
  - Exception: This rule set does not explain Example 2, which involves different mechanics (vertical movement, different marker types/interactions).

Output_Features:
  - Grid: Transformed grid with markers and objects repositioned horizontally based on the `ref_col`.