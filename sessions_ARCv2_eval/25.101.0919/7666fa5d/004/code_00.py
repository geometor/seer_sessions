# Metrics calculation code (conceptual)
import numpy as np

def calculate_metrics(input_grid_list, expected_output_list):
    input_grid = np.array(input_grid_list)
    expected_output = np.array(expected_output_list)
    
    rows, cols = input_grid.shape
    
    background_color = np.argmax(np.bincount(input_grid.flatten()))
    marker_colors = np.unique(input_grid[input_grid != background_color])
    fill_color = 2 # Assumed based on examples
    
    filled_pixels_expected = np.sum(expected_output == fill_color)
    marker_pixels_count = {color: np.sum(input_grid == color) for color in marker_colors}
    
    # Estimate clusters (visual inspection or run clustering separately)
    # For example 1: 2 clusters of yellow (4)
    # For example 2: 2 clusters of green (3)
    
    metrics = {
        "input_size": f"{rows}x{cols}",
        "background_color": background_color,
        "marker_colors": marker_colors.tolist(),
        "marker_pixels_count": marker_pixels_count,
        "fill_color": fill_color,
        "filled_pixels_expected": filled_pixels_expected,
        # Add cluster info if calculated
    }
    return metrics

# Example 1 Data
train1_input = [
    [8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 4, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 4, 8, 8, 8, 4],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 4, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 4, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 4, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 4, 8],
    [8, 8, 4, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 4, 8, 8],
    [8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 4, 8, 8, 8],
    [8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8],
    [8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8],
    [8, 8, 8, 4, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8]
]
train1_output = [
    [8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 4, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 4, 2, 2, 8, 4, 2, 2, 8, 4],
    [8, 8, 8, 8, 8, 8, 8, 8, 2, 2, 4, 2, 2, 2, 4, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 2, 2, 4, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 4, 2, 2, 8, 8, 4, 8, 8, 8, 8, 8, 4, 8],
    [8, 8, 4, 2, 2, 2, 2, 4, 2, 2, 8, 8, 8, 4, 8, 8],
    [8, 8, 8, 2, 2, 2, 4, 2, 2, 2, 2, 8, 4, 8, 8, 8],
    [8, 8, 8, 8, 2, 4, 2, 2, 2, 2, 2, 4, 8, 8, 8, 8],
    [8, 8, 8, 8, 4, 8, 2, 2, 2, 2, 4, 8, 8, 8, 8, 8],
    [8, 8, 8, 4, 8, 8, 8, 2, 2, 4, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 4, 8, 8, 8, 8, 8, 8, 8]
]

# Example 2 Data
train2_input = [
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 3, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 3, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 3, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 8],
    [8, 3, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 8, 8],
    [3, 8, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 3],
    [8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 3, 8],
    [8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8],
    [8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8],
    [8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8],
    [8, 8, 3, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8],
    [8, 3, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8]
]
train2_output = [
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 3, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 3, 2, 2, 8, 8, 3, 2, 2, 8, 8, 8, 8, 8],
    [8, 8, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 8, 8, 8, 8],
    [8, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 8, 8, 8],
    [3, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 8, 8],
    [8, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 8],
    [8, 8, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3],
    [8, 8, 8, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 8],
    [8, 8, 8, 8, 2, 3, 2, 2, 2, 2, 2, 2, 2, 3, 8, 8],
    [8, 8, 8, 8, 3, 2, 2, 2, 2, 2, 2, 2, 3, 8, 8, 8],
    [8, 8, 8, 3, 8, 2, 2, 2, 2, 2, 2, 3, 8, 8, 8, 8],
    [8, 8, 3, 8, 8, 8, 2, 2, 2, 2, 3, 8, 8, 8, 8, 8],
    [8, 3, 8, 8, 8, 8, 8, 2, 2, 3, 8, 8, 8, 8, 8, 8],
    [8, 8, 8, 8, 8, 8, 8, 8, 3, 8, 8, 8, 8, 8, 8, 8]
]

metrics1 = calculate_metrics(train1_input, train1_output)
metrics2 = calculate_metrics(train2_input, train2_output)

print(f"Metrics Example 1: {metrics1}")
print(f"Metrics Example 2: {metrics2}")
