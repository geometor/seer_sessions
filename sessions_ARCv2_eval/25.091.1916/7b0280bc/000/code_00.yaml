task_description: Changes pixel colors based on adjacency rules involving three non-background colors assigned roles (trigger, changing actor, non-changing actor). The trigger changes to gray(5) if near an actor. The changing actor changes to green(3) if near the trigger. Roles are determined by identifying the trigger color (the one with isolated pixels) and applying a fixed mapping.
grid_properties:
  dimensionality: 2
  value_range: 0-9 # colors
  size_constancy: True # Input and output grids have the same dimensions.
objects:
  - type: Background
    properties: Most frequent color, remains unchanged.
  - type: Color Pixels (non-background)
    properties: Three distinct colors per example. Assigned roles based on properties and rules.
roles:
  - role: Trigger Color
    identification: The non-background color that appears as isolated pixels (no same-colored neighbors).
    transformation: Changes to gray (5) if adjacent (8-way) to Changing Actor or Non-changing Actor in the input grid.
  - role: Changing Actor Color
    identification: Determined by Trigger Color via fixed mapping: (Trigger=0 -> Actor=2), (Trigger=4 -> Actor=7), (Trigger=6 -> Actor=1).
    transformation: Changes to green (3) if adjacent (8-way) to Trigger Color in the input grid.
  - role: Non-changing Actor Color
    identification: The remaining non-background color after identifying Trigger and Changing Actor. Also determined by fixed mapping: (Trigger=0 -> Actor=1), (Trigger=4 -> Actor=6), (Trigger=6 -> Actor=2).
    transformation: Never changes color.
relationships:
  - type: Adjacency
    definition: 8-way connectivity (including diagonals). Crucial for triggering color changes.
  - type: Fixed Role Mapping
    definition: A predefined set of rules linking the identified Trigger color to the specific colors acting as Changing and Non-changing Actors.
actions:
  - step: 1. Identify Colors
    inputs: input_grid
    outputs: background_color, non_background_colors (set of 3)
  - step: 2. Identify Trigger Color
    inputs: input_grid, non_background_colors
    criteria: Find the color in non_background_colors that has at least one pixel with no neighbors (8-way) of the same color.
    outputs: trigger_color
  - step: 3. Determine Actor Roles
    inputs: trigger_color, non_background_colors
    logic: Apply fixed mapping ((0->(2,1)), (4->(7,6)), (6->(1,2))) to determine changing_actor_color and non_changing_actor_color from the remaining two colors.
    outputs: changing_actor_color, non_changing_actor_color
  - step: 4. Apply Transformations
    inputs: input_grid, trigger_color, changing_actor_color, non_changing_actor_color
    process: Iterate through each pixel (r, c) of the input grid. Check neighbors in the input grid. Determine output color based on the rules applied to the input state.
    outputs: output_grid