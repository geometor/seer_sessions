task_context:
  description: "Perform a flood fill operation starting from a single seed pixel, bounded by barriers derived from input objects and grid edges."
  background_color: 8 # azure
  seed_color: 3 # green
  barrier_colors_input: [1, 2] # blue, red
  barrier_color_output: 2 # red
  fill_color: 3 # green
  fill_target_color: 8 # azure
  connectivity: 4 # horizontal/vertical neighbors only

elements:
  - element: grid
    description: A 2D array of pixels representing the input and output states.
  - element: seed_pixel
    description: A single pixel with the seed_color (green) in the input grid.
    properties:
      - color: 3
      - count: 1
    actions:
      - serves as the starting point for the flood fill.
  - element: barrier_objects
    description: Contiguous objects in the input grid containing barrier_colors_input (blue and red). Often appear as lines.
    properties:
      - contains_color: 1
      - contains_color: 2
    actions:
      - all pixels within these objects (specifically, blue pixels are converted) become barrier_color_output (red) in the output grid.
      - act as boundaries that stop the flood fill propagation.
  - element: fill_area
    description: The area in the output grid colored with fill_color (green).
    properties:
      - color: 3
      - connected to the seed_pixel via fill_target_color (azure) pixels.
      - bounded by barrier_objects (red) or grid edges.
    actions:
      - generated by replacing fill_target_color (azure) pixels with fill_color (green) during the flood fill process.

relationships:
  - relation: seed_initiates_fill
    subject: seed_pixel
    verb: initiates
    object: fill_area
  - relation: barriers_block_fill
    subject: barrier_objects
    verb: block
    object: fill_area propagation
  - relation: fill_replaces_background
    subject: fill_area
    verb: replaces
    object: background_color pixels (azure)
  - relation: barriers_transform_color
    subject: barrier_objects
    verb: transform
    detail: "Blue pixels within barrier objects change to red in the output."

transformation_summary:
  - step: 1. Identify the single green seed pixel in the input.
  - step: 2. Identify all blue pixels in the input.
  - step: 3. Create the output grid by copying the input grid.
  - step: 4. Change all blue pixels identified in step 2 to red in the output grid.
  - step: 5. Perform a flood fill starting from the green seed pixel's location. The fill color is green, and it replaces azure pixels. The fill propagates horizontally and vertically.
  - step: 6. The fill stops upon encountering any red pixel or the grid boundaries.