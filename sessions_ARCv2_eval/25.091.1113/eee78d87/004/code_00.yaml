task_context:
  description: Creates a patterned 16x16 output grid based on the input grid's colors. The background pattern depends on the minority color. A fixed shape is overlaid if the input contains more than one color.
  input_grid_size: Variable (6x6 in examples)
  output_grid_size: Fixed (16x16)

elements:
  - element: input_grid
    properties:
      - colors: Contains a dominant color and potentially one minority color.
      - dominant_color: The color that appears most frequently. (Orange=7 in examples)
      - minority_color: The color that appears less frequently (if any). (Green=3, Blue=1, Magenta=6 in examples). Assumed unique if present.
      - is_monochromatic: Boolean flag indicating if only the dominant color exists.

  - element: output_grid
    properties:
      - size: 16x16
      - background_pattern:
          description: A grid pattern determined by the dominant input color (D), the minority input color (M), and white (0).
          pattern_rule_1: # Used when M=3 (Green) or input is monochromatic (M=None)
            rule: Cell (r, c) is 0 if r % 3 == 0 or c % 3 == 0, otherwise it is D.
          pattern_rule_2: # Used when M=1 (Blue)
            rule: Cell (r, c) is D if r % 3 == 0 or c % 3 == 0, otherwise it is 0.
          pattern_rule_3: # Used when M=6 (Magenta)
            rule: If column block index (c // 3) is even, use pattern_rule_1. If odd, use pattern_rule_2.
      - overlay_shape:
          description: A fixed shape made of maroon (9) pixels, applied only if the input is not monochromatic.
          shape_name: Blocky 'H'
          color: Maroon (9)
          coordinates: Fixed set of (row, col) pairs. # [(5, 6), (5, 9), (6, 5), (6, 6), (6, 7), (6, 8), (6, 9), (6, 10), (7, 6), (7, 9), (8, 6), (8, 9), (9, 5), (9, 6), (9, 7), (9, 8), (9, 9), (9, 10), (10, 6), (10, 9)]

actions:
  - action: analyze_input_colors
    input: input_grid
    output: dominant_color_value (D), minority_color_value (M), is_monochromatic_flag
    description: Find the most frequent pixel value (D) and the less frequent pixel value (M, if it exists) in the input grid. Determine if the grid is monochromatic.

  - action: create_background_grid
    input: dominant_color_value (D), minority_color_value (M)
    output: initial_output_grid (16x16)
    description: >
      Generate a 16x16 grid based on D and M.
      If M is 3 (Green) or M is None (monochromatic), apply pattern_rule_1 (White lines, D blocks).
      If M is 1 (Blue), apply pattern_rule_2 (D lines, White blocks).
      If M is 6 (Magenta), apply pattern_rule_3 (Alternating column blocks of pattern_rule_1 and pattern_rule_2).
      Handle potential other minority colors with a default pattern (e.g., pattern_rule_1).

  - action: overlay_H_shape
    input: initial_output_grid, is_monochromatic_flag
    output: final_output_grid
    description: If is_monochromatic_flag is false, change the pixels at the predefined 'H' coordinates in the initial_output_grid to maroon (9). Otherwise, return the initial_output_grid unchanged.

relationships:
  - relationship: background_pattern_determination
    from: input_grid (dominant color D, minority color M)
    to: output_grid (background_pattern structure and colors)
  - relationship: overlay_trigger
    from: input_grid (is_monochromatic_flag)
    to: output_grid (inclusion of the maroon 'H' overlay)