task_type: extraction, cropping, object_identification

components:
  - role: input_grid
    type: 2D array of integers (colors)
    properties:
      - contains a background color (white, 0)
      - contains one or more objects made of non-white pixels
  - role: output_grid
    type: 2D array of integers (colors)
    properties:
      - smaller dimensions than the input_grid
      - contains a single object extracted from the input_grid
      - dimensions match the bounding box of the extracted object

objects:
  - type: pixel_group
    definition: A contiguous group of non-white pixels.
    connectivity: 8-way (von Neumann + diagonal neighbors)
    properties:
      - color: composed of various non-white colors (1-9)
      - size: number of pixels in the group
      - location: defined by pixel coordinates
      - bounding_box: minimum rectangle enclosing all pixels of the group

relationships:
  - type: spatial
    description: Objects are located within the input grid, potentially separated by white pixels.
  - type: size_comparison
    description: Objects can be compared based on their size (pixel count).

actions:
  - name: identify_objects
    description: Find all distinct connected components of non-white pixels in the input grid.
    inputs: input_grid
    outputs: list of objects (pixel_groups)
  - name: find_largest_object
    description: Determine which identified object has the maximum number of pixels.
    inputs: list of objects
    outputs: the single largest object
    assumption: There is a unique largest object in the examples provided.
  - name: calculate_bounding_box
    description: Find the minimum and maximum row and column indices for the pixels belonging to the largest object.
    inputs: largest_object
    outputs: bounding_box (min_row, max_row, min_col, max_col)
  - name: crop_grid
    description: Extract the subgrid defined by the bounding box from the input grid.
    inputs: input_grid, bounding_box
    outputs: output_grid

goal: Extract the largest connected component of non-white pixels from the input grid and return it within its minimal bounding box.