task_context:
  description: Fill enclosed white regions with a specific color found elsewhere in the grid.
  grid_properties:
    - dimensions_preserved: True # Output grid has the same height and width as the input.
    - relevant_colors: [white(0), red(2), gray(5), yellow(4), orange(7)] # Colors directly involved in the core transformation.
    - background_color: white(0)

objects:
  - type: BoundaryShapes
    description: Contiguous shapes made of a single non-white color (e.g., red(2) or gray(5)).
    properties:
      - color: Uniform, non-white (observed: red(2), gray(5))
      - function: Potentially enclose regions of white(0) pixels.
  - type: EnclosedRegions
    description: Contiguous regions of white(0) pixels in the input.
    properties:
      - color: white(0)
      - relationship: Must be fully surrounded (adjacent non-diagonal cells) only by pixels of a single BoundaryShape color. Cannot touch the grid edge.
  - type: FillColorPixel
    description: A single pixel in the input grid determining the fill color.
    properties:
      - color: yellow(4) or orange(7) (observed)
      - count: Exactly one instance per input grid.
      - location: Variable.

actions:
  - name: FindFillColor
    description: Identify the unique pixel in the input grid with color yellow(4) or orange(7).
    inputs: input_grid
    outputs: fill_color (value 4 or 7)
  - name: IdentifyEnclosedRegions
    description: Find all connected components of white(0) pixels.
    inputs: input_grid
    outputs: list_of_white_regions
  - name: CheckEnclosure
    description: For each white region, verify if all its adjacent non-white neighbors have the same single color and the region does not touch the grid edge.
    inputs: white_region, input_grid
    outputs: is_enclosed (boolean), boundary_color
  - name: FillRegion
    description: Change the color of all pixels within a confirmed enclosed white region to the fill_color.
    inputs: enclosed_white_region, fill_color, output_grid
    outputs: modified_output_grid

transformation_rule:
  - Step 1: Scan the input grid to find the unique "fill color" pixel (either yellow/4 or orange/7). Store this fill color.
  - Step 2: Create a copy of the input grid as the initial output grid.
  - Step 3: Iterate through the input grid to find connected regions of white(0) pixels.
  - Step 4: For each white(0) region found, check its boundary: examine all pixels immediately adjacent (up, down, left, right) to the pixels in the white region.
  - Step 5: If all these boundary pixels exist (i.e., the region doesn't touch the grid edge) AND they all share the *same* single non-white color, then the region is considered "enclosed".
  - Step 6: If a white region is identified as enclosed, change the color of all pixels within that region in the output grid to the stored "fill color".
  - Step 7: Repeat steps 3-6 until all white regions have been checked.
  - Step 8: The final modified grid is the result.