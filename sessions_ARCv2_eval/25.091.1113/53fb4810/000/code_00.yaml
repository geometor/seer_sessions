task_description: Generates vertical alternating patterns of Red(2) and Yellow(4) in specific columns based on the presence of Red and Yellow pixels within those columns or adjacent columns.

definitions:
  background_color: 8 (Azure)
  target_colors: [2 (Red), 4 (Yellow)]
  stopper_colors: Any non-background color NOT in target_colors (e.g., 1 (Blue), 3 (Green), 5 (Gray), etc.)

column_identification_rules:
  - type: BothTargetsPresent
    condition: A column `x` contains at least one pixel of color 2 (Red) AND at least one pixel of color 4 (Yellow).
    action: Mark column `x` for modification.
    pattern_start_rule: Find the lowest row `y` in column `x` containing a target color. The input color at `(y, x)` is the starting color for the pattern in column `x`.
  - type: AdjacentSingleTargetPair
    condition: An adjacent pair of columns `(x, x+1)` exists where column `x` contains target colors `T_x`, column `x+1` contains target colors `T_{x+1}`, such that `T_x` is a single color from {Red, Yellow}, `T_{x+1}` is the *other* single color from {Red, Yellow}, and neither column contains both.
    action: Mark columns `x` and `x+1` for modification.
    pattern_start_rule: >
      Find the minimum row index `y_min` across all target pixels in columns `x` and `x+1`.
      Identify the target pixel(s) at `y_min`.
      If only one pixel is at `y_min`, its color is the starting color.
      If both columns have a target pixel at `y_min`, the color of the pixel in the left column (`x`) is the starting color.
      This starting color applies to the patterns in *both* columns `x` and `x+1`.

pattern_generation:
  colors: [2 (Red), 4 (Yellow)] # The two colors used in the alternating pattern.
  for_each_modified_column:
    determine_start_color: Use the specific `pattern_start_rule` based on how the column was identified.
    determine_stop_row: Find the smallest row index `y_stop_plus_1` such that the pixel `input[y_stop_plus_1, x]` has a stopper_color. The pattern fills rows 0 to `y_stop = y_stop_plus_1 - 1`. If no stopper pixel exists below, the pattern fills rows 0 to `grid_height - 1`.
    fill_pattern: Fill rows `0` to `y_stop` in the column with the alternating sequence starting with the determined start_color.

output_grid_creation:
  - Start with a copy of the input grid.
  - Apply the pattern_generation rules to overwrite the relevant segments in the modified columns.