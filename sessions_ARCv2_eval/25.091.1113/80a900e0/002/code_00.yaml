elements:
  - type: background_pixel
    properties:
      colors: [white, blue] # Values 0, 1
      pattern: checkerboard
      role: canvas, can be overwritten by projection
  - type: static_pixel
    properties:
      colors: [green] # Value 3
      role: obstacle, blocks projection, remains unchanged in output
  - type: projecting_pixel
    properties:
      colors: [red, yellow, azure] # Values 2, 4, 8
      role: >
        source of projection, remains unchanged in output,
        does NOT block projection from other sources
objects:
  - type: grid
    properties:
      height: variable
      width: variable
      content: background pattern and various foreground pixels (static and projecting)
relationships:
  - type: adjacency
    description: Pixels are neighbors horizontally, vertically, and diagonally.
  - type: blocking
    description: >
      Static pixels (green) present in the input grid block the diagonal projection
      if they lie on the projection path. Projecting pixels do NOT block other projections.
actions:
  - name: copy_grid
    input: input_grid
    output: initial_output_grid
  - name: identify_sources
    input: input_grid
    output: list of coordinates and colors for non-background pixels
  - name: project_color
    input: source_pixel (coordinate, color), input_grid, output_grid
    condition: color is red, yellow, or azure
    effect: >
      Iteratively checks cells along a diagonal path starting from the source_pixel's location.
      Modifies the output_grid by coloring a cell if:
      1. The cell is within grid boundaries.
      2. The corresponding cell in the input_grid is NOT green (3).
      3. The corresponding cell in the input_grid IS a background color (0 or 1).
      The projection continues until boundaries are hit or a green (3) pixel is encountered in the input_grid along the path.
    parameters:
      direction:
        red: up-left (dr=-1, dc=-1)
        yellow: down-left (dr=+1, dc=-1)
        azure: down-left (dr=+1, dc=-1)
rules:
  - >
    Static pixels (green) remain unchanged in the output grid and act as projection obstacles based on their input grid position.
  - >
    Projecting pixels (red, yellow, azure) remain unchanged in the output grid
    and generate projection rays based on their input grid position. They do not block projections from other sources.
  - >
    Projection only overwrites pixels in the output grid if the corresponding pixel in the input grid was a background color (white or blue).
  - >
    The path of projection continues as long as it is within bounds and does not encounter a green (3) pixel in the input grid, even if it passes over locations that originally held other projecting pixels or non-background colors that aren't green.