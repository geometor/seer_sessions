task_description: Reorganize pattern blocks extracted or split from an input grid, using '6' as a separator and '7' as background. The transformation depends on whether separator lines ('6's) perfectly partition the grid horizontally or vertically, or if patterns must be extracted individually.

elements:
  - id: grid
    description: A 2D array of integers.
  - id: background_digit
    value: 7
    description: Represents empty space or background.
  - id: separator_digit
    value: 6
    description: Used to form lines that separate regions or subgrids.
  - id: pattern_digits
    value: [1, 2, 3, 4, 8, 9] # Observed digits in patterns
    description: Digits representing the core patterns/objects, distinct from background and separator.
  - id: horizontal_separator_line
    description: A complete row composed entirely of separator_digits (6).
  - id: vertical_separator_line
    description: A complete column composed entirely of separator_digits (6).
  - id: pattern_region
    description: A connected component of pattern_digits within the grid.
  - id: subgrid
    description: A rectangular section of the input grid obtained by splitting along separator_lines, typically containing one pattern_region and sized appropriately (e.g., 5x5).
  - id: panel
    description: A standardized 5x5 grid used in the output for extracted patterns, padded with background_digit (7). The pattern is placed relative to the top-left corner.

relationships_and_actions:
  - action: identify_separators
    input: grid
    output: list of horizontal_separator_indices, list of vertical_separator_indices
    description: Locates complete rows or columns filled only with the separator_digit (6).
  - action: count_patterns
    input: grid
    output: number_of_patterns
    description: Counts the number of distinct connected components formed by pattern_digits.
  - action: check_partitioning
    input: grid_shape, separator_indices (horizontal or vertical), num_patterns
    output: boolean (does_partition)
    description: >
      Determines if the separators perfectly partition the grid into subgrids of a standard size (assumed 5x5 based on examples) containing one pattern each.
      For horizontal separators: checks if `rows == num_patterns * 5 + len(h_sep)`.
      For vertical separators: checks if `cols == num_patterns * 5 + len(v_sep)`.
  - action: determine_mode
    input: grid, h_separator_indices, v_separator_indices, num_patterns
    output: mode ('split_vertical', 'split_horizontal', 'extract_region'), primary_separator_index (for extract mode)
    description: >
      1. If ONLY vertical separators exist AND they perfectly partition the grid vertically: mode = 'split_vertical'.
      2. Else if ONLY horizontal separators exist AND `len(h_sep) > 1` AND they perfectly partition the grid horizontally: mode = 'split_horizontal'.
      3. Otherwise (e.g., mixed separators, single horizontal separator, no perfect partitioning): mode = 'extract_region'. If a horizontal separator exists, its index (e.g., h_sep[0]) is the primary_separator_index.
  - action: split_grid_vertical
    condition: mode == 'split_vertical'
    input: grid, v_separator_indices
    output: list of subgrids (ordered left-to-right)
    description: Splits the grid along vertical separators.
  - action: split_grid_horizontal
    condition: mode == 'split_horizontal'
    input: grid, h_separator_indices
    output: list of subgrids (ordered bottom-to-top)
    description: Splits the grid along horizontal separators and reverses the order.
  - action: extract_regions_to_panels
    condition: mode == 'extract_region'
    input: grid, primary_separator_index (optional, from determine_mode)
    output: list of panels (ordered based on position: TL, BR, TR, BL)
    description: >
      Finds connected pattern_regions. Creates a 5x5 panel for each, copying the pattern's bounding box content to the top-left.
      Determines region position (Top/Bottom relative to primary_separator_index, Left/Right relative to grid center).
      Sorts panels based on position: Top-Left, Bottom-Right, Top-Right, Bottom-Left.
  - action: construct_output
    input: list of subgrids or panels, mode
    output: output_grid
    description: >
      If mode 'split_vertical': Stack subgrids VERTICALLY, separated by HORIZONTAL 6s lines.
      If mode 'split_horizontal': Concatenate subgrids HORIZONTALLY, separated by VERTICAL 6s lines.
      If mode 'extract_region': Stack panels VERTICALLY, separated by HORIZONTAL 6s lines.
