Grid_Properties:
  - dimensionality: 2
  - background_color: white (0)
  - value_range: 0-9 (colors)
  - size_preservation: Input and Output grids have identical dimensions.

Columnar_Operation:
  - scope: Transformation is applied independently to each column.
  - vertical_dependency: Changes depend on the pixels above within the same column.

Global_State:
  - trigger_determination: A single trigger color applies to the entire grid transformation.
  - trigger_priority: If Red (2) is present anywhere in the input, it is the trigger. Otherwise, if Blue (1) is present, it is the trigger. If neither is present, no changes occur.

Color_Roles:
  - Trigger_Colors: [Red (2), Blue (1)]
  - Susceptible_Colors_Mapping:
      - If Trigger is Red (2): [Gray (5), Green (3)]
      - If Trigger is Blue (1): [Gray (5), Orange (7)]
  - Other_Colors: [White (0), Yellow(4), Magenta(6), Azure(8), Maroon(9)] - These colors are neither triggers nor susceptible in the observed examples and remain unchanged. Green(3) is not susceptible to Blue(1). Orange(7) is not susceptible to Red(2).

Transformation_Rule_Summary:
  - Identify the global trigger color (`C_trigger`) based on priority (Red > Blue).
  - Identify the set of susceptible colors (`S_target`) based on `C_trigger`.
  - For each column:
      - Find the *highest* row index (`r_trigger_min`) containing `C_trigger`.
      - If `C_trigger` exists in the column:
          - For all rows `r` such that `r > r_trigger_min`:
              - If the pixel at `(r, column)` in the *input* grid has a color belonging to `S_target`:
                  - Set the pixel's color at `(r, column)` in the *output* grid to `C_trigger`.
              - Otherwise, the pixel at `(r, column)` in the *output* grid retains its color from the input grid.
      - If `C_trigger` does not exist in the column, the column remains unchanged from input to output.