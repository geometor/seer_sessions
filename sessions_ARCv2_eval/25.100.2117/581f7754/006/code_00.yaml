Grid:
  Dimensions: Variable
  Values: Integers
  BackgroundDetermination: Most frequent color in the input grid.

TransformationModes:
  - Mode A (Component Shift):
    Trigger: Color '3' is absent or is the background color.
    Process:
      1. Identify Background (`B`).
      2. Find connected components (4-way adjacency) of non-`B` cells (`Foreground`).
      3. For each component:
         - If component size is 1 cell: It remains Static (output[r, c] = input[r, c]).
         - If component size > 1 cell: Shift Horizontally.
           - Determine leftmost column (`L`).
           - Determine shift amount (`S`) using a map based on `B`:
             - If `B` == 1: `S = {1: 3, 4: -1}.get(L, 0)`
             - If `B` == 3: `S = {1: 2, 3: -3, 4: -1}.get(L, 0)`
             - Else: `S = 0`
           - For each cell `(r, c)` in component, place value at `(r, c + S)` in output (within bounds).
    TargetExamples: train_1, train_3

  - Mode B (Pattern Matching):
    Trigger: Color '3' is present AND is not the background color.
    Process:
      1. Identify Background (`B`). Initialize output with `B`. Mark all input cells unprocessed.
      2. Identify & Transform Patterns (Order may matter, check for overlaps):
         - Pattern: Vertical column segment in col 2 containing '4' or '6'.
           Action: Shift cells (+2 rows, 0 cols). Mark source cells processed.
         - Pattern: `[[3, 3, 3], [3, 1, 3], [3, 3, 3]]` (3x3 block).
           Action: Shift cells (-1 row, -1 col). Mark source cells processed.
         - Pattern: `[[3, 1, 3, 3]]` (Horizontal).
           Action: Shift cells (-2 rows, 0 cols). Mark source cells processed.
         # Note: Rule for [[3, 3, 3]] removed due to inconsistency.
      3. Static Fallback:
         - Iterate through all input cells `(r, c)`.
         - If `input[r, c]` is not `B` AND cell `(r, c)` is unprocessed:
           - Place `input[r, c]` at `output[r, c]`.
           # No overwrite check needed if output starts as background.
    TargetExamples: train_2

OutputConstruction:
  - Initialize output grid with Background color.
  - Apply transformations (Mode A shifts or Mode B pattern shifts).
  - Apply static placements (Mode A single cells or Mode B fallback).