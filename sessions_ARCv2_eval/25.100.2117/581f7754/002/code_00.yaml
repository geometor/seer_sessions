Grid:
  Dimensions: Variable
  Values: Integers

Identification:
  BackgroundValueDetermination: Most frequent color in the input grid.
    - train_1: 1
    - train_2: 8
    - train_3: 3
  ForegroundValues: All values not equal to the BackgroundValue.
  StaticValueCandidates:
    # Hypothesis: Specific values might be inherently static.
    - Value '2': Static in train_3 (0, 4).
  StaticComponentRule:
    # Hypothesis: Single-cell connected components of non-background, non-static values are static.
    - Example: train_1, single '4' at (17, 5).

TransformationMode:
  # Hypothesis: Task operates in one of two modes per example, selected based on pattern presence.
  - Mode A (Component Shift): Default mode if Mode B patterns are absent.
    - Triggered by: Examples like train_1, train_3.
    - Process:
      1. Identify potentially static values (e.g., '2') and mark them processed.
      2. Find connected components of remaining non-background cells.
      3. Single-cell components are static. Mark and copy them.
      4. Multi-cell components shift horizontally.
      5. Derive shift rule `map(LeftmostColumn -> HorizontalShift)` by comparing input/output positions of all multi-cell components *within the specific example*.
         - train_1 rule: {1: +3, 4: -1}
         - train_3 rule: {1: +2, 3: -3, 4: -1}
      6. Apply shift to each multi-cell component based on its leftmost column and the derived rule. Mark cells processed.
    - Affected Components (Examples):
      - train_1: Object 1 (LM=1, Shift=+3), Object 2 (LM=4, Shift=-1), Object 3 (LM=1, Shift=+3). Object 4 (single '4') static by single-cell rule.
      - train_3: Component 1 (LM=1, Shift=+2), Component 2 (LM=3, Shift=-3), Component 3 (LM=4, Shift=-1). Isolated '2' static by value rule.

  - Mode B (Pattern Matching): Applies if specific complex local patterns are present.
    - Triggered by: Examples like train_2.
    - Process:
      1. Identify potentially static values (e.g., '2' if present) and mark them processed.
      2. Identify all instances of known specific patterns among remaining non-background cells.
      3. Apply the fixed transformation (shift vector) associated with each pattern type. Mark cells processed.
      4. Remaining unprocessed non-background cells are static. Copy them.
    - Pattern -> Transformation Mapping (Observed in train_2):
      - Vertical column (4s, maybe 6s): Shift (rows=+2, cols=0)
      - 3x3 block (3s around 1): Shift (rows=-1, cols=-1)
      - Horizontal `3 3 3`: Shift (rows=-3, cols=0)
      - Horizontal `3 1 3 3`: Shift (rows=-2, cols=0)
    - Static Leftovers (Example train_2): '6' at (8,0), '1' at (4,1).

OutputConstruction:
  - Initialize output grid with BackgroundValue.
  - Process cells according to the selected Mode (A or B), applying static rules and calculated shifts, copying values to the output grid.