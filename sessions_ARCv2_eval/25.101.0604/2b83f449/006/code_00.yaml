Grid:
  Properties:
    - dimensions (height, width)
    - cells containing single digits (0-8)
Objects:
  - Pattern:
      Type: Horizontal sequence
      Value: [7, 7, 7]
      Properties:
        - center_cell_location: (r, c) based on input grid
        - outer_cell_locations: [(r, c-1), (r, c+1)] based on input grid
Actions:
  - Identify: Locate all instances of the [7, 7, 7] Pattern in the input grid.
  - Transform: Modify cell values in an output grid based on rules and precedence, using input grid values and pattern locations.
  - Rules (applied in order of priority):
      - Rule_Core (Priority 1):
          Input: Cell is an outer_cell_location or center_cell_location.
          Output: Change outer cells to 8, center cell to 6.
      - Rule_Vertical_Neighbor (Priority 2):
          Input: Input cell value is 8 AND cell is vertically adjacent to a center_cell_location.
          Output: Change cell to 6.
      - Rule_Adjacent_Neighbor (Priority 3):
          Input: Input cell value is NOT 0, NOT 3, NOT 7, NOT 8 AND cell is orthogonally or diagonally adjacent to any outer_cell_location.
          Output: Change cell to 3.
          Note: This rule is refined to prevent incorrect changes observed previously, but now fails to produce correct '3' outputs derived from input 3 or 8. The precise condition for this transformation is still undetermined.
      - Rule_Copy (Priority 4):
          Input: Cell not modified by any higher priority rule.
          Output: Keep the original input value.
Relationships:
  - Adjacency:
      Type: Orthogonal (Up, Down)
      Used_by: Rule_Vertical_Neighbor (specifically vertical adjacency to center_cell_location)
  - Adjacency:
      Type: Orthogonal and Diagonal (8 neighbors)
      Used_by: Rule_Adjacent_Neighbor (adjacency to outer_cell_location)
  - Precedence: Rules are evaluated and applied strictly in the order: Core -> Vertical_Neighbor -> Adjacent_Neighbor -> Copy. Once a rule modifies a cell, subsequent lower-priority rules do not affect it for that cell.
Notes:
  - The condition for Rule_Adjacent_Neighbor remains uncertain.
  - An unexplained transformation exists where Input `3` at `(0,0)` becomes `8` in the expected output when adjacent to an outer_7_location. This is not currently captured.