elements:
  - object: grid
    description: An 11x11 grid of single digits (integers 0-9).
  - object: pattern_region
    description: A specific 3x3 subgrid pattern [[3,3,3],[3,2,3],[3,3,3]] located at input grid indices [4:7, 4:7].
    properties:
      - pattern_values: [[3,3,3],[3,2,3],[3,3,3]]
      - location: Fixed at rows 4-6, columns 4-6 (slice [4:7, 4:7]).
  - object: border_neighbors
    description: The 12 cells immediately adjacent (N, S, E, W) to the boundary of the pattern_region.
    properties:
      - coordinates: [(3,4), (3,5), (3,6), (4,3), (5,3), (6,3), (7,4), (7,5), (7,6), (4,7), (5,7), (6,7)]
      - values: Vary across examples, primarily containing 6s and 7s in the input.
  - object: digit_6_count
    description: The count of cells with value 6 among the 12 border_neighbors. Alias `count6`.
  - object: transformed_pattern_type_1
    description: The output pattern [[9,9,9],[9,2,3],[3,3,3]] for the pattern_region.
  - object: transformed_pattern_type_2
    description: The output pattern [[9,9,3],[3,2,3],[3,3,3]] for the pattern_region.
  - object: transformed_pattern_type_3
    description: The output pattern [[9,9,9],[9,9,9],[9,9,9]] for the pattern_region.
  - object: digit_9
    description: Represents state/color '9'. Appears in outputs and as input. Some input '9's change to '7' via a secondary rule.
  - object: digit_7
    description: Represents state/color '7'. Acts as background/boundary. Result of secondary transformation on some '9's.

actions:
  - action: copy_grid
    description: Initialize the output grid as a deep copy of the input grid.
  - action: locate_central_pattern
    description: Identify if the 3x3 subgrid at input indices [4:7, 4:7] matches the pattern_region definition.
  - action: analyze_central_neighbors
    description: Examine the values of the 12 border_neighbors in the input grid.
  - action: count_central_border_sixes
    description: Count the occurrences of digit '6' within the 12 border_neighbors (`count6`).
  - action: select_central_transformation
    description: Choose the correct transformed pattern (type 1, 2, or 3) based on the value of `count6`.
  - action: apply_central_transformation
    description: Update the 3x3 region at [4:7, 4:7] in the output grid with the selected transformed pattern.
  - action: apply_secondary_9_to_7_transformation # Rule Undefined
    description: Change specific '9' values (present in the input grid) to '7' in the output grid. The conditions for this change are currently undetermined but observed at specific locations across examples (e.g., (8,7),(8,8) in Ex1; (4,8),(6,8),(8,1),(8,5),(9,2),(9,5) in Ex2; (1,9),(2,10),(8,8),(9,8) in Ex3). This action is not implemented by the current refined logic.

relationships:
  - relationship: central_pattern_transformation_dependency
    description: The transformation applied to the pattern_region is strictly dependent on the `count6` of its border_neighbors.
    properties:
      - condition_1: If `count6` is 0, apply `transformed_pattern_type_1`.
      - condition_2: If `count6` is 11, apply `transformed_pattern_type_2`.
      - condition_3: If `count6` is any other value (1-10 or 12), apply `transformed_pattern_type_3`.
  - relationship: unresolved_secondary_transformation
    description: A secondary transformation changes some input '9' cells to '7' in the output. This process appears independent of the central pattern transformation, and its triggering rule is not yet understood.