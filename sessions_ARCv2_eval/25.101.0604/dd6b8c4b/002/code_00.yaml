elements:
  - object: grid
    description: An 11x11 grid of single digits.
  - object: pattern_region
    description: A specific 3x3 subgrid pattern [[3,3,3],[3,2,3],[3,3,3]] located at input grid indices [4:7, 4:7].
    properties:
      - center_value: 2
      - surrounding_value: 3
      - location: Fixed at rows 4-6, columns 4-6.
  - object: border_neighbors
    description: The 12 cells immediately adjacent (N, S, E, W) to the boundary of the pattern_region. Coordinates are (3,4), (3,5), (3,6), (4,3), (5,3), (6,3), (7,4), (7,5), (7,6), (4,7), (5,7), (6,7).
    properties:
      - values: Vary across examples, primarily containing 6s and 7s.
  - object: digit_9
    description: Represents a state/color '9'. Appears in outputs and sometimes changes to '7'.
  - object: digit_7
    description: Represents a state/color '7', often acting as a background or boundary.
  - object: digit_6
    description: Represents a state/color '6', often acting as a boundary near the pattern_region.
  - object: digit_3
    description: Represents a state/color '3', part of the core pattern.
  - object: digit_2
    description: Represents a state/color '2', the center of the core pattern.

actions:
  - action: copy_grid
    description: Initialize the output grid as a copy of the input grid.
  - action: locate_pattern
    description: Identify if the 3x3 subgrid at input indices [4:7, 4:7] matches the pattern_region definition.
  - action: analyze_neighbors
    description: Examine the values of the 12 border_neighbors surrounding the pattern_region.
  - action: count_border_sixes
    description: Count the occurrences of digit '6' within the 12 border_neighbors (`count6`).
  - action: transform_pattern_region
    description: Modify the values within the 3x3 pattern_region in the output grid based on the result of count_border_sixes.
  - action: update_grid
    description: Apply the transformed pattern_region values to the corresponding location in the output grid.
  # - action: secondary_cleanup (Hypothesized, Not Fully Defined)
  #   description: Change certain '9' values to '7' in the output grid based on rules yet to be determined (potentially involving neighbor counts or other factors). This action is not implemented by the provided code.

relationships:
  - relationship: pattern_transformation_dependency
    description: The transformation applied to the pattern_region is dependent on the count of '6's (`count6`) among its border_neighbors.
    properties:
      - condition_1: If `count6` is 0, the pattern_region transforms to `[[9,9,9],[9,2,3],[3,3,3]]`.
      - condition_2: If `count6` is 12, the pattern_region transforms to `[[9,9,3],[3,2,3],[3,3,3]]`.
      - condition_3: If `count6` is greater than 0 and less than 12, the pattern_region transforms to `[[9,9,9],[9,9,9],[9,9,9]]`.