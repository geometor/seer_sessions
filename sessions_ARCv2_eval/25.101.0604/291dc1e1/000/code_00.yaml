task_description: Extract connected non-background objects from a core grid, pad them to a consistent width determined by the widest object, and stack them vertically.

definitions:
  grid: A 2D array of digits.
  background_color: 8
  border_markers: [0, 1, 2] # Digits indicating border rows/columns
  core_grid: The portion of the input grid excluding border rows/columns and potentially outer layers of background_color.
  object: A connected component of cells in the core_grid containing digits other than the background_color. Connectivity is 4-way.
  bounding_box: The smallest rectangle enclosing an object.
  object_subgrid: The content of the grid within an object's bounding box.

actions:
  - identify_core_grid: Determine the relevant subgrid from the input, excluding borders.
  - find_objects: Locate all connected components of non-background_color digits within the core_grid.
  - extract_subgrids: For each object, extract the subgrid corresponding to its bounding_box.
  - determine_target_width: Find the maximum width among all extracted object_subgrids.
  - pad_subgrids: For each extracted object_subgrid whose width is less than the target_width, pad it symmetrically with the background_color on the left and right until its width equals the target_width.
  - order_subgrids: Arrange the (potentially padded) subgrids based on the top-left coordinate of their corresponding object's bounding_box in the core_grid (top-to-bottom, then left-to-right).
  - concatenate_subgrids: Stack the ordered subgrids vertically to create the final output grid.

relationships:
  - The output grid is composed of modified representations of the objects found in the input's core_grid.
  - The width of the output grid is determined by the width of the widest object found in the input's core_grid.
  - The order of object representations in the output corresponds to the spatial order of the objects in the input.
  - Padding uses the background_color (8).

observation_notes:
  - This rule accurately describes the transformation for examples train_2, train_3, and train_4.
  - Example train_1 appears anomalous under this rule. Its output width (6) does not match the maximum object width (2), and some output subgrids do not seem to result from simple padding of the extracted objects (e.g., `1 2 6 6 6 6` from `[[1,6],[2,6]]`). Further investigation might be needed for train_1, possibly involving a different padding rule or object manipulation based on aspect ratio or other properties specific to that example's border markers.