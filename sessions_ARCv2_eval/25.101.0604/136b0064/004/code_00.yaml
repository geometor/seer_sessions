Grid:
  Input:
    Type: 2D array of integers
    Dimensions:
      Rows: variable (N)
      Columns: 15
    Structure:
      Left_Region (L): Columns 0-6
      Separator: Column 7 (Value '4')
      Right_Region (R): Columns 8-14
  Output:
    Type: 2D array of integers
    Dimensions:
      Rows: N (same as input)
      Columns: 7
State:
  Variable: memory
  Type: 1D array of integers (size 7)
  Initial_Value: `[0, 0, 0, 0, 0, 0, 0]`
  Update_Rule: Updated only when R=0 and L!=0. Stores the output `O` generated in that step.
Relationship: Row-wise transformation from Input to Output, dependent on State.
TransformationRule:
  Type: Conditional, Stateful
  Condition: Check if Input.Right_Region (`R`) for the current row contains any non-zero values.
  Case_1: # R has non-zero values
    Action:
      - Output (`O`) is a direct copy of `R`.
      - `memory` state remains unchanged.
  Case_2: # R contains only zero values
    Action:
      - Examine Input.Left_Region (`L`) for the current row.
      - Sub_Condition_A: Check if `L` contains only zero values.
        - Action:
            - Output (`O`) is typically a copy of the current `memory` state.
            - **Exception:** Under specific, unidentified conditions related to the `memory` state or history, `O` may differ from `memory` (Observed in Ex1 R3, Ex1 R11, Ex3 R7).
            - `memory` state remains unchanged.
      - Sub_Condition_B: Check if `L` contains non-zero values.
        - Action:
            - Determine the output row `O` by applying a complex transformation function: `O = map(L, memory)`.
            - This mapping function depends on both the patterns within `L` and the current state of `memory`. The exact algorithm is not fully determined from the examples.
            - Output is `O`.
            - Update `memory` state to `O`.