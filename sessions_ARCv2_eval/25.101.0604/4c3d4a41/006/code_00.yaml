definitions:
  - name: FRAME_COLOR
    value: 5
  - name: BACKGROUND_COLOR
    value: 0
  - name: CONTENT_COLOR
    value: any color that is not FRAME_COLOR and not BACKGROUND_COLOR

elements:
  - object: grid
    properties:
      - type: 2D array of integers (colors)
      - size: H x W (constant per task)
      - source: input | output
  - object: cell
    properties:
      - coordinates: (r, c) where 0 <= row < H, 0 <= column < W
      - color: integer (from grid)
      - role: determined by color and location relative to main_frame
  - object: main_frame
    properties:
      - color: FRAME_COLOR
      - connectivity: The largest connected component of FRAME_COLOR cells in the input grid that touches at least one edge of the grid.
      - scope: A boolean mask (H x W) indicating membership.

actions:
  - action: identify_main_frame
    inputs:
      - input_grid
      - FRAME_COLOR
    outputs:
      - main_frame_mask: H x W boolean grid
  - action: determine_output_color
    inputs:
      - cell_coordinates: (r, c)
      - input_grid: H x W array
      - main_frame_mask: H x W boolean grid
    process:
      - If main_frame_mask[r, c] is True: return FRAME_COLOR.
      - Get I_curr = input_grid[r, c].
      - If I_curr == BACKGROUND_COLOR: return BACKGROUND_COLOR.
      - If I_curr == FRAME_COLOR: # Non-Frame 5
          - Get I_bel1 = input_grid[r+1, c] (handle boundary -> BACKGROUND_COLOR).
          - If I_bel1 is CONTENT_COLOR: return I_bel1.
          - Else: return BACKGROUND_COLOR.
      - If I_curr is CONTENT_COLOR (C):
          - Check if cell above is same color: `is_top_of_stack = (r == 0 or input_grid[r-1, c] != C)`.
          - If is_top_of_stack: return C.
          - Else (not top of stack):
              - Find stack height h >= 1 downwards: input_grid[r+i, c] == C for 0 <= i < h.
              - Get terminating_color = input_grid[r+h, c] (handle boundary -> BACKGROUND_COLOR).
              - If terminating_color == BACKGROUND_COLOR or terminating_color == FRAME_COLOR: return FRAME_COLOR.
              - Else: return C.
    outputs:
      - output_color: integer for cell (r, c) in the output grid

algorithm:
  - step: Initialize output_grid with same dimensions as input_grid.
  - step: Identify main_frame_mask from input_grid using identify_main_frame.
  - step: For each cell (r, c) from (0, 0) to (H-1, W-1):
      - Execute determine_output_color(r, c, input_grid, main_frame_mask).
      - Assign the result to output_grid[r, c].
  - step: Return output_grid.