elements:
  - object: grid
    description: A 2D array of pixels with color values 0-9.
  - object: background
    color: yellow (4)
    description: The predominant color in the input grid, filling space not occupied by shapes. Can be exterior or interior (hole).
  - object: shape
    color: blue (1)
    property: contiguous (4-connectivity)
    description: Regions of connected blue pixels in the input grid.
  - object: exterior_background
    color: yellow (4)
    property: reachable_from_edge
    description: Background pixels connected to the grid's outer border via a path of yellow pixels (4-connectivity).
  - object: hole
    color: yellow (4)
    property:
      - not_reachable_from_edge
      - enclosed_by_shape
    description: Regions of background color not connected to the grid's outer border. Each hole is enclosed by a single blue shape.
    relationship: located inside the effective area of a shape.
  - object: border
    color: red (2)
    property: thickness_1px
    description: A one-pixel thick frame generated in the output, located where exterior_background pixels were adjacent (8-connectivity) to an original blue shape.
    relationship: immediately surrounds the transformed shape/hole area on the exterior side.
  - object: transformed_shape
    description: The area in the output corresponding to the original blue shape pixels.
    conditional_color:
      - condition: original shape enclosed holes
        color: azure (8)
      - condition: original shape did not enclose holes
        color: blue (1)
  - object: filled_hole
    color: magenta (6)
    description: The area in the output corresponding to the original hole pixels (enclosed yellow pixels).
    condition: Only exists if the original shape enclosed holes.
    relationship: located inside the azure (8) transformed_shape area, potentially touching it.

actions:
  - identify_shapes: Find all distinct contiguous blue (1) shapes (using 4-connectivity).
  - identify_exterior: Find all yellow (4) pixels reachable from the grid edge (using 4-connectivity flood fill). Mark these as `exterior_yellow`.
  - identify_holes: Identify all yellow (4) pixels not marked as `exterior_yellow`. Mark these as `hole_pixels`.
  - associate_holes: For each distinct connected region of `hole_pixels`, determine the single blue shape that encloses it by examining adjacent pixels.
  - determine_shape_type: For each blue shape, check if it encloses any `hole_pixels`.
  - generate_output: Create a new grid.
      - For each `hole_pixel`: set the corresponding output pixel to magenta (6).
      - For each `shape_pixel`:
          if shape encloses holes: set output pixel to azure (8).
          else: set output pixel to blue (1).
      - For each original `shape_pixel`: examine its 8 neighbors in the input.
          if neighbor is `exterior_yellow`: set the corresponding neighbor pixel in the output to red (2).
      - For all remaining pixels (those that were `exterior_yellow` and not turned red): set output pixel to yellow (4).
