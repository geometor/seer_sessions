task_description: Fill enclosed background (white) areas within single-color loops. The fill color depends on the loop's border color and the color of the largest distinct object (if any) inside the loop, excluding objects matching the border color.

elements:
  - type: grid
    properties:
      - background_color: white (0)
      - contains: objects

  - type: object
    properties:
      - composition: contiguous block of non-white pixels of the same color.
      - role:
          - potential_boundary: A candidate object to form a loop.
          - border_loop: A potential_boundary object confirmed to enclose a white region without touching the grid edge.
          - interior_object: An object (non-white, non-border color) located entirely within the region enclosed by a border_loop.
          - exterior_object: An object located outside any border_loop.

  - type: region
    properties:
      - composition: contiguous block of white (0) pixels.
      - state:
          - open: Touches the grid boundary or is adjacent to multiple distinct non-white objects.
          - enclosed: Adjacent *only* to pixels of a single border_loop object and does not touch the grid boundary.

relationships:
  - type: adjacency
    subject: pixel
    object: pixel
    properties:
      - orthogonal (up, down, left, right)

  - type: enclosure
    subject: border_loop (object)
    object: enclosed_region (region)
    condition: All orthogonal neighbors of the enclosed_region pixels are either within the region itself or belong to the *single* border_loop object. The enclosed_region does not contain any pixels on the grid edge (row 0, col 0, row max, col max).

actions:
  - action: identify_components
    input: grid
    output: list of all connected components (both non-white objects and white regions), potentially using scipy.ndimage.label.

  - action: filter_enclosed_white_regions
    input: list of components, grid dimensions
    output: list of enclosed_regions, each associated with its unique border_loop object/color.
    logic: For each white component, check if it touches the grid edge. If not, find all unique neighboring non-white components. If exactly one unique non-white neighboring component exists, the white region is enclosed by it.

  - action: find_largest_interior_object
    input: enclosed_region, border_loop_color, original_grid
    output: color of the largest object within the enclosed_region that is not white (0) and not the border_loop_color (or null if none exists).
    logic: Identify all connected components strictly within the coordinates of the enclosed_region. Filter out white components and components matching the border_loop_color. Find the component with the maximum pixel count among the remaining ones. Return its color.

  - action: determine_fill_color
    input:
      - border_loop_color
      - largest_interior_object_color (or null)
    output: fill_color
    logic: Use predefined mapping:
             (Border=2, Interior=1) -> Fill=3
             (Border=4, Interior=1) -> Fill=5
             (Border=2, Interior=4) -> Fill=9
             (Border=1, Interior=null) -> Fill=6
             (Border=3, Interior=null) -> Fill=3
             (Border=6, Interior=null) -> Fill=7
             (Border=4, Interior=null) -> Fill=4
             (Border=7, Interior=null) -> Fill=6

  - action: apply_fill
    input:
      - grid_to_modify
      - enclosed_region
      - fill_color
    output: modified_grid
    effect: Change the color of all pixels corresponding to the enclosed_region's coordinates to the fill_color.

final_state: The output grid reflects the input grid with all white pixels within identified enclosed regions filled according to the determined fill color. Border loops, interior objects, and exterior objects/regions remain unchanged.