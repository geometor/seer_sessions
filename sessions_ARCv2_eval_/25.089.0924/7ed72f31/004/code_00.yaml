Task: Reflect objects across adjacent red structures.

Grid Properties:
  - Background Color: Most frequent color, excluding Red(2). (White(1) in Ex1, Azure(8) in Ex2).
  - Grid Size: Variable (18x18 in examples).

Objects:
  - Type: Mirror
    - Color: Red (2)
    - Structure: Contiguous blocks of Red pixels.
    - Classification:
        - Horizontal Line (height=1, width>1)
        - Vertical Line (width=1, height>1)
        - Point (width=1, height=1)
    - Role: Defines the axis and type of reflection for adjacent objects. Persists in output.
  - Type: Reflectable Object
    - Color: Any color except Red(2) and Background Color.
    - Structure: Contiguous blocks of non-red, non-background pixels.
    - Property: Must have at least one pixel cardinally adjacent to a pixel of a Mirror object.
    - Role: These objects are copied and reflected. Original object persists in output.
  - Type: Background
    - Color: Most frequent non-red color.
    - Role: Fills empty space. Overwritten by reflected pixels.

Relationships:
  - Adjacency: A Reflectable Object is considered adjacent to a Mirror if any pixel of the Reflectable Object shares an edge (not just a corner) with any pixel of the Mirror object.

Actions:
  - Initialization: Copy the input grid to the output grid. Determine background color.
  - Identification:
    - Find all contiguous Red(2) pixel groups (Mirror objects).
    - Classify each Mirror object as Horizontal Line, Vertical Line, or Point.
    - Find all contiguous non-red, non-background pixel groups (Reflectable Objects).
  - Reflection Trigger: For each Reflectable Object, check for adjacency to any Mirror object.
  - Reflection Process (if adjacent):
    - Identify the specific adjacent Mirror object.
    - Determine reflection type based on Mirror classification:
        - Horizontal Line -> Vertical Reflection
        - Vertical Line or Point -> Horizontal Reflection
    - Determine reflection axis based on the Mirror object's position:
        - Vertical Reflection: Axis is the row of the Horizontal Line Mirror.
        - Horizontal Reflection: Axis is the column of the Vertical Line or Point Mirror.
    - Apply reflection to *all* pixels `(r, c)` of the Reflectable Object:
        - Vertical Reflection: `(rr, rc) = (mirror_row + (mirror_row - r), c)`
        - Horizontal Reflection: `(rr, rc) = (r, mirror_col + (mirror_col - c))`
        - *Note*: The specific `mirror_row` or `mirror_col` used might need refinement, potentially based on the closest point or average, but using the adjacent neighbor's coordinate (`nr` or `nc` from the initial adjacency check) seems most likely based on examples.
  - Update Output: For each calculated reflected pixel `(rr, rc)`:
    - Check if `(rr, rc)` is within grid bounds.
    - If in bounds AND `output_grid[rr, rc]` is the Background Color, set `output_grid[rr, rc]` to the Reflectable Object's color.