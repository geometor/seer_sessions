# YAML representation of observations

# Global Properties
background_color: 4 # yellow
target_color: 7 # orange
affected_color: 1 # blue

# Objects & Properties
pixels:
  - color: {0: white, 1: blue, 2: red, 3: green, 4: yellow, 5: gray, 6: magenta, 7: orange, 8: azure, 9: maroon}
  - property: location (row, column)
  - property: adjacency (orthogonal neighbors)
orange_pixels:
  - description: Pixels with value 7. Act as triggers for removal/modification.
blue_pixels:
  - description: Pixels with value 1. Can be affected if adjacent to orange pixels.
yellow_pixels:
  - description: Pixels with value 4. Often the background color and replacement color.
blocks:
  - description: Potential substructures within the grid (e.g., the 3x3 segments in train_3).
  - property: contains_orange_rows (Boolean)

# Actions & Relationships
find_orange:
  - description: Locate all pixels with color 7.
check_block_structure:
  - description: Determine if the grid is composed of stacked blocks and if any contain full orange rows.
remove_block_rows:
  - description: If blocks with full orange rows exist, remove all rows constituting those blocks.
find_rightmost_contaminated_region:
  - description: Identify the columns associated with the rightmost occurrence of orange within a non-background region. (Precise definition might vary, potentially the rightmost connected component of non-yellow pixels that contains an orange pixel).
crop_columns:
  - description: Remove the columns identified in the previous step from the grid.
replace_pixels:
  - description: In the remaining grid area, change specific pixels to the background color (4).
  - condition: Applies to remaining orange (7) pixels.
  - condition: Applies to blue (1) pixels orthogonally adjacent to an original orange pixel location.

# Transformation Scenarios
scenario_block_removal:
  - trigger: Grid contains identifiable blocks where at least one block has full rows of orange pixels.
  - action: Execute remove_block_rows.
scenario_crop_and_cleanup:
  - trigger: Grid does not meet the conditions for scenario_block_removal, but contains orange pixels.
  - action_1: Execute find_rightmost_contaminated_region.
  - action_2: Execute crop_columns based on the region found.
  - action_3: Execute replace_pixels on the resulting cropped grid (referencing original orange locations for adjacency checks).

# Anomaly
train_4_inconsistency:
  - description: The input/output pair for train_4 does not conform to the observed patterns, involving row removal and column addition simultaneously. Potential data error or a third rule.
