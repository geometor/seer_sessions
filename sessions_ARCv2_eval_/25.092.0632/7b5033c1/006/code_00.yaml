task_description: Filter out background pixels and flatten the remaining pixels into a column vector based on scan order.
elements:
  - name: input_grid
    type: 2D array/grid of integers (pixels)
    properties:
      - Contains a background color.
      - Contains foreground pixels (colors different from the background).
      - Size varies per example (seen 16x16).
      - Can be represented as list-of-lists or NumPy array.
  - name: output_grid
    type: 2D array/grid of integers (pixels)
    properties:
      - Always has a width of 1 (column vector).
      - Height equals the total count of foreground pixels in the input grid.
      - Contains only the foreground colors from the input grid.
      - Order of pixels matches the scan order of foreground pixels in the input.
  - name: background_color
    type: integer (pixel value)
    determination: The color/value of the pixel at the top-left corner (index [0][0]) of the input grid.
  - name: foreground_pixels
    type: list of integers (pixel values)
    determination: All pixels in the input grid whose color value does not match the background_color.
relationships:
  - The sequence of pixels in the output_grid corresponds directly to the order in which foreground_pixels are encountered when scanning the input_grid row by row (top to bottom), and within each row, column by column (left to right).
actions:
  - Identify the background_color from input_grid[0][0].
  - Scan the input_grid row by row (top to bottom), and within each row, column by column (left to right).
  - For each pixel, compare its value to the background_color. Ensure comparison works for single integer values.
  - Filter out pixels matching the background_color.
  - Collect the values of the remaining foreground_pixels in the scan order.
  - Reshape the collected list of foreground_pixel values into a single column (Nx1 grid) to form the output_grid.