task_description: "Flood fill with azure color based on a color palette and background color."

input_elements:
  - element: Palette
    location: Top section (rows 0-5 typically)
    properties:
      - border: Gray (5)
      - content: Contains pairs of [Color, White (0)]
    purpose: Defines 'paintable' foreground colors.
  - element: Canvas
    location: Bottom section (below Palette)
    properties:
      - background_color: Dominant color in this section (varies per example).
      - content: Contains various colored objects/regions.
      - includes: Azure (8) 'seed' pixels.
    purpose: The area where the transformation takes place.
  - element: Azure_Seed
    location: Within the Canvas
    color: Azure (8)
    purpose: Starting points for the flood fill.

transformation:
  - action: Identify_Paintable_Colors
    inputs: [Palette, Canvas]
    outputs: [Set of paintable colors]
    logic: >
      Combine the non-white colors found next to white (0) in the Palette
      with the dominant background color of the Canvas.
  - action: Flood_Fill
    inputs: [Canvas, Azure_Seed, Set of paintable colors]
    outputs: [Modified Canvas]
    logic: >
      Starting from the Azure_Seed pixels, recursively change adjacent (8-way connectivity)
      pixels to Azure (8) if their current color is in the Set of paintable colors.
      Pixels with non-paintable colors block the fill. Original Azure_Seed pixels remain Azure.
  - action: Remove_Palette
    inputs: [Input Grid]
    outputs: [Output Grid]
    logic: The final output grid consists only of the modified Canvas.

output_elements:
  - element: Modified_Canvas
    properties:
      - background_color: Same as input canvas, potentially partially overwritten by azure.
      - azure_regions: Expanded areas originating from Azure_Seed, covering previously paintable adjacent areas.
      - other_regions: Regions with non-paintable colors remain unchanged.