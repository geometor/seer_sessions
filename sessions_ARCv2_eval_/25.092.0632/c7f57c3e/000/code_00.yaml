task_context:
  grid_size: [18, 18]
  background_color_dependent_rules: true

example_1:
  background_color: Yellow (4)
  involved_colors: [Yellow (4), Blue (1), Red (2), Green (3), Azure (8)]
  transformations:
    - action: swap_colors
      color_1: Green (3)
      color_2: Azure (8)
      scope: all_pixels
    - action: change_color
      target_color: Red (2)
      new_color: Azure (8)
      condition: pixel_is_adjacent_to_original_green_location
      scope: specific_red_pixels
  unaffected_colors: [Blue (1), Yellow (4)] # Except background

example_2:
  background_color: Green (3)
  involved_colors: [Green (3), Blue (1), Red (2), Yellow (4), Magenta (6)]
  properties:
    trigger_pixel: Magenta (6) # Assumed unique
    target_pixels: Yellow (4)
  transformations:
    - action: identify_trigger
      color: Magenta (6)
    - action: identify_targets
      color: Yellow (4)
    - action: find_min_row_target
      pixels: target_pixels
      result: min_row_target_location
    - action: change_color
      target_color: Yellow (4)
      new_color: Magenta (6)
      scope: all_target_pixels
    - action: change_color
      target_location: original_trigger_location
      new_color: Green (3) # Background color
      scope: single_pixel
    - action: add_pixel
      color: Magenta (6)
      location: [0, min_row_target_location.column]
      scope: single_pixel
  unaffected_colors: [Blue (1), Red (2), Green (3)] # Except background fills
