task_elements:
  - name: Placeholder Color Identification
    description: Identify a color that appears consistently as internal pixels within multiple larger regions ('templates') and also as the background for other distinct patterns ('patterns').
    examples:
      - train_1: Azure (8) is inside Blue(1)/Yellow(4) templates and background for Red(2)/Green(3) patterns.
      - train_2: Red (2) is inside Yellow(4)/Green(3)/Azure(8)/Blue(1) templates and background for Maroon(9)/Gray(5)/Blue(1)/Orange(7) patterns.

  - name: Template Objects
    description: Contiguous regions defined by a primary outer color, containing internal pixels of the 'Placeholder Color'. These act as the base shapes for the output.
    properties:
      - location (bounding box)
      - outer_color
      - internal_placeholder_color
      - size (height, width)
    examples:
      - train_1: Blue(1)/Azure(8) region (6x6), Yellow(4)/Azure(8) region (6x6).
      - train_2: Yellow(4)/Red(2) region (8x8), Green(3)/Red(2) region (8x8), Azure(8)/Red(2) region (8x8), Blue(1)/Red(2) region (8x8).

  - name: Pattern Objects
    description: Regions predominantly consisting of the 'Placeholder Color' but containing a distinct pattern made of another color ('Pattern Color'). These provide the fill colors for modifying templates.
    properties:
      - location (bounding box)
      - pattern_color
      - background_placeholder_color
    examples:
      - train_1: Red(2) pattern within Azure(8) background, Green(3) pattern within Azure(8) background.
      - train_2: Maroon(9) pattern within Red(2) background, Gray(5) pattern within Red(2) background, Blue(1) pattern within Red(2) background, Orange(7) pattern within Red(2) background.

  - name: Template-Pattern Pairing
    description: A rule mapping each Template Object to a specific Pattern Object. The Pattern Color from the paired Pattern Object determines the replacement color for the Placeholder Color pixels within the Template Object.
    observed_pairings:
      - train_1: Blue/Azure template -> Red pattern; Yellow/Azure template -> Green pattern.
      - train_2: Yellow/Red template -> Maroon pattern; Green/Red template -> Orange pattern; Azure/Red template -> Blue pattern; Blue/Red template -> Gray pattern.
    hypothesis: The pairing might be based on relative spatial positions or order of detection, although the exact mechanism isn't fully determined yet.

  - name: Pixel Replacement Action
    description: Within each Template Object's grid, replace all pixels matching the 'Placeholder Color' with the 'Pattern Color' obtained from its paired Pattern Object.
    target: Pixels matching Placeholder Color inside Template Object grid.
    replacement: Pattern Color from the paired Pattern Object.

  - name: Output Grid Assembly
    description: Arrange the modified Template Object grids to form the final output grid. The arrangement preserves the relative spatial positioning of the original Template Objects.
    properties:
      - output_dimensions (derived from template sizes and count)
      - arrangement (e.g., horizontal concatenation, 2x2 grid)
    examples:
      - train_1: Two 6x6 modified templates arranged horizontally -> 6x12 output.
      - train_2: Four 8x8 modified templates arranged in a 2x2 grid based on original positions -> 16x16 output.