task_type: grid_transformation
transformation_name: conditional_region_fill
elements:
  - role: grid
    property: background_color
    value: most_frequent_color_in_input
  - role: object
    property: color
    value: any_color_except_background
  - role: object
    property: contiguity
    value: group_of_connected_pixels_of_same_color
    connectivity: 4-way (horizontal/vertical adjacency)
  - role: boundary_object
    property: largest_object_by_pixel_count
    value: identified_from_all_non_background_objects
  - role: other_object
    property: any_non_background_object_that_is_not_the_boundary_object
  - role: region
    type: outside_background
    property: background_pixels_connected_to_grid_edge
    identification: flood_fill_from_edge_pixels_with_background_color
  - role: region
    type: enclosed_background
    property: background_pixels_not_connected_to_grid_edge
    identification: set_difference_of_all_background_pixels_and_outside_background_pixels
    existence_condition: is_not_empty
  - role: fill_source
    condition: if_enclosed_background_exists
    identification: find_other_objects_adjacent_to_enclosed_background_pixels
    value: color_of_adjacent_other_objects (if unique, else potentially most frequent or largest) # Example 3 suggests unique Green(3)
  - role: fill_source
    condition: if_no_enclosed_background_exists
    identification: find_smallest_other_object_by_pixel_count
    value: color_of_smallest_other_object
actions:
  - name: determine_background_color
  - name: find_all_non_background_objects
    tool: connected_components_labeling (e.g., skimage.measure.label)
  - name: identify_boundary_object
    based_on: largest_size
  - name: identify_other_objects
  - name: identify_outside_background_region
    tool: flood_fill_from_edge
  - name: identify_enclosed_background_region
    based_on: set_difference
  - name: check_existence_of_enclosed_region
  - name: determine_fill_color
    logic: conditional_based_on_enclosed_region_existence
      - if_enclosed: get_color_from_adjacent_other_objects
      - if_not_enclosed: get_color_from_smallest_other_object
  - name: determine_fill_region
    logic: conditional_based_on_enclosed_region_existence
      - if_enclosed: use_enclosed_background_region
      - if_not_enclosed: use_outside_background_region
  - name: apply_fill
    inputs:
      - original_grid
      - fill_region_coordinates
      - fill_color
    output: modified_grid
    preserve: all_pixels_not_in_fill_region