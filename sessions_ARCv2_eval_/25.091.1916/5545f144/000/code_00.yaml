task_description: Extract a specific horizontal section (subgrid defined by a range of columns) from the input grid based on color patterns.
components:
  - id: grid
    type: 2D_array
    properties:
      height: H
      width: W
      pixels: colored_cells[0-9]
  - id: background
    type: color
    description: The most frequent color in the input grid.
  - id: vertical_lines
    type: object_set
    description: A set of one or more vertical lines spanning the full height (H) of the grid, composed of a single color distinct from the background.
    properties:
      line_color: The color of the vertical lines.
      column_indices: A list of the column indices where these lines occur.
  - id: scattered_pixels
    type: pixel_set
    description: A set of pixels of a single color, distinct from the background and line_color, distributed across the grid.
    properties:
      scatter_color: The color of these pixels.
  - id: regions
    type: implicit_concept
    description: Contiguous horizontal segments of the grid defined by the spaces between/around the vertical_lines.
    properties:
      boundaries: Determined by the column_indices of vertical_lines and grid edges (0, W-1).
      content: Pixels within each region.
      scatter_density: The count of scattered_pixels within each region.
transformation:
  - step: 1
    action: identify_colors
    inputs: input_grid
    outputs: background_color, potential_line_color, potential_scatter_color
    description: Find the most frequent color (background) and the two other unique colors present.
  - step: 2
    action: identify_line_color_and_columns
    inputs: input_grid, potential_line_color, potential_scatter_color
    outputs: line_color, scatter_color, line_columns
    description: Determine which non-background color forms full-height vertical lines (line_color) and find the columns (line_columns) where these occur. The remaining non-background color is the scatter_color.
  - step: 3
    action: define_regions
    inputs: grid_width, line_columns
    outputs: list_of_regions (each defined by start_col, end_col)
    description: Define the horizontal segments separated by the line_columns. Region 1 is [0, c1-1], Region i is [c(i-1)+1, ci-1], ..., Last Region is [clast+1, W-1].
  - step: 4
    action: count_scatter_pixels_in_regions
    inputs: input_grid, scatter_color, list_of_regions
    outputs: scatter_counts_per_region
    description: For each region, count how many pixels match the scatter_color.
  - step: 5
    action: select_target_region
    inputs: list_of_regions, scatter_counts_per_region
    outputs: target_region (start_col, end_col)
    description: Identify the region with the maximum count of scatter_color pixels.
  - step: 6
    action: extract_subgrid
    inputs: input_grid, target_region
    outputs: output_grid
    description: Create the output grid by selecting the columns defined by the target_region from the input_grid, maintaining the original height.
relationships:
  - type: structural
    entities: [vertical_lines, regions]
    description: The vertical_lines act as delimiters partitioning the grid into distinct horizontal regions.
  - type: conditional_selection
    entities: [regions, scattered_pixels]
    description: The region selected for the output is determined by which region contains the highest density (count) of scattered_pixels.