task_type: grid_transformation
grid_properties:
  size_relation: input and output grids have identical dimensions.
  value_type: integer pixel values (0-9) representing colors.
  background_color: white (0) is the background.
transformation_components:
  - object_identification:
      description: Individual non-white pixels in the input grid act as sources.
      properties:
        - color: The color C of the source pixel.
        - position: The (row, col) coordinates of the source pixel.
  - action:
      description: Draw a diagonal line (down and to the right) originating from each source pixel.
      details:
        - starting_point: The line path starts one cell diagonally down-right from the source pixel, at (row + 1, col + 1).
        - path_progression: The line continues step-by-step, moving one cell down and one cell right (r+1, c+1) at each step.
        - coloring: Each cell along the path is colored with the color C of the source pixel.
        - grid_wrapping:
            - Horizontal: If the column index c reaches the grid width W, the next column index becomes 0 (c mod W).
            - Vertical: If the row index r reaches the grid height H, the next row index becomes 0 (r mod H).
        - stopping_condition: The drawing process for a specific source pixel's line stops if the *next* cell to be colored (r_next, c_next) in the path is already non-white (i.e., not 0) in the evolving output grid. The path stops *before* overwriting the existing non-white pixel.
  - process_order:
      description: The order in which source pixels are processed might matter if lines intersect. While not explicitly tested by the failed code, iterating through the input grid (e.g., row by row, column by column) is a standard approach. The output grid is progressively updated.
  - initial_state:
      description: The transformation starts with an output grid initialized as a copy of the input grid.