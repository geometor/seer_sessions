import numpy as np

# Assuming 'task' is available and contains training pairs
def inspect_examples(task):
    results = []
    for i, example in enumerate(task['train']):
        input_grid = np.array(example['input'])
        output_grid = np.array(example['output'])
        green_pixels_input = np.where(input_grid == 3)
        green_pixels_output = np.where(output_grid == 3)

        green_pixels_input_coords = list(zip(green_pixels_input[0], green_pixels_input[1]))
        green_pixels_output_coords = list(zip(green_pixels_output[0], green_pixels_output[1]))


        changes = []

        for r, c in green_pixels_input_coords:
            original_color = input_grid[r, c]
            new_color = output_grid[r, c]
            changes.append(
                {
                'row': r,
                'col': c,
                'original_color': int(original_color),
                'new_color': int(new_color),
                }
            )
        results.append(
            {
              'example': i,
              'input_shape': input_grid.shape,
              'output_shape': output_grid.shape,
              'green_pixels_input': len(green_pixels_input_coords),
              'green_pixels_output': len(green_pixels_output_coords),
              'changes': changes,
            }
        )
    return results
task_data = {} # placeholder - will be replaced during actual grading
results=inspect_examples(task_data)
print(results)