# Hypothetical code execution and metric gathering.
# example_results contains input, expected output and actual output
# from executing the code for each training sample
example_results = [
    {
        "input": [[0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 8, 0, 0, 0, 0, 0, 0], [0, 0, 8, 0, 0, 2, 2, 2, 2]],
        "expected": [[8, 0, 0], [8, 0, 0], [8, 0, 0]],
        "actual": [[8, 0, 0], [8, 0, 0], [8, 0, 0]],
    },
    {
        "input": [[0, 0, 0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0, 0], [2, 2, 2, 2, 8, 0, 0, 0]],
        "expected": [[0, 8, 0], [0, 8, 0], [0, 8, 0]],
        "actual": [[0, 8, 0], [0, 8, 0], [0, 8, 0]],
    },
    {
        "input": [[8, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 8]],
        "expected": [[8, 0, 0], [0, 0, 8], [0, 0, 8]],
        "actual": [[8, 0, 0], [0, 0, 0], [0, 0, 8]],
    },
        {
        "input": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0]],
        "expected": [[8], [8], [8], [8]],
        "actual": [[0, 8, 0], [0, 8, 0], [0, 8, 0]],
    },
]

for i, example in enumerate(example_results):
    input_grid = example['input']
    expected_grid = example['expected']
    actual_grid = example['actual']

    input_rows, input_cols = len(input_grid), len(input_grid[0])
    expected_rows, expected_cols = len(expected_grid), len(expected_grid[0])
    actual_rows, actual_cols = len(actual_grid), len(actual_grid[0])

    input_azure_count = sum(row.count(8) for row in input_grid)
    expected_azure_count = sum(row.count(8) for row in expected_grid)
    actual_azure_count = sum(row.count(8) for row in actual_grid)

    print(f"Example {i+1}:")
    print(f"  Input:     Rows={input_rows}, Cols={input_cols}, Azure Count={input_azure_count}")
    print(f"  Expected:  Rows={expected_rows}, Cols={expected_cols}, Azure Count={expected_azure_count}")
    print(f"  Actual:    Rows={actual_rows}, Cols={actual_cols}, Azure Count={actual_azure_count}")
    print(f"  Correct:   {expected_grid == actual_grid}")