import numpy as np

def describe_grid(grid):
    """Provides a description of the grid, including size and colors present."""
    unique_colors = np.unique(grid)
    color_descriptions = ", ".join([str(color) for color in unique_colors])
    print(f"  - Size: {grid.shape}")
    print(f"  - Colors Present: {color_descriptions}")

def analyze_example(example_input, example_output, predicted_output):
    """Analyzes a single example."""
    
    print("Input Grid:")
    describe_grid(example_input)
    print(example_input)
    
    print("Output Grid:")
    describe_grid(example_output)
    print(example_output)

    print("Predicted Grid")
    describe_grid(predicted_output)
    print(predicted_output)

# Assuming 'task' contains the training examples
for i, example in enumerate(task["train"]):
    print(f"Example {i + 1}:")
    predicted = transform(np.array(example['input']))
    analyze_example(np.array(example['input']), np.array(example['output']), predicted)
    print("-" * 30)