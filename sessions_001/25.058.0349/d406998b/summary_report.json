{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 528,
        "total": 2365,
        "cached": 0
      },
      "response_time": 8.583445
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2227,
        "candidates": 467,
        "total": 2694,
        "cached": 0
      },
      "response_time": 6.310857
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1718,
        "candidates": 1038,
        "total": 2756,
        "cached": 0
      },
      "response_time": 14.071347
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2545,
        "candidates": 496,
        "total": 3041,
        "cached": 0
      },
      "response_time": 4.584424
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1745,
        "candidates": 1325,
        "total": 3070,
        "cached": 0
      },
      "response_time": 19.034346
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2862,
        "candidates": 995,
        "total": 3857,
        "cached": 0
      },
      "response_time": 10.376531
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 466,
        "total": 2327,
        "cached": 0
      },
      "response_time": 8.037696
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2189,
        "candidates": 214,
        "total": 2403,
        "cached": 0
      },
      "response_time": 3.428559
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1465,
        "candidates": 1093,
        "total": 2558,
        "cached": 0
      },
      "response_time": 14.350189
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 1497,
        "candidates": 2488,
        "total": 3985,
        "cached": 0
      },
      "response_time": 18.945611
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 3781,
        "candidates": 181,
        "total": 3962,
        "cached": 0
      },
      "response_time": 2.719227
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2355,
        "candidates": 296,
        "total": 2651,
        "cached": 0
      },
      "response_time": 3.239076
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1873,
        "candidates": 441,
        "total": 2314,
        "cached": 0
      },
      "response_time": 6.485952
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2177,
        "candidates": 309,
        "total": 2486,
        "cached": 0
      },
      "response_time": 4.141434
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1560,
        "candidates": 2555,
        "total": 4115,
        "cached": 0
      },
      "response_time": 24.161922
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3908,
        "candidates": 387,
        "total": 4295,
        "cached": 0
      },
      "response_time": 3.909828
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1638,
        "candidates": 1179,
        "total": 2817,
        "cached": 0
      },
      "response_time": 15.653139
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2614,
        "candidates": 416,
        "total": 3030,
        "cached": 0
      },
      "response_time": 4.312603
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1885,
        "candidates": 449,
        "total": 2334,
        "cached": 0
      },
      "response_time": 7.681298
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2195,
        "candidates": 410,
        "total": 2605,
        "cached": 0
      },
      "response_time": 4.857211
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1660,
        "candidates": 1217,
        "total": 2877,
        "cached": 0
      },
      "response_time": 13.909479
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2674,
        "candidates": 581,
        "total": 3255,
        "cached": 0
      },
      "response_time": 6.46633
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1833,
        "candidates": 1160,
        "total": 2993,
        "cached": 0
      },
      "response_time": 15.368042
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 2785,
        "candidates": 1102,
        "total": 3887,
        "cached": 0
      },
      "response_time": 18.969256
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "3 0 3 0 0 3 0 0 0 3\n0 3 0 0 3 0 0 3 0 0\n0 0 0 3 0 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 3 0 3 0 0 3 0 3 0 0 0\n3 0 0 0 3 0 0 3 0 0 3 0\n0 0 3 0 0 3 0 0 0 3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 0 0 3 0\n3 0 0 0 3 0 3 0 0 3 0 0 3\n0 3 0 3 0 0 0 0 3 0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 84.61538461538461
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 3 0 3 0 0\n3 0 0 0 3 0 0 0 3 0 3 0 0 3\n0 3 0 3 0 0 3 0 0 0 0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "3 0 3 0 0 3 0 0 0 3\n0 3 0 0 3 0 0 3 0 0\n0 0 0 3 0 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 3 0 3 0 0 3 0 3 0 0 0\n3 0 0 0 3 0 0 3 0 0 3 0\n0 0 3 0 0 3 0 0 0 3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 0 0 3 0\n3 0 0 0 3 0 3 0 0 3 0 0 3\n0 3 0 3 0 0 0 0 3 0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 84.61538461538461
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 3 0 3 0 0\n3 0 0 0 3 0 0 0 3 0 3 0 0 3\n0 3 0 3 0 0 3 0 0 0 0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "3 0 3 0 0 3 0 0 0 3\n0 3 0 0 3 0 0 3 0 0\n0 0 0 3 0 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 3 0 3 0 0 3 0 3 0 0 0\n3 0 0 0 3 0 0 3 0 0 3 0\n0 0 3 0 0 3 0 0 0 3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 0 0 3 0\n3 0 0 0 3 0 3 0 0 3 0 0 3\n0 3 0 3 0 0 0 0 3 0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 84.61538461538461
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 3 0 3 0 0\n3 0 0 0 3 0 0 0 3 0 3 0 0 3\n0 3 0 3 0 0 3 0 0 0 0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "3 0 3 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 70.0
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 5 0 5 0 0 3 0 3 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 3 0 0 5 0 0 0 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 89.74358974358975
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 3 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 3 0 0 0 0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 76.19047619047619
      }
    ],
    "009-py_05-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_06-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "3 0 3 0 0 3 0 0 0 3\n0 3 0 0 3 0 0 3 0 0\n0 0 0 3 0 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 3 0 3 0 0 3 0 3 0 0 0\n3 0 0 0 3 0 0 3 0 0 3 0\n0 0 3 0 0 3 0 0 0 3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 0 0 3 0\n3 0 0 0 3 0 3 0 0 3 0 0 3\n0 3 0 3 0 0 0 0 3 0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 84.61538461538461
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 3 0 3 0 0\n3 0 0 0 3 0 0 0 3 0 3 0 0 3\n0 3 0 3 0 0 3 0 0 0 0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 82.05128205128204
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 3 5 0 3 5 0 0 3 5\n0 5 0 0 5 0 0 5 3 0\n0 0 0 5 0 0 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 70.0
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "3 5 3 5 0 3 5 3 5 0 0 0\n5 0 3 0 5 3 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 3 5 0 3 5 3 5 0 0 3 5 0\n5 3 0 0 5 0 5 0 0 5 3 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 3 5 0 3 5 3 5 3 5 3 5 0 0\n5 3 0 0 5 0 3 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 66.66666666666666
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 3 5 0 3 5 0 0 3 5\n0 5 0 0 5 0 0 5 3 0\n0 0 0 5 0 0 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 70.0
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "3 5 3 5 0 3 5 3 5 0 0 0\n5 0 3 0 5 3 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 3 5 0 3 5 3 5 0 0 3 5 0\n5 3 0 0 5 0 5 0 0 5 3 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 3 5 0 3 5 3 5 3 5 3 5 0 0\n5 3 0 0 5 0 3 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 66.66666666666666
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 3 5 0 3 5 0 0 3 5\n0 5 0 3 5 0 3 5 3 0\n0 0 3 5 0 3 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 56.666666666666664
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "3 5 3 5 0 3 5 3 5 0 0 0\n5 0 3 0 5 3 0 5 0 3 5 0\n0 3 5 0 0 5 0 0 3 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 3 5 0 3 5 3 5 0 0 3 5 0\n5 3 0 3 5 0 5 0 3 5 3 0 5\n0 5 0 5 0 3 0 3 5 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 56.41025641025641
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 3 5 0 3 5 3 5 3 5 3 5 0 0\n5 3 0 3 5 0 3 0 5 0 5 0 3 5\n0 5 0 5 0 3 5 0 0 3 0 3 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 54.761904761904766
      }
    ],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 0 5 0 0 5 0 0 0 3\n0 5 0 0 5 0 0 3 0 0\n0 0 0 5 0 0 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 90.0
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 3 0\n0 0 3 0 0 5 0 0 0 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 3\n0 3 0 5 0 0 0 0 5 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 82.05128205128204
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 5 0 0 5 0 0 0 0 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 88.09523809523809
      }
    ],
    "022-py_12-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "3 0 3 0 0 3 0 0 0 3\n0 3 0 0 3 0 0 3 0 0\n0 0 0 3 0 0 3 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 3 0 3 0 0 3 0 3 0 0 0\n3 0 0 0 3 0 0 3 0 0 3 0\n0 0 3 0 0 3 0 0 0 3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 0 0 3 0\n3 0 0 0 3 0 3 0 0 3 0 0 3\n0 3 0 3 0 0 0 0 3 0 3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 84.61538461538461
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 3 0 0 3 0 3 0 3 0 3 0 0\n3 0 0 0 3 0 0 0 3 0 3 0 0 3\n0 3 0 3 0 0 3 0 0 0 0 0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ],
    "023-py_13-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "024-py_14-train": [
      {
        "example": 1,
        "input": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "expected_output": "5 0 5 0 0 3 0 0 0 3\n0 3 0 0 5 0 0 3 0 0\n0 0 0 3 0 0 5 0 5 0",
        "transformed_output": "5 0 5 0 0 5 0 0 0 5\n0 5 0 0 5 0 0 5 0 0\n0 0 0 5 0 0 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 2,
        "input": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "expected_output": "0 3 0 3 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 3 0 0 5 0\n0 0 5 0 0 3 0 0 0 3 0 3",
        "transformed_output": "0 5 0 5 0 0 5 0 5 0 0 0\n5 0 0 0 5 0 0 5 0 0 5 0\n0 0 5 0 0 5 0 0 0 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "expected_output": "0 0 3 0 0 5 0 5 0 0 0 5 0\n3 0 0 0 3 0 3 0 0 5 0 0 3\n0 5 0 5 0 0 0 0 3 0 3 0 0",
        "transformed_output": "0 0 5 0 0 5 0 5 0 0 0 5 0\n5 0 0 0 5 0 5 0 0 5 0 0 5\n0 5 0 5 0 0 0 0 5 0 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 82.05128205128204
      },
      {
        "example": 4,
        "input": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "expected_output": "0 0 5 0 0 3 0 3 0 3 0 3 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 3\n0 3 0 3 0 0 5 0 0 0 0 0 5 0",
        "transformed_output": "0 0 5 0 0 5 0 5 0 5 0 5 0 0\n5 0 0 0 5 0 0 0 5 0 5 0 0 5\n0 5 0 5 0 0 5 0 0 0 0 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 83.33333333333334
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}