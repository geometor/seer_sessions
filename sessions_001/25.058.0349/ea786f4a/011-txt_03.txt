import numpy as np

# Helper function to compare grids
def compare_grids(grid1, grid2):
    if grid1.shape != grid2.shape:
        return "Different shapes", 0, []
    agreement = np.sum(grid1 == grid2)
    total_pixels = grid1.size
    agreement_rate = (agreement / total_pixels) * 100
    mismatched_pixels = np.where(grid1 != grid2)
    mismatched_coords = list(zip(mismatched_pixels[0], mismatched_pixels[1]))
    return "Same shape", agreement_rate, mismatched_coords

# Example data (replace with actual results from execution)
# Assuming these are numpy arrays from the prior code execution
results = [
    {
        "input": np.array([[0, 0, 0], [0, 0, 0], [0, 0, 0]]),
        "expected": np.array([[2, 0, 2], [0, 0, 0], [2, 0, 2]]),
        "actual":  np.array([[2, 0, 2], [0, 0, 0], [2, 0, 2]])
    },
    {
        "input": np.array([[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 2, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]),
        "expected": np.array([[0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 2, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]),
        "actual": np.array([[0, 2, 0, 2, 0], [2, 2, 0, 2, 2], [0, 0, 2, 0, 0], [2, 2, 0, 2, 2], [0, 2, 0, 2, 0]])
    },
    {
        "input": np.array([[2, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0], [0, 0, 0, 0, 0]]),
        "expected": np.array([[2, 0, 0, 0, 0], [0, 2, 0, 0, 0], [0, 0, 2, 0, 0], [0, 0, 0, 2, 0], [0, 0, 0, 0, 2]]),
        "actual": np.array([[2, 0, 2, 0, 2], [0, 2, 0, 2, 0], [2, 0, 2, 0, 2], [0, 2, 0, 2, 0], [2, 0, 2, 0, 2]])
    }
]

for i, result in enumerate(results):
    shape_status, agreement_rate, mismatched_coords = compare_grids(result["actual"], result["expected"])
    print(f"Example {i+1}:")
    print(f"  Shape Status: {shape_status}")
    print(f"  Agreement Rate: {agreement_rate:.2f}%")
    print(f"  Mismatched Pixel Coordinates: {mismatched_coords}")