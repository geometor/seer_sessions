{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 495,
        "total": 2408,
        "cached": 0
      },
      "response_time": 7.689358
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2270,
        "candidates": 453,
        "total": 2723,
        "cached": 0
      },
      "response_time": 15.52206
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1704,
        "candidates": 1694,
        "total": 3398,
        "cached": 0
      },
      "response_time": 19.25345
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3192,
        "candidates": 1063,
        "total": 4255,
        "cached": 0
      },
      "response_time": 11.51316
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2311,
        "candidates": 2670,
        "total": 4981,
        "cached": 0
      },
      "response_time": 28.031969
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4770,
        "candidates": 1021,
        "total": 5791,
        "cached": 0
      },
      "response_time": 7.390404
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 410,
        "total": 2323,
        "cached": 0
      },
      "response_time": 6.6194
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2185,
        "candidates": 223,
        "total": 2408,
        "cached": 0
      },
      "response_time": 3.238679
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1474,
        "candidates": 752,
        "total": 2226,
        "cached": 0
      },
      "response_time": 9.548006
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 1671,
        "candidates": 1184,
        "total": 2855,
        "cached": 0
      },
      "response_time": 13.368505
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2652,
        "candidates": 222,
        "total": 2874,
        "cached": 0
      },
      "response_time": 2.770237
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2026,
        "candidates": 247,
        "total": 2273,
        "cached": 0
      },
      "response_time": 15.766591
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 741,
        "total": 2654,
        "cached": 0
      },
      "response_time": 10.691192
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2521,
        "candidates": 191,
        "total": 2712,
        "cached": 0
      },
      "response_time": 3.008783
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1442,
        "candidates": 1285,
        "total": 2727,
        "cached": 0
      },
      "response_time": 16.513859
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 1611,
        "candidates": 1934,
        "total": 3545,
        "cached": 0
      },
      "response_time": 20.284965
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 3342,
        "candidates": 525,
        "total": 3867,
        "cached": 0
      },
      "response_time": 5.846507
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2524,
        "candidates": 406,
        "total": 2930,
        "cached": 0
      },
      "response_time": 4.87298
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 2 8 3 2\n8 3 3 8 3 3 8\n3 3 3 3 3 3 3\n2 8 3 2 8 3 2\n8 3 3 8 3 3 8\n3 3 3 3 3 3 3\n2 8 3 2 8 3 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 75.51020408163265
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 8 8 8 8 8\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 8 8 8 8 8\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 8.16326530612245
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 2 8 3 2\n8 3 3 8 3 3 8\n3 3 3 3 3 3 3\n2 8 3 2 8 3 2\n8 3 3 8 3 3 8\n3 3 3 3 3 3 3\n2 8 3 2 8 3 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 75.51020408163265
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 8 0 0 8 0\n0 8 8 0 8 8 0\n0 0 0 0 0 0 0\n0 0 8 0 0 8 0\n0 8 8 0 8 8 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 8.16326530612245
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 2 8 3 2\n8 3 3 8 3 3 8\n3 3 3 3 3 3 3\n2 8 3 2 8 3 2\n8 3 3 8 3 3 8\n3 3 3 3 3 3 3\n2 8 3 2 8 3 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 75.51020408163265
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 8 0 0 8 0\n0 8 8 0 8 8 0\n0 0 0 0 0 0 0\n0 0 8 0 0 8 0\n0 8 8 0 8 8 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 8.16326530612245
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 2 8 3 2\n8 3 3 8 3 3 8\n3 3 3 3 3 3 3\n2 8 3 2 8 3 2\n8 3 3 8 3 3 8\n3 3 3 3 3 3 3\n2 8 3 2 8 3 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 75.51020408163265
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 8 0 0 8 0\n0 8 8 0 8 8 0\n0 0 0 0 0 0 0\n0 0 8 0 0 8 0\n0 8 8 0 8 8 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 8.16326530612245
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      }
    ],
    "009-py_06-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 0 0 0 0 2 8 3 0 0 0 0\n8 3 0 0 0 0 0 8 3 0 0 0 0 0\n3 0 0 0 0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 8 3 0 0 0 0 2 8 3 0 0 0 0\n8 3 0 0 0 0 0 8 3 0 0 0 0 0\n3 0 0 0 0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 0 0 0 0 0 0 1\n0 0 0 0 0 1 2 0 0 0 0 0 1 2\n0 0 0 0 1 2 4 0 0 0 0 1 2 4\n0 0 0 1 2 4 0 0 0 0 1 2 4 0\n0 0 1 2 4 0 0 0 0 1 2 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 0 0 0 0 0 0 1\n0 0 0 0 0 1 2 0 0 0 0 0 1 2\n0 0 0 0 1 2 4 0 0 0 0 1 2 4\n0 0 0 1 2 4 0 0 0 0 1 2 4 0\n0 0 1 2 4 0 0 0 0 1 2 4 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "0 0 0 0 8 3 0 0 0 0 0 8 3 0\n0 0 0 8 3 0 0 0 0 0 8 3 0 0\n0 0 8 3 0 0 0 0 0 8 3 0 0 0\n0 8 3 0 0 0 4 0 8 3 0 0 0 4\n8 3 0 0 0 4 0 8 3 0 0 0 4 0\n3 0 0 0 4 0 0 3 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0 4 0 0 0\n0 0 0 0 8 3 0 0 0 0 0 8 3 0\n0 0 0 8 3 0 0 0 0 0 8 3 0 0\n0 0 8 3 0 0 0 0 0 8 3 0 0 0\n0 8 3 0 0 0 4 0 8 3 0 0 0 4\n8 3 0 0 0 4 0 8 3 0 0 0 4 0\n3 0 0 0 4 0 0 3 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 0 0 0 0 2 8 3 0 0 0 0\n8 3 0 0 0 0 0 8 3 0 0 0 0 0\n3 0 0 0 0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n2 8 3 0 0 0 0 2 8 3 0 0 0 0\n8 3 0 0 0 0 0 8 3 0 0 0 0 0\n3 0 0 0 0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 0 0 0 0 0 0 1\n0 0 0 0 0 1 2 0 0 0 0 0 1 2\n0 0 0 0 1 2 4 0 0 0 0 1 2 4\n0 0 0 1 2 4 0 0 0 0 1 2 4 0\n0 0 1 2 4 0 0 0 0 1 2 4 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 1 0 0 0 0 0 0 1\n0 0 0 0 0 1 2 0 0 0 0 0 1 2\n0 0 0 0 1 2 4 0 0 0 0 1 2 4\n0 0 0 1 2 4 0 0 0 0 1 2 4 0\n0 0 1 2 4 0 0 0 0 1 2 4 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "0 0 0 0 8 3 0 0 0 0 0 8 3 0\n0 0 0 8 3 0 0 0 0 0 8 3 0 0\n0 0 8 3 0 0 0 0 0 8 3 0 0 0\n0 8 3 0 0 0 4 0 8 3 0 0 0 4\n8 3 0 0 0 4 0 8 3 0 0 0 4 0\n3 0 0 0 4 0 0 3 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0 4 0 0 0\n0 0 0 0 8 3 0 0 0 0 0 8 3 0\n0 0 0 8 3 0 0 0 0 0 8 3 0 0\n0 0 8 3 0 0 0 0 0 8 3 0 0 0\n0 8 3 0 0 0 4 0 8 3 0 0 0 4\n8 3 0 0 0 4 0 8 3 0 0 0 4 0\n3 0 0 0 4 0 0 3 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "4 8 4 8 4 8 4\n3 4 3 4 3 4 3\n4 8 4 8 4 8 4\n3 4 3 4 3 4 3\n4 8 4 8 4 8 4\n3 4 3 4 3 4 3\n4 8 4 8 4 8 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 41,
        "percent_correct": 16.3265306122449
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "4 8 4 8 4 8 4\n3 4 3 4 3 4 3\n4 8 4 8 4 8 4\n3 4 3 4 3 4 3\n4 8 4 8 4 8 4\n3 4 3 4 3 4 3\n4 8 4 8 4 8 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 41,
        "percent_correct": 16.3265306122449
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "4 8 4 8 4 8 4\n3 4 3 4 3 4 3\n4 8 4 8 4 8 4\n3 4 3 4 3 4 3\n4 8 4 8 4 8 4\n3 4 3 4 3 4 3\n4 8 4 8 4 8 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      }
    ],
    "015-py_10-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 43,
        "percent_correct": 12.244897959183673
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 37,
        "percent_correct": 24.489795918367346
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 30.612244897959183
      }
    ],
    "016-py_12-test": [],
    "016-py_12-train": [],
    "017-py_13-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "",
        "match": "ERROR: cannot access local variable 'output_height' where it is not associated with a value",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "",
        "match": "ERROR: cannot access local variable 'output_height' where it is not associated with a value",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "",
        "match": "ERROR: cannot access local variable 'output_height' where it is not associated with a value",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "018-py_14-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 43,
        "percent_correct": 12.244897959183673
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 37,
        "percent_correct": 24.489795918367346
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 30.612244897959183
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}