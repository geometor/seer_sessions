{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 603,
        "total": 2400,
        "cached": 0
      },
      "response_time": 8.815045
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2262,
        "candidates": 453,
        "total": 2715,
        "cached": 0
      },
      "response_time": 5.052632
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1704,
        "candidates": 939,
        "total": 2643,
        "cached": 0
      },
      "response_time": 9.965177
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2438,
        "candidates": 599,
        "total": 3037,
        "cached": 0
      },
      "response_time": 5.778866
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1850,
        "candidates": 3132,
        "total": 4982,
        "cached": 0
      },
      "response_time": 29.830503
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4782,
        "candidates": 761,
        "total": 5543,
        "cached": 0
      },
      "response_time": 7.691734
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 509,
        "total": 2306,
        "cached": 0
      },
      "response_time": 8.246345
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2167,
        "candidates": 261,
        "total": 2428,
        "cached": 0
      },
      "response_time": 4.348542
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1512,
        "candidates": 1001,
        "total": 2513,
        "cached": 0
      },
      "response_time": 10.069069
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2308,
        "candidates": 312,
        "total": 2620,
        "cached": 0
      },
      "response_time": 2.785148
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1562,
        "candidates": 2104,
        "total": 3666,
        "cached": 0
      },
      "response_time": 17.967231
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3463,
        "candidates": 364,
        "total": 3827,
        "cached": 0
      },
      "response_time": 4.027638
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 526,
        "total": 2323,
        "cached": 0
      },
      "response_time": 8.523166
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2184,
        "candidates": 570,
        "total": 2754,
        "cached": 0
      },
      "response_time": 11.098123
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1820,
        "candidates": 2101,
        "total": 3921,
        "cached": 0
      },
      "response_time": 18.968563
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2403,
        "candidates": 2019,
        "total": 4422,
        "cached": 0
      },
      "response_time": 17.915039
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 4222,
        "candidates": 332,
        "total": 4554,
        "cached": 0
      },
      "response_time": 3.150943
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3721,
        "candidates": 484,
        "total": 4205,
        "cached": 0
      },
      "response_time": 4.840831
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 500,
        "total": 2297,
        "cached": 0
      },
      "response_time": 7.375329
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2157,
        "candidates": 539,
        "total": 2696,
        "cached": 0
      },
      "response_time": 5.574318
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1789,
        "candidates": 1741,
        "total": 3530,
        "cached": 0
      },
      "response_time": 17.837305
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 1699,
        "candidates": 1492,
        "total": 3191,
        "cached": 0
      },
      "response_time": 17.153933
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 2984,
        "candidates": 761,
        "total": 3745,
        "cached": 0
      },
      "response_time": 6.094321
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3325,
        "candidates": 649,
        "total": 3974,
        "cached": 0
      },
      "response_time": 5.706311
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 611,
        "total": 2408,
        "cached": 0
      },
      "response_time": 9.124324
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2270,
        "candidates": 442,
        "total": 2712,
        "cached": 0
      },
      "response_time": 5.566697
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 1693,
        "candidates": 1602,
        "total": 3295,
        "cached": 0
      },
      "response_time": 17.470605
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 1855,
        "candidates": 921,
        "total": 2776,
        "cached": 0
      },
      "response_time": 10.694892
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 2572,
        "candidates": 442,
        "total": 3014,
        "cached": 0
      },
      "response_time": 5.043791
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 3089,
        "candidates": 395,
        "total": 3484,
        "cached": 0
      },
      "response_time": 4.515255
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "0 3 0\n0 3 0\n0 3 0\n0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "0 3 0\n0 0 0\n0 3 0\n0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 3 0\n0 0 3\n0 3 3\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 50.0
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "0 3 3\n0 3 3\n0 0 0\n0 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 50.0
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 3\n0 3 0\n0 3 3\n0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 66.66666666666666
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "0 3 0\n0 3 0\n0 3 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "0 3 0\n0 0 0\n0 3 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 3 0\n0 0 3\n0 3 3\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 50.0
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "0 3 3\n0 3 3\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 3\n0 3 0\n0 3 3\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 75.0
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "0 3 0\n0 3 0\n0 3 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "0 3 0\n0 0 0\n0 3 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 3 0\n0 0 3\n0 3 3\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 50.0
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "0 3 3\n0 3 3\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 3\n0 3 0\n0 3 3\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 75.0
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "0 0 3\n0 0 3\n0 0 3\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 0 3\n0 0 3\n0 0 3\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 50.0
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 75.0
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 83.33333333333334
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 16.666666666666664
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 16.666666666666664
      }
    ],
    "011-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 16.666666666666664
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "3\n3\n3\n3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "3\n3\n3\n3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "3\n3\n3\n3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "3\n3\n3\n3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "3\n3\n3\n3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "015-py_10-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "7 7 0 3 5 0 0\n7 0 0 3 5 0 0\n0 0 0 3 5 0 5\n0 0 0 3 5 5 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "7 7 0 3 5 0 0\n0 0 0 3 0 0 0\n7 7 0 3 5 0 0\n0 7 7 3 5 5 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 7 7 3 5 0 0\n0 0 7 3 0 5 5\n0 7 0 3 5 5 0\n0 0 7 3 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "7 0 7 3 5 5 0\n7 7 0 3 5 5 5\n0 7 0 3 0 0 0\n0 0 0 3 5 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "7 0 0 3 0 5 0\n0 0 7 3 5 0 0\n0 0 0 3 5 5 5\n7 7 7 3 5 5 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "017-py_12-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "7 7 0 3 5 0 0\n7 0 0 3 5 0 0\n0 0 0 3 5 0 5\n0 0 0 3 5 5 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "7 7 0 3 5 0 0\n0 0 0 3 0 0 0\n7 7 0 3 5 0 0\n0 7 7 3 5 5 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 7 7 3 5 0 0\n0 0 7 3 0 5 5\n0 7 0 3 5 5 0\n0 0 7 3 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "7 0 7 3 5 5 0\n7 7 0 3 5 5 5\n0 7 0 3 0 0 0\n0 0 0 3 5 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "7 0 0 3 0 5 0\n0 0 7 3 5 0 0\n0 0 0 3 5 5 5\n7 7 7 3 5 5 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0\n0 0 0 3 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "0 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "0 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 50.0
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "0 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 58.333333333333336
      }
    ],
    "021-py_15-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'example_index'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'example_index'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'example_index'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'example_index'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'example_index'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "023-py_16-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "0 3 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "0 3 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 3 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 50.0
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "0 3 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "0 3 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 50.0
      }
    ],
    "024-py_17-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "3 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "3 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "3 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 50.0
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "3 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "3 0 0\n3 0 0\n3 0 0\n0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 50.0
      }
    ],
    "026-py_18-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "3 3 0\n3 3 0\n3 3 0\n3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 3 3\n0 3 3\n0 3 3\n0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 16.666666666666664
      }
    ],
    "027-py_19-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "3 3 0\n3 3 0\n3 3 0\n3 3 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 3 3\n0 3 3\n0 3 3\n0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 16.666666666666664
      }
    ],
    "029-py_20-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "3 3 0 1 5 3 3\n3 3 0 1 5 3 3\n3 3 0 1 5 3 3\n3 3 0 1 5 3 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "3 3 3 1 3 3 0\n3 3 3 1 3 3 0\n3 3 3 1 3 3 0\n3 3 3 1 3 3 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 3 3 1 3 3 3\n0 3 3 1 3 3 3\n0 3 3 1 3 3 3\n0 3 3 1 3 3 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "3 3 3 1 3 3 3\n3 3 3 1 3 3 3\n3 3 3 1 3 3 3\n3 3 3 1 3 3 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "3 3 3 1 3 3 3\n3 3 3 1 3 3 3\n3 3 3 1 3 3 3\n3 3 3 1 3 3 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "030-py_21-train": [
      {
        "example": 1,
        "input": "7 7 0 1 5 0 0\n7 0 0 1 5 0 0\n0 0 0 1 5 0 5\n0 0 0 1 5 5 0",
        "expected_output": "0 0 3\n0 3 3\n0 3 0\n0 0 3",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 2,
        "input": "7 7 0 1 5 0 0\n0 0 0 1 0 0 0\n7 7 0 1 5 0 0\n0 7 7 1 5 5 0",
        "expected_output": "0 0 3\n3 3 3\n0 0 3\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 3,
        "input": "0 7 7 1 5 0 0\n0 0 7 1 0 5 5\n0 7 0 1 5 5 0\n0 0 7 1 0 0 0",
        "expected_output": "0 0 0\n3 0 0\n0 0 3\n3 3 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "7 0 7 1 5 5 0\n7 7 0 1 5 5 5\n0 7 0 1 0 0 0\n0 0 0 1 5 0 5",
        "expected_output": "0 0 0\n0 0 0\n3 0 3\n0 3 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 75.0
      },
      {
        "example": 5,
        "input": "7 0 0 1 0 5 0\n0 0 7 1 5 0 0\n0 0 0 1 5 5 5\n7 7 7 1 5 5 5",
        "expected_output": "0 0 3\n0 3 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 83.33333333333334
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}