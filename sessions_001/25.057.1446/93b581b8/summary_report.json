{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 614,
        "total": 2475,
        "cached": 0
      },
      "response_time": 8.94498
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2336,
        "candidates": 712,
        "total": 3048,
        "cached": 0
      },
      "response_time": 7.140218
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1962,
        "candidates": 3476,
        "total": 5438,
        "cached": 0
      },
      "response_time": 33.505963
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3374,
        "candidates": 4142,
        "total": 7516,
        "cached": 0
      },
      "response_time": 37.420218
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 7300,
        "candidates": 891,
        "total": 8191,
        "cached": 0
      },
      "response_time": 8.836578
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 5238,
        "candidates": 732,
        "total": 5970,
        "cached": 0
      },
      "response_time": 5.880397
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 551,
        "total": 2412,
        "cached": 0
      },
      "response_time": 9.537591
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2275,
        "candidates": 709,
        "total": 2984,
        "cached": 0
      },
      "response_time": 7.211887
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1960,
        "candidates": 3791,
        "total": 5751,
        "cached": 0
      },
      "response_time": 33.266458
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3613,
        "candidates": 1234,
        "total": 4847,
        "cached": 0
      },
      "response_time": 14.137624
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 4644,
        "candidates": 623,
        "total": 5267,
        "cached": 0
      },
      "response_time": 5.042293
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 5548,
        "candidates": 479,
        "total": 6027,
        "cached": 0
      },
      "response_time": 4.972032
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 457,
        "total": 2318,
        "cached": 0
      },
      "response_time": 8.430143
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2179,
        "candidates": 557,
        "total": 2736,
        "cached": 0
      },
      "response_time": 5.170821
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1808,
        "candidates": 886,
        "total": 2694,
        "cached": 0
      },
      "response_time": 9.148708
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2490,
        "candidates": 522,
        "total": 3012,
        "cached": 0
      },
      "response_time": 5.459087
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1773,
        "candidates": 1845,
        "total": 3618,
        "cached": 0
      },
      "response_time": 16.843388
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3414,
        "candidates": 109,
        "total": 3523,
        "cached": 0
      },
      "response_time": 2.413977
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "8 8 0 0 7 7\n8 8 0 0 7 7\n0 0 9 3 0 0\n0 0 7 8 0 0\n3 3 0 0 9 9\n3 3 0 0 9 9",
        "transformed_output": "0 0 0 3 3 0\n0 0 0 8 8 0\n3 9 9 3 7 8\n3 9 7 8 7 8\n0 9 9 9 0 0\n0 7 7 7 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 16.666666666666664
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "1 0 0 2 2 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n6 0 0 4 4 0\n6 0 0 4 4 0\n0 0 0 0 0 0",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (2,1) into shape (3,2)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "2 2 0 0 5 5\n2 2 0 0 5 5\n0 0 3 6 0 0\n0 0 5 2 0 0\n6 6 0 0 3 3\n6 6 0 0 3 3",
        "transformed_output": "0 0 0 6 6 0\n0 0 0 2 2 0\n6 3 3 6 5 2\n6 3 5 2 5 2\n0 3 3 3 0 0\n0 5 5 5 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 16.666666666666664
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "004-py_03-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "8 8 0 0 7 7\n8 8 0 0 7 7\n0 0 9 3 0 0\n0 0 7 8 0 0\n3 3 0 0 9 9\n3 3 0 0 9 9",
        "transformed_output": "9 3 9 3 9 3\n7 8 7 8 7 8\n9 3 9 3 9 3\n7 8 7 8 7 8\n9 3 9 3 9 3\n7 8 7 8 7 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "1 0 0 2 2 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n6 0 0 4 4 0\n6 0 0 4 4 0\n0 0 0 0 0 0",
        "transformed_output": "4 6 4 6 4 6\n2 1 2 1 2 1\n4 6 4 6 4 6\n2 1 2 1 2 1\n4 6 4 6 4 6\n2 1 2 1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 35,
        "percent_correct": 2.7777777777777777
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "2 2 0 0 5 5\n2 2 0 0 5 5\n0 0 3 6 0 0\n0 0 5 2 0 0\n6 6 0 0 3 3\n6 6 0 0 3 3",
        "transformed_output": "3 6 3 6 3 6\n5 2 5 2 5 2\n3 6 3 6 3 6\n5 2 5 2 5 2\n3 6 3 6 3 6\n5 2 5 2 5 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      }
    ],
    "006-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "8 8 0 0 7 7\n8 8 0 0 7 7\n0 0 9 3 0 0\n0 0 7 8 0 0\n3 3 0 0 9 9\n3 3 0 0 9 9",
        "transformed_output": "9 9 9 3 3 3\n9 9 9 3 3 3\n0 0 0 0 0 0\n0 0 0 0 0 0\n7 7 7 8 8 8\n7 7 7 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "1 0 0 2 2 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n6 0 0 4 4 0\n6 0 0 4 4 0\n0 0 0 0 0 0",
        "transformed_output": "4 4 6 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0\n2 2 1 1 1 1\n2 2 1 1 1 1\n2 2 1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "2 2 0 0 5 5\n2 2 0 0 5 5\n0 0 3 6 0 0\n0 0 5 2 0 0\n6 6 0 0 3 3\n6 6 0 0 3 3",
        "transformed_output": "3 3 3 6 6 6\n3 3 3 6 6 6\n0 0 0 0 0 0\n0 0 0 0 0 0\n5 5 5 2 2 2\n5 5 5 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 22.22222222222222
      }
    ],
    "008-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "8 8 0 0 7 7\n8 8 0 0 7 7\n0 0 9 3 0 0\n0 0 7 8 0 0\n3 3 0 0 9 9\n3 3 0 0 9 9",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "1 0 0 2 2 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n6 0 0 4 4 0\n6 0 0 4 4 0\n0 0 0 0 0 0",
        "transformed_output": "4 0 6 0 0 0\n0 4 6 0 0 0\n0 2 1 2 0 0\n0 0 6 4 0 0\n0 0 6 0 4 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 69.44444444444444
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "2 2 0 0 5 5\n2 2 0 0 5 5\n0 0 3 6 0 0\n0 0 5 2 0 0\n6 6 0 0 3 3\n6 6 0 0 3 3",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 55.55555555555556
      }
    ],
    "009-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "8 8 0 0 7 7\n8 8 0 0 7 7\n0 0 9 3 0 0\n0 0 7 8 0 0\n3 3 0 0 9 9\n3 3 0 0 9 9",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "1 0 0 2 2 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n6 0 0 4 4 0\n6 0 0 4 4 0\n0 0 0 0 0 0",
        "transformed_output": "4 0 6 0 0 0\n0 0 0 0 0 0\n0 0 0 2 0 0\n0 0 6 4 0 0\n0 0 6 0 4 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "2 2 0 0 5 5\n2 2 0 0 5 5\n0 0 3 6 0 0\n0 0 5 2 0 0\n6 6 0 0 3 3\n6 6 0 0 3 3",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 44.44444444444444
      }
    ],
    "012-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "8 8 0 0 7 7\n8 8 0 0 7 7\n0 0 9 3 0 0\n0 0 7 8 0 0\n3 3 0 0 9 9\n3 3 0 0 9 9",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "1 0 0 2 2 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n6 0 0 4 4 0\n6 0 0 4 4 0\n0 0 0 0 0 0",
        "transformed_output": "1 0 0 0 0 2\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n6 0 0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "2 2 0 0 5 5\n2 2 0 0 5 5\n0 0 3 6 0 0\n0 0 5 2 0 0\n6 6 0 0 3 3\n6 6 0 0 3 3",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 44.44444444444444
      }
    ],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "8 8 0 0 7 7\n8 8 0 0 7 7\n0 0 9 3 0 0\n0 0 7 8 0 0\n3 3 0 0 9 9\n3 3 0 0 9 9",
        "transformed_output": "8 7 0 0 8 7\n3 9 0 0 3 9\n0 0 9 3 0 0\n0 0 7 8 0 0\n8 7 0 0 8 7\n3 9 0 0 3 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "1 0 0 2 2 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n6 0 0 4 4 0\n6 0 0 4 4 0\n0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0\n0 1 0 0 0 1\n0 0 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 1 0 0 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 58.333333333333336
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "2 2 0 0 5 5\n2 2 0 0 5 5\n0 0 3 6 0 0\n0 0 5 2 0 0\n6 6 0 0 3 3\n6 6 0 0 3 3",
        "transformed_output": "2 5 0 0 2 5\n6 3 0 0 6 3\n0 0 3 6 0 0\n0 0 5 2 0 0\n2 5 0 0 2 5\n6 3 0 0 6 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 66.66666666666666
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "8 8 0 0 7 7\n8 8 0 0 7 7\n0 0 9 3 0 0\n0 0 7 8 0 0\n3 3 0 0 9 9\n3 3 0 0 9 9",
        "transformed_output": "7 9 0 0 7 9\n8 3 0 0 8 3\n0 0 9 3 0 0\n0 0 7 8 0 0\n7 9 0 0 7 9\n8 3 0 0 8 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "1 0 0 2 2 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n6 0 0 4 4 0\n6 0 0 4 4 0\n0 0 0 0 0 0",
        "transformed_output": "0 1 0 0 0 1\n0 0 0 0 0 0\n0 0 1 0 0 0\n0 0 0 0 0 0\n0 1 0 0 0 1\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "2 2 0 0 5 5\n2 2 0 0 5 5\n0 0 3 6 0 0\n0 0 5 2 0 0\n6 6 0 0 3 3\n6 6 0 0 3 3",
        "transformed_output": "5 3 0 0 5 3\n2 6 0 0 2 6\n0 0 3 6 0 0\n0 0 5 2 0 0\n5 3 0 0 5 3\n2 6 0 0 2 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 66.66666666666666
      }
    ],
    "017-py_12-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "8 8 0 0 7 7\n8 8 0 0 7 7\n0 0 9 3 0 0\n0 0 7 8 0 0\n3 3 0 0 9 9\n3 3 0 0 9 9",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 9 3 0 0\n0 0 7 8 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "1 0 0 2 2 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n6 0 0 4 4 0\n6 0 0 4 4 0\n0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0\n0 4 6 0 0 0\n0 2 1 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "expected_output": "2 2 0 0 5 5\n2 2 0 0 5 5\n0 0 3 6 0 0\n0 0 5 2 0 0\n6 6 0 0 3 3\n6 6 0 0 3 3",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 3 6 0 0\n0 0 5 2 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 55.55555555555556
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}