{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 486,
        "total": 2303,
        "cached": 0
      },
      "response_time": 8.104001
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2164,
        "candidates": 287,
        "total": 2451,
        "cached": 0
      },
      "response_time": 3.525684
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1537,
        "candidates": 1700,
        "total": 3237,
        "cached": 0
      },
      "response_time": 18.144803
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2218,
        "candidates": 1448,
        "total": 3666,
        "cached": 0
      },
      "response_time": 26.380955
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 3460,
        "candidates": 467,
        "total": 3927,
        "cached": 0
      },
      "response_time": 5.245943
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3032,
        "candidates": 328,
        "total": 3360,
        "cached": 0
      },
      "response_time": 3.312412
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 539,
        "total": 2356,
        "cached": 0
      },
      "response_time": 8.410409
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2218,
        "candidates": 343,
        "total": 2561,
        "cached": 0
      },
      "response_time": 3.82892
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1594,
        "candidates": 2873,
        "total": 4467,
        "cached": 0
      },
      "response_time": 24.700087
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 4265,
        "candidates": 423,
        "total": 4688,
        "cached": 0
      },
      "response_time": 5.03778
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1674,
        "candidates": 1523,
        "total": 3197,
        "cached": 0
      },
      "response_time": 16.400649
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2993,
        "candidates": 395,
        "total": 3388,
        "cached": 0
      },
      "response_time": 3.750412
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 504,
        "total": 2321,
        "cached": 0
      },
      "response_time": 7.080583
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2182,
        "candidates": 676,
        "total": 2858,
        "cached": 0
      },
      "response_time": 6.904562
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1927,
        "candidates": 2553,
        "total": 4480,
        "cached": 0
      },
      "response_time": 24.39718
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2272,
        "candidates": 2546,
        "total": 4818,
        "cached": 0
      },
      "response_time": 22.913059
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 4613,
        "candidates": 440,
        "total": 5053,
        "cached": 0
      },
      "response_time": 4.657771
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 4270,
        "candidates": 1005,
        "total": 5275,
        "cached": 0
      },
      "response_time": 9.127727
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 817,
        "total": 2634,
        "cached": 0
      },
      "response_time": 10.53873
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2495,
        "candidates": 457,
        "total": 2952,
        "cached": 0
      },
      "response_time": 4.944533
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1707,
        "candidates": 1545,
        "total": 3252,
        "cached": 0
      },
      "response_time": 13.844178
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 3052,
        "candidates": 407,
        "total": 3459,
        "cached": 0
      },
      "response_time": 4.718388
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1656,
        "candidates": 2344,
        "total": 4000,
        "cached": 0
      },
      "response_time": 20.393486
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3800,
        "candidates": 403,
        "total": 4203,
        "cached": 0
      },
      "response_time": 3.959214
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 627,
        "total": 2444,
        "cached": 0
      },
      "response_time": 8.917245
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2306,
        "candidates": 583,
        "total": 2889,
        "cached": 0
      },
      "response_time": 6.801787
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 1834,
        "candidates": 1779,
        "total": 3613,
        "cached": 0
      },
      "response_time": 19.78669
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 2035,
        "candidates": 1911,
        "total": 3946,
        "cached": 0
      },
      "response_time": 19.245077
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 3745,
        "candidates": 406,
        "total": 4151,
        "cached": 0
      },
      "response_time": 4.742448
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 3413,
        "candidates": 301,
        "total": 3714,
        "cached": 0
      },
      "response_time": 4.132126
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 9\n0 8 0\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 9\n9 8 9\n9 8 9\n0 8 0\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 9\n0 8 0\n0 8 9\n0 8 0\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 8 9\n0 8 9\n9 8 9\n0 8 0\n0 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 0\n0 8 0\n9 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 80.0
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 80.0
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 80.0
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 9 9\n9 9 9\n9 9 9\n9 9 9\n9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 9 0\n8 9 0\n8 9 0\n8 9 0\n8 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "9 9 0\n9 9 0\n9 9 0\n9 9 0\n9 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 9 9\n9 9 9\n9 9 9\n9 9 9\n9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 0.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 9 9\n9 9 9\n9 9 9\n9 9 9\n9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 0.0
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 9 8\n9 9 8\n9 9 8\n9 9 8\n9 9 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 6.666666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 9 0\n8 9 0\n8 9 0\n8 9 0\n8 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "9 8 9\n9 8 9\n9 8 9\n9 8 9\n9 8 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 13.333333333333334
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "9 9 8\n9 9 8\n9 9 8\n9 9 8\n9 9 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 20.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "9 9 8\n9 9 8\n9 9 8\n9 9 8\n9 9 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 6.666666666666667
      }
    ],
    "011-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "8 9\n8 9\n8 9\n8 9\n8 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 9\n8 9\n8 9\n8 9\n8 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 9\n8 9\n8 9\n8 9\n8 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "8 9\n8 9\n8 9\n8 9\n8 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "8 9\n8 9\n8 9\n8 9\n8 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n8 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 80.0
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "8 0 0\n0 0 0\n0 0 0\n8 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 0 0\n8 0 8\n8 0 0\n0 0 8\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n8 0 0\n0 0 0\n8 0 8\n8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 8\n8 0 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "015-py_10-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8 0 8 8 8\n0 0 8 0 8 8 0\n8 0 8 0 8 8 0\n0 0 0 0 8 0 0\n0 8 8 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0 0 8 0 0\n8 0 8 0 8 8 8\n0 8 8 0 8 8 8\n0 0 0 0 8 8 8\n0 8 8 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 0 0 0 8 0 8\n8 0 0 0 0 8 0\n8 0 0 0 8 0 0\n0 8 8 0 0 8 8\n0 0 8 0 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8 0 8 0 8\n8 0 0 0 8 0 0\n8 8 8 0 8 8 8\n0 8 0 0 0 0 0\n8 0 0 0 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8 0 8 0 8\n8 0 8 0 8 8 8\n8 8 8 0 0 0 8\n8 0 0 0 8 0 0\n8 8 8 0 0 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "017-py_12-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8 0 8 8 8\n0 0 8 0 8 8 0\n8 0 8 0 8 8 0\n0 0 0 0 8 0 0\n0 8 8 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0 0 8 0 0\n8 0 8 0 8 8 8\n0 8 8 0 8 8 8\n0 0 0 0 8 8 8\n0 8 8 0 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "8 0 0 0 8 0 8\n8 0 0 0 0 8 0\n8 0 0 0 8 0 0\n0 8 8 0 0 8 8\n0 0 8 0 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 8 0 8 0 8\n8 0 0 0 8 0 0\n8 8 8 0 8 8 8\n0 8 0 0 0 0 0\n8 0 0 0 8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 8 0 8 0 8\n8 0 8 0 8 8 8\n8 8 8 0 0 0 8\n8 0 0 0 8 0 0\n8 8 8 0 0 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 86.66666666666667
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 0 0\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 0 0\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 0 0\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 73.33333333333333
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 0 0\n0 8 8\n0 8 8\n0 8 8\n0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 60.0
      }
    ],
    "022-py_15-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "023-py_16-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "024-py_17-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "026-py_18-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "027-py_19-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "028-py_20-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "029-py_21-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ],
    "030-py_22-train": [
      {
        "example": 1,
        "input": "0 9 9 1 9 9 9\n0 0 9 1 9 9 0\n9 0 9 1 9 9 0\n0 0 0 1 9 0 0\n0 9 9 1 9 9 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 1 9 0 0\n9 0 9 1 9 9 9\n0 9 9 1 9 9 9\n0 0 0 1 9 9 9\n0 9 9 1 9 9 9",
        "expected_output": "0 8 8\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "9 0 0 1 9 0 9\n9 0 0 1 0 9 0\n9 0 0 1 9 0 0\n0 9 9 1 0 9 9\n0 0 9 1 0 9 0",
        "expected_output": "0 8 0\n0 0 8\n0 8 8\n8 0 0\n8 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 4,
        "input": "0 9 9 1 9 0 9\n9 0 0 1 9 0 0\n9 9 9 1 9 9 9\n0 9 0 1 0 0 0\n9 0 0 1 9 0 0",
        "expected_output": "0 0 0\n0 8 8\n0 0 0\n8 0 8\n0 8 8",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 53.333333333333336
      },
      {
        "example": 5,
        "input": "0 9 9 1 9 0 9\n9 0 9 1 9 9 9\n9 9 9 1 0 0 9\n9 0 0 1 9 0 0\n9 9 9 1 0 0 9",
        "expected_output": "0 0 0\n0 0 0\n0 0 0\n0 8 8\n0 0 0",
        "transformed_output": "0 8 0\n0 8 0\n0 8 0\n0 8 0\n0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 66.66666666666666
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}