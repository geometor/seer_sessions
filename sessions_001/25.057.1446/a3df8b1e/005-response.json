{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe input grid is transformed to a grid of the same dimensions with a checkerboard pattern. If a checkerboard of blue and black is present, the colors are inverted.\n\"\"\"\n\nimport numpy as np\n\ndef is_checkerboard(grid):\n    # Check if the grid is a checkerboard pattern of blue (1) and black (0).\n    rows, cols = grid.shape\n    for i in range(rows):\n        for j in range(cols):\n            expected = (i + j) % 2\n            if grid[i, j] != expected and grid[i,j] != (1-expected):\n                return False, None  # Not a checkerboard, or mixed colors\n            if grid[i,j] == 1:\n                expected = 1 - expected\n            if grid[i,j] != expected:\n              return False, None\n    return True, 0 # we will always swap 0 and 1\n\ndef invert_colors(grid, color1, color2):\n    # Invert the specified colors in the grid.\n    inverted_grid = np.copy(grid)\n    inverted_grid[grid == color1] = -1  # Temporary placeholder\n    inverted_grid[grid == color2] = color1\n    inverted_grid[inverted_grid == -1] = color2\n    return inverted_grid\n\ndef transform(input_grid):\n    # Initialize output_grid with the same shape as the input.\n    output_grid = np.copy(input_grid)\n    rows, cols = input_grid.shape\n    \n    # Check for existing checkerboard and determine inversion colors\n    checkerboard, swap_color = is_checkerboard(input_grid)\n\n    if checkerboard:\n        output_grid = invert_colors(output_grid, 0, 1)\n    else:\n        for i in range(rows):\n            for j in range(cols):\n                output_grid[i,j] = (i+j)%2\n\n    return output_grid\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3331,
    "candidates_token_count": 457,
    "total_token_count": 3788,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 5.917425,
  "response_file": "005-response.json"
}