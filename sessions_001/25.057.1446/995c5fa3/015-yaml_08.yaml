example_1:
  input_shape: 30x15
  output_shape: 3x3
  block_width: 4
  objects:
    - type: vertical_block
      properties:
        - width: variable, often 4
        - encoding: based on row patterns
  actions:
    - divide_input: vertical blocks
    - analyze_rows: within each block
    - encode_number: based on row analysis
    - construct_output: grid based on encoded numbers
  encoding_rules:
    rule_1: all gray row -> 8
    rule_2: second and third pixels white in a row -> 2
    rule_3: otherwise -> 4
  output_structure: 3x3 grid

example_2:
  input_shape: 30x15
  output_shape: 3x3
  block_width: 4
    objects:
    - type: vertical_block
      properties:
        - width: variable, often 4
        - encoding: based on row patterns
  actions:
    - divide_input: vertical blocks
    - analyze_rows: within each block
    - encode_number: based on row analysis
    - construct_output: grid based on encoded numbers
  encoding_rules:
    rule_1: all gray row -> 8
    rule_2: second and third pixels white in a row -> 2
    rule_3: otherwise -> 4
  output_structure: 3x3 grid

example_3:
 input_shape: 30x27
 output_shape: 2x5
 objects:
    - type: vertical_block
      properties:
        - width: variable
        - encoding: based on row patterns
  actions:
    - divide_input: vertical blocks
    - analyze_rows: within each block
    - encode_number: based on row analysis
    - construct_output: grid based on encoded numbers
  encoding_rules:
    rule_1: all gray row -> 8
    rule_2: second and third pixels white in a row -> 2
    rule_3: otherwise -> 4
  output_structure: Not Fixed.