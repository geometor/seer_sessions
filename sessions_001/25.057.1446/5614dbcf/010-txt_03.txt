import numpy as np

examples = [
    {
        "input": np.array([[5, 5, 5, 5, 5, 5, 5, 5, 5],
                           [5, 5, 5, 5, 5, 5, 5, 5, 5],
                           [5, 5, 5, 2, 2, 2, 5, 5, 5],
                           [5, 5, 5, 2, 2, 2, 5, 5, 5],
                           [5, 5, 5, 2, 2, 2, 5, 5, 5],
                           [5, 5, 5, 5, 5, 5, 5, 5, 5],
                           [5, 5, 5, 7, 7, 7, 7, 7, 5],
                           [5, 5, 5, 7, 7, 7, 7, 7, 5],
                           [5, 5, 5, 5, 5, 5, 5, 5, 5]]),
        "output": np.array([[0, 2, 0],
                            [0, 0, 0],
                            [0, 7, 0]])
    },
     {
        "input": np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 2, 2, 2, 0, 0, 0],
                           [0, 0, 0, 2, 2, 2, 0, 0, 0],
                           [0, 0, 0, 2, 2, 2, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 7, 7, 7, 7, 7, 0],
                           [0, 0, 0, 7, 7, 7, 7, 7, 0]]),
        "output": np.array([[0, 2, 0],
                            [0, 0, 0],
                            [0, 7, 0]])
    },
      {
        "input": np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 2, 2, 2, 0, 0, 0],
                           [0, 0, 0, 2, 2, 2, 0, 0, 0],
                           [0, 0, 0, 2, 2, 2, 0, 0, 0],
                           [0, 0, 0, 0, 0, 0, 0, 0, 0],
                           [0, 0, 0, 7, 7, 7, 7, 7, 0],
                           [0, 0, 0, 7, 7, 7, 7, 7, 0],
                           [0, 0, 0, 7, 7, 7, 7, 7, 0]]),
        "output": np.array([[0, 2, 0],
                            [0, 0, 0],
                            [0, 7, 0]])
    },
]

def analyze_example(example):
    input_grid = example["input"]
    output_grid = example["output"]

    input_shape = input_grid.shape
    output_shape = output_grid.shape

    background_color = input_grid[0, 0]
    unique_colors = np.unique(input_grid)
    foreground_colors = [color for color in unique_colors if color != background_color]

    #find subgrids
    subgrids = {}
    for color in foreground_colors:
      rows, cols = np.where(input_grid == color)
      min_row, max_row = np.min(rows), np.max(rows)
      min_col, max_col = np.min(cols), np.max(cols)
      subgrid = input_grid[min_row:max_row+1, min_col:max_col+1]
      subgrids[color] = {
          "shape":subgrid.shape
      }

    return {
        "input_shape": input_shape,
        "output_shape": output_shape,
        "background_color": background_color,
        "foreground_colors": foreground_colors,
        "subgrids": subgrids
    }

results = [analyze_example(example) for example in examples]
for i, result in enumerate(results):
  print(f"Example {i+1}:")
  print(result)