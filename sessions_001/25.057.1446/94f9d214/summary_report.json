{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1813,
        "candidates": 570,
        "total": 2383,
        "cached": 0
      },
      "response_time": 8.385848
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2245,
        "candidates": 317,
        "total": 2562,
        "cached": 0
      },
      "response_time": 3.686739
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1568,
        "candidates": 1506,
        "total": 3074,
        "cached": 0
      },
      "response_time": 13.069067
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2875,
        "candidates": 322,
        "total": 3197,
        "cached": 0
      },
      "response_time": 3.206761
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1573,
        "candidates": 1188,
        "total": 2761,
        "cached": 0
      },
      "response_time": 11.533375
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2557,
        "candidates": 263,
        "total": 2820,
        "cached": 0
      },
      "response_time": 3.306333
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1813,
        "candidates": 605,
        "total": 2418,
        "cached": 0
      },
      "response_time": 53.104321
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2282,
        "candidates": 597,
        "total": 2879,
        "cached": 0
      },
      "response_time": 7.285933
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1851,
        "candidates": 2361,
        "total": 4212,
        "cached": 0
      },
      "response_time": 23.592807
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2097,
        "candidates": 1547,
        "total": 3644,
        "cached": 0
      },
      "response_time": 18.856521
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 3439,
        "candidates": 932,
        "total": 4371,
        "cached": 0
      },
      "response_time": 8.982459
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4014,
        "candidates": 596,
        "total": 4610,
        "cached": 0
      },
      "response_time": 5.750317
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1813,
        "candidates": 499,
        "total": 2312,
        "cached": 0
      },
      "response_time": 8.24249
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2173,
        "candidates": 369,
        "total": 2542,
        "cached": 0
      },
      "response_time": 4.871315
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1619,
        "candidates": 1510,
        "total": 3129,
        "cached": 0
      },
      "response_time": 16.652396
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2924,
        "candidates": 385,
        "total": 3309,
        "cached": 0
      },
      "response_time": 4.329684
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1635,
        "candidates": 3035,
        "total": 4670,
        "cached": 0
      },
      "response_time": 24.454688
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 4468,
        "candidates": 545,
        "total": 5013,
        "cached": 0
      },
      "response_time": 4.595275
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1813,
        "candidates": 696,
        "total": 2509,
        "cached": 0
      },
      "response_time": 8.638608
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2369,
        "candidates": 775,
        "total": 3144,
        "cached": 0
      },
      "response_time": 8.195008
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2022,
        "candidates": 2799,
        "total": 4821,
        "cached": 0
      },
      "response_time": 23.811465
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 4616,
        "candidates": 321,
        "total": 4937,
        "cached": 0
      },
      "response_time": 4.02854
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1571,
        "candidates": 1406,
        "total": 2977,
        "cached": 0
      },
      "response_time": 15.538276
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 2772,
        "candidates": 409,
        "total": 3181,
        "cached": 0
      },
      "response_time": 4.323261
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n2 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n0 2 2 0\n0 0 2 2\n2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n2 2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n2 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n0 2 2 0\n0 0 2 2\n2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n2 2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n2 0 0 2\n0 0 0 2\n2 0 2 2\n2 2 2 2\n0 2 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n0 2 2 0\n0 0 2 2\n2 0 0 0\n0 0 0 2\n0 0 0 2\n0 2 0 0\n2 0 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n2 2 2 2\n2 2 2 2\n2 2 0 0\n2 2 0 0\n0 2 2 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n2 2 0 2\n2 2 2 0\n0 2 2 2\n2 0 2 2\n0 2 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "2 2 0 0\n2 2 0 0\n2 2 0 0\n2 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 0 0\n2 2 0 0\n2 2 0 0\n2 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "2 2 0 0\n2 2 0 0\n2 2 0 0\n2 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 0 0\n2 2 0 0\n2 2 0 0\n2 2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      }
    ],
    "009-py_05-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "2 2\n2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2\n2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "2 2\n2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2\n2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n2 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n0 2 2 0\n0 0 2 2\n2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n2 2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 2 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 87.5
      }
    ],
    "017-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 2 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 87.5
      }
    ],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 2 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 3 3 3\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 3 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 75.0
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 3 3 3\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      }
    ],
    "020-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "022-py_13-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "024-py_14-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}