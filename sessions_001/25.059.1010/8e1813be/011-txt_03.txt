import numpy as np

def analyze_example(input_grid, output_grid):
    """Analyzes a single input-output pair."""
    input_grid = np.array(input_grid)
    output_grid = np.array(output_grid)    
    
    analysis = {
        'input_shape': input_grid.shape,
        'output_shape': output_grid.shape,
        'target_colors': {
            'blue': [],
            'red': [],
            'yellow': [],
        },
        'other_colors':{}
    }
    for color_name, color_value in [('blue', 1), ('red', 2), ('yellow', 4)]:
        for row in range(input_grid.shape[0]):
            for col in range(input_grid.shape[1]):
                if input_grid[row, col] == color_value:
                    analysis['target_colors'][color_name].append((row, col))
    for color_name, color_value in [('white', 0), ('gray', 5), ('magenta', 6)]:
        analysis['other_colors'][color_name] = []
        for row in range(input_grid.shape[0]):
            for col in range(input_grid.shape[1]):
                if input_grid[row, col] == color_value:
                    analysis['other_colors'][color_name].append((row, col))

    return analysis

# Example usage with the provided training examples:
task_examples = [
    {
        "input": [[5, 5, 1, 5, 5], [5, 5, 2, 5, 5], [5, 5, 4, 5, 5]],
        "output": [[1, 2, 4], [1, 2, 4], [1, 2, 4]],
    },
    {
        "input": [[5, 5, 5, 1, 5], [5, 5, 5, 4, 5], [5, 5, 5, 2, 5]],
        "output": [[1, 4, 2], [1, 4, 2], [1, 4, 2]],
    },
    {
        "input": [[5, 5, 5, 5, 1, 5, 5, 5, 5, 5], [5, 5, 6, 5, 2, 5, 5, 6, 5, 5], [5, 5, 5, 5, 4, 5, 5, 5, 5, 5]],
        "output": [[1, 2, 4], [1, 2, 4], [1, 2, 4]],
    },
    {
        "input" : [[0, 0, 5, 5, 5, 0, 0],
           [0, 0, 5, 1, 5, 0, 0],
           [0, 0, 5, 2, 5, 0, 0],
           [0, 0, 5, 4, 5, 0, 0]],
        "output": [[1, 2, 4],
          [1, 2, 4],
          [1, 2, 4]]

    },
    {
        "input": [[5, 5, 1, 5, 5, 5, 5], [5, 5, 5, 5, 5, 5, 5], [5, 2, 5, 5, 5, 5, 4]],
        "output": [[1, 2, 4], [1, 2, 4], [1, 2, 4]],
    },
]


for i, example in enumerate(task_examples):
    analysis = analyze_example(example['input'], example['output'])
    print(f"Example {i + 1}:")
    print(analysis)
    print("---")