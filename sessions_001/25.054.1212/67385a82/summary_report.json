{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 481,
        "total": 2234,
        "cached": 0
      },
      "response_time": 5.98788
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2096,
        "candidates": 288,
        "total": 2384,
        "cached": 0
      },
      "response_time": 3.756117
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2365,
        "candidates": 981,
        "total": 3346,
        "cached": 0
      },
      "response_time": 14.145363
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3139,
        "candidates": 424,
        "total": 3563,
        "cached": 0
      },
      "response_time": 4.652106
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2501,
        "candidates": 1891,
        "total": 4392,
        "cached": 0
      },
      "response_time": 35.74901
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4188,
        "candidates": 215,
        "total": 4403,
        "cached": 0
      },
      "response_time": 2.606185
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1813,
        "candidates": 352,
        "total": 2165,
        "cached": 0
      },
      "response_time": 6.4204
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2027,
        "candidates": 279,
        "total": 2306,
        "cached": 0
      },
      "response_time": 3.348375
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2356,
        "candidates": 1344,
        "total": 3700,
        "cached": 0
      },
      "response_time": 13.9326
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3493,
        "candidates": 599,
        "total": 4092,
        "cached": 0
      },
      "response_time": 6.601734
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2676,
        "candidates": 908,
        "total": 3584,
        "cached": 0
      },
      "response_time": 11.900102
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3380,
        "candidates": 662,
        "total": 4042,
        "cached": 0
      },
      "response_time": 6.463961
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1781,
        "candidates": 368,
        "total": 2149,
        "cached": 0
      },
      "response_time": 6.955229
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2009,
        "candidates": 306,
        "total": 2315,
        "cached": 0
      },
      "response_time": 3.744312
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2381,
        "candidates": 1050,
        "total": 3431,
        "cached": 0
      },
      "response_time": 11.27357
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3220,
        "candidates": 393,
        "total": 3613,
        "cached": 0
      },
      "response_time": 4.141417
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2468,
        "candidates": 939,
        "total": 3407,
        "cached": 0
      },
      "response_time": 41.781568
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3198,
        "candidates": 378,
        "total": 3576,
        "cached": 0
      },
      "response_time": 3.327189
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 365,
        "total": 2202,
        "cached": 0
      },
      "response_time": 6.442539
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2063,
        "candidates": 833,
        "total": 2896,
        "cached": 0
      },
      "response_time": 7.636577
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2910,
        "candidates": 1449,
        "total": 4359,
        "cached": 0
      },
      "response_time": 13.392244
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 4153,
        "candidates": 881,
        "total": 5034,
        "cached": 0
      },
      "response_time": 7.727376
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 2958,
        "candidates": 1856,
        "total": 4814,
        "cached": 0
      },
      "response_time": 16.7692
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 4609,
        "candidates": 685,
        "total": 5294,
        "cached": 0
      },
      "response_time": 6.930963
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "3 3 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 8 0\n3 0 3",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 3 3 3 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 8 0 0 0 8\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.83333333333334
      },
      {
        "example": 3,
        "input": "3 3 0 3\n3 3 0 0\n3 0 0 3\n0 0 3 3",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 8\n8 8 0 0\n3 0 0 3\n0 0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "3 3 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 3 3 0 0 0\n0 3 3 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 8 0 0 8 0\n3 0 0 0 0 0\n0 3 3 0 0 0\n0 3 3 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "3 3 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "3 3 0\n0 3 0\n3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 3 3 3 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 3 3 3 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "3 3 0 3\n3 3 0 0\n3 0 0 3\n0 0 3 3",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "3 3 0 3\n3 3 0 0\n3 0 0 3\n0 0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 4,
        "input": "3 3 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 3 3 0 0 0\n0 3 3 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "3 3 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 3 3 0 0 0\n0 3 3 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "3 3 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 8 0\n3 0 3",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 3 3 3 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 8 0 0 0 8\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.83333333333334
      },
      {
        "example": 3,
        "input": "3 3 0 3\n3 3 0 0\n3 0 0 3\n0 0 3 3",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 8\n8 8 0 0\n3 0 0 3\n0 0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "3 3 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 3 3 0 0 0\n0 3 3 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 8 0 0 8 0\n3 0 0 0 0 0\n0 3 3 0 0 0\n0 3 3 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "3 3 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 3 0\n0 3 0\n3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 3 3 3 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 8 8 3 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 91.66666666666666
      },
      {
        "example": 3,
        "input": "3 3 0 3\n3 3 0 0\n3 0 0 3\n0 0 3 3",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 3 0 3\n8 3 0 0\n3 0 0 3\n0 0 8 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 4,
        "input": "3 3 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 3 3 0 0 0\n0 3 3 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 3 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 3 0 0 0\n0 8 3 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 86.66666666666667
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "8 3 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 3 0\n3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 8 8 3 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.83333333333334
      },
      {
        "example": 3,
        "input": "8 3 0 3\n8 3 0 0\n3 0 0 3\n0 0 8 3",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 87.5
      },
      {
        "example": 4,
        "input": "8 3 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 3 0 0 0\n0 8 3 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 96.66666666666667
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "8 8 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 3 0\n3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.83333333333334
      },
      {
        "example": 3,
        "input": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 87.5
      },
      {
        "example": 4,
        "input": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 96.66666666666667
      }
    ],
    "014-py_07-train": [
      {
        "example": 1,
        "input": "8 8 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 3 0\n8 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.83333333333334
      },
      {
        "example": 3,
        "input": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 3\n8 8 0 0\n8 0 0 3\n0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 93.75
      },
      {
        "example": 4,
        "input": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 3 0 0 3 0\n8 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 93.33333333333333
      }
    ],
    "016-py_08-train": [
      {
        "example": 1,
        "input": "8 8 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 3 0\n8 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 0 8 8 0 8\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 87.5
      },
      {
        "example": 3,
        "input": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 3\n8 8 0 8\n3 0 0 3\n0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 4,
        "input": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 96.66666666666667
      }
    ],
    "018-py_09-train": [
      {
        "example": 1,
        "input": "8 8 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 3 0\n8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 8 8 8 0 8\n0 0 0 0 3 0\n0 8 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 87.5
      },
      {
        "example": 3,
        "input": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 3\n8 8 0 8\n3 0 0 3\n0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 4,
        "input": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 93.33333333333333
      }
    ],
    "020-py_10-train": [
      {
        "example": 1,
        "input": "8 8 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 8 0\n3 0 3",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.83333333333334
      },
      {
        "example": 3,
        "input": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 87.5
      },
      {
        "example": 4,
        "input": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "022-py_11-train": [
      {
        "example": 1,
        "input": "8 8 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 3 0\n3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.83333333333334
      },
      {
        "example": 3,
        "input": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 87.5
      },
      {
        "example": 4,
        "input": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 96.66666666666667
      }
    ],
    "024-py_12-train": [
      {
        "example": 1,
        "input": "8 8 0\n0 3 0\n3 0 3",
        "expected_output": "8 8 0\n0 8 0\n3 0 3",
        "transformed_output": "8 8 0\n0 3 0\n3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "expected_output": "0 8 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "transformed_output": "0 3 0 0 0 3\n0 8 8 8 0 0\n0 0 0 0 3 0\n0 3 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 95.83333333333334
      },
      {
        "example": 3,
        "input": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "expected_output": "8 8 0 3\n8 8 0 0\n8 0 0 8\n0 0 8 8",
        "transformed_output": "8 8 0 3\n8 8 0 0\n3 0 0 3\n0 0 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 87.5
      },
      {
        "example": 4,
        "input": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "expected_output": "8 8 0 0 0 0\n0 8 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "transformed_output": "8 8 0 0 0 0\n0 3 0 0 3 0\n3 0 0 0 0 0\n0 8 8 0 0 0\n0 8 8 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 96.66666666666667
      }
    ]
  },
  "best_train_results": {
    "passed": 2,
    "total": 4
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}