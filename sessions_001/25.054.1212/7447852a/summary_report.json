{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 567,
        "total": 2404,
        "cached": 0
      },
      "response_time": 8.329918
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2267,
        "candidates": 425,
        "total": 2692,
        "cached": 0
      },
      "response_time": 5.478761
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2719,
        "candidates": 1340,
        "total": 4059,
        "cached": 0
      },
      "response_time": 15.338266
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3856,
        "candidates": 418,
        "total": 4274,
        "cached": 0
      },
      "response_time": 5.686626
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2712,
        "candidates": 896,
        "total": 3608,
        "cached": 0
      },
      "response_time": 12.321389
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3409,
        "candidates": 500,
        "total": 3909,
        "cached": 0
      },
      "response_time": 4.87139
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 451,
        "total": 2348,
        "cached": 0
      },
      "response_time": 6.494572
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2209,
        "candidates": 1416,
        "total": 3625,
        "cached": 0
      },
      "response_time": 13.367968
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 3707,
        "candidates": 2142,
        "total": 5849,
        "cached": 0
      },
      "response_time": 21.195869
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2608,
        "candidates": 989,
        "total": 3597,
        "cached": 0
      },
      "response_time": 13.363256
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 3391,
        "candidates": 585,
        "total": 3976,
        "cached": 0
      },
      "response_time": 5.850513
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 5643,
        "candidates": 1043,
        "total": 6686,
        "cached": 0
      },
      "response_time": 9.063322
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1933,
        "candidates": 433,
        "total": 2366,
        "cached": 0
      },
      "response_time": 6.726369
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2228,
        "candidates": 487,
        "total": 2715,
        "cached": 0
      },
      "response_time": 5.487934
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2779,
        "candidates": 1070,
        "total": 3849,
        "cached": 0
      },
      "response_time": 14.662892
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3644,
        "candidates": 717,
        "total": 4361,
        "cached": 0
      },
      "response_time": 8.848503
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 3009,
        "candidates": 1158,
        "total": 4167,
        "cached": 0
      },
      "response_time": 15.60396
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3959,
        "candidates": 561,
        "total": 4520,
        "cached": 0
      },
      "response_time": 5.295374
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 75.55555555555556
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 77.77777777777779
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 75.55555555555556
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 77.77777777777779
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 75.55555555555556
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 77.77777777777779
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 0\n0 2 4 2 4 2 4 2 4 2\n0 0 2 4 4 4 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 0 0\n0 2 4 2 4 2 4 2 4 2 4 2 4 2 0\n0 0 2 4 4 4 2 4 4 4 2 4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 57.77777777777777
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 0\n0 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 0 2 4 4 4 2 4 4 4 2 4 4 4 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 53.70370370370371
      }
    ],
    "009-py_05-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_06-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 61.111111111111114
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 0\n0 2 4 2 4 2 4 2 4 2\n0 0 2 4 4 4 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 0 0\n0 2 4 2 4 2 4 2 4 2 4 2 4 2 0\n0 0 2 4 4 4 2 4 4 4 2 4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 57.77777777777777
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 0\n0 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 0 2 4 4 4 2 4 4 4 2 4 4 4 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 53.70370370370371
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0\n0 4 0 4 0 4 0 4 0 4\n0 0 4 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0 0 0 4 0 0\n0 4 0 4 0 4 0 4 0 4 0 4 0 4 0\n0 0 4 0 0 0 4 0 0 0 4 0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 26,
        "percent_correct": 42.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0 0 0 4 0 0 0 4 0\n0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4\n0 0 4 0 0 0 4 0 0 0 4 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 44.44444444444444
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "4 0 0 0 4 0 0 0 2 0\n0 4 0 2 0 4 0 2 0 2\n0 0 4 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 56.666666666666664
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0 0 0 4 0 0\n0 4 0 2 0 4 0 2 0 4 0 2 0 4 0\n0 0 4 0 0 0 4 0 0 0 4 0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 23,
        "percent_correct": 48.888888888888886
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0 0 0 4 0 0 0 2 0\n0 4 0 2 0 4 0 2 0 4 0 2 0 4 0 2 0 2\n0 0 4 0 0 0 4 0 0 0 4 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 55.55555555555556
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0\n0 4 0 4 0 4 0 4 0 4\n0 0 4 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0 0 0 4 0 0\n0 4 0 4 0 4 0 4 0 4 0 4 0 4 0\n0 0 4 0 0 0 4 0 0 0 4 0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 26,
        "percent_correct": 42.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0 0 0 4 0 0 0 4 0\n0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4\n0 0 4 0 0 0 4 0 0 0 4 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 44.44444444444444
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}