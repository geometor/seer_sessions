task: 020
facts:
  - object_types:
      - pixel:
          properties:
            color: [0, 1, 2]  # white, blue, red
            position: (row, col)
  - transformations:
      - find_top_left_blue:
          input: grid of pixels
          action: >
            Locate the blue (1) pixel that is furthest to the top and
            furthest to the left, if there are more than one on the same row,
            choose the left-most
          output: (row, col) of the top-left blue pixel, or None if no blue pixel exists
      - replace_and_shift:
          input: grid of pixels, top_left_blue_position
          action: >
            1.  Move all zero's (white) down one row.
            2.  Change color of the left-most blue and all blues in that row
                to the right
            3.  Change all 0s to 2s
          output: modified grid of pixels
  - spatial_relationships:
      - adjacency: Important for determining the top-left blue.
      - row_major_order: Used implicitly when searching for the top-left.
