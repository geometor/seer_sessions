{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 806,
        "total": 2603,
        "cached": 0
      },
      "response_time": 10.481798
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2462,
        "candidates": 298,
        "total": 2760,
        "cached": 0
      },
      "response_time": 4.313948
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2741,
        "candidates": 1236,
        "total": 3977,
        "cached": 0
      },
      "response_time": 16.563744
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3772,
        "candidates": 1007,
        "total": 4779,
        "cached": 0
      },
      "response_time": 10.921417
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 3515,
        "candidates": 1399,
        "total": 4914,
        "cached": 0
      },
      "response_time": 16.850325
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4708,
        "candidates": 466,
        "total": 5174,
        "cached": 0
      },
      "response_time": 5.254924
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 505,
        "total": 2342,
        "cached": 0
      },
      "response_time": 7.745649
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2204,
        "candidates": 637,
        "total": 2841,
        "cached": 0
      },
      "response_time": 7.120761
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 3162,
        "candidates": 1497,
        "total": 4659,
        "cached": 0
      },
      "response_time": 15.748172
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 4456,
        "candidates": 681,
        "total": 5137,
        "cached": 0
      },
      "response_time": 6.387779
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 3208,
        "candidates": 1058,
        "total": 4266,
        "cached": 0
      },
      "response_time": 14.660815
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4061,
        "candidates": 619,
        "total": 4680,
        "cached": 0
      },
      "response_time": 6.216007
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1867,
        "candidates": 620,
        "total": 2487,
        "cached": 0
      },
      "response_time": 10.086842
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2348,
        "candidates": 728,
        "total": 3076,
        "cached": 0
      },
      "response_time": 8.179062
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 4023,
        "candidates": 1048,
        "total": 5071,
        "cached": 0
      },
      "response_time": 14.037319
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 4866,
        "candidates": 574,
        "total": 5440,
        "cached": 0
      },
      "response_time": 5.986326
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 3101,
        "candidates": 3403,
        "total": 6504,
        "cached": 0
      },
      "response_time": 28.028793
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 6300,
        "candidates": 707,
        "total": 7007,
        "cached": 0
      },
      "response_time": 7.007882
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 565,
        "total": 2442,
        "cached": 0
      },
      "response_time": 9.14108
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2302,
        "candidates": 376,
        "total": 2678,
        "cached": 0
      },
      "response_time": 4.065766
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2900,
        "candidates": 1740,
        "total": 4640,
        "cached": 0
      },
      "response_time": 23.530898
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 4429,
        "candidates": 439,
        "total": 4868,
        "cached": 0
      },
      "response_time": 5.966499
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 2711,
        "candidates": 1211,
        "total": 3922,
        "cached": 0
      },
      "response_time": 13.419094
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3716,
        "candidates": 439,
        "total": 4155,
        "cached": 0
      },
      "response_time": 4.548686
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "",
        "match": "ERROR: index 4 is out of bounds for axis 0 with size 4",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 68.75
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 5 0 8 0 8 0\n8 0 5 0 8 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 59.375
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "0 0 0 0 6 0 6 8\n0 0 0 0 0 0 8 0\n0 0 6 0 6 8 0 0\n0 0 0 0 8 0 0 0\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 0 0 0 0\n4 0 0 0 0 0\n8 0 4 0 0 0\n8 0 0 0 0 0\n8 0 0 0 0 0\n8 0 0 0 0 0\n8 0 0 0 0 0\n8 0 4 0 0 0\n4 0 0 0 0 0\n8 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 2 0 8 2 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 22,
        "percent_correct": 65.625
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 5 0 8 5 8 0\n8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 56.25
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 6 0 8 0\n8 0 8 0 8 0 8 0\n8 0 6 0 8 6 8 0\n8 0 8 0 8 0 8 0\n8 0 8 6 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 4 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 0 8 0\n8 0 8 4 8 0\n4 0 8 0 8 4\n8 0 8 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 2 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 2 8 0\n8 0 8 0 8 0 8 0\n8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 68.75
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 62.5
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "0 0 6 8 8 0 6 0\n0 0 0 8 8 0 0 0\n0 6 0 8 8 6 0 0\n0 6 0 8 8 6 0 0\n0 0 0 0 0 0 0 0\n0 0 6 0 0 0 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 68.75
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 0 8 0 8\n8 5 8 0 0 8 5 8\n8 5 8 0 0 8 5 8\n8 0 8 0 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 40.625
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 8 8 8 8 8\n8 8 8 8 8 8\n8 8 8 8 8 8\n8 8 8 8 8 8\n8 8 8 8 8 8\n8 8 8 8 8 8\n8 8 8 8 8 8\n8 8 8 8 8 8\n8 8 8 8 8 8\n8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 40.0
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 0 8 0 8\n8 2 8 0 0 8 2 8\n8 0 8 0 0 8 0 8\n8 0 8 0 0 8 0 8\n8 0 8 0 0 8 0 8\n8 0 8 0 0 8 0 8\n8 2 8 0 0 8 2 8\n8 0 8 0 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 35,
        "percent_correct": 45.3125
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0\n8 5 8 0 0 8 5 8\n8 5 8 0 0 8 5 8\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 16,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "0 8 6 8 8 6 8 0\n0 0 0 0 0 0 0 0\n8 6 8 0 0 8 6 8\n8 6 8 0 0 8 6 8\n0 0 0 0 0 0 0 0\n0 8 6 8 8 6 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "0 0 0 0 0 0\n8 4 8 8 4 8\n0 0 0 0 0 0\n0 0 0 0 0 0\n4 8 0 0 8 4\n4 8 0 0 8 4\n0 0 0 0 0 0\n0 0 0 0 0 0\n8 4 8 8 4 8\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 40.0
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0\n8 2 8 0 0 8 2 8\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n8 2 8 0 0 8 2 8\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 62.5
      }
    ],
    "014-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8 8\n8 5 0 0 0 0 0 5 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 5 0 0 0 0 0 5 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 6 0 0 0 0 0 6 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 6 0 0 0 0 0 6 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 6 0 0 0 0 0 6 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8\n8 4 8 0 0 8 4 8 0 0 8\n8 8 0 0 0 0 8 0 0 0 8\n8 0 0 0 0 8 0 0 0 0 8\n8 0 0 0 8 4 8 0 0 0 8\n8 0 0 0 0 8 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 0 0 0 8\n8 4 8 0 0 8 4 8 0 0 8\n8 8 0 0 0 0 8 0 0 0 8\n8 0 0 0 0 8 0 0 0 0 8\n8 0 0 0 8 4 8 0 0 0 8\n8 0 0 0 0 8 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 8\n8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8 8\n8 2 0 0 0 0 0 2 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 2 0 0 0 0 0 2 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 0 8\n8 8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "016-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "0 8 0 0 0 8 0 0\n8 5 8 0 8 5 8 0\n0 8 0 0 0 8 0 0\n8 5 8 0 8 5 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "0 8 6 8 0 8 6 8\n0 8 8 0 0 8 8 0\n8 6 8 0 8 6 8 0\n0 8 6 8 0 8 6 8\n0 8 8 0 0 8 8 0\n8 6 8 0 8 6 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "0 8 0 0 8 0\n8 4 8 8 4 8\n0 8 0 0 8 0\n8 0 0 8 0 0\n4 8 8 4 8 0\n8 8 0 8 8 0\n8 4 8 8 4 8\n0 8 0 0 8 0\n8 0 0 8 0 0\n4 8 8 4 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 44,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "0 8 0 0 0 8 0 0\n8 2 8 0 8 2 8 0\n0 8 0 0 0 8 0 0\n0 0 0 0 0 0 0 0\n0 8 0 0 0 8 0 0\n8 2 8 0 8 2 8 0\n0 8 0 0 0 8 0 0\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 50.0
      }
    ],
    "017-py_09-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "0 8 0 0 0 8 0 0\n8 5 8 0 8 5 8 0\n0 8 0 0 0 8 0 0\n8 5 8 0 8 5 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "0 8 6 8 0 8 6 8\n0 8 8 0 0 8 8 0\n8 6 8 0 8 6 8 0\n0 8 6 8 0 8 6 8\n0 8 8 0 0 8 8 0\n8 6 8 0 8 6 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "0 8 0 0 8 0\n8 4 8 8 4 8\n0 8 0 0 8 0\n8 0 0 8 0 0\n4 8 8 4 8 0\n8 8 0 8 8 0\n8 4 8 8 4 8\n0 8 0 0 8 0\n8 0 0 8 0 0\n4 8 8 4 8 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 44,
        "percent_correct": 26.666666666666668
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "0 8 0 0 0 8 0 0\n8 2 8 0 8 2 8 0\n0 8 0 0 0 8 0 0\n0 0 0 0 0 0 0 0\n0 8 0 0 0 8 0 0\n8 2 8 0 8 2 8 0\n0 8 0 0 0 8 0 0\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 50.0
      }
    ],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 75.0
      }
    ],
    "022-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 5 0 8 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "",
        "match": "ERROR: index 9 is out of bounds for axis 1 with size 8",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "",
        "match": "ERROR: index 7 is out of bounds for axis 1 with size 6",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 2 0 8 0 2\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 75.0
      }
    ],
    "024-py_13-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 5 0 5 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 78.125
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 6 0 6\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 6 0 6 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 33,
        "percent_correct": 31.25
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 4 0 4\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 4 0 4 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 33,
        "percent_correct": 45.0
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 2 0 2 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 75.0
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}