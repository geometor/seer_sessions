examples:
  - id: example_1
    input_shape: (2, 4)
    output_shape: (4, 8)
    input_non_zero_count: 1
    output_non_zero_count: 6 #includes background
    azure_placement: "Even columns"
    pixel_replication: "Gray (5) pixels diagonally down, duplicated down"
    notes: >
        Original code was derived from this example.  Expansion factor is x2 for width and height.
        Output includes newly added azure background and replicated input pixels

  - id: example_2
    input_shape: (3, 4)
    output_shape: (5, 8)
    input_non_zero_count: 2
    output_non_zero_count: 20 # includes background
    azure_placement: "Complex, likely related to input non-zero positions"
    pixel_replication: "magenta (6) replicated in same row, one column to the right, azure (8) in next column"
    notes: >
        Height expansion is not double (+2 rows, not +3).
        magenta (6) is replicated with an azure (8) to its right and a blank (0) between.

  - id: example_3
    input_shape: (5, 3)
    output_shape: (10, 6)
    input_non_zero_count: 2
    output_non_zero_count: 16 # includes background
    azure_placement: "Complex - first column, scattered"
    pixel_replication: "yellow (4) at (1,1) and (4,0), mirrored on x axis"
    notes: >
       Width and height are both exactly doubled. Replicated pixels appear at (1,1),(1,4) and (4,0),(7,0)
       Replicated yellow (4) pixels do not have immediately adjacent azure (8) pixels.

  - id: example_4
    input_shape: (4, 4)
    output_shape: (8, 8)
    input_non_zero_count: 1
    output_non_zero_count: 10 # includes background
    azure_placement: "Even columns"
    pixel_replication: "red (2) replicated in same row, 3 colums right"
    notes: >
      Height and width are doubled.  Red (2) is replicated.
      Replicated red pixels are in the same row, three columns to the right.  Azure pixels surround on left and right.