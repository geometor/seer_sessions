{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 386,
        "total": 2183,
        "cached": 0
      },
      "response_time": 6.163504
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2045,
        "candidates": 203,
        "total": 2248,
        "cached": 0
      },
      "response_time": 21.463302
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2259,
        "candidates": 866,
        "total": 3125,
        "cached": 0
      },
      "response_time": 10.923387
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2921,
        "candidates": 421,
        "total": 3342,
        "cached": 0
      },
      "response_time": 4.712365
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2479,
        "candidates": 3175,
        "total": 5654,
        "cached": 0
      },
      "response_time": 26.285757
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 5448,
        "candidates": 436,
        "total": 5884,
        "cached": 0
      },
      "response_time": 5.905275
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 600,
        "total": 2437,
        "cached": 0
      },
      "response_time": 7.469209
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2297,
        "candidates": 352,
        "total": 2649,
        "cached": 0
      },
      "response_time": 4.458692
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2410,
        "candidates": 845,
        "total": 3255,
        "cached": 0
      },
      "response_time": 11.36801
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3048,
        "candidates": 403,
        "total": 3451,
        "cached": 0
      },
      "response_time": 3.288527
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2461,
        "candidates": 1613,
        "total": 4074,
        "cached": 0
      },
      "response_time": 15.454579
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3870,
        "candidates": 389,
        "total": 4259,
        "cached": 0
      },
      "response_time": 4.313656
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 517,
        "total": 2394,
        "cached": 0
      },
      "response_time": 8.353363
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2255,
        "candidates": 302,
        "total": 2557,
        "cached": 0
      },
      "response_time": 24.12278
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2359,
        "candidates": 879,
        "total": 3238,
        "cached": 0
      },
      "response_time": 9.427012
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3033,
        "candidates": 584,
        "total": 3617,
        "cached": 0
      },
      "response_time": 4.586987
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2641,
        "candidates": 976,
        "total": 3617,
        "cached": 0
      },
      "response_time": 10.069856
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3413,
        "candidates": 624,
        "total": 4037,
        "cached": 0
      },
      "response_time": 5.546215
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n8 8\n1 1\n1 1\n8 8\n8 8\n1 1\n1 1\n8 8\n8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 1\n8 8 1\n1 1 8\n1 1 8\n8 8 1\n8 8 1\n1 1 8\n1 1 8\n8 8 1\n8 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 1 1\n8 8 1 1\n1 1 8 8\n1 1 8 8\n8 8 1 1\n8 8 1 1\n1 1 8 8\n1 1 8 8\n8 8 1 1\n8 8 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 50.0
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n8 8\n1 1\n1 1\n8 8\n8 8\n1 1\n1 1\n8 8\n8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 1\n8 8 1\n1 1 8\n1 1 8\n8 8 1\n8 8 1\n1 1 8\n1 1 8\n8 8 1\n8 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 1 1\n8 8 1 1\n1 1 8 8\n1 1 8 8\n8 8 1 1\n8 8 1 1\n1 1 8 8\n1 1 8 8\n8 8 1 1\n8 8 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 50.0
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n8 1\n8 8\n8 8\n8 1\n8 8\n8 8\n8 1\n8 8\n8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 45.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 8\n8 1 1\n8 8 1\n8 8 8\n8 1 1\n8 8 1\n8 8 8\n8 1 1\n8 8 1\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 50.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 8 1\n8 1 1 8\n8 8 1 1\n8 8 8 1\n8 1 1 8\n8 8 1 1\n8 8 8 1\n8 1 1 8\n8 8 1 1\n8 8 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 65.0
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 5.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n1 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 20.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n1 1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 29,
        "percent_correct": 27.500000000000004
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 5.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n1 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 20.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n1 1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 29,
        "percent_correct": 27.500000000000004
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1\n8 1 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8\n8 1 8 1\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 75.0
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 8\n1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 45.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 8 8\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 8 8 8\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 52.5
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "1 8\n8 8\n1 8\n8 8\n1 8\n8 8\n1 8\n8 8\n1 8\n1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 30.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "1 8 8\n8 8 8\n1 8 8\n8 8 8\n1 8 8\n8 8 8\n1 8 8\n8 8 8\n1 8 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 50.0
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "1 8 8 8\n8 8 8 8\n1 8 8 8\n8 8 8 8\n1 8 8 8\n8 8 8 8\n1 8 8 8\n8 8 8 8\n1 8 8 8\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 62.5
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n0 0\n1 0",
        "expected_output": "8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8\n8 1\n1 8",
        "transformed_output": "8 8\n1 8\n8 8\n1 8\n8 8\n1 8\n8 8\n1 8\n8 8\n1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n1 0 0",
        "expected_output": "8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8\n8 1 8\n8 8 1\n8 1 8\n1 8 8",
        "transformed_output": "8 8 8\n1 8 8\n8 8 8\n1 8 8\n8 8 8\n1 8 8\n8 8 8\n1 8 8\n8 8 8\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "expected_output": "8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8\n8 1 8 8\n8 8 1 8\n8 8 8 1\n8 8 1 8\n8 1 8 8\n1 8 8 8",
        "transformed_output": "8 8 8 8\n1 8 8 8\n8 8 8 8\n1 8 8 8\n8 8 8 8\n1 8 8 8\n8 8 8 8\n1 8 8 8\n8 8 8 8\n1 8 1 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 70.0
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}