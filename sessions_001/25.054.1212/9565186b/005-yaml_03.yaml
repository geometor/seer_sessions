examples:
  - example_1:
      input:
        objects:
          - color: red
            shape: rectangle
            position: entire grid except row 2 col 2 and 3, and row 3, col 3
          - color: blue
            shape: pixel
            position: [1,1] # zero indexed row, col
          - color: azure
            shape: rectangle
            position: row 2 col 2 and row 3, col 2 and 3

        actions:
          - find_bounding_box:
              colors: [blue, azure]
              result:  # Spans the blue and azure pixels
                top_left: [1, 1]
                bottom_right: [2, 2]
          - fill_area:
              area: bounding_box
              color: gray
      output:
       objects:
          - color: red
            shape: rectangle
            position: entire grid except row 2 col 2 and 3, and row 3, col 3
          - color: gray
            shape: rectangle
            position: [1,1] to [2,2]

  - example_2:
      input:
        objects:
          - color: blue
            shape: rectangle
            position: row 1 and 2, col 1 and 2
          - color: azure
            shape: rectangle
            position: row 2 and 3, col 1
          - color: green
            shape: pixel
            position: [1, 2]
          - color: red
            shape: rectangle
            position: row 3, col 2 and 3
        actions:
          - find_bounding_box:
              colors: [blue, azure]
              result:  # Spans from top-left blue to bottom-right azure.
                top_left: [0, 0]
                bottom_right: [2, 2]
          - fill_area:
              area: bounding_box
              color: gray
      output:
        objects:
          - color: blue
            shape: pixel
            position: [1, 2]
          - color: gray
            shape: rectangle
            position: row 1 col 1 and 2, and rows 2 and 3
  - example_3:
      input:
        objects:
          - color: red
            shape: rectangle
            position: entire grid
          - color: azure
            shape: pixel
            position: [1, 0], [1,1]
        actions:
          - find_bounding_box:
              colors: [azure]
              result: # Bounding box around azure pixels.
                top_left: [1, 0]
                bottom_right: [1, 1]
          - fill_area:
              area: bounding_box
              color: gray
      output:
       objects:
          - color: red
            shape: rectangle
            position: entire grid except row 2, col 1 and 2
          - color: gray
            shape: pixel
            position: [1, 0], [1,1]
  - example_4:
      input:
        objects:
          - color: green
            shape: rectangle
            position: row 1, col 1 and 2
          - color: yellow
            shape: rectangle
            position: row 2
          - color: azure
            shape: pixel
            position: [0, 2]
          - color: blue
            shape: rectangle
            position: row 3, col 2 and 3

        actions:
          - find_bounding_box:
              colors: [blue, azure]
              result:  # Spans from top-left azure to bottom-right blue.
                top_left: [0, 0]
                bottom_right: [2, 2]
          - fill_area:
              area: bounding_box
              color: gray
      output:
       objects:
          - color: yellow
            shape: rectangle
            position: row 2
          - color: gray
            shape: rectangle
            position: row 1 and row 3