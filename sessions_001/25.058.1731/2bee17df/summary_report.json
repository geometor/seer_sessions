{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4611,
        "candidates": 595,
        "total": 5206,
        "cached": 0
      },
      "response_time": 9.807185
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 5066,
        "candidates": 354,
        "total": 5420,
        "cached": 0
      },
      "response_time": 5.460152
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2293,
        "candidates": 550,
        "total": 2843,
        "cached": 0
      },
      "response_time": 8.437754
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2705,
        "candidates": 621,
        "total": 3326,
        "cached": 0
      },
      "response_time": 5.943335
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1872,
        "candidates": 4224,
        "total": 6096,
        "cached": 0
      },
      "response_time": 38.20148
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4727,
        "candidates": 818,
        "total": 5545,
        "cached": 0
      },
      "response_time": 10.831782
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 5340,
        "candidates": 1160,
        "total": 6500,
        "cached": 0
      },
      "response_time": 10.478363
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 5895,
        "candidates": 929,
        "total": 6824,
        "cached": 0
      },
      "response_time": 9.937652
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2293,
        "candidates": 442,
        "total": 2735,
        "cached": 0
      },
      "response_time": 6.900507
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2596,
        "candidates": 844,
        "total": 3440,
        "cached": 0
      },
      "response_time": 9.87688
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2095,
        "candidates": 5125,
        "total": 7220,
        "cached": 0
      },
      "response_time": 44.133442
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 7027,
        "candidates": 828,
        "total": 7855,
        "cached": 0
      },
      "response_time": 8.012622
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 2079,
        "candidates": 3345,
        "total": 5424,
        "cached": 0
      },
      "response_time": 32.701922
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 5214,
        "candidates": 1252,
        "total": 6466,
        "cached": 0
      },
      "response_time": 12.097893
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 665,
        "total": 2782,
        "cached": 0
      },
      "response_time": 9.630888
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2642,
        "candidates": 478,
        "total": 3120,
        "cached": 0
      },
      "response_time": 5.67023
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1727,
        "candidates": 1100,
        "total": 2827,
        "cached": 0
      },
      "response_time": 16.705823
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2620,
        "candidates": 478,
        "total": 3098,
        "cached": 0
      },
      "response_time": 5.151431
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1727,
        "candidates": 1252,
        "total": 2979,
        "cached": 0
      },
      "response_time": 18.074448
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2775,
        "candidates": 564,
        "total": 3339,
        "cached": 0
      },
      "response_time": 5.248084
    }
  ],
  "test_report": {
    "002-py_01-train": [],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 3 3 0 3 3 0 0 0 2\n8 0 0 3 3 3 3 3 3 0 0 2\n8 0 0 3 3 3 3 3 3 0 0 2\n8 0 0 3 3 3 3 3 3 0 0 2\n8 0 0 3 3 3 3 3 3 0 0 8\n8 0 0 3 3 3 3 3 3 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 79.16666666666666
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 3 3 3 3 8 3 0 0 8\n2 0 0 3 3 3 3 3 3 0 0 8\n2 2 2 0 3 3 3 3 3 0 0 8\n2 2 0 3 3 3 3 3 3 0 0 8\n2 2 0 3 3 3 3 3 3 0 0 8\n2 0 0 3 3 3 3 3 3 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 79.16666666666666
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 3 3 3 3 0 2 2\n8 0 0 3 3 3 3 0 2 2\n8 0 0 3 3 3 3 3 0 2\n8 0 0 3 3 3 0 0 0 2\n8 0 0 3 3 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 3 3 0 3 3 0 0 0 2\n8 0 0 3 3 3 3 3 3 0 0 2\n8 0 0 3 3 3 3 3 3 0 0 2\n8 0 0 3 3 3 3 3 3 0 0 2\n8 0 0 3 3 3 3 3 3 0 0 8\n8 0 0 3 3 3 3 3 3 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 79.16666666666666
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 3 3 3 3 8 3 0 0 8\n2 0 0 3 3 3 3 3 3 0 0 8\n2 2 2 0 3 3 3 3 3 0 0 8\n2 2 0 3 3 3 3 3 3 0 0 8\n2 2 0 3 3 3 3 3 3 0 0 8\n2 0 0 3 3 3 3 3 3 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 79.16666666666666
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 3 3 3 3 0 2 2\n8 0 0 3 3 3 3 0 2 2\n8 0 0 3 3 3 3 3 0 2\n8 0 0 3 3 3 0 0 0 2\n8 0 0 3 3 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      }
    ],
    "007-py_04-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 64,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 3 3 3 3 8 8 8 8 8 8\n2 2 3 3 3 3 0 8 8 0 0 8\n2 3 3 3 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 0 0 0 0 0 8\n2 2 2 3 3 3 0 0 0 0 0 8\n2 2 3 3 3 3 0 0 0 0 0 8\n2 2 3 3 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 0 0 0 0 2 2\n2 2 3 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 26,
        "percent_correct": 81.94444444444444
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 22,
        "percent_correct": 78.0
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 64,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 22,
        "percent_correct": 78.0
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 64,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 22,
        "percent_correct": 78.0
      }
    ],
    "011-py_07-train": [],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 64,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 36,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 22,
        "percent_correct": 78.0
      }
    ],
    "013-py_09-train": [],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 3 3 3 2 2 3 2 2 2 2 2\n8 3 3 3 3 2 3 3 2 2 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 3 3 3 3 8 8 3 3 3 8\n8 8 8 3 3 8 8 8 3 3 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 87.5
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 3 3 3 3 3 8 8 8 8 8 8\n2 2 3 3 3 3 3 8 8 3 3 8\n2 3 3 3 3 3 3 8 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 3 3 3 3 3 3 3 3 8\n2 2 3 3 3 3 3 3 3 3 3 8\n2 2 3 3 3 3 3 3 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 2 2\n2 2 3 2 3 3 2 3 3 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 68.75
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 3 8 3 2\n8 8 3 3 8 3 3 3 3 2\n8 8 3 3 3 3 3 3 2 2\n8 3 3 3 3 3 3 3 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 2 2 3 2\n8 2 3 3 3 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 75.0
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 3 3 3 2 2 3 2 2 2 2 2\n8 3 3 3 3 2 3 3 2 2 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 3 3 3 3 8 8 3 3 3 8\n8 8 8 3 3 8 8 8 3 3 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 87.5
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 3 3 3 3 3 8 8 8 8 8 8\n2 2 3 3 3 3 3 8 8 3 3 8\n2 3 3 3 3 3 3 8 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 3 3 3 3 3 3 3 3 8\n2 2 3 3 3 3 3 3 3 3 3 8\n2 2 3 3 3 3 3 3 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 2 2\n2 2 3 2 3 3 2 3 3 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 68.75
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 3 8 3 2\n8 8 3 3 8 3 3 3 3 2\n8 8 3 3 3 3 3 3 2 2\n8 3 3 3 3 3 3 3 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 2 2 3 2\n8 2 3 3 3 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 75.0
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 64,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 3 3 3 3 3 8 8 8 8 8 8\n2 2 3 3 3 3 3 8 8 3 3 8\n2 3 3 3 3 3 3 8 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 3 3 3 3 3 3 3 3 8\n2 2 3 3 3 3 3 3 3 3 3 8\n2 2 3 3 3 3 3 3 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 2 2\n2 2 3 2 3 3 2 3 3 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 68.75
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 3 8 3 2\n8 8 3 3 8 3 3 3 3 2\n8 8 3 3 3 3 3 3 2 2\n8 3 3 3 3 3 3 3 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 2 2 3 2\n8 2 3 3 3 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 75.0
      }
    ],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "expected_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 3 2 2 0 2 2 2 2 2\n8 0 0 3 0 2 0 0 2 2 0 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 3 3 8\n8 3 3 3 3 3 3 3 3 3 3 8\n8 8 0 3 0 0 8 8 0 0 0 8\n8 8 8 3 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "transformed_output": "2 2 2 2 2 2 2 2 2 2 2 2\n8 0 0 0 2 2 0 2 2 2 2 2\n8 0 0 0 0 2 0 0 2 2 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 0 0 8\n8 0 0 0 0 0 0 0 0 0 0 8\n8 8 0 0 0 0 8 8 0 0 0 8\n8 8 8 0 0 8 8 8 0 0 8 8\n8 8 8 8 8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 64,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 0 0 8 8 8 8 8 8\n2 2 0 0 0 0 0 8 8 0 0 8\n2 0 0 0 0 0 0 8 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 2 2 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 2 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 0 8\n2 0 0 0 0 0 0 0 0 0 2 2\n2 2 0 2 0 0 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 0 0 0 3 3 8 8 8 8 8 8\n2 2 0 0 3 3 0 8 8 0 0 8\n2 0 0 0 3 3 0 8 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 2 0 0 3 3 0 0 0 0 0 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 0 0 0 3 3 0 0 0 0 2 2\n2 2 0 2 3 3 2 0 0 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8 8 8\n2 3 3 3 3 3 8 8 8 8 8 8\n2 2 3 3 3 3 3 8 8 3 3 8\n2 3 3 3 3 3 3 8 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 2 2 3 3 3 3 3 3 3 3 8\n2 2 3 3 3 3 3 3 3 3 3 8\n2 2 3 3 3 3 3 3 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 3 8\n2 3 3 3 3 3 3 3 3 3 2 2\n2 2 3 2 3 3 2 3 3 2 2 2\n2 2 2 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 68.75
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 2\n8 8 8 0 8 8 0 8 0 2\n8 8 0 0 8 0 0 0 0 2\n8 8 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 2 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 0 0 0 2\n8 0 0 0 0 0 2 2 0 2\n8 2 0 0 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "expected_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 0 8 0 2\n8 8 0 3 8 0 0 0 0 2\n8 8 0 3 0 0 0 0 2 2\n8 0 0 3 0 0 0 0 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 0 0 3 0 0 2 2 0 2\n8 2 0 3 0 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "transformed_output": "8 8 8 8 8 8 8 8 8 2\n8 8 8 3 8 8 3 8 3 2\n8 8 3 3 8 3 3 3 3 2\n8 8 3 3 3 3 3 3 2 2\n8 3 3 3 3 3 3 3 2 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 3 3 3 2\n8 3 3 3 3 3 2 2 3 2\n8 2 3 3 3 2 2 2 2 2\n8 2 2 2 2 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 75.0
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}