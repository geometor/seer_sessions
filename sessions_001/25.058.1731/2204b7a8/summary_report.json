{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4259,
        "candidates": 599,
        "total": 4858,
        "cached": 0
      },
      "response_time": 9.335
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4718,
        "candidates": 262,
        "total": 4980,
        "cached": 0
      },
      "response_time": 4.037135
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 376,
        "total": 2493,
        "cached": 0
      },
      "response_time": 6.234069
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2356,
        "candidates": 205,
        "total": 2561,
        "cached": 0
      },
      "response_time": 11.921706
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1457,
        "candidates": 698,
        "total": 2155,
        "cached": 0
      },
      "response_time": 9.67716
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 1950,
        "candidates": 384,
        "total": 2334,
        "cached": 0
      },
      "response_time": 3.629427
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1635,
        "candidates": 2419,
        "total": 4054,
        "cached": 0
      },
      "response_time": 25.135505
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 3855,
        "candidates": 281,
        "total": 4136,
        "cached": 0
      },
      "response_time": 3.338377
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 434,
        "total": 2551,
        "cached": 0
      },
      "response_time": 6.630151
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2415,
        "candidates": 308,
        "total": 2723,
        "cached": 0
      },
      "response_time": 7.008417
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1559,
        "candidates": 2059,
        "total": 3618,
        "cached": 0
      },
      "response_time": 19.531775
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3417,
        "candidates": 360,
        "total": 3777,
        "cached": 0
      },
      "response_time": 4.021149
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1611,
        "candidates": 3741,
        "total": 5352,
        "cached": 0
      },
      "response_time": 33.102034
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 5150,
        "candidates": 236,
        "total": 5386,
        "cached": 0
      },
      "response_time": 3.198234
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 398,
        "total": 2515,
        "cached": 0
      },
      "response_time": 6.427745
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2376,
        "candidates": 262,
        "total": 2638,
        "cached": 0
      },
      "response_time": 3.630263
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1513,
        "candidates": 1568,
        "total": 3081,
        "cached": 0
      },
      "response_time": 16.935144
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2875,
        "candidates": 287,
        "total": 3162,
        "cached": 0
      },
      "response_time": 3.257772
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1538,
        "candidates": 1053,
        "total": 2591,
        "cached": 0
      },
      "response_time": 14.564393
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2374,
        "candidates": 287,
        "total": 2661,
        "cached": 0
      },
      "response_time": 12.221791
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "1 0 0 0 0 0 0 0 0 2\n1 0 1 1 1 1 1 1 1 1\n1 1 0 1 1 1 1 1 1 1\n1 1 1 0 1 1 1 1 1 1\n1 1 1 1 3 1 1 1 1 1\n1 1 1 1 1 0 1 1 1 1\n1 1 1 1 1 1 0 1 1 1\n1 1 1 1 1 1 1 0 1 1\n1 1 1 1 1 1 1 1 0 1\n1 0 0 0 0 0 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 64,
        "percent_correct": 36.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "4 4 4 4 4 4 4 4 4 4\n7 0 4 4 4 4 4 4 4 4\n7 7 0 4 4 4 4 4 4 4\n7 7 7 3 4 4 4 4 4 4\n7 7 7 7 0 4 4 4 4 4\n7 7 7 7 7 0 4 4 4 4\n7 7 7 7 7 7 0 4 4 4\n7 7 7 7 7 7 7 0 4 4\n7 7 7 7 7 7 7 7 0 4\n7 7 7 7 7 7 7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 71,
        "percent_correct": 28.999999999999996
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n9 0 8 8 8 8 8 8 8 8\n9 9 0 8 8 8 8 8 8 8\n9 9 9 0 8 8 8 8 8 8\n9 9 9 9 0 8 8 8 8 8\n9 9 9 9 9 0 8 8 8 8\n9 9 9 9 9 9 3 8 8 8\n9 9 9 9 9 9 9 0 8 8\n9 9 9 9 9 9 9 9 0 8\n9 9 9 9 9 9 9 9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 69,
        "percent_correct": 31.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 1 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 99.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 1 0 0\n0 0 0 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 1 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0\n0 1 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 1 0 0 0\n0 0 0 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "4 0 0 0 0 0 0 0 0 2\n4 0 0 0 0 0 1 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 0 0 1 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 1 0 0 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 89.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 1 0 0\n0 0 0 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 1 0\n0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0\n0 1 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 1 0 0 0\n0 0 0 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "4 0 0 0 0 0 0 0 0 2\n4 0 0 0 0 0 1 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 0 0 1 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 1 0 0 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2\n4 0 0 0 0 0 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 89.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "3 3 3 3 3 3 3 3 3 3\n0 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 0 1 0 0\n0 0 0 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0\n0 0 0 0 0 0 0 0 1 0\n0 0 0 0 0 0 0 0 0 0\n6 6 6 6 6 6 6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0\n0 1 0 0 0 0 0 1 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 0 0 0 0 1 0 0 0\n0 0 0 1 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 4 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 4 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 4 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 4 0 0 0 0 0\n0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 98.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 4 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 4 0 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 4 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 4 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 4 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 4 0 0 0 0 0\n0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 98.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 4 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 4 0 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "1 4 4 4 4 4 4 4 4 2\n1 4 4 4 4 4 3 4 4 2\n1 4 4 4 4 4 4 4 4 2\n1 4 4 4 4 4 4 4 4 2\n1 4 4 4 3 4 4 4 4 2\n1 4 4 4 4 4 4 4 4 2\n1 4 3 4 4 4 4 4 4 2\n1 4 4 4 4 4 4 4 4 2\n1 4 4 4 4 4 4 4 4 2\n1 4 4 4 4 4 4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 80,
        "percent_correct": 20.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4\n4 3 4 4 4 4 4 3 4 4\n4 4 4 3 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4\n4 4 4 4 3 4 4 4 4 4\n4 4 4 4 4 4 4 4 3 4\n4 4 4 4 4 4 4 4 4 4\n7 7 7 7 7 7 7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 80,
        "percent_correct": 20.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n4 4 4 4 4 4 4 4 4 4\n4 4 4 4 3 4 4 4 4 4\n4 3 4 4 4 4 4 3 4 4\n4 4 4 4 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4\n4 3 4 4 4 4 3 4 4 4\n4 4 4 3 4 4 4 4 4 4\n4 4 4 4 4 4 4 4 4 4\n9 9 9 9 9 9 9 9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 80,
        "percent_correct": 20.0
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 8 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 8 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 9 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "017-py_10-train": [],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 8 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 8 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 9 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "020-py_12-train": [
      {
        "example": 1,
        "input": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 3 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 3 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 3 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "expected_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 2 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 1 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 1 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "transformed_output": "1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 8 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 8 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 9 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2\n1 0 0 0 0 0 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 0 0 0 0 0 3 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "expected_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 4 0 0 0 0 0 4 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 7 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "transformed_output": "4 4 4 4 4 4 4 4 4 4\n0 0 0 0 0 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 8 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n0 0 0 0 0 0 0 0 0 0\n7 7 7 7 7 7 7 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 3,
        "input": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 3 0 0 0 0 0 3 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 3 0 0 0\n0 0 0 3 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "expected_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "transformed_output": "8 8 8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 0 0 0 0\n0 8 0 0 0 0 0 8 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 9 0 0 0 0 9 0 0 0\n0 0 0 9 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n9 9 9 9 9 9 9 9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}