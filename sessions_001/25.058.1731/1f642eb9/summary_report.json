{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4259,
        "candidates": 562,
        "total": 4821,
        "cached": 0
      },
      "response_time": 9.956922
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4684,
        "candidates": 983,
        "total": 5667,
        "cached": 0
      },
      "response_time": 11.207879
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 670,
        "total": 2787,
        "cached": 0
      },
      "response_time": 9.485365
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2649,
        "candidates": 756,
        "total": 3405,
        "cached": 0
      },
      "response_time": 8.845978
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2000,
        "candidates": 3195,
        "total": 5195,
        "cached": 0
      },
      "response_time": 32.376285
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4985,
        "candidates": 1189,
        "total": 6174,
        "cached": 0
      },
      "response_time": 12.842287
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 2433,
        "candidates": 3610,
        "total": 6043,
        "cached": 0
      },
      "response_time": 34.581387
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 5825,
        "candidates": 918,
        "total": 6743,
        "cached": 0
      },
      "response_time": 10.463947
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 637,
        "total": 2754,
        "cached": 0
      },
      "response_time": 10.586817
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2616,
        "candidates": 337,
        "total": 2953,
        "cached": 0
      },
      "response_time": 4.890679
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1592,
        "candidates": 1559,
        "total": 3151,
        "cached": 0
      },
      "response_time": 20.705693
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2953,
        "candidates": 475,
        "total": 3428,
        "cached": 0
      },
      "response_time": 6.071553
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 496,
        "total": 2613,
        "cached": 0
      },
      "response_time": 9.065687
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2473,
        "candidates": 1080,
        "total": 3553,
        "cached": 0
      },
      "response_time": 12.6443
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2328,
        "candidates": 949,
        "total": 3277,
        "cached": 0
      },
      "response_time": 14.13776
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3074,
        "candidates": 1092,
        "total": 4166,
        "cached": 0
      },
      "response_time": 10.139852
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2343,
        "candidates": 8192,
        "total": 10535,
        "cached": 0
      },
      "response_time": 68.164431
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 10331,
        "candidates": 931,
        "total": 11262,
        "cached": 0
      },
      "response_time": 8.811803
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 6 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 0 0 0 0 0\n0 0 0 4 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "expected_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 6 7 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 2 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 3 8 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "transformed_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0\n6 0 1 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 93.0
      },
      {
        "example": 3,
        "input": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "expected_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 4 8 6 0 0 0 6\n3 0 0 3 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 2 8 8 0 0 0 0\n0 0 0 7 8 2 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "transformed_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 4 0 0 0 0 0 0\n0 0 7 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 92.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 6 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 6 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "expected_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 6 7 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 2 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 3 8 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "transformed_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 6 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 93.0
      },
      {
        "example": 3,
        "input": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "expected_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 4 8 6 0 0 0 6\n3 0 0 3 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 2 8 8 0 0 0 0\n0 0 0 7 8 2 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "transformed_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 6 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 93.0
      }
    ],
    "005-py_03-train": [],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 6 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "expected_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 6 7 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 2 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 3 8 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "expected_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 4 8 6 0 0 0 6\n3 0 0 3 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 2 8 8 0 0 0 0\n0 0 0 7 8 2 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "007-py_05-train": [],
    "008-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 6 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "expected_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 6 7 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 2 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 3 8 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "expected_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 4 8 6 0 0 0 6\n3 0 0 3 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 2 8 8 0 0 0 0\n0 0 0 7 8 2 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 6 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 6 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 98.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "expected_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 6 7 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 2 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 3 8 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "transformed_output": "0 0 0 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 6 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 2 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 3 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 1 0 1 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      },
      {
        "example": 3,
        "input": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "expected_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 4 8 6 0 0 0 6\n3 0 0 3 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 2 8 8 0 0 0 0\n0 0 0 7 8 2 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "transformed_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 6 8 8 0 0 0 6\n3 0 0 3 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 2 8 8 0 0 0 0\n0 0 0 2 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 96.0
      }
    ],
    "012-py_08-train": [],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 6 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "expected_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 6 7 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 2 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 3 8 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "transformed_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 3,
        "input": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "expected_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 4 8 6 0 0 0 6\n3 0 0 3 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 2 8 8 0 0 0 0\n0 0 0 7 8 2 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "transformed_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 6 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "expected_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 6 7 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 2 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 3 8 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "transformed_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 3,
        "input": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "expected_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 4 8 6 0 0 0 6\n3 0 0 3 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 2 8 8 0 0 0 0\n0 0 0 7 8 2 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "transformed_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      }
    ],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 9 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 6 4 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 9 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n0 0 0 0 8 8 0 0 0 0\n6 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "expected_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 6 7 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 2 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 3 8 1 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "transformed_output": "0 0 0 0 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n6 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 8 8 8 0 0 0 0\n3 0 0 8 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 1 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 3,
        "input": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "expected_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 4 8 6 0 0 0 6\n3 0 0 3 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 2 8 8 0 0 0 0\n0 0 0 7 8 2 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "transformed_output": "0 0 0 4 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 8 8 8 0 0 0 6\n3 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 0\n2 0 0 8 8 8 0 0 0 0\n0 0 0 8 8 8 0 0 0 2\n0 0 0 0 0 0 0 0 0 0\n0 0 0 7 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 94.0
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}