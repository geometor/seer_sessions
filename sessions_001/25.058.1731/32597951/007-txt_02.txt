import numpy as np

def calculate_mock_metrics(input_grid, predicted_output, true_output):
    """
    Calculates mock error metrics (as if errors existed).
    """
    # Mock pixel difference:  Let's *pretend* there's a difference
    # in the top-left corner.
    mock_pixel_difference = 0
    if input_grid.shape == true_output.shape:
       if input_grid[0,0] != true_output[0,0]:
            mock_pixel_difference = 1

    # Mock error type (for demonstration).
    mock_error_type = "Mock Error: Top-left pixel mismatch" if mock_pixel_difference else "No error"

    return {
        "mock_pixel_difference": mock_pixel_difference,
        "mock_error_type": mock_error_type,
    }

def evaluate_examples(transform_function, examples):

    results = []

    for i, (input_grid, true_output) in enumerate(examples):

        input_grid = np.array(input_grid)
        true_output = np.array(true_output)

        predicted_output = transform_function(input_grid)
        metrics = calculate_mock_metrics(input_grid, predicted_output, true_output)

        results.append({
            "example_index": i,
            "input_shape": input_grid.shape,
            "output_shape": true_output.shape,
            "mock_pixel_difference": metrics["mock_pixel_difference"],
            "mock_error_type": metrics["mock_error_type"],
            "predicted_output": predicted_output.tolist(),  # Convert to list for easier viewing
            "true_output": true_output.tolist()
        })

    return results

# Mock examples (replace with real examples when available)
mock_examples = [
  (
        [[0, 1, 0],
         [8, 1, 8],
         [0, 1, 0]],
        [[0, 3, 0],
         [8, 3, 8],
         [0, 3, 0]]
    ),
    (
        [[1, 8, 1],
         [8, 0, 8],
         [1, 8, 1]],
        [[3, 8, 3],
         [8, 0, 8],
         [3, 8, 3]]
    ),
    (
        [[0, 0, 0, 8, 1],
         [0, 0, 8, 1, 0],
         [0, 8, 1, 0, 0],
         [8, 1, 0, 0, 0],
         [1, 0, 0, 0, 0]],

        [[0, 0, 0, 8, 3],
         [0, 0, 8, 3, 0],
         [0, 8, 3, 0, 0],
         [8, 3, 0, 0, 0],
         [1, 0, 0, 0, 0]]
    )
]

results = evaluate_examples(transform, mock_examples)

for result in results:
    print(f"Example {result['example_index'] + 1}:")
    print(f"  Input shape: {result['input_shape']}")
    print(f"  Output shape: {result['output_shape']}")
    print(f"  Mock Pixel Difference: {result['mock_pixel_difference']}")
    print(f"  Mock Error Type: {result['mock_error_type']}")
    print(f"  Predicted Output: {result['predicted_output']}")
    print(f"  True Output: {result['true_output']}")
    print("-" * 20)