{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3647,
        "candidates": 501,
        "total": 4148,
        "cached": 0
      },
      "response_time": 7.084292
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4009,
        "candidates": 261,
        "total": 4270,
        "cached": 0
      },
      "response_time": 3.687785
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 797,
        "total": 2710,
        "cached": 0
      },
      "response_time": 11.309453
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2592,
        "candidates": 439,
        "total": 3031,
        "cached": 0
      },
      "response_time": 6.273591
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1689,
        "candidates": 4160,
        "total": 5849,
        "cached": 0
      },
      "response_time": 73.859673
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 5648,
        "candidates": 492,
        "total": 6140,
        "cached": 0
      },
      "response_time": 5.206262
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1744,
        "candidates": 1356,
        "total": 3100,
        "cached": 0
      },
      "response_time": 15.888462
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2892,
        "candidates": 636,
        "total": 3528,
        "cached": 0
      },
      "response_time": 6.359255
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 620,
        "total": 2533,
        "cached": 0
      },
      "response_time": 7.961602
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2394,
        "candidates": 356,
        "total": 2750,
        "cached": 0
      },
      "response_time": 4.752089
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1606,
        "candidates": 1152,
        "total": 2758,
        "cached": 0
      },
      "response_time": 14.353961
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2554,
        "candidates": 398,
        "total": 2952,
        "cached": 0
      },
      "response_time": 3.611182
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1648,
        "candidates": 957,
        "total": 2605,
        "cached": 0
      },
      "response_time": 13.426388
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2400,
        "candidates": 598,
        "total": 2998,
        "cached": 0
      },
      "response_time": 8.222071
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 419,
        "total": 2332,
        "cached": 0
      },
      "response_time": 8.989454
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2194,
        "candidates": 232,
        "total": 2426,
        "cached": 0
      },
      "response_time": 4.963454
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1483,
        "candidates": 1549,
        "total": 3032,
        "cached": 0
      },
      "response_time": 18.968904
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2827,
        "candidates": 602,
        "total": 3429,
        "cached": 0
      },
      "response_time": 6.017884
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1853,
        "candidates": 1062,
        "total": 2915,
        "cached": 0
      },
      "response_time": 13.44346
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2708,
        "candidates": 760,
        "total": 3468,
        "cached": 0
      },
      "response_time": 6.572309
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 3 8 2 3 8 2\n3 8 2 3 8 2 3\n8 2 3 8 2 3 8\n2 3 8 2 3 8 2\n3 8 2 3 8 2 3\n8 2 3 8 2 3 8\n2 3 8 2 3 8 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "005-py_03-train": [],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "8 3 8 8 3 8 8\n3 8 3 3 8 3 3\n8 3 8 8 3 8 8\n8 3 8 8 3 8 8\n3 8 3 3 8 3 3\n8 3 8 8 3 8 8\n8 3 8 8 3 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 8.16326530612245
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3\n3 3 3 3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 33,
        "percent_correct": 32.6530612244898
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "8 8 0 0 0 8 8\n3 3 0 0 0 3 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n8 8 0 0 0 8 8\n3 3 0 0 0 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 45,
        "percent_correct": 8.16326530612245
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 4 1 4 1 4 1\n4 1 4 1 4 1 4\n1 4 1 4 1 4 1\n4 1 4 1 4 1 4\n1 4 1 4 1 4 1\n4 1 4 1 4 1 4\n1 4 1 4 1 4 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 48,
        "percent_correct": 2.0408163265306123
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "2 4 1 4 1 4 1\n4 1 4 1 4 1 4\n1 4 1 4 1 4 1\n4 1 4 1 4 1 4\n1 4 1 4 1 4 1\n4 1 4 1 4 1 4\n1 4 1 4 1 4 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "2 4 1 4 1 4 1\n4 1 4 1 4 1 4\n1 4 1 4 1 4 1\n4 1 4 1 4 1 4\n1 4 1 4 1 4 1\n4 1 4 1 4 1 4\n1 4 1 4 1 4 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 41,
        "percent_correct": 16.3265306122449
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 1 2 1 2 1 2\n1 2 1 2 1 2 1\n2 1 2 1 2 1 2\n1 2 1 2 1 2 1\n2 1 2 1 2 1 2\n1 2 1 2 1 2 1\n2 1 2 1 2 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 40,
        "percent_correct": 18.367346938775512
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "2 1 2 1 2 1 2\n1 2 1 2 1 2 1\n2 1 2 1 2 1 2\n1 2 1 2 1 2 1\n2 1 2 1 2 1 2\n1 2 1 2 1 2 1\n2 1 2 1 2 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "2 1 2 1 2 1 2\n1 2 1 2 1 2 1\n2 1 2 1 2 1 2\n1 2 1 2 1 2 1\n2 1 2 1 2 1 2\n1 2 1 2 1 2 1\n2 1 2 1 2 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 49,
        "percent_correct": 0.0
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 8 3 4 8\n8 3 3 4 8 3 4\n3 4 8 3 4 8 3\n8 3 4 8 3 4 8\n4 8 3 4 8 3 4\n3 4 8 3 4 8 3\n8 3 4 8 3 4 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 30.612244897959183
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "8 3 4 8 3 4 8\n4 8 3 4 8 3 4\n3 4 8 3 4 8 1\n8 3 4 8 3 1 2\n4 8 3 4 1 2 4\n3 4 8 1 2 4 3\n8 3 1 2 4 4 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "8 3 4 8 8 3 8\n4 8 3 8 3 3 4\n3 4 8 3 4 8 3\n8 8 3 8 3 4 4\n8 3 3 4 8 4 4\n3 4 8 3 4 8 3\n8 3 4 4 3 4 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 51.02040816326531
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 0 0 8 8\n8 3 3 4 0 0 3\n3 3 4 4 8 0 0\n0 4 4 8 8 3 0\n0 0 8 8 3 3 4\n8 0 0 3 3 4 4\n8 3 0 0 4 4 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 38,
        "percent_correct": 22.448979591836736
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "3 0 4 0 0 8 0\n0 4 0 8 0 0 3\n4 0 8 0 3 0 1\n0 8 0 3 0 1 2\n0 0 3 0 1 2 4\n8 0 0 1 2 4 0\n0 3 1 2 4 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 37,
        "percent_correct": 24.489795918367346
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "4 8 8 3 8 3 4\n8 8 3 8 3 3 4\n8 3 8 3 3 4 4\n8 8 3 3 4 4 4\n8 3 4 4 4 4 8\n3 4 4 8 4 8 3\n4 4 8 4 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 23,
        "percent_correct": 53.06122448979592
      }
    ],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "2 8 3 0 0 0 0\n8 3 0 0 0 0 0\n3 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "expected_output": "2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2\n8 3 2 8 3 2 8\n3 2 8 3 2 8 3\n2 8 3 2 8 3 2",
        "transformed_output": "2 8 3 0 0 8 8\n8 3 3 4 0 0 3\n3 3 4 4 8 0 0\n0 4 4 8 8 3 0\n0 0 8 8 3 3 4\n8 0 0 3 3 4 4\n8 3 0 0 4 4 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 38,
        "percent_correct": 22.448979591836736
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 1\n0 0 0 0 0 1 2\n0 0 0 0 1 2 4\n0 0 0 1 2 4 0\n0 0 1 2 4 0 0",
        "expected_output": "2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2\n4 1 2 4 1 2 4\n1 2 4 1 2 4 1\n2 4 1 2 4 1 2",
        "transformed_output": "3 0 4 0 0 8 0\n0 4 0 8 0 0 3\n4 0 8 0 3 0 1\n0 8 0 3 0 1 2\n0 0 3 0 1 2 4\n8 0 0 1 2 4 0\n0 3 1 2 4 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 37,
        "percent_correct": 24.489795918367346
      },
      {
        "example": 3,
        "input": "0 0 0 0 8 3 0\n0 0 0 8 3 0 0\n0 0 8 3 0 0 0\n0 8 3 0 0 0 4\n8 3 0 0 0 4 0\n3 0 0 0 4 0 0\n0 0 0 4 0 0 0",
        "expected_output": "4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4\n8 3 4 8 3 4 8\n3 4 8 3 4 8 3\n4 8 3 4 8 3 4",
        "transformed_output": "4 8 8 3 8 3 4\n8 8 3 8 3 3 4\n8 3 8 3 3 4 4\n8 8 3 3 4 4 4\n8 3 4 4 4 4 8\n3 4 4 8 4 8 3\n4 4 8 4 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 23,
        "percent_correct": 53.06122448979592
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}