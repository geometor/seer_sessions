{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nIdentify non-blue pixels adjacent to blue pixels horizontally.\nDuplicate these pixels to the right based on their color:\n- Red and yellow: Duplicate one position to the right.\n- Azure and maroon: Duplicate three positions to the right.\n- Green: Duplicate one position to the right.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    # Initialize output_grid as a copy of input_grid\n    output_grid = np.copy(input_grid)\n    rows, cols = input_grid.shape\n\n    # Iterate through each pixel in the input grid\n    for r in range(rows):\n        for c in range(cols):\n            # Check if the current pixel is non-blue and adjacent to a blue pixel horizontally\n            if input_grid[r, c] != 1:\n                is_adjacent_to_blue = False\n                if c > 0 and input_grid[r, c-1] == 1:  # Check left neighbor\n                    is_adjacent_to_blue = True\n                if c < cols - 1 and input_grid[r, c+1] == 1:  # Check right neighbor\n                    is_adjacent_to_blue = True\n\n                if is_adjacent_to_blue:\n                    color = input_grid[r, c]\n                    # Apply duplication rules based on color\n                    if color in [2, 4, 3]:  # Red, yellow, green\n                        if c + 1 < cols:\n                            output_grid[r, c+1] = color\n                    elif color in [8, 9]:  # Azure, maroon\n                        for i in range(1, 4):\n                            if c + i < cols:\n                                output_grid[r, c+i] = color\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 9848,
    "candidates_token_count": 407,
    "total_token_count": 10255,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.639693,
  "response_file": "012-response.json"
}