import numpy as np

def compare_grids(grid1, grid2):
    """
    Compares two grids and returns a report of differences.
    """
    if grid1.shape != grid2.shape:
        return "Grids have different shapes."

    diff = grid1 != grid2
    num_diffs = np.sum(diff)
    diff_indices = np.where(diff)

    report = f"Number of differing pixels: {num_diffs}\n"
    for i in range(num_diffs):
        r, c = diff_indices[0][i], diff_indices[1][i]
        report += f"  Pixel at ({r}, {c}): Expected {grid1[r, c]}, Got {grid2[r, c]}\n"
    return report

# Example grids (replace with actual data)
examples = [
    (np.array([[0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [1,0,0,0,0,0],
              [1,0,0,0,0,0],
              [1,0,0,0,2,0]]),
     np.array([[0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [1,0,0,0,0,0],
              [1,0,0,0,0,0],
              [1,0,0,0,0,0],
              [1,0,0,0,2,0]]),
     np.array([[0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [1,0,0,0,0,0],
              [1,0,0,0,0,0],
              [1,0,0,0,0,0],
              [1,0,0,0,2,0]]))
    ,
     (np.array([[0,0,0,0,0],
               [0,0,0,0,0],
               [0,0,1,0,0],
               [0,0,1,0,0],
               [0,0,1,0,0],
               [0,0,0,0,0],
               [0,0,0,0,0],
               [0,0,0,2,0]]),
      np.array([[0,0,0,0,0],
               [0,0,0,0,0],
               [0,0,0,0,0],
               [0,0,0,0,0],
               [0,0,1,0,0],
               [0,0,1,0,0],
               [0,0,1,2,0],
               [0,0,0,0,0]]),
      np.array([[0,0,0,0,0],
               [0,0,0,0,0],
               [0,0,0,0,0],
               [0,0,0,0,0],
               [0,0,1,0,0],
               [0,0,1,0,0],
               [0,0,1,2,0],
               [0,0,0,0,0]]))
    ,
    (np.array([[0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [1,0,0,0,0,2]]),
    np.array([[0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [1,0,0,0,0,2]]),
    np.array([[0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [0,0,0,0,0,0],
              [1,0,0,0,0,2]]))
    ,
    (np.array([[0,0,0,0,0,0,0],
               [0,0,0,0,0,0,0],
               [0,0,0,0,0,0,0],
               [0,0,0,0,1,0,0],
               [0,0,0,0,0,0,0],
               [0,0,0,0,0,0,0],
               [0,2,0,0,0,0,0]]),
     np.array([[0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0],
              [0,2,0,0,1,0,0],
              [0,0,0,0,0,0,0]]),
     np.array([[0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0],
              [0,0,0,0,0,0,0],
              [0,2,0,0,1,0,0],
              [0,0,0,0,0,0,0]]))

]

for i, (input_grid, expected_output, actual_output) in enumerate(examples):
    report = compare_grids(expected_output, actual_output)
    print(f"Example {i+1}:\n{report}\n")