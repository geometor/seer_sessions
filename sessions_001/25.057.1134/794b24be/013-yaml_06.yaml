objects:
  - id: input_grid
    type: grid
    dimensions: 3x3
    elements: [0, 1]  # Values represent colors (white, blue)
  - id: output_grid
    type: grid
    dimensions: 3x3
    elements: [0, 2]  # Values represent colors (white, red)
  - id: pixel
    type: element
    properties:
      color: [white, blue, red] # Possible color values
      position: (row, col)  # Position within the grid

actions:
  - name: color_change
    input: input_grid
    output: output_grid
    rule: "Change blue (1) pixels to red (2), based on relative position"
    conditions:
      - if input_grid.pixel.color == blue:
        - output_grid.pixel.color = red
        - output_grid.pixel.position = input_grid.pixel.adjusted_position #see program

relationships:
  - type: element_of
    subject: pixel
    object: input_grid
  - type: element_of
    subject: pixel
    object: output_grid
  - type: transformation
    subject: input_grid
    object: output_grid