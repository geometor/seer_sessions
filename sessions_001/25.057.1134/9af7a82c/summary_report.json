{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1765,
        "candidates": 479,
        "total": 2244,
        "cached": 0
      },
      "response_time": 7.916
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2104,
        "candidates": 383,
        "total": 2487,
        "cached": 0
      },
      "response_time": 4.557002
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1634,
        "candidates": 1146,
        "total": 2780,
        "cached": 0
      },
      "response_time": 14.805027
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2575,
        "candidates": 382,
        "total": 2957,
        "cached": 0
      },
      "response_time": 4.216871
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1632,
        "candidates": 5789,
        "total": 7421,
        "cached": 0
      },
      "response_time": 49.411994
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 7217,
        "candidates": 128,
        "total": 7345,
        "cached": 0
      },
      "response_time": 2.383325
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1789,
        "candidates": 710,
        "total": 2499,
        "cached": 0
      },
      "response_time": 9.922092
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2362,
        "candidates": 390,
        "total": 2752,
        "cached": 0
      },
      "response_time": 4.999629
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1642,
        "candidates": 1025,
        "total": 2667,
        "cached": 0
      },
      "response_time": 14.048168
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2462,
        "candidates": 283,
        "total": 2745,
        "cached": 0
      },
      "response_time": 3.405684
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1534,
        "candidates": 1015,
        "total": 2549,
        "cached": 0
      },
      "response_time": 9.852677
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2345,
        "candidates": 360,
        "total": 2705,
        "cached": 0
      },
      "response_time": 4.788178
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1781,
        "candidates": 653,
        "total": 2434,
        "cached": 0
      },
      "response_time": 26.363634
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2296,
        "candidates": 339,
        "total": 2635,
        "cached": 0
      },
      "response_time": 4.952489
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1592,
        "candidates": 1664,
        "total": 3256,
        "cached": 0
      },
      "response_time": 16.758775
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 1883,
        "candidates": 1238,
        "total": 3121,
        "cached": 0
      },
      "response_time": 15.65584
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2921,
        "candidates": 310,
        "total": 3231,
        "cached": 0
      },
      "response_time": 4.210303
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3056,
        "candidates": 638,
        "total": 3694,
        "cached": 0
      },
      "response_time": 6.974393
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1777,
        "candidates": 595,
        "total": 2372,
        "cached": 0
      },
      "response_time": 7.996449
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2235,
        "candidates": 245,
        "total": 2480,
        "cached": 0
      },
      "response_time": 3.925977
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1496,
        "candidates": 1143,
        "total": 2639,
        "cached": 0
      },
      "response_time": 13.222199
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2435,
        "candidates": 427,
        "total": 2862,
        "cached": 0
      },
      "response_time": 5.456913
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1678,
        "candidates": 1118,
        "total": 2796,
        "cached": 0
      },
      "response_time": 32.561407
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 2598,
        "candidates": 370,
        "total": 2968,
        "cached": 0
      },
      "response_time": 4.226767
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 2 2\n1 2 3\n1 1 1\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "1 1 3\n2 2 2\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "2 3 3\n0 3 3\n0 3 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 1 1\n2 2 1\n2 0 1\n2 0 1\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 1\n3 2 1\n1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "2 8 8\n8 3 8\n4 3 3\n4 3 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 1 1\n2 2 1\n8 2 1\n8 2 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 1\n2 3 1\n1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 1\n1 3 0\n0 1 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "3 1 1 4\n2 2 2 0\n4 4 4 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "8 8 2\n3 3 8\n0 0 4\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 1 1\n2 2 0\n0 8 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 2\n2 2 1\n2 3 1\n1 1 1\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "2 2 2 2\n3 1 1 4\n2 2 2 4\n4 4 4 4\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "2 2 2\n8 8 2\n3 8 8\n3 3 4\n3 3 4\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 2\n1 1 1\n2 2 1\n2 8 1\n2 8 1\n0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (3,3) into shape (2,3)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (3,4) into shape (2,4)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (4,3) into shape (3,3)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (4,3) into shape (3,3)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_07-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 1 0\n2 3 1 0\n1 1 1 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "3 1 1 4\n2 2 2 4\n4 4 4 4\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "8 8 2 0\n3 8 8 0\n3 3 4 0\n3 3 4 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 9,
        "percent_correct": 55.00000000000001
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 1 1 0\n2 2 1 0\n2 8 1 0\n2 8 1 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "015-py_08-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "017-py_09-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 1 2 3 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "3 2 4 1 2 4 1 2 4 4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "8 3 3 3 8 8 3 3 2 8 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 2 2 2 1 2 8 8 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "018-py_10-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "",
        "match": "ERROR: name 'examples' is not defined",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "",
        "match": "ERROR: name 'examples' is not defined",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "",
        "match": "ERROR: name 'examples' is not defined",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "",
        "match": "ERROR: name 'examples' is not defined",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 1\n2 3 1\n1 1 1\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 9,
        "percent_correct": 40.0
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "3 1 1 4\n2 2 2 4\n4 4 4 4\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "8 8 2\n3 8 8\n3 3 4\n3 3 4\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 1 1\n2 2 1\n2 8 1\n2 8 1\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 33.33333333333333
      }
    ],
    "022-py_12-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 1\n2 3 1\n1 1 1\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 9,
        "percent_correct": 40.0
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "3 1 1 4\n2 2 2 4\n4 4 4 4\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "8 8 2\n3 8 8\n3 3 4\n8 8 8\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 1 1\n2 2 1\n2 8 1\n0 8 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 38.88888888888889
      }
    ],
    "024-py_13-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 3 1\n1 1 1",
        "expected_output": "1 2 3\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "2 2 1\n2 3 1\n1 1 1\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 9,
        "percent_correct": 40.0
      },
      {
        "example": 2,
        "input": "3 1 1 4\n2 2 2 4\n4 4 4 4",
        "expected_output": "4 2 1 3\n4 2 1 0\n4 2 0 0\n4 0 0 0\n4 0 0 0\n4 0 0 0",
        "transformed_output": "3 1 1 4\n2 2 2 4\n4 4 4 4\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "8 8 2\n3 8 8\n3 3 4\n3 3 4",
        "expected_output": "3 8 4 2\n3 8 4 0\n3 8 0 0\n3 8 0 0\n3 0 0 0",
        "transformed_output": "8 8 2\n3 8 8\n3 3 4\n8 8 8\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "1 1 1\n2 2 1\n2 8 1\n2 8 1",
        "expected_output": "1 2 8\n1 2 8\n1 2 0\n1 2 0\n1 0 0\n1 0 0",
        "transformed_output": "1 1 1\n2 2 1\n2 8 1\n0 8 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 38.88888888888889
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}