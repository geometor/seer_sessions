observations:
  - example_1:
      input_shape: [6, 6]
      output_shape: [2, 3]
      input_colors: [0, 1]
      output_colors: [0, 1]
      transformation: |
          The output grid is a subgrid of the input grid. It is created by identifying the
          smallest rectangle that can enclose all non-zero pixels and extracting that
          rectangle from the input grid.

  - example_2:
      input_shape: [7, 8]
      output_shape: [3, 4]
      input_colors: [0, 7]
      output_colors: [0, 7]
      transformation:  |
          The output grid is a subgrid of the input grid. It is created by identifying the
          smallest rectangle that can enclose all non-zero pixels and extracting that
          rectangle from the input grid.

  - example_3:
      input_shape: [7, 7]
      output_shape: [2, 3]
      input_colors: [0, 4]
      output_colors: [0, 4]
      transformation: |
          The output grid is a subgrid of the input grid. It is created by identifying the
          smallest rectangle that can enclose all non-zero pixels and extracting that
          rectangle from the input grid.

  - example_4:
      input_shape: [7, 6]
      output_shape: [2, 2]
      input_colors: [0, 5]
      output_colors: [0, 5]
      transformation: |
          The output grid is a subgrid of the input grid. It is created by identifying the
          smallest rectangle that can enclose all non-zero pixels and extracting that
          rectangle from the input grid.

  - example_5:
      input_shape: [9, 9]
      output_shape: [3, 3]
      input_colors: [0, 6]
      output_colors: [0, 6]
      transformation: |
          The output grid is a subgrid of the input grid. It is created by identifying the
          smallest rectangle that can enclose all non-zero pixels and extracting that
          rectangle from the input grid.