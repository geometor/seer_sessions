facts:
  - object: azure_pixel
    description: Pixels with the value 8 (azure). Their positions in the input grid are crucial for determining the output.
  - object: input_grid
    description: The initial grid containing azure pixels.
  - object: output_grid
    description: The transformed grid, which is always larger or equal in size to the input grid. The output grid contains azure pixels at specific locations.
  - action: find_azure_pixels
    description: Locates all azure pixels within a given grid.
  - action: determine_output_size
    description: Calculates the dimensions of the output grid based on the input grid's dimensions and, potentially, the arrangement of azure pixels.
  - action: place_azure_pixels
    description: Positions azure pixels in the output grid at specific coordinates.  The rule is not just based on input azure being diagonal or not.
  - observation: output_size_variation
    description: The output grid size varies and does not have a constant relationship to the input.
  - observation: multiple_azure_output
    description: The output can have two or four azure pixels. The number of azure pixels in the input doesn't necessarily correspond to the number of pixels in the output.
  - observation: corner_placement
    description: Azure pixels are often placed at corners, or positions relative to corners, in the output grid, but not always the extreme corners.
  - observation: non_diagonal_case
    description:  In example 1, we see that when there is a single azure pixel, the output creates four.
