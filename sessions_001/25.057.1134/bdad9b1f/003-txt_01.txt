def grid_to_string(grid):
    return '\n'.join(''.join(str(cell) for cell in row) for row in grid)

def compare_grids(grid1, grid2):
    if grid1.shape != grid2.shape:
        return "Different Shapes"
    diff = grid1 != grid2
    if not np.any(diff):
        return "Identical"
    diff_indices = np.where(diff)
    diff_str = ""
    for r, c in zip(*diff_indices):
        diff_str += f"Row: {r}, Col: {c}, Expected: {grid2[r, c]}, Got: {grid1[r, c]}\n"
    return diff_str

examples = task_data['train']
reports = []
for i, example in enumerate(examples):
  input_grid = np.array(example['input'])
  expected_output = np.array(example['output'])
  actual_output = transform(input_grid)
  comparison = compare_grids(actual_output, expected_output)
  reports.append(
      f"""
Example {i + 1}:
Input:
{grid_to_string(input_grid)}
Expected Output:
{grid_to_string(expected_output)}
Actual Output:
{grid_to_string(actual_output)}
Comparison:
{comparison}
"""
    )
print("\n---\n".join(reports))