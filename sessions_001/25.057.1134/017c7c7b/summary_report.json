{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1807,
        "candidates": 451,
        "total": 2258,
        "cached": 0
      },
      "response_time": 6.876657
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2120,
        "candidates": 342,
        "total": 2462,
        "cached": 0
      },
      "response_time": 4.345445
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1593,
        "candidates": 1395,
        "total": 2988,
        "cached": 0
      },
      "response_time": 16.763609
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 1543,
        "candidates": 3003,
        "total": 4546,
        "cached": 0
      },
      "response_time": 29.639518
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 4345,
        "candidates": 631,
        "total": 4976,
        "cached": 0
      },
      "response_time": 7.336099
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2783,
        "candidates": 388,
        "total": 3171,
        "cached": 0
      },
      "response_time": 4.246838
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1807,
        "candidates": 367,
        "total": 2174,
        "cached": 0
      },
      "response_time": 6.922603
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2036,
        "candidates": 225,
        "total": 2261,
        "cached": 0
      },
      "response_time": 4.041721
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1476,
        "candidates": 2469,
        "total": 3945,
        "cached": 0
      },
      "response_time": 23.736284
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2688,
        "candidates": 3502,
        "total": 6190,
        "cached": 0
      },
      "response_time": 30.087438
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 5995,
        "candidates": 927,
        "total": 6922,
        "cached": 0
      },
      "response_time": 8.731415
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3742,
        "candidates": 815,
        "total": 4557,
        "cached": 0
      },
      "response_time": 8.797226
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1807,
        "candidates": 568,
        "total": 2375,
        "cached": 0
      },
      "response_time": 8.570747
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2237,
        "candidates": 290,
        "total": 2527,
        "cached": 0
      },
      "response_time": 4.566945
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1542,
        "candidates": 1331,
        "total": 2873,
        "cached": 0
      },
      "response_time": 15.955368
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 1574,
        "candidates": 2834,
        "total": 4408,
        "cached": 0
      },
      "response_time": 30.195197
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 4208,
        "candidates": 336,
        "total": 4544,
        "cached": 0
      },
      "response_time": 4.360352
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2671,
        "candidates": 315,
        "total": 2986,
        "cached": 0
      },
      "response_time": 3.885678
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 96.29629629629629
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n0 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n0 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 96.29629629629629
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2\n2 2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n2 2 2\n2 2 2\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 81.48148148148148
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n2 2 2\n2 2 2\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 81.48148148148148
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n2 2 0\n2 2 0\n2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 92.5925925925926
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n2 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 92.5925925925926
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "009-py_06-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n2 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 92.5925925925926
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "010-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_08-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_09-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 0 0\n0 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 92.5925925925926
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 0 0\n0 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 85.18518518518519
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 0 0\n0 2 0\n0 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 92.5925925925926
      }
    ],
    "015-py_11-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "016-py_12-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "017-py_13-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 1 0 1 0\n1 1 0 1 1\n0 1 0 1 0\n0 1 1 1 0\n0 1 0 1 0\n1 1 0 1 1\n0 1 0 1 0\n0 1 1 1 0\n0 1 0 1 0\n1 1 0 1 1\n0 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0\n1 0 1 0 1\n0 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 1 0 1 0\n1 1 0 1 1\n0 1 0 1 0\n0 1 0 1 0\n1 1 0 1 1\n0 1 0 1 0\n1 1 0 1 1\n0 1 0 1 0\n0 1 0 1 0\n1 1 0 1 1\n0 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "018-py_14-train": [
      {
        "example": 1,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 1\n0 1 0\n1 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 2\n0 2 0\n2 2 0\n0 1 0\n0 1 0\n0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 85.18518518518519
      },
      {
        "example": 2,
        "input": "0 1 0\n1 0 1\n0 1 0\n1 0 1\n0 1 0\n1 0 1",
        "expected_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0",
        "transformed_output": "0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 2 0\n2 0 2\n0 1 0\n0 0 0\n0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 85.18518518518519
      },
      {
        "example": 3,
        "input": "0 1 0\n1 1 0\n0 1 0\n0 1 0\n1 1 0\n0 1 0",
        "expected_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0",
        "transformed_output": "0 2 0\n2 2 0\n0 2 0\n0 2 0\n2 2 0\n0 2 0\n0 1 0\n0 1 0\n0 1 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 85.18518518518519
      }
    ]
  },
  "best_train_results": {
    "passed": 2,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}