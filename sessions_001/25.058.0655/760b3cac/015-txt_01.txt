def grid_to_string(grid):
    return '\\n'.join(''.join(str(cell) for cell in row) for row in grid)

def compare_grids(grid1, grid2):
    return grid_to_string(grid1) + '\\n\\n' + grid_to_string(grid2)

examples = [
    {
        "input": [[0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 4, 0, 0]],
        "output": [[0, 0, 0, 0, 0, 0, 0], [0, 0, 8, 8, 0, 0, 0], [0, 0, 8, 8, 0, 0, 0], [0, 0, 8, 8, 0, 0, 0], [0, 0, 8, 8, 0, 0, 0], [0, 0, 0, 0, 4, 0, 0]]
    },
    {
        "input": [[0, 0, 0, 0, 0, 0], [0, 0, 0, 8, 0, 0], [0, 0, 0, 8, 0, 0], [0, 0, 0, 8, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 0]],
        "output": [[0, 0, 0, 0, 0, 0], [0, 8, 8, 0, 0, 0], [0, 8, 8, 0, 0, 0], [0, 0, 8, 0, 0, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 0, 0]]
    },
    {
        "input": [[0, 0, 0, 0, 0], [0, 0, 8, 0, 0], [0, 0, 8, 0, 0], [0, 0, 0, 0, 0], [0, 4, 0, 0, 0]],
        "output": [[0, 0, 0, 0, 0], [8, 8, 0, 0, 0], [8, 8, 0, 0, 0], [0, 0, 0, 0, 0], [0, 4, 0, 0, 0]]
    },
]
    
result_0 = transform(np.array(examples[0]['input']))
result_1 = transform(np.array(examples[1]['input']))
result_2 = transform(np.array(examples[2]['input']))

report = f"""
Example 0:
Input vs. Expected Output:
{compare_grids(examples[0]['input'], examples[0]['output'])}

Actual Output:
{grid_to_string(result_0)}

Example 1:
Input vs. Expected Output:
{compare_grids(examples[1]['input'], examples[1]['output'])}

Actual Output:
{grid_to_string(result_1)}

Example 2:
Input vs. Expected Output:
{compare_grids(examples[2]['input'], examples[2]['output'])}

Actual Output:
{grid_to_string(result_2)}
"""
print(report)