{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 566,
        "total": 2427,
        "cached": 0
      },
      "response_time": 9.242502
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2290,
        "candidates": 1291,
        "total": 3581,
        "cached": 0
      },
      "response_time": 13.364142
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2543,
        "candidates": 3414,
        "total": 5957,
        "cached": 0
      },
      "response_time": 34.070265
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3621,
        "candidates": 1510,
        "total": 5131,
        "cached": 0
      },
      "response_time": 18.782153
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 4927,
        "candidates": 642,
        "total": 5569,
        "cached": 0
      },
      "response_time": 6.360661
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 5749,
        "candidates": 1030,
        "total": 6779,
        "cached": 0
      },
      "response_time": 9.264134
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 444,
        "total": 2305,
        "cached": 0
      },
      "response_time": 6.862213
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2166,
        "candidates": 308,
        "total": 2474,
        "cached": 0
      },
      "response_time": 4.139057
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1558,
        "candidates": 1308,
        "total": 2866,
        "cached": 0
      },
      "response_time": 14.47778
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2664,
        "candidates": 446,
        "total": 3110,
        "cached": 0
      },
      "response_time": 5.1381
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1696,
        "candidates": 2129,
        "total": 3825,
        "cached": 0
      },
      "response_time": 27.49173
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3631,
        "candidates": 439,
        "total": 4070,
        "cached": 0
      },
      "response_time": 5.221807
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 585,
        "total": 2446,
        "cached": 0
      },
      "response_time": 9.943728
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2309,
        "candidates": 552,
        "total": 2861,
        "cached": 0
      },
      "response_time": 7.308777
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1804,
        "candidates": 3137,
        "total": 4941,
        "cached": 0
      },
      "response_time": 29.931028
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3408,
        "candidates": 3478,
        "total": 6886,
        "cached": 0
      },
      "response_time": 33.264204
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 6682,
        "candidates": 742,
        "total": 7424,
        "cached": 0
      },
      "response_time": 7.930083
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 4741,
        "candidates": 814,
        "total": 5555,
        "cached": 0
      },
      "response_time": 8.653287
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 668,
        "total": 2529,
        "cached": 0
      },
      "response_time": 9.789969
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2390,
        "candidates": 295,
        "total": 2685,
        "cached": 0
      },
      "response_time": 4.079733
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1546,
        "candidates": 2004,
        "total": 3550,
        "cached": 0
      },
      "response_time": 21.581057
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2225,
        "candidates": 1459,
        "total": 3684,
        "cached": 0
      },
      "response_time": 19.407284
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 3479,
        "candidates": 1032,
        "total": 4511,
        "cached": 0
      },
      "response_time": 11.176882
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3347,
        "candidates": 528,
        "total": 3875,
        "cached": 0
      },
      "response_time": 5.837698
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 452,
        "total": 2313,
        "cached": 0
      },
      "response_time": 7.494851
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2174,
        "candidates": 963,
        "total": 3137,
        "cached": 0
      },
      "response_time": 9.979349
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 2213,
        "candidates": 2758,
        "total": 4971,
        "cached": 0
      },
      "response_time": 30.433703
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 2860,
        "candidates": 3064,
        "total": 5924,
        "cached": 0
      },
      "response_time": 30.828239
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 5719,
        "candidates": 488,
        "total": 6207,
        "cached": 0
      },
      "response_time": 5.274907
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 4759,
        "candidates": 314,
        "total": 5073,
        "cached": 0
      },
      "response_time": 3.742474
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 0 0 4\n0 0 0 4\n0 4 1 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 0 0\n0 4 9 0\n0 4 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 0 4\n0 4 9 4\n0 4 1 4\n0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 0 0 4\n0 4 9 4\n0 4 1 4\n0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 4 0 4\n0 4 9 4\n0 4 1 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4\n0 4 0 4\n0 4 0 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "0 4 0 4\n0 4 0 4\n0 4 0 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "0 4 0 4\n0 4 0 4\n0 4 0 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 4 0 4\n0 4 0 4\n0 4 0 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "0 4 0 4\n0 4 0 4\n0 4 0 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 4 0 4\n0 4 0 4\n0 4 1 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 0 0\n0 4 9 0\n0 4 0 0\n0 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 0 4\n0 4 9 4\n0 4 1 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 4 0 4\n0 4 9 4\n0 4 1 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 4 0 4\n0 4 9 4\n0 4 1 4\n0 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4 9 9 0 0 0 0 0 0\n0 4 0 0 0 0 9 9 0 1 0 0\n4 0 0 0 0 0 0 0 1 1 1 0\n4 4 4 4 9 0 9 0 1 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4 9 0 9 0 0 0 0 1\n4 4 0 0 9 9 0 0 1 0 0 0\n4 0 4 4 0 0 0 9 0 1 0 1\n0 0 0 0 0 0 9 0 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0 9 9 0 9 0 1 0 1\n0 4 0 4 0 0 9 0 0 1 0 0\n0 4 0 4 0 0 9 9 1 0 0 1\n4 0 4 4 9 9 9 0 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 4 0 0 0 9 0 0 0 0\n4 4 0 4 9 0 9 0 0 0 0 0\n4 0 4 4 0 9 9 0 1 1 0 1\n0 4 4 4 0 9 0 0 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0 0 0 0 0 0 0 0 1\n4 4 4 4 0 0 0 9 1 1 0 0\n0 4 4 4 0 9 9 0 1 1 0 1\n0 4 4 0 0 0 9 0 0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'output_grid'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'output_grid'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'output_grid'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'output_grid'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "",
        "match": "ERROR: transform() missing 1 required positional argument: 'output_grid'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (4,) into shape (5,)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (4,) into shape (5,)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (4,) into shape (5,)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (4,) into shape (5,)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "",
        "match": "ERROR: could not broadcast input array from shape (4,) into shape (5,)",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 4 9 0\n4 0 9 1\n4 0 0 1\n4 4 9 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 9 1\n4 9 9 1\n4 4 9 1\n0 0 9 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 9 9 1\n4 4 9 1\n4 4 9 1\n4 4 9 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 4 9 0\n4 4 9 0\n4 4 9 1\n4 4 9 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 0 1\n4 4 9 1\n4 4 9 1\n4 0 9 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      }
    ],
    "015-py_09-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "016-py_10-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "017-py_11-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "1 0 0 0\n0 0 0 0\n1 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "1 0 0 0\n0 0 0 0\n1 0 0 0\n1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 0\n0 0 0 0\n1 0 0 0\n1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "1 0 0 0\n0 0 0 0\n1 0 0 0\n1 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 0 9 0\n4 0 9 0\n4 0 9 0\n4 0 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 0 9 0\n4 0 9 0\n4 0 9 0\n4 0 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 0 9 0\n4 0 9 0\n4 0 9 0\n4 0 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 0 9 0\n4 0 9 0\n4 0 9 0\n4 0 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 9 0\n4 0 9 0\n4 0 9 0\n4 0 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "4 2 9 2\n0 2 0 2\n0 2 0 2\n4 2 9 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 2 9 2\n0 2 9 2\n4 2 0 2\n0 2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "0 2 9 2\n4 2 0 2\n4 2 0 2\n4 2 9 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 2 0 2\n4 2 9 2\n4 2 0 2\n4 2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "0 2 0 2\n4 2 0 2\n4 2 0 2\n0 2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "021-py_14-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "023-py_15-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "024-py_16-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 0 4 2 9\n0 0 4 2 0\n0 4 0 2 0\n0 4 4 2 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 2 9 0 1\n4 2 9 9 0\n4 2 0 0 1\n0 2 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 0 2 9 1\n0 4 2 0 1\n0 4 2 0 0\n4 4 2 9 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 4 2 9\n0 4 4 2 0\n0 4 4 2 0\n0 0 4 2 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "0 4 0 2 1\n0 4 4 2 0\n0 0 4 2 1\n0 0 4 2 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "026-py_17-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4\n0 4 0 0\n4 0 0 0\n4 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4\n4 4 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0\n0 4 0 0\n0 4 0 1\n4 0 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 4\n4 4 0 0\n4 0 4 1\n0 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0\n4 4 4 0\n0 4 4 1\n0 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      }
    ],
    "027-py_18-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "028-py_19-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "029-py_20-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "2 2\n2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "2 2\n2 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "0 0 0 0 0 1 0\n0 0 0 9 1 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "4 0 4\n0 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 4 4\n4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "030-py_21-train": [
      {
        "example": 1,
        "input": "0 4 0 4 2 9 9 0 0 2 0 0 0 0\n0 4 0 0 2 0 0 9 9 2 0 1 0 0\n4 0 0 0 2 0 0 0 0 2 1 1 1 0\n4 4 4 4 2 9 0 9 0 2 1 1 0 1",
        "expected_output": "9 4 0 4\n0 4 9 9\n4 1 1 0\n4 4 4 4",
        "transformed_output": "0 4 0 4 9 9 0 0 0 0 0 0\n0 4 0 0 0 0 9 9 0 1 0 0\n4 0 0 0 0 0 0 0 1 1 1 0\n4 4 4 4 9 0 9 0 1 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 4 4 4 2 9 0 9 0 2 0 0 0 1\n4 4 0 0 2 9 9 0 0 2 1 0 0 0\n4 0 4 4 2 0 0 0 9 2 0 1 0 1\n0 0 0 0 2 0 0 9 0 2 1 0 1 0",
        "expected_output": "4 4 4 4\n4 4 0 0\n4 1 4 4\n1 0 9 0",
        "transformed_output": "4 4 4 4 9 0 9 0 0 0 0 1\n4 4 0 0 9 9 0 0 1 0 0 0\n4 0 4 4 0 0 0 9 0 1 0 1\n0 0 0 0 0 0 9 0 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "4 4 4 0 2 9 9 0 9 2 0 1 0 1\n0 4 0 4 2 0 0 9 0 2 0 1 0 0\n0 4 0 4 2 0 0 9 9 2 1 0 0 1\n4 0 4 4 2 9 9 9 0 2 0 0 0 1",
        "expected_output": "4 4 4 9\n0 4 9 4\n1 4 9 4\n4 9 4 4",
        "transformed_output": "4 4 4 0 9 9 0 9 0 1 1\n0 4 0 4 0 0 9 0 0 1 0\n0 4 0 4 0 0 9 9 1 0 1\n4 0 4 4 9 9 9 0 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 4 2 0 0 0 9 2 0 0 0 0\n4 4 0 4 2 9 0 9 0 2 0 0 0 0\n4 0 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 4 2 0 9 0 0 2 1 1 1 1",
        "expected_output": "0 0 0 4\n4 4 9 4\n4 9 4 4\n1 4 4 4",
        "transformed_output": "0 0 0 4 0 0 0 9 0 0 0 0\n4 4 0 4 9 0 9 0 0 0 0 0\n4 0 4 4 0 9 9 0 1 1 0 1\n0 4 4 4 0 9 0 0 1 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "4 0 4 0 2 0 0 0 0 2 0 0 0 1\n4 4 4 4 2 0 0 0 9 2 1 1 0 0\n0 4 4 4 2 0 9 9 0 2 1 1 0 1\n0 4 4 0 2 0 0 9 0 2 0 1 0 1",
        "expected_output": "4 0 4 1\n4 4 4 4\n1 4 4 4\n0 4 4 1",
        "transformed_output": "4 0 4 0 0 0 0 0 0 1\n4 4 4 4 0 0 9 1 1 0\n0 4 4 4 9 9 0 1 1 1\n0 4 4 0 0 9 0 0 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}