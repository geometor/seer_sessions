{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 449,
        "total": 2286,
        "cached": 0
      },
      "response_time": 7.335237
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2147,
        "candidates": 531,
        "total": 2678,
        "cached": 0
      },
      "response_time": 5.8048
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1776,
        "candidates": 2351,
        "total": 4127,
        "cached": 0
      },
      "response_time": 23.323177
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2694,
        "candidates": 1280,
        "total": 3974,
        "cached": 0
      },
      "response_time": 16.432914
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 3765,
        "candidates": 1091,
        "total": 4856,
        "cached": 0
      },
      "response_time": 11.73439
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3924,
        "candidates": 448,
        "total": 4372,
        "cached": 0
      },
      "response_time": 4.570928
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 581,
        "total": 2478,
        "cached": 0
      },
      "response_time": 8.601831
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2337,
        "candidates": 332,
        "total": 2669,
        "cached": 0
      },
      "response_time": 4.401447
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1583,
        "candidates": 2475,
        "total": 4058,
        "cached": 0
      },
      "response_time": 25.141848
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2609,
        "candidates": 1377,
        "total": 3986,
        "cached": 0
      },
      "response_time": 16.019684
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 3782,
        "candidates": 460,
        "total": 4242,
        "cached": 0
      },
      "response_time": 4.949613
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3856,
        "candidates": 379,
        "total": 4235,
        "cached": 0
      },
      "response_time": 4.00299
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1933,
        "candidates": 379,
        "total": 2312,
        "cached": 0
      },
      "response_time": 6.027505
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2174,
        "candidates": 278,
        "total": 2452,
        "cached": 0
      },
      "response_time": 3.829428
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1529,
        "candidates": 972,
        "total": 2501,
        "cached": 0
      },
      "response_time": 13.929019
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2297,
        "candidates": 376,
        "total": 2673,
        "cached": 0
      },
      "response_time": 4.127735
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1627,
        "candidates": 977,
        "total": 2604,
        "cached": 0
      },
      "response_time": 14.439597
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2395,
        "candidates": 540,
        "total": 2935,
        "cached": 0
      },
      "response_time": 6.0841
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0\n0 4 0 4 0 4 0 4 0 4\n0 0 4 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0 0 0 4 0 0\n0 4 0 4 0 4 0 4 0 4 0 4 0 4 0\n0 0 4 0 0 0 4 0 0 0 4 0 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 26,
        "percent_correct": 42.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "4 0 0 0 4 0 0 0 4 0 0 0 4 0 0 0 4 0\n0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4 0 4\n0 0 4 0 0 0 4 0 0 0 4 0 0 0 4 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 44.44444444444444
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 75.55555555555556
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 77.77777777777779
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 75.55555555555556
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 77.77777777777779
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 4 0 2 4 4 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 4 0 2 4 4 0 2 4 4 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 71.11111111111111
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 4 0 2 4 4 0 2 4 4 0 2 4 4 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 70.37037037037037
      }
    ],
    "009-py_06-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 4 0 2 4 4 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 76.66666666666667
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 4 0 2 4 4 0 2 4 4 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 71.11111111111111
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 4 0 2 4 4 0 2 4 4 0 2 4 4 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 70.37037037037037
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4\n4 2 0 2 0 2 0 2 0 2\n4 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 80.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4\n4 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n4 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 68.88888888888889
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 4\n4 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n4 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 72.22222222222221
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4\n4 2 4 2 4 2 4 2 4 2\n4 4 2 4 4 4 2 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 56.666666666666664
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n4 4 2 4 4 4 2 4 4 4 2 4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 57.77777777777777
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 55.55555555555556
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 62.96296296296296
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 61.111111111111114
      }
    ],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4\n4 2 4 2 4 2 4 2 4 2\n4 4 2 4 4 4 2 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 56.666666666666664
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n4 4 2 4 4 4 2 4 4 4 2 4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 57.77777777777777
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 55.55555555555556
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}