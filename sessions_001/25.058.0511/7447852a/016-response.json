{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nIdentifies all red pixels in the input grid. Then, for each white pixel, checks for horizontal or vertical adjacency to any red pixel. If a white pixel is adjacent to any red pixel, it's changed to yellow in the output grid. All red pixels are copied, and others are unchanged.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid according to the specified rule.\n    \"\"\"\n    output_grid = np.copy(input_grid)  # Initialize output grid as a copy of input\n\n    rows, cols = input_grid.shape\n\n    # Iterate through each cell in the grid\n    for r in range(rows):\n        for c in range(cols):\n            if input_grid[r, c] == 0:  # Check for white pixels\n                # Check for adjacency to red pixels\n                is_adjacent = False\n                # Check above\n                if r > 0 and input_grid[r - 1, c] == 2:\n                    is_adjacent = True\n                # Check below\n                if r < rows - 1 and input_grid[r + 1, c] == 2:\n                    is_adjacent = True\n                # Check left\n                if c > 0 and input_grid[r, c - 1] == 2:\n                    is_adjacent = True\n                # Check right\n                if c < cols - 1 and input_grid[r, c + 1] == 2:\n                    is_adjacent = True\n\n                if is_adjacent:\n                    output_grid[r, c] = 4  # Change to yellow\n\n    return output_grid\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2297,
    "candidates_token_count": 376,
    "total_token_count": 2673,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.127735,
  "response_file": "016-response.json"
}