import numpy as np

def analyze_example(input_grid, output_grid):
    input_grid = np.array(input_grid)
    output_grid = np.array(output_grid)

    input_rows, input_cols = input_grid.shape
    output_rows, output_cols = output_grid.shape

    red_pixels_input = np.sum(input_grid == 2)
    red_pixels_output = np.sum(output_grid == 2)
    blue_pixels_input = np.sum(input_grid == 1)
    blue_pixels_output = np.sum(output_grid == 1)
    azure_pixels_input = np.sum(input_grid == 8)
    azure_pixels_output = np.sum(output_grid == 8)
    
    scaling_factor_rows = output_rows / input_rows if input_rows else 1
    scaling_factor_cols = output_cols / input_cols if input_cols else 1

    return {
        "input_dims": (input_rows, input_cols),
        "output_dims": (output_rows, output_cols),
        "red_pixels_input": int(red_pixels_input),
        "red_pixels_output": int(red_pixels_output),
        "blue_pixels_input": int(blue_pixels_input),
        "blue_pixels_output": int(blue_pixels_output),
        "azure_pixels_input": int(azure_pixels_input),
        "azure_pixels_output": int(azure_pixels_output),
        "scaling_factor_rows": float(scaling_factor_rows),
        "scaling_factor_cols": float(scaling_factor_cols),
    }

examples = [
    (
        [[0, 2, 0], [0, 0, 0], [0, 0, 0]],
        [[8, 0, 8, 0, 8, 0], [0, 2, 0, 0, 0, 0], [8, 0, 8, 0, 8, 0], [0, 0, 0, 0, 0, 0], [8, 0, 8, 0, 8, 0], [0, 0, 0, 0, 0, 0]]
    ),
    (
      [[0, 0, 0], [0, 0, 2], [0, 0, 0]],
      [[0, 0, 0, 0, 0, 0], [0, 0, 8, 0, 8, 0], [0, 0, 0, 2, 0, 0], [0, 0, 8, 0, 8, 0], [0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]]
    ),
    (
      [[0, 0, 0], [0, 2, 0], [0, 2, 0]],
      [[0, 0, 0, 0, 0, 0], [0, 8, 0, 8, 0, 0], [0, 2, 0, 2, 0, 0], [0, 8, 0, 8, 0, 0], [0, 2, 0, 2, 0, 0], [0, 0, 0, 0, 0, 0]]
    ),
    (
      [[2, 0, 0], [0, 0, 0], [0, 0, 2]],
      [[2, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0], [0, 0, 8, 8, 0, 0], [0, 0, 8, 8, 0, 0], [0, 0, 0, 0, 0, 0], [2, 0, 0, 0, 0, 2]]
    )
]
results = [analyze_example(in_grid, out_grid) for in_grid, out_grid in examples]

for i, r in enumerate(results):
    print (f'example {i}')
    print (r)