- task: vertical_merge_and_color_change
- objects:
    - description: Input grid pixels
      properties:
        color:
          values: [0, 2]  # Initial colors present
    - description: Output grid pixels
      properties:
        color:
          values: [0, 3] # Output colors present

- actions:
    - name: change_color
      description: All pixels of color 2 in the input are changed to color 3.
      preconditions:
        color_exists: 2
      postconditions:
        color_replaced: {from: 2, to: 3}
    - name: vertical_merge
      description:  Combines every two consecutive rows.  If non-zero pixels overlap, they are both kept in the new row.
      preconditions:
        grid_2d: input_grid
      postconditions:
        grid_rows_halved: output_grid # Number of rows is approximately halved
        merge_logic:
          overlapping_nonzero: "keep both, placing them adjacent in the new row from left to right based on their vertical ordering in the input (row i first, row i+1 second)"
          one_nonzero: "use the non zero value"
          both_zero: "use zero"
