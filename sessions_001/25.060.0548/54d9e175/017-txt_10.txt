import numpy as np

def compare_grids(grid1, grid2):
    """Compares two grids and returns a report."""
    if grid1.shape != grid2.shape:
        return "Grids have different shapes."
    else:
        comparison = grid1 == grid2
        num_diff = np.sum(~comparison)
        diff_indices = np.where(~comparison)
        diff_values_grid1 = grid1[diff_indices]
        diff_values_grid2 = grid2[diff_indices]
        report = f"{num_diff} differences found.\n"
        for i in range(num_diff):
            report += f"  - Index: {diff_indices[0][i], diff_indices[1][i]}, Value in grid1: {diff_values_grid1[i]}, Value in grid2: {diff_values_grid2[i]}\n"
        return report

def count_colors(grid):
    """Counts unique colors and their occurrences in a grid."""
    unique_colors, counts = np.unique(grid, return_counts=True)
    color_counts = dict(zip(unique_colors, counts))
    return color_counts