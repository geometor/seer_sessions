import numpy as np

def analyze_results(input_grid, expected_output, transformed_output):
    input_grid = np.array(input_grid)
    expected_output = np.array(expected_output)
    transformed_output = np.array(transformed_output)

    input_green_pixels = np.argwhere(input_grid == 3)
    expected_green_pixels = np.argwhere(expected_output == 3)
    expected_yellow_pixels = np.argwhere(expected_output == 4)
    transformed_green_pixels = np.argwhere(transformed_output == 3)
    transformed_yellow_pixels = np.argwhere(transformed_output == 4)

    print("Input Green Pixels:")
    for r, c in input_green_pixels:
        print(f"  ({r}, {c})")

    print("\nExpected Green Pixels (unchanged):")
    for r, c in expected_green_pixels:
        print(f"  ({r}, {c})")
        
    print("\nExpected Yellow Pixels (changed from green):")
    for r, c in expected_yellow_pixels:
        print(f"  ({r}, {c})")

    print("\nTransformed Green Pixels:")
    for r, c in transformed_green_pixels:
        print(f"  ({r}, {c})")

    print("\nTransformed Yellow Pixels:")
    for r, c in transformed_yellow_pixels:
        print(f"  ({r}, {c})")
    print("\nDifferences (Expected Yellow vs Transformed Yellow):")

    expected_yellow_set = set(tuple(x) for x in expected_yellow_pixels)
    transformed_yellow_set = set(tuple(x) for x in transformed_yellow_pixels)

    missing_yellow = expected_yellow_set - transformed_yellow_set
    extra_yellow = transformed_yellow_set - expected_yellow_set

    print("  Missing Yellow (in Expected but not in Transformed):")
    for r, c in missing_yellow:
        print(f"    ({r}, {c})")
    print("  Extra Yellow (in Transformed but not in Expected):")
    for r, c in extra_yellow:
        print(f"    ({r}, {c})")
    
# Example data (replace with actual data from each example)
example1_input = [
    [0, 0, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 0],
    [0, 3, 0, 3, 0, 0],
    [0, 0, 3, 0, 3, 0],
    [0, 0, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0]
]
example1_expected = [
    [0, 0, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 0],
    [0, 3, 4, 3, 0, 0],
    [0, 0, 3, 4, 3, 0],
    [0, 0, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0]
]
example1_transformed = [
    [0, 0, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 0],
    [0, 3, 0, 3, 0, 0],
    [0, 0, 3, 0, 3, 0],
    [0, 0, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0]
]

print("Example 1 Analysis:")
analyze_results(example1_input, example1_expected, example1_transformed)

example2_input = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 3, 0, 3, 0, 0, 0, 0, 0],
[0, 0, 0, 3, 0, 3, 0, 0, 0, 0],
[0, 0, 3, 0, 0, 0, 3, 0, 0, 0],
[0, 0, 0, 0, 0, 3, 0, 3, 0, 0],
[0, 0, 0, 3, 0, 3, 3, 0, 0, 0],
[0, 0, 3, 3, 3, 0, 0, 0, 0, 0],
[0, 0, 0, 3, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]

example2_expected = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 3, 0, 3, 0, 0, 0, 0, 0],
[0, 0, 0, 3, 0, 3, 0, 0, 0, 0],
[0, 0, 3, 0, 0, 0, 3, 0, 0, 0],
[0, 0, 0, 0, 0, 3, 4, 3, 0, 0],
[0, 0, 0, 3, 0, 3, 3, 0, 0, 0],
[0, 0, 3, 3, 3, 0, 0, 0, 0, 0],
[0, 0, 0, 3, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]
example2_transformed = [
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 3, 0, 3, 0, 0, 0, 0, 0],
[0, 0, 0, 3, 0, 3, 0, 0, 0, 0],
[0, 0, 3, 0, 0, 0, 3, 0, 0, 0],
[0, 0, 0, 0, 0, 3, 0, 3, 0, 0],
[0, 0, 0, 3, 0, 3, 3, 0, 0, 0],
[0, 0, 3, 3, 3, 0, 0, 0, 0, 0],
[0, 0, 0, 3, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]

print("\nExample 2 Analysis:")
analyze_results(example2_input, example2_expected, example2_transformed)


example3_input = [
    [0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
    [0, 3, 3, 0, 3, 3, 0, 3, 0, 0],
    [3, 0, 0, 3, 0, 0, 3, 0, 3, 0],
    [0, 0, 0, 3, 0, 0, 3, 3, 0, 0],
    [0, 0, 0, 3, 0, 0, 3, 0, 0, 0],
    [0, 0, 0, 3, 0, 0, 3, 0, 0, 0],
    [0, 0, 0, 0, 3, 3, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]
example3_expected = [
    [0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
    [0, 3, 3, 0, 3, 3, 0, 3, 0, 0],
    [3, 0, 0, 3, 4, 4, 3, 4, 3, 0],
    [0, 0, 0, 3, 4, 4, 3, 3, 0, 0],
    [0, 0, 0, 3, 4, 4, 3, 0, 0, 0],
    [0, 0, 0, 3, 4, 4, 3, 0, 0, 0],
    [0, 0, 0, 0, 3, 3, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]
example3_transformed =  [
    [0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
    [0, 3, 3, 0, 3, 3, 0, 3, 0, 0],
    [3, 0, 0, 3, 0, 0, 3, 0, 3, 0],
    [0, 0, 0, 3, 0, 0, 3, 3, 0, 0],
    [0, 0, 0, 3, 0, 0, 3, 0, 0, 0],
    [0, 0, 0, 3, 0, 0, 3, 0, 0, 0],
    [0, 0, 0, 0, 3, 3, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]

print("\nExample 3 Analysis:")
analyze_results(example3_input, example3_expected, example3_transformed)

example4_input = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 3, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 3, 0, 3, 0, 0],
    [0, 0, 3, 3, 3, 3, 3, 3, 3, 0],
    [0, 0, 0, 3, 0, 0, 0, 0, 3, 0],
    [0, 0, 0, 3, 0, 0, 0, 3, 3, 0],
    [0, 0, 0, 3, 3, 0, 0, 3, 0, 3],
    [0, 0, 0, 3, 0, 3, 0, 0, 3, 0],
    [0, 0, 0, 0, 3, 0, 0, 0, 0, 0]
]
example4_expected = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 3, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 3, 4, 4, 3, 0, 0, 0, 0],
    [0, 0, 3, 4, 4, 3, 0, 3, 0, 0],
    [0, 0, 3, 3, 3, 3, 3, 3, 3, 0],
    [0, 0, 0, 3, 0, 0, 0, 0, 3, 0],
    [0, 0, 0, 3, 0, 0, 0, 3, 3, 0],
    [0, 0, 0, 3, 3, 0, 0, 3, 4, 3],
    [0, 0, 0, 3, 4, 3, 0, 0, 3, 0],
    [0, 0, 0, 0, 3, 0, 0, 0, 0, 0]
]
example4_transformed = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 3, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 3, 0, 3, 0, 0],
    [0, 0, 3, 3, 3, 3, 3, 3, 3, 0],
    [0, 0, 0, 3, 0, 0, 0, 0, 3, 0],
    [0, 0, 0, 3, 0, 0, 0, 3, 3, 0],
    [0, 0, 0, 3, 3, 0, 0, 3, 0, 3],
    [0, 0, 0, 3, 0, 3, 0, 0, 3, 0],
    [0, 0, 0, 0, 3, 0, 0, 0, 0, 0]
]

print("\nExample 4 Analysis:")
analyze_results(example4_input, example4_expected, example4_transformed)

example5_input = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 3, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 3, 0, 0, 3, 0, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 0, 0, 3, 3, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 3, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]
example5_expected = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 3, 3, 3, 4, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 3, 0, 0, 0, 0, 0, 0, 0, 3, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 4, 4, 4, 4, 4, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 0, 0, 0, 3, 4, 4, 4, 4, 4, 4, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 4, 4, 4, 4, 4, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 4, 4, 4, 4, 4, 4, 3, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 3, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 3, 3, 4, 4, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 3, 4, 4, 3, 3, 0, 0, 3, 0, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 0, 0, 3, 3, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 4, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 3, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]
example5_transformed = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 4, 0, 0, 0, 0, 0, 0, 0, 3, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 3, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
    [0, 0, 3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 3, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 3, 0, 0, 3, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 3, 0, 0, 3, 0, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 0, 0, 3, 4, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 3, 0, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 3, 3, 3, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]
print("\nExample 5 Analysis:")
analyze_results(example5_input, example5_expected, example5_transformed)