{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3459,
        "candidates": 699,
        "total": 4158,
        "cached": 0
      },
      "response_time": 12.994232
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4020,
        "candidates": 725,
        "total": 4745,
        "cached": 0
      },
      "response_time": 9.547719
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 644,
        "total": 2521,
        "cached": 0
      },
      "response_time": 10.273362
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2380,
        "candidates": 958,
        "total": 3338,
        "cached": 0
      },
      "response_time": 8.934294
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2209,
        "candidates": 1705,
        "total": 3914,
        "cached": 0
      },
      "response_time": 21.647625
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3708,
        "candidates": 756,
        "total": 4464,
        "cached": 0
      },
      "response_time": 7.333321
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 2007,
        "candidates": 1547,
        "total": 3554,
        "cached": 0
      },
      "response_time": 16.720851
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 3351,
        "candidates": 813,
        "total": 4164,
        "cached": 0
      },
      "response_time": 6.805089
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 523,
        "total": 2320,
        "cached": 0
      },
      "response_time": 7.28725
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2180,
        "candidates": 441,
        "total": 2621,
        "cached": 0
      },
      "response_time": 5.011757
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1690,
        "candidates": 2152,
        "total": 3842,
        "cached": 0
      },
      "response_time": 21.88415
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2407,
        "candidates": 914,
        "total": 3321,
        "cached": 0
      },
      "response_time": 10.556135
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 3117,
        "candidates": 256,
        "total": 3373,
        "cached": 0
      },
      "response_time": 2.960094
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3645,
        "candidates": 482,
        "total": 4127,
        "cached": 0
      },
      "response_time": 4.454552
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 805,
        "total": 2682,
        "cached": 0
      },
      "response_time": 10.106272
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2543,
        "candidates": 206,
        "total": 2749,
        "cached": 0
      },
      "response_time": 2.978448
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1457,
        "candidates": 934,
        "total": 2391,
        "cached": 0
      },
      "response_time": 11.383447
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2187,
        "candidates": 929,
        "total": 3116,
        "cached": 0
      },
      "response_time": 9.74563
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 2179,
        "candidates": 6143,
        "total": 8322,
        "cached": 0
      },
      "response_time": 55.885004
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 8119,
        "candidates": 1520,
        "total": 9639,
        "cached": 0
      },
      "response_time": 13.56521
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 0 0 0 0 0 0 3\n4 0 0 0 0 0 0 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 0 0 0 0 4\n2 0 0 0 0 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 0 0 0 0 0 0 2\n7 0 0 0 0 0 0 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 0 0 3\n0 8 8 0\n0 8 8 0\n4 0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 0 4\n0 0 0\n2 0 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 0 0 2\n0 0 8 0\n0 8 0 0\n7 0 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 2 4 0 8 8 8 3 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 9 2 8 4 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 6 7 0 8 2 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 2 4 0 8 8 8 3 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 9 2 8 4 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 6 7 0 8 2 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 3\n4 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 4\n2 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 2\n7 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 3\n4 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 4\n2 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 2\n7 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "013-py_08-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 3\n4 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 4\n2 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 2\n7 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 3\n4 6",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 4\n2 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 2\n7 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 0 0 1\n0 0 0 1\n0 0 8 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 0 0 1\n0 0 0 1\n0 8 8 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      }
    ],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 0 0 1\n0 0 0 1\n0 0 8 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 0 1\n0 8 1\n1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 0 0 1\n0 0 0 1\n0 8 8 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      }
    ],
    "019-py_12-train": [],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "2 1 0 0 0 0 1 3\n1 1 1 1 1 1 1 1\n0 1 0 8 0 0 1 0\n0 1 8 8 0 8 1 0\n0 1 0 0 8 0 1 0\n0 1 8 0 8 8 1 0\n1 1 1 1 1 1 1 1\n4 1 0 0 0 0 1 6",
        "expected_output": "0 2 0 0\n2 2 0 3\n0 0 6 0\n4 0 6 6",
        "transformed_output": "2 0 0 1\n0 0 0 1\n0 0 8 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "9 1 0 0 1 4\n1 1 1 1 1 1\n0 1 8 8 1 0\n0 1 8 0 1 0\n1 1 1 1 1 1\n2 1 0 0 1 3",
        "expected_output": "9 4\n2 0",
        "transformed_output": "9 0 1\n0 8 1\n1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "6 1 0 0 0 0 1 2\n1 1 1 1 1 1 1 1\n0 1 0 8 0 8 1 0\n0 1 8 8 8 0 1 0\n0 1 8 0 8 8 1 0\n0 1 8 8 8 0 1 0\n1 1 1 1 1 1 1 1\n7 1 0 0 0 0 1 4",
        "expected_output": "0 6 0 2\n6 6 2 0\n7 0 4 4\n7 7 4 0",
        "transformed_output": "6 0 0 1\n0 0 0 1\n0 8 8 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}