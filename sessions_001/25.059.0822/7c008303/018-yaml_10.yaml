task_facts:
  - example_set: train
  - overall_rule: "Map colors from input to output based on a predefined color map and reduce dimensions to a 6x6 grid."
  - input_objects:
      - description: "Pixels of different colors forming contiguous objects."
        properties:
          - color: "Integer value (0-9) representing a color."
          - position: "(row, column) coordinates within the grid."
          - shape: "Contiguous block of one or more pixels of the same color."
  - output_objects:
      - description: "Pixels of different colors in a 6x6 grid, derived from input colors."
        properties:
          - color: "Integer value (0-9), determined by the color map."
          - position: "(row, column) within the 6x6 grid."
  - color_mapping:
      - rule: "A mapping between input and output colors.  8 -> 2,4; 3 -> 5,6 ; 2 -> 2; 4 -> 4; 6 -> 6; 1 is not present; 5 is not present"

      - 8: [2, 4]
      - 3: [5, 6]
      - 2: [2]
      - 4: [4]
      - 6: [6]
      - 5: [5] #observed, but not present in any examples. Added for consistency
      - 1: []  # Placeholder, as 1 doesn't appear in any output.

  - spatial_mapping:
      - rule: "Positions of colors in the input grid determine the positions in output grid. The output grid always has the dimension 6x6. Columns 0 and 5 are reserved for output of color 8. If color 8 is present in Input, then color 2 appears in output grid at column 0 and color 4 at column 5, in rows corresponding to the rows where 8 first appears in the second and last columns where color 8 is present. Other colors in input grid are positioned on the output grid in the positions they have in the input grid, but considering output shape is 6x6 (input row and column values are limited to 5)"