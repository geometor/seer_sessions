import numpy as np

def describe_grid(grid, grid_name):
    rows, cols = grid.shape
    print(f"{grid_name}:")
    print(f"  Dimensions: {rows} x {cols}")
    for i in range(rows):
        row_str = " ".join(str(x) for x in grid[i])
        print(f"  Row {i}: {row_str}")

examples = [
    {
        "input": np.array([[5, 5, 5], [5, 5, 5], [5, 5, 5]]),
        "output": np.array([[5, 5, 5], [5, 5, 5]])
    },
    {
        "input": np.array([[8, 8, 8, 8, 8], [8, 8, 8, 8, 8], [8, 8, 8, 8, 8], [8, 8, 8, 8, 8]]),
        "output": np.array([[8, 8, 8, 8, 8], [8, 8, 8, 8, 8]])
    },
     {
        "input": np.array([[7, 7, 7, 7, 7, 7, 7], [7, 7, 7, 7, 7, 7, 7], [7, 7, 7, 7, 7, 7, 7], [7, 7, 7, 7, 7, 7, 7], [7, 7, 7, 7, 7, 7, 7]]),
        "output": np.array([[7, 7, 7, 7, 7, 7, 7], [7, 7, 7, 7, 7, 7, 7], [7, 7, 7, 7, 7, 7, 7]])
    },
     {
        "input": np.array([[1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1]]),
        "output": np.array([[1, 1, 1, 1, 1], [1, 1, 1, 1, 1], [1, 1, 1, 1, 1]])
    }
]

for i, example in enumerate(examples):
  describe_grid(example["input"], f"Example {i+1} Input")
  describe_grid(example["output"], f"Example {i+1} Output")