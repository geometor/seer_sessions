import numpy as np

def transform(input_grid):
    output_grid = np.copy(input_grid)
    for i in range(output_grid.shape[0]):
        for j in range(output_grid.shape[1]):
            if output_grid[i, j] == 8:
                output_grid[i, j] = 0
    return output_grid

def show_result(task):
    output = ""
    for i, example in enumerate(task['train']):
      input_grid = np.array(example['input'])
      output_grid = np.array(example['output'])
      transformed_grid = transform(input_grid)
      result_match = np.array_equal(output_grid, transformed_grid)
      output += f"Example {i+1}: {'Matches' if result_match else 'Does Not Match'}\n"
      if not result_match:
          diff = output_grid != transformed_grid
          output += f"  Differences at (row, col):\n"
          for row, col in np.transpose(np.where(diff)):
              output += f"    ({row}, {col}): Expected {output_grid[row, col]}, Got {transformed_grid[row, col]}\n"
    return output

# Paste task data below this line
task = {
  "train": [
    {
      "input": [
        [5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 1]
      ],
      "output": [
        [5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 0]
      ]
    },
    {
      "input": [
        [5, 5, 5, 5, 5, 5, 5, 5, 1],
        [5, 5, 5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5, 5, 5]
      ],
      "output": [
        [5, 5, 5, 5, 5, 5, 5, 5, 0],
        [5, 5, 5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5, 5, 5, 5]
      ]
    },
    {
      "input": [
        [1, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5]
      ],
      "output": [
        [0, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5],
        [5, 5, 5, 5, 5, 5]
      ]
    }
  ]
}
print(show_result(task))