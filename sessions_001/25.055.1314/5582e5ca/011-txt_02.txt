import numpy as np

examples = [
    {
        "input": [[5, 0, 5], [0, 5, 0], [5, 0, 5]],
        "output": [[5, 5, 5], [5, 5, 5], [5, 5, 5]],
    },
    {
        "input": [[0, 1, 0, 0, 0, 0, 0], [8, 0, 8, 0, 0, 0, 0]],
        "output": [[1, 1, 1, 1, 1, 1, 1], [8, 8, 8, 0, 0, 0, 0]],
    },
    {
        "input": [[0, 0, 0, 7, 0, 0, 7, 0], [0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 7, 0, 0, 7, 0, 0]],
        "output": [[7, 7, 7, 7, 7, 7, 7, 7], [0, 0, 0, 0, 0, 0, 0, 0], [7, 7, 7, 7, 7, 7, 7, 7]],
    },
    {
        "input": [[0, 0, 0, 0, 0, 0, 0, 0, 0], [6, 0, 0, 0, 6, 0, 0, 0, 6]],
        "output": [[0, 0, 0, 0, 0, 0, 0, 0, 0], [6, 6, 6, 6, 6, 6, 6, 6, 6]],
    },
    {
      "input":  [[0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 5, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5]],
        "output": [[5, 5, 5, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 5, 5, 5, 5],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
 [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5]],
    }
]

report = ""
for i, example in enumerate(examples):
    input_grid = np.array(example['input'])
    output_grid = np.array(example['output'])
    
    input_unique_colors = np.unique(input_grid)
    output_unique_colors = np.unique(output_grid)
    
    report += f"Example {i+1}:\n"
    report += f"  Input Unique Colors: {', '.join(map(str, input_unique_colors))}\n"
    report += f"  Output Unique Colors: {', '.join(map(str, output_unique_colors))}\n"
    report += f"  Input Dimensions: {input_grid.shape}\n"
    report += f"  Output Dimensions: {output_grid.shape}\n"
    
    # check if the initial code works
    transformed_input = transform(example["input"])
    if np.array_equal(transformed_input, example["output"]):
      report += f"  Initial Code: PASS\n"
    else:
      report += f"  Initial Code: FAIL\n"
    report += "\n"

print(report)