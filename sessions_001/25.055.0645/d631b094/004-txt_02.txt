import numpy as np

task = {
    "train": [
        {
            "input": [[8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8]],
            "output": [[1, 1, 1]]
        },
        {
            "input": [[8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8]],
            "output": [[1, 1, 1]]
        },
        {
            "input": [[8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 0, 0, 0, 8, 8], [8, 8, 8, 8, 8, 8, 0, 0, 0, 8, 8], [8, 8, 8, 8, 8, 8, 0, 0, 0, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]],
            "output": [[1, 1, 1]]
        },
        {
            "input": [[8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8]],
            "output": [[1, 1, 1]]
        }
    ],
    "test": [
        {
            "input": [[8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8, 8], [8, 8, 8, 0, 0, 0, 8, 8, 8], [8, 8, 8, 8, 8, 8, 8, 8, 8]],
            "output": [[1, 1, 1]]
        }
    ]
}

def count_azure_pixels(grid):
    count = 0
    for row in grid:
        for pixel in row:
            if pixel == 8:
                count += 1
    return count

results = {}
for group in ["train", "test"]:
  results[group] = {}
  for i, example in enumerate(task[group]):
    input_grid = example["input"]
    azure_count = count_azure_pixels(input_grid)
    dimensions = f"{len(input_grid)}x{len(input_grid[0])}"
    results[group][f"example_{i+1}"] = {
        "azure_count": azure_count,
        "dimensions": dimensions
    }
print(results)