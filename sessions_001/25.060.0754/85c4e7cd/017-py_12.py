import numpy as np

def get_center_color(grid):
    rows, cols = grid.shape
    return grid[rows//2, cols//2]

def get_changed_colors(grid1, grid2):

    changes = []

    for r in range(grid1.shape[0]):
        for c in range(grid1.shape[1]):
            if grid1[r,c] != grid2[r,c]:
                changes.append(f'Changed ({r},{c}) from {grid1[r,c]} to {grid2[r,c]}')

    return changes

task = {
    "train": [
        {
            "input": [
                [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8],
                [8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
                [8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
                [8, 1, 1, 8, 8, 4, 4, 8, 8, 1, 1, 8],
                [8, 1, 1, 8, 8, 4, 4, 8, 8, 1, 1, 8],
                [8, 1, 1, 4, 4, 8, 8, 4, 4, 1, 1, 8],
                [8, 1, 1, 4, 4, 8, 8, 4, 4, 1, 1, 8],
                [8, 1, 1, 8, 8, 4, 4, 8, 8, 1, 1, 8],
                [8, 1, 1, 8, 8, 4, 4, 8, 8, 1, 1, 8],
                [8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
                [8, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
                [8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8, 8]
            ],
            "output": [
                [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4],
                [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
                [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
                [4, 1, 1, 4, 4, 8, 8, 4, 4, 1, 1, 4],
                [4, 1, 1, 4, 4, 8, 8, 4, 4, 1, 1, 4],
                [4, 1, 1, 8, 8, 4, 4, 8, 8, 1, 1, 4],
                [4, 1, 1, 8, 8, 4, 4, 8, 8, 1, 1, 4],
                [4, 1, 1, 4, 4, 8, 8, 4, 4, 1, 1, 4],
                [4, 1, 1, 4, 4, 8, 8, 4, 4, 1, 1, 4],
                [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
                [4, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 4],
                [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4]
            ]
        },
                {
            "input": [
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
                [2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2],
                [2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2],
                [2, 8, 8, 2, 2, 1, 1, 2, 2, 8, 8, 2],
                [2, 8, 8, 2, 2, 1, 1, 2, 2, 8, 8, 2],
                [2, 8, 8, 1, 1, 2, 2, 1, 1, 8, 8, 2],
                [2, 8, 8, 1, 1, 2, 2, 1, 1, 8, 8, 2],
                [2, 8, 8, 2, 2, 1, 1, 2, 2, 8, 8, 2],
                [2, 8, 8, 2, 2, 1, 1, 2, 2, 8, 8, 2],
                [2, 8, 8, 8, 8, 8, 8, 8, 8, 8, 2],
                [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
            ],
            "output": [
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
                [1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1],
                [1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1],
                [1, 8, 8, 1, 1, 2, 2, 1, 1, 8, 8, 1],
                [1, 8, 8, 1, 1, 2, 2, 1, 1, 8, 8, 1],
                [1, 8, 8, 2, 2, 1, 1, 2, 2, 8, 8, 1],
                [1, 8, 8, 2, 2, 1, 1, 2, 2, 8, 8, 1],
                [1, 8, 8, 1, 1, 2, 2, 1, 1, 8, 8, 1],
                [1, 8, 8, 1, 1, 2, 2, 1, 1, 8, 8, 1],
                [1, 8, 8, 8, 8, 8, 8, 8, 8, 8, 1],
                [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
            ]
        },
        {
            "input": [
                [1, 1, 1, 1, 1, 1, 1, 1, 1],
                [1, 8, 8, 8, 8, 8, 8, 8, 1],
                [1, 8, 8, 1, 2, 1, 8, 8, 1],
                [1, 8, 2, 1, 1, 1, 2, 8, 1],
                [1, 8, 1, 1, 1, 1, 1, 8, 1],
                [1, 8, 8, 1, 2, 1, 8, 8, 1],
                [1, 1, 1, 1, 1, 1, 1, 1, 1]
            ],
            "output": [
                [2, 2, 2, 2, 2, 2, 2, 2, 2],
                [2, 8, 8, 8, 8, 8, 8, 8, 2],
                [2, 8, 8, 2, 1, 2, 8, 8, 2],
                [2, 8, 1, 2, 2, 2, 1, 8, 2],
                [2, 8, 2, 2, 2, 2, 2, 8, 2],
                [2, 8, 8, 2, 1, 2, 8, 8, 2],
                [2, 2, 2, 2, 2, 2, 2, 2, 2]
            ]
        }
    ]
}

results = []
for i, example in enumerate(task["train"]):
    input_grid = np.array(example["input"])
    output_grid = np.array(example["output"])
    rows, cols = input_grid.shape
    center_color = get_center_color(input_grid)
    changed_colors = get_changed_colors(input_grid, output_grid)
    results.append({
        "example": i + 1,
        "rows": rows,
        "cols": cols,
        "center_color": center_color,
        "changed_colors": changed_colors
    })

for result in results:
    print(result)
