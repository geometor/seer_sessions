{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3985,
        "candidates": 622,
        "total": 4607,
        "cached": 0
      },
      "response_time": 9.324241
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4468,
        "candidates": 1334,
        "total": 5802,
        "cached": 0
      },
      "response_time": 11.773701
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1813,
        "candidates": 610,
        "total": 2423,
        "cached": 0
      },
      "response_time": 8.207665
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2284,
        "candidates": 284,
        "total": 2568,
        "cached": 0
      },
      "response_time": 3.729985
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1535,
        "candidates": 1009,
        "total": 2544,
        "cached": 0
      },
      "response_time": 11.531195
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2340,
        "candidates": 269,
        "total": 2609,
        "cached": 0
      },
      "response_time": 3.189065
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1520,
        "candidates": 739,
        "total": 2259,
        "cached": 0
      },
      "response_time": 9.133622
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2055,
        "candidates": 226,
        "total": 2281,
        "cached": 0
      },
      "response_time": 2.698463
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1813,
        "candidates": 517,
        "total": 2330,
        "cached": 0
      },
      "response_time": 41.588774
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2192,
        "candidates": 517,
        "total": 2709,
        "cached": 0
      },
      "response_time": 6.404337
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1768,
        "candidates": 1097,
        "total": 2865,
        "cached": 0
      },
      "response_time": 10.896336
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2660,
        "candidates": 369,
        "total": 3029,
        "cached": 0
      },
      "response_time": 3.591983
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1620,
        "candidates": 1723,
        "total": 3343,
        "cached": 0
      },
      "response_time": 18.840056
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3139,
        "candidates": 369,
        "total": 3508,
        "cached": 0
      },
      "response_time": 3.307003
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1813,
        "candidates": 742,
        "total": 2555,
        "cached": 0
      },
      "response_time": 9.020521
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2417,
        "candidates": 243,
        "total": 2660,
        "cached": 0
      },
      "response_time": 3.411126
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1494,
        "candidates": 2172,
        "total": 3666,
        "cached": 0
      },
      "response_time": 21.742678
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3462,
        "candidates": 191,
        "total": 3653,
        "cached": 0
      },
      "response_time": 2.545024
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1442,
        "candidates": 1089,
        "total": 2531,
        "cached": 0
      },
      "response_time": 11.791839
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2336,
        "candidates": 200,
        "total": 2536,
        "cached": 0
      },
      "response_time": 3.407678
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1813,
        "candidates": 506,
        "total": 2319,
        "cached": 0
      },
      "response_time": 6.766591
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2181,
        "candidates": 206,
        "total": 2387,
        "cached": 0
      },
      "response_time": 3.117971
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1457,
        "candidates": 749,
        "total": 2206,
        "cached": 0
      },
      "response_time": 8.855807
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 2001,
        "candidates": 708,
        "total": 2709,
        "cached": 0
      },
      "response_time": 7.310689
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1958,
        "candidates": 3164,
        "total": 5122,
        "cached": 0
      },
      "response_time": 30.427544
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 4921,
        "candidates": 347,
        "total": 5268,
        "cached": 0
      },
      "response_time": 3.731526
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "2 2 2 2\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 87.5
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n2 2 2 2\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 2 2 2\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 2 2 2\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n0 2 2 0\n0 0 2 2\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 3\n0 2 2 0\n0 0 2 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 3\n0 0 2 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 3\n2 0 0 0\n2 0 2 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n2 0 0 2\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n0 2 2 0\n0 0 2 2\n2 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n2 2 2 2\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n2 2 0 2\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0\n2 0\n0 2\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 0\n2 0\n2 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 0\n0 0\n2 2\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "0 0\n0 0\n2 2\n0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0\n2 0\n0 2\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 0\n2 0\n2 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 0\n0 0\n2 2\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "0 0\n0 0\n2 2\n0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "013-py_07-train": [],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0\n2 0\n0 2\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 0\n2 0\n2 0\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 0\n0 0\n2 2\n0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "0 0\n0 0\n2 2\n0 2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 2 2 0\n2 0 0 2\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n2 0 2 2\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 2\n2 2 2 2\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 56.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 2 2 2\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      }
    ],
    "017-py_10-train": [],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n2 0 0 2\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n0 2 2 0\n0 0 2 2\n2 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n2 2 2 2\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n2 2 0 2\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "020-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n2 0 0 2\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n0 2 2 0\n0 0 2 2\n2 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n2 2 2 2\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n2 2 0 2\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "022-py_13-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n2 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "2 2 2 2\n0 2 2 0\n0 0 2 2\n2 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n2 2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      }
    ],
    "024-py_14-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 2 2 0\n0 0 0 0\n2 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 2 2 0\n0 2 0 2\n0 0 2 0\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "2 2 2 2\n2 0 0 0\n2 0 2 2\n2 2 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      }
    ],
    "025-py_15-train": [],
    "026-py_16-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3\n0 0 0 1\n1 0 1 1\n1 1 1 1\n0 1 0 1",
        "expected_output": "2 2 2 0\n0 0 0 0\n0 0 0 0\n0 0 2 0",
        "transformed_output": "0 0 0 0\n0 3 3 0\n0 0 0 0\n3 0 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0\n0 0 0 1\n0 0 0 1\n0 1 0 0\n1 0 0 1",
        "expected_output": "0 0 0 0\n2 0 0 0\n2 0 0 0\n0 2 2 0",
        "transformed_output": "3 3 3 3\n0 3 3 0\n0 0 3 3\n3 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3\n1 1 1 1\n1 1 0 0\n1 1 0 0\n0 1 1 0",
        "expected_output": "0 0 0 0\n0 0 2 0\n0 0 0 2\n0 0 0 0",
        "transformed_output": "0 3 3 0\n0 3 0 3\n0 0 3 0\n3 3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 4,
        "input": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3\n1 1 1 0\n0 1 1 1\n1 0 1 1\n0 1 1 1",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 2 0 0\n0 0 0 0",
        "transformed_output": "3 3 3 3\n3 0 0 0\n3 0 3 3\n3 3 0 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}