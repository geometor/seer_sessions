import numpy as np

def compare_grids(grid1, grid2):
    """
    Compares two grids and returns a report of the differences.
    """
    if grid1.shape != grid2.shape:
        return "Grids have different shapes."

    diff = grid1 != grid2
    diff_indices = np.argwhere(diff)

    if diff_indices.size == 0:
        return "Grids are identical."

    report = {
        "changed_pixels": [],
        "input_values": [],
        "output_values": [],
    }
    for row, col in diff_indices:
        report["changed_pixels"].append((int(row), int(col)))
        report["input_values"].append(int(grid1[row, col]))
        report["output_values"].append(int(grid2[row, col]))

    return report

task_data = {
    "train": [
        {
            "input": np.array([[0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 1, 0],
                              [0, 0, 0, 0, 0, 0],
                              [0, 1, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0]]),
            "output": np.array([[0, 0, 0, 0, 8, 0],
                               [0, 0, 0, 0, 1, 8],
                               [0, 0, 0, 0, 8, 0],
                               [8, 1, 8, 0, 0, 0],
                               [0, 8, 0, 0, 0, 0]])
        },
        {
            "input": np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 1, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0],
                              [0, 0, 0, 0, 0, 0, 0, 0, 0]]),
            "output": np.array([[0, 0, 0, 0, 8, 0, 0, 0, 0],
                               [0, 0, 0, 0, 8, 0, 0, 0, 0],
                               [0, 0, 0, 0, 8, 0, 0, 0, 0],
                               [0, 0, 0, 0, 1, 0, 0, 0, 0],
                               [0, 0, 0, 0, 8, 0, 0, 0, 0],
                               [0, 0, 0, 0, 8, 0, 0, 0, 0],
                               [0, 0, 0, 0, 8, 0, 0, 0, 0]])
        },
        {
            "input": np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 1, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 1, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0, 0, 0, 0]]),
            "output": np.array([[0, 0, 0, 8, 0, 0, 0, 0, 0],
                               [0, 0, 0, 8, 0, 0, 0, 0, 0],
                               [0, 0, 0, 1, 8, 0, 0, 0, 0],
                               [0, 0, 0, 8, 0, 8, 0, 0, 0],
                               [0, 0, 0, 0, 0, 1, 0, 0, 0],
                               [0, 0, 0, 0, 0, 8, 0, 0, 0],
                               [0, 0, 0, 0, 0, 8, 0, 0, 0]])
        },
    ],
    "test": [
        {
            "input": np.array([[0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 1, 0, 0],
                               [0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0],
                               [0, 0, 1, 0, 0, 0]]),
            "output": np.array([[0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0],
                               [0, 0, 0, 0, 0, 0]
])
        }
    ]
}
for i, example in enumerate(task_data['train']):
    input_grid = example['input']
    expected_output_grid = example['output']
    predicted_output_grid = transform(input_grid)
    comparison_report = compare_grids(expected_output_grid, predicted_output_grid)
    print(f"Train Example {i+1}:")
    print(f"  Comparison Report: {comparison_report}")
    print("---")