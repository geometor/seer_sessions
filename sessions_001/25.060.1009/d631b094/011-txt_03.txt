import numpy as np

def analyze_grid(grid):
    grid = np.array(grid)
    unique, counts = np.unique(grid, return_counts=True)
    color_counts = dict(zip(unique, counts))
    red_count = color_counts.get(2, 0)
    return {
        'shape': grid.shape,
        'red_count': red_count,
    }

examples = [
    {'input': [[8, 5, 1, 8, 6, 1, 3, 8, 6], [5, 2, 2, 5, 8, 3, 5, 4, 2], [3, 5, 3, 7, 5, 9, 1, 8, 7]], 'output': [[2, 2, 2]]},
    {'input': [[6, 5, 8, 6, 4, 5, 4, 4, 1], [5, 4, 7, 2, 9, 7, 8, 2, 4], [8, 1, 3, 7, 6, 8, 3, 8, 6]], 'output': [[2, 2]]},
    {'input': [[6, 5, 8, 6, 4, 5, 4, 4, 1], [5, 4, 7, 5, 9, 7, 8, 5, 4], [8, 1, 3, 7, 6, 8, 3, 8, 6]], 'output': [[6, 5, 8, 6, 4, 5, 4, 4, 1], [5, 4, 7, 5, 9, 7, 8, 5, 4], [8, 1, 3, 7, 6, 8, 3, 8, 6]]}
]

results = []
for i, example in enumerate(examples):
  input_grid = example['input']
  output_grid = example['output']
  results.append({
      'example': i,
      'input': analyze_grid(input_grid),
      'output': analyze_grid(output_grid)
  })
print(results)