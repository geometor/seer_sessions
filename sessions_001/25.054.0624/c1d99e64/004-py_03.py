import numpy as np

def grid_details(grid, grid_name):
    rows, cols = grid.shape
    center_row = rows // 2
    center_col = cols // 2
    unique_colors = np.unique(grid)
    print(f"{grid_name}:")
    print(f"  Dimensions: {rows}x{cols}")
    print(f"  Center Row Index: {center_row}")
    print(f"  Center Column Index: {center_col}")
    print(f"  Unique Colors: {unique_colors}")

    # Count '0' occurrences in each column
    zero_counts_per_column = [(grid[:, col] == 0).sum() for col in range(cols)]
    print(f"  Zero Counts per Column: {zero_counts_per_column}")
    max_zeros_col_index = zero_counts_per_column.index(max(zero_counts_per_column))
    print(f" Column with most 0s: {max_zeros_col_index}")


# Example grids (from the prompt)
example1_input = np.array([
    [1, 0, 0, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1],
    [1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1],
    [1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0],
    [1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 0, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1],
    [1, 0, 0, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0],
    [1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
])
example1_output = np.array([
    [1, 0, 0, 0, 1, 1, 1, 1, 2, 1, 1, 0, 1, 0, 1, 0, 1, 1, 1],
    [1, 0, 1, 0, 1, 1, 1, 1, 2, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1],
    [1, 1, 1, 1, 0, 0, 1, 1, 2, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0],
    [1, 0, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 0, 1, 1, 0, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 0, 1, 0, 1, 1, 0, 2, 0, 0, 1, 0, 1, 1, 0, 0, 0, 1],
    [1, 0, 0, 1, 1, 0, 1, 0, 2, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0],
    [1, 1, 0, 0, 1, 1, 1, 1, 2, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1],
    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
    [1, 1, 1, 0, 0, 1, 1, 1, 2, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1],
    [1, 1, 0, 0, 1, 1, 0, 0, 2, 1, 1, 0, 0, 0, 1, 0, 1, 0, 1],
    [1, 0, 1, 0, 1, 0, 0, 1, 2, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1]
])

example2_input = np.array([
    [8, 8, 8, 8, 0, 8, 8, 8, 8, 8, 0, 0, 8, 8],
    [0, 8, 0, 0, 0, 0, 8, 8, 8, 8, 0, 8, 8, 8],
    [8, 8, 0, 8, 0, 8, 8, 8, 8, 8, 0, 0, 8, 8],
    [8, 0, 8, 8, 0, 8, 8, 0, 0, 8, 0, 8, 8, 0],
    [8, 8, 8, 8, 0, 8, 8, 0, 0, 0, 0, 8, 8, 8],
    [8, 8, 8, 0, 0, 8, 8, 0, 8, 0, 0, 8, 8, 8],
    [8, 0, 8, 8, 0, 8, 8, 8, 8, 8, 0, 0, 0, 8],
    [8, 8, 0, 0, 0, 8, 0, 0, 8, 8, 0, 0, 8, 8],
    [8, 0, 0, 8, 0, 8, 8, 8, 0, 8, 0, 8, 8, 8],
    [8, 8, 0, 8, 0, 8, 8, 8, 8, 8, 0, 0, 8, 0],
    [0, 8, 0, 8, 0, 0, 0, 0, 0, 0, 0, 8, 0, 8],
    [8, 8, 8, 8, 0, 8, 8, 8, 8, 8, 0, 0, 8, 0]
])
example2_output = np.array([
    [8, 8, 8, 8, 2, 8, 8, 8, 8, 8, 2, 0, 8, 8],
    [0, 8, 0, 0, 2, 0, 8, 8, 8, 8, 2, 8, 8, 8],
    [8, 8, 0, 8, 2, 8, 8, 8, 8, 8, 2, 0, 8, 8],
    [8, 0, 8, 8, 2, 8, 8, 0, 0, 8, 2, 8, 8, 0],
    [8, 8, 8, 8, 2, 8, 8, 0, 0, 0, 2, 8, 8, 8],
    [8, 8, 8, 0, 2, 8, 8, 0, 8, 0, 2, 8, 8, 8],
    [8, 0, 8, 8, 2, 8, 8, 8, 8, 8, 2, 0, 0, 8],
    [8, 8, 0, 0, 2, 8, 0, 0, 8, 8, 2, 0, 8, 8],
    [8, 0, 0, 8, 2, 8, 8, 8, 0, 8, 2, 8, 8, 8],
    [8, 8, 0, 8, 2, 8, 8, 8, 8, 8, 2, 0, 8, 0],
    [0, 8, 0, 8, 2, 0, 0, 0, 0, 0, 2, 8, 0, 8],
    [8, 8, 8, 8, 2, 8, 8, 8, 8, 8, 2, 0, 8, 0]
])

example3_input = np.array([
    [3, 0, 3, 3, 3, 3, 3, 0, 3, 3, 3, 0, 3, 0, 3],
    [3, 0, 3, 0, 3, 3, 3, 0, 3, 0, 3, 0, 0, 3, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [3, 0, 0, 3, 0, 0, 3, 3, 0, 3, 0, 3, 3, 0, 0],
    [3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3],
    [3, 0, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 0, 3, 3],
    [0, 0, 3, 0, 3, 0, 3, 0, 3, 0, 0, 3, 3, 3, 0],
    [3, 0, 0, 3, 3, 3, 0, 0, 3, 0, 3, 3, 0, 0, 3],
    [3, 0, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 0, 3],
    [3, 0, 0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0],
    [3, 0, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3],
    [3, 0, 3, 3, 3, 0, 3, 0, 0, 3, 0, 3, 3, 3, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [3, 0, 3, 0, 0, 3, 0, 3, 3, 0, 3, 3, 3, 3, 0],
    [3, 0, 0, 3, 0, 3, 3, 0, 3, 0, 3, 3, 0, 0, 3],
    [3, 0, 0, 3, 3, 3, 3, 3, 0, 3, 3, 0, 0, 3, 3],
    [0, 0, 3, 3, 0, 3, 3, 0, 0, 3, 0, 3, 0, 3, 0]
])

example3_output = np.array([
     [3, 2, 3, 3, 3, 3, 3, 0, 3, 3, 3, 0, 3, 0, 3],
    [3, 2, 3, 0, 3, 3, 3, 0, 3, 0, 3, 0, 0, 3, 0],
    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
    [3, 2, 0, 3, 0, 0, 3, 3, 0, 3, 0, 3, 3, 0, 0],
    [3, 2, 3, 3, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3],
    [3, 2, 3, 3, 3, 3, 3, 3, 0, 0, 3, 3, 0, 3, 3],
    [0, 2, 3, 0, 3, 0, 3, 0, 3, 0, 0, 3, 3, 3, 0],
    [3, 2, 0, 3, 3, 3, 0, 0, 3, 0, 3, 3, 0, 0, 3],
    [3, 2, 3, 3, 3, 3, 3, 0, 3, 3, 3, 3, 3, 0, 3],
    [3, 2, 0, 3, 3, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0],
    [3, 2, 3, 3, 3, 3, 3, 3, 0, 3, 3, 3, 0, 3, 3],
    [3, 2, 3, 3, 3, 0, 3, 0, 0, 3, 0, 3, 3, 3, 0],
    [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],
    [3, 2, 3, 0, 0, 3, 0, 3, 3, 0, 3, 3, 3, 3, 0],
    [3, 2, 0, 3, 0, 3, 3, 0, 3, 0, 3, 3, 0, 0, 3],
    [3, 2, 0, 3, 3, 3, 3, 3, 0, 3, 3, 0, 0, 3, 3],
    [0, 2, 3, 3, 0, 3, 3, 0, 0, 3, 0, 3, 0, 3, 0]
])

grid_details(example1_input, "Example 1 Input")
grid_details(example1_output, "Example 1 Output")
grid_details(example2_input, "Example 2 Input")
grid_details(example2_output, "Example 2 Output")
grid_details(example3_input, "Example 3 Input")
grid_details(example3_output, "Example 3 Output")