task: 016d8bff
examples:
  - id: 1
    objects:
      - color: red
        initial_shape: single pixels and lines, clusters
        action: change color to azure
      - color: gray
        initial_shape: various, connected and isolated, inside and outside
        action: conditionally change color to azure based on neighbors
      - color: black and other
        initial_shape: fills, background
        action: remain unchanged
    transformation_rule: "Red pixels become azure. Gray pixels become azure if they are adjacent to a red/azure pixel AND meet specific adjacency requirements (to be determined)."
  - id: 2 #and so on for 3 & 4
    objects:
      - color: red
        initial_shape: single pixels and lines, clusters
        action: change color to azure
      - color: gray
        initial_shape: various, connected and isolated, inside and outside
        action: conditionally change color to azure based on neighbors
      - color: black and other
        initial_shape: fills, background
        action: remain unchanged
    transformation_rule: "Red pixels become azure. Gray pixels become azure if they are adjacent to a red/azure pixel AND meet specific adjacency requirements (to be determined)."
  - id: 3
    objects:
      - color: red
        initial_shape: single pixels and lines, clusters
        action: change color to azure
      - color: gray
        initial_shape: various, connected and isolated, inside and outside
        action: conditionally change color to azure based on neighbors
      - color: black and other
        initial_shape: fills, background
        action: remain unchanged
    transformation_rule: "Red pixels become azure. Gray pixels become azure if they are adjacent to a red/azure pixel AND meet specific adjacency requirements (to be determined)."
  - id: 4
    objects:
      - color: red
        initial_shape: single pixels and lines, clusters
        action: change color to azure
      - color: gray
        initial_shape: various, connected and isolated, inside and outside
        action: conditionally change color to azure based on neighbors
      - color: black and other
        initial_shape: fills, background
        action: remain unchanged
    transformation_rule: "Red pixels become azure. Gray pixels become azure if they are adjacent to a red/azure pixel AND meet specific adjacency requirements (to be determined)."
