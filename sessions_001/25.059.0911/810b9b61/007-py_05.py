import numpy as np

def describe_grid(grid):
    """Provides a basic description of the grid."""
    rows, cols = grid.shape
    unique_colors = np.unique(grid)
    print(f"Grid Dimensions: {rows}x{cols}")
    print(f"Unique Colors: {unique_colors}")

def compare_grids(input_grid, output_grid):
    """Compares input and output grids, highlighting changes."""
    changes = input_grid != output_grid
    print(f"Number of changed pixels: {np.sum(changes)}")
    print(f"Locations of changed pixels (row, col): {np.argwhere(changes)}")


train = [
    [
        (
            np.array([[0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 1, 1, 1, 0, 0],
                      [0, 0, 0, 1, 0, 1, 0, 0],
                      [0, 0, 0, 1, 1, 1, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0]]),
            np.array([[0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 3, 3, 3, 0, 0],
                      [0, 0, 0, 3, 0, 3, 0, 0],
                      [0, 0, 0, 3, 3, 3, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0]])
        ),
        (
            np.array([[0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 1, 1, 1, 1, 0, 0],
                      [0, 0, 1, 0, 0, 1, 0, 0],
                      [0, 0, 1, 0, 0, 1, 0, 0],
                      [0, 0, 1, 1, 1, 1, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0]]),
            np.array([[0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 3, 3, 3, 3, 0, 0],
                      [0, 0, 3, 0, 0, 3, 0, 0],
                      [0, 0, 3, 0, 0, 3, 0, 0],
                      [0, 0, 3, 3, 3, 3, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0]])
        ),
        (
            np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 1, 1, 1, 0, 0, 0],
                      [0, 0, 0, 1, 2, 1, 0, 0, 0],
                      [0, 0, 0, 1, 1, 1, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0]]),
            np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 3, 3, 3, 0, 0, 0],
                      [0, 0, 0, 3, 2, 3, 0, 0, 0],
                      [0, 0, 0, 3, 3, 3, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0]])
        ),
        (
             np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0],
                       [0, 0, 0, 0, 1, 4, 4, 1, 0, 0, 0, 0],
                       [0, 0, 0, 0, 1, 4, 4, 1, 0, 0, 0, 0],
                       [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]),
             np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0],
                       [0, 0, 0, 0, 3, 4, 4, 3, 0, 0, 0, 0],
                       [0, 0, 0, 0, 3, 4, 4, 3, 0, 0, 0, 0],
                       [0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]])
        )
    ]
]

for i, (input_grid, output_grid) in enumerate(train):
    print(f"--- Example {i+1} ---")
    print("Input Grid:")
    describe_grid(input_grid)
    print("\nOutput Grid:")
    describe_grid(output_grid)
    print("\nComparison:")
    compare_grids(input_grid, output_grid)
    print("\n")