import numpy as np

def find_pixel_by_color(grid, color_value):
    coords = np.where(grid == color_value)
    if len(coords[0]) > 0:
        return [coords[0][0], coords[1][0]]
    return None

def analyze_example(input_grid, output_grid):
    input_grid = np.array(input_grid)
    output_grid = np.array(output_grid)

    red_pixel_input = find_pixel_by_color(input_grid, 2)
    red_pixel_output = find_pixel_by_color(output_grid, 2)
    yellow_pixel_output = find_pixel_by_color(output_grid, 4)

    print(f"Input shape: {input_grid.shape}")
    print(f"Output shape: {output_grid.shape}")
    print(f"Red pixel input position: {red_pixel_input}")
    print(f"Red pixel output position: {red_pixel_output}")
    print(f"Yellow pixel output position: {yellow_pixel_output}")
    print("-" * 20)

examples = [
    ([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2]]),
    ([[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 4], [0, 0, 0, 0, 0, 0, 0, 0, 0, 2]]),
    ([[0, 0, 0, 0, 0, 2, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 4, 0, 0, 0, 0]]),
]

for i, (input_grid, output_grid) in enumerate(examples):
    print(f"Example {i+1}:")
    analyze_example(input_grid, output_grid)
