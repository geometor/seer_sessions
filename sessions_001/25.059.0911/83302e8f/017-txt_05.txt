input_grid = np.array([
    [9, 9, 9, 9, 9, 9, 9, 9, 9],
    [9, 4, 4, 4, 4, 4, 4, 4, 9],
    [9, 4, 9, 9, 9, 9, 9, 4, 9],
    [9, 4, 9, 4, 4, 4, 9, 4, 9],
    [9, 4, 9, 4, 9, 4, 9, 4, 9],
    [9, 4, 9, 4, 4, 4, 9, 4, 9],
    [9, 4, 9, 9, 9, 9, 9, 4, 9],
    [9, 4, 4, 4, 4, 4, 4, 4, 9],
    [9, 9, 9, 9, 9, 9, 9, 9, 9]
])

expected_output_grid = np.array([
    [9, 9, 9, 9, 9, 9, 9, 9, 9],
    [9, 4, 4, 4, 4, 4, 4, 4, 9],
    [9, 4, 9, 9, 9, 9, 9, 4, 9],
    [9, 4, 9, 4, 4, 4, 9, 4, 9],
    [9, 4, 9, 4, 9, 4, 9, 4, 9],
    [9, 4, 9, 4, 4, 4, 9, 4, 9],
    [9, 4, 9, 9, 9, 9, 9, 4, 9],
    [9, 4, 4, 4, 4, 4, 4, 4, 9],
    [9, 9, 9, 9, 9, 9, 9, 9, 9]
])

actual_output_grid = transform(input_grid)
assumed_actual_output_grid = np.array([
    [9, 9, 9, 9, 9, 9, 9, 9, 9],
    [9, 4, 4, 4, 4, 4, 4, 4, 9],
    [9, 4, 9, 9, 9, 9, 9, 4, 9],
    [9, 4, 9, 4, 4, 4, 9, 4, 9],
    [9, 4, 9, 4, 9, 4, 9, 4, 9],
    [9, 4, 9, 4, 4, 4, 9, 4, 9],
    [9, 4, 9, 9, 9, 9, 9, 4, 9],
    [9, 4, 4, 4, 4, 4, 4, 4, 9],
    [9, 9, 9, 9, 9, 9, 9, 9, 9]
])

result = np.array_equal(expected_output_grid, assumed_actual_output_grid) # should be true
print(check_neighbors(input_grid, 3, 3))
# Expected = [9, 4, 9, 4]