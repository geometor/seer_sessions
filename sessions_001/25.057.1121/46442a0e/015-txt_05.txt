import numpy as np

def describe_grid(grid):
    return {
        'shape': grid.shape,
        'elements': grid.flatten().tolist()
    }

def compare_grids(grid1, grid2):

    result = {}
    if grid1.shape == grid2.shape:
      result['same_shape'] = True
      result['element_wise_equality'] = (grid1 == grid2).all()
    else:
      result['same_shape'] = False
      result['element_wise_equality'] = False

    return result
examples = [
    {
        "input": [[6, 9, 9], [6, 9, 9], [6, 9, 9]],
        "output": [[6, 9, 9, 6, 6, 6], [6, 9, 9, 9, 9, 9], [6, 9, 9, 9, 9, 9], [9, 9, 9, 9, 9, 6], [6, 6, 6, 9, 9, 6], [6, 6, 6, 6, 6, 6]]
    },
    {
        "input": [[2, 2, 2], [2, 4, 2], [2, 2, 2]],
        "output": [[2, 2, 2, 2, 2, 2], [2, 4, 4, 4, 4, 2], [2, 4, 4, 4, 4, 2], [2, 4, 4, 4, 4, 2], [2, 2, 2, 2, 2, 2], [2, 2, 2, 2, 2, 2]]
    },
    {
        "input": [[8, 0, 8, 8, 8], [8, 0, 8, 8, 8], [8, 8, 8, 8, 0]],
        "output": [[8, 0, 8, 8, 8, 8, 8], [8, 0, 8, 8, 8, 8, 8], [8, 8, 8, 8, 8, 0, 8], [8, 8, 8, 8, 8, 8, 8], [8, 8, 8, 0, 8, 8, 8]]
    }
]

report = []

for i, example in enumerate(examples):
    input_grid = np.array(example['input'])
    output_grid = np.array(example['output'])
    predicted_output = transform(input_grid)  # Using the provided transform function.

    example_report = {
        'example_index': i,
        'input': describe_grid(input_grid),
        'expected_output': describe_grid(output_grid),
        'predicted_output': describe_grid(predicted_output),
        'comparison_with_expected': compare_grids(output_grid, predicted_output),
    }
    report.append(example_report)

print(report)