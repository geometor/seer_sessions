examples:
  - example_id: 1
    input_object:
      shape: rectangle
      dimensions: 2x2
      colors: [4, 2]
      top_left_corner: [4,2]
    output_object:
      shape: spiral_filled_rectangle
      dimensions: 9x9?  #estimate - appears to copy components to a 3x3 array, filling a spiral from top-left
      dominant_color: 4
      start_corner_color: 4
      fill_pattern: spiral
  - example_id: 2
    input_object:
      shape: L_shape
      dimensions: 2x2
      colors: [3, 2]
      top_left_corner: [1,2]
    output_object:
      shape: spiral_filled_rectangle
      dimensions: 9x9? #estimate
      dominant_color: 3
      start_corner_color: 3
      fill_pattern: spiral
  - example_id: 3
    input_object:
      shape: flipped_L
      dimensions: 2x2
      colors: [6, 2]
      top_left_corner: [3, 3]
    output_object:
      shape: spiral_filled_rectangle
      dimensions: 9 x 9
      dominant_color: 6
      start_corner_color: 6
      fill_pattern: spiral
  - example_id: 4
    input_object:
      shape: rectangle
      dimensions: 2x2
      colors: [2, 7]
      top_left_corner: [3, 3]
    output_object:
      shape: spiral_filled_rectangle
      dimensions: 9 x 9
      dominant_color: 7 #visually, color 7 is placed at [0,0] and is therefore copied first, so is dominant
      start_corner_color: 7
      fill_pattern: spiral

overall_transformation:
  type: object_replication_and_spiral_fill
  steps:
    - identify_input_object
    - determine_corner_color #color of top-left pixel in input object
    - determine_replication_dimensions # likely based on total number of pixels in output
    - replicate_input_object #copy the entire input object shape
    - spiral_fill #recursively copy the object, rotating it, placing it at next location of the fill
    - determine_output_size #the entire object expands to a new array - the shape is square, the size is not determined by the original area