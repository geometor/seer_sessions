{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1987,
        "candidates": 382,
        "total": 2369,
        "cached": 0
      },
      "response_time": 18.998937
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2231,
        "candidates": 374,
        "total": 2605,
        "cached": 0
      },
      "response_time": 4.739305
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2777,
        "candidates": 727,
        "total": 3504,
        "cached": 0
      },
      "response_time": 9.15793
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3301,
        "candidates": 540,
        "total": 3841,
        "cached": 0
      },
      "response_time": 5.582038
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 3030,
        "candidates": 1001,
        "total": 4031,
        "cached": 0
      },
      "response_time": 12.085492
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3827,
        "candidates": 580,
        "total": 4407,
        "cached": 0
      },
      "response_time": 4.746955
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 2009,
        "candidates": 458,
        "total": 2467,
        "cached": 0
      },
      "response_time": 49.938369
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2329,
        "candidates": 516,
        "total": 2845,
        "cached": 0
      },
      "response_time": 5.79065
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2942,
        "candidates": 3189,
        "total": 6131,
        "cached": 0
      },
      "response_time": 28.487864
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3521,
        "candidates": 1210,
        "total": 4731,
        "cached": 0
      },
      "response_time": 15.430939
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 4526,
        "candidates": 566,
        "total": 5092,
        "cached": 0
      },
      "response_time": 5.730168
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 5926,
        "candidates": 801,
        "total": 6727,
        "cached": 0
      },
      "response_time": 7.945445
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 2 2 2 0 0 0 0 0\n0 0 0 0 0 2 0 0 0 0 0 0\n0 0 0 2 2 2 0 0 0 0 0 0\n0 0 0 2 0 2 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 2 2 2\n0 0 2 0\n2 2 2 0\n2 0 2 0",
        "transformed_output": "2 2 0 0\n0 2 0 2\n2 2 2 2\n0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 0 0 0 0\n0 0 1 1 1 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "1 0 0\n1 1 0\n0 1 0\n1 1 1\n0 0 1",
        "transformed_output": "",
        "match": "ERROR: unsupported operand type(s) for +: 'NoneType' and 'int'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0 8 0\n8 8 8 8 0\n0 0 0 8 8",
        "transformed_output": "",
        "match": "ERROR: unsupported operand type(s) for +: 'NoneType' and 'int'",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 2 2 2 0 0 0 0 0\n0 0 0 0 0 2 0 0 0 0 0 0\n0 0 0 2 2 2 0 0 0 0 0 0\n0 0 0 2 0 2 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 2 2 2\n0 0 2 0\n2 2 2 0\n2 0 2 0",
        "transformed_output": "2 2 0 0\n0 2 0 2\n2 2 2 2\n0 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 0 0 0 0\n0 0 1 1 1 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "1 0 0\n1 1 0\n0 1 0\n1 1 1\n0 0 1",
        "transformed_output": "0 1 0 1 1\n0 1 1 1 0\n1 1 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0 8 0\n8 8 8 8 0\n0 0 0 8 8",
        "transformed_output": "0 8 0\n0 8 8\n0 8 0\n8 8 8\n8 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 2 2 2 0 0 0 0 0\n0 0 0 0 0 2 0 0 0 0 0 0\n0 0 0 2 2 2 0 0 0 0 0 0\n0 0 0 2 0 2 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 2 2 2\n0 0 2 0\n2 2 2 0\n2 0 2 0",
        "transformed_output": "2 0 0 0\n2 2 2 2\n2 0 2 0\n0 0 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 0 0 0 0\n0 0 1 1 1 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "1 0 0\n1 1 0\n0 1 0\n1 1 1\n0 0 1",
        "transformed_output": "0 0 0 1 1\n0 1 1 1 0\n1 1 0 1 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0 8 0\n8 8 8 8 0\n0 0 0 8 8",
        "transformed_output": "0 0 8\n8 8 8\n0 8 0\n8 8 0\n0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 2 2 2 0 0 0 0 0\n0 0 0 0 0 2 0 0 0 0 0 0\n0 0 0 2 2 2 0 0 0 0 0 0\n0 0 0 2 0 2 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 2 2 2\n0 0 2 0\n2 2 2 0\n2 0 2 0",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 0 0 0 0\n0 0 1 1 1 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "1 0 0\n1 1 0\n0 1 0\n1 1 1\n0 0 1",
        "transformed_output": "1 0 0\n1 1 0\n0 1 0\n1 1 1\n0 0 1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0 8 0\n8 8 8 8 0\n0 0 0 8 8",
        "transformed_output": "",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "009-py_05-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_06-test": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 6 6 6 6 0 0 0 0\n0 0 0 0 6 0 0 0 0 0 0 0\n0 0 6 0 6 0 0 0 0 0 0 0\n0 0 6 6 6 6 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 6 6 6 6\n0 0 6 0 0 0\n6 0 6 0 0 0\n6 6 6 6 0 0",
        "transformed_output": "0 0 6 6 6 6\n0 0 6 0 0 0\n6 0 6 0 0 0\n6 6 6 6 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "011-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 2 2 2 0 0 0 0 0\n0 0 0 0 0 2 0 0 0 0 0 0\n0 0 0 2 2 2 0 0 0 0 0 0\n0 0 0 2 0 2 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 2 2 2\n0 0 2 0\n2 2 2 0\n2 0 2 0",
        "transformed_output": "0 2 2 2\n0 0 2 0\n2 2 2 0\n2 0 2 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 0 0 0 0\n0 0 1 1 1 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "1 0 0\n1 1 0\n0 1 0\n1 1 1\n0 0 1",
        "transformed_output": "1 0 0\n1 1 0\n0 1 0\n1 1 1\n0 0 1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0 8 0\n8 8 8 8 0\n0 0 0 8 8",
        "transformed_output": "0 8 0 8 0\n8 8 8 8 0\n0 0 0 8 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "012-py_07-test": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 6 6 6 6 0 0 0 0\n0 0 0 0 6 0 0 0 0 0 0 0\n0 0 6 0 6 0 0 0 0 0 0 0\n0 0 6 6 6 6 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 0 6 6 6 6\n0 0 6 0 0 0\n6 0 6 0 0 0\n6 6 6 6 0 0",
        "transformed_output": "0 0 6 6 6 6\n0 0 6 0 0 0\n6 0 6 0 0 0\n6 6 6 6 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 2 2 2 0 0 0 0 0\n0 0 0 0 0 2 0 0 0 0 0 0\n0 0 0 2 2 2 0 0 0 0 0 0\n0 0 0 2 0 2 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 2 2 2\n0 0 2 0\n2 2 2 0\n2 0 2 0",
        "transformed_output": "0 2 2 2\n0 0 2 0\n2 2 2 0\n2 0 2 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 1 0 0 0 0 0 0 0 0 0\n0 0 1 1 0 0 0 0 0 0 0 0\n0 0 0 1 0 0 0 0 0 0 0 0\n0 0 1 1 1 0 0 0 0 0 0 0\n0 0 0 0 1 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "1 0 0\n1 1 0\n0 1 0\n1 1 1\n0 0 1",
        "transformed_output": "1 0 0\n1 1 0\n0 1 0\n1 1 1\n0 0 1",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 8 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0 0 0\n0 0 0 0 0 0 8 8 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 8 0 8 0\n8 8 8 8 0\n0 0 0 8 8",
        "transformed_output": "0 8 0 8 0\n8 8 8 8 0\n0 0 0 8 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ]
  },
  "best_train_results": {
    "passed": 3,
    "total": 3
  },
  "best_test_results": {
    "passed": 1,
    "total": 1
  },
  "test_solved": true
}