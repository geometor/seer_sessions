import numpy as np

def analyze_results(examples, transform_function):
    results = []
    for idx, (input_grid, expected_output) in enumerate(examples):
        input_grid = np.array(input_grid)
        expected_output = np.array(expected_output)
        actual_output = transform_function(input_grid)
        is_correct = np.array_equal(actual_output, expected_output)
        results.append({
            "example_index": idx,
            "input_shape": input_grid.shape,
            "output_shape": actual_output.shape,
            "expected_output_shape": expected_output.shape,
            "is_correct": is_correct,
            "output_comparison": {
              "row_wise": (actual_output == expected_output).tolist(),
              "element_wise": (actual_output == expected_output).flatten().tolist()
            }
        })
    return results

#the examples will be provided in the next turn
#for now we will assume that the examples are available and named `task_examples`
#and the current transform function is called `transform`

#example use assuming we have examples in `task_examples`
#analysis_results = analyze_results(task_examples, transform)
#print(analysis_results)