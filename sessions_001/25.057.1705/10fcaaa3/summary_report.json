{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1797,
        "candidates": 582,
        "total": 2379,
        "cached": 0
      },
      "response_time": 9.28377
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2240,
        "candidates": 563,
        "total": 2803,
        "cached": 0
      },
      "response_time": 7.006783
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1814,
        "candidates": 2991,
        "total": 4805,
        "cached": 0
      },
      "response_time": 31.98595
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2701,
        "candidates": 1331,
        "total": 4032,
        "cached": 0
      },
      "response_time": 17.172155
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 3830,
        "candidates": 459,
        "total": 4289,
        "cached": 0
      },
      "response_time": 5.257771
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4604,
        "candidates": 435,
        "total": 5039,
        "cached": 0
      },
      "response_time": 4.524959
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 727,
        "total": 2564,
        "cached": 0
      },
      "response_time": 11.01835
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2426,
        "candidates": 605,
        "total": 3031,
        "cached": 0
      },
      "response_time": 6.689535
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1856,
        "candidates": 2403,
        "total": 4259,
        "cached": 0
      },
      "response_time": 26.07412
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2175,
        "candidates": 970,
        "total": 3145,
        "cached": 0
      },
      "response_time": 14.22532
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2939,
        "candidates": 495,
        "total": 3434,
        "cached": 0
      },
      "response_time": 5.153868
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4057,
        "candidates": 557,
        "total": 4614,
        "cached": 0
      },
      "response_time": 5.721722
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1867,
        "candidates": 587,
        "total": 2454,
        "cached": 0
      },
      "response_time": 10.410398
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2316,
        "candidates": 514,
        "total": 2830,
        "cached": 0
      },
      "response_time": 6.496424
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1765,
        "candidates": 1511,
        "total": 3276,
        "cached": 0
      },
      "response_time": 18.096369
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 1642,
        "candidates": 2573,
        "total": 4215,
        "cached": 0
      },
      "response_time": 24.212579
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 4013,
        "candidates": 726,
        "total": 4739,
        "cached": 0
      },
      "response_time": 7.380425
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3072,
        "candidates": 356,
        "total": 3428,
        "cached": 0
      },
      "response_time": 3.679742
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 564,
        "total": 2441,
        "cached": 0
      },
      "response_time": 8.763133
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2302,
        "candidates": 464,
        "total": 2766,
        "cached": 0
      },
      "response_time": 5.362181
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1714,
        "candidates": 1555,
        "total": 3269,
        "cached": 0
      },
      "response_time": 15.438674
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 3068,
        "candidates": 494,
        "total": 3562,
        "cached": 0
      },
      "response_time": 4.939651
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1744,
        "candidates": 1994,
        "total": 3738,
        "cached": 0
      },
      "response_time": 19.653579
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3537,
        "candidates": 519,
        "total": 4056,
        "cached": 0
      },
      "response_time": 4.951994
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 5 5 5 0 0 0 0 0\n0 0 5 5 5 0 0 0 0 0\n8 0 8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0 8 0\n0 0 0 0 0 0 6 0 0 0\n0 0 0 0 0 0 6 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 6 0 0 0 0 0 0\n0 0 0 6 0 0 0 0 0 0\n8 0 8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0 8\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 4 0 0 0\n0 0 0 4 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 0\n4 0 0 0 0 0 0\n8 0 8 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "003-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 5 5 5 0 0 0 0 0\n0 0 5 5 5 0 0 0 0 0\n8 0 8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0 8 0\n0 0 0 0 0 0 6 0 0 0\n0 0 0 0 0 0 6 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 6 0 0 0 0 0 0\n0 0 0 6 0 0 0 0 0 0\n8 0 8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0 8\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 4 0 0 0\n0 0 0 4 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 0\n4 0 0 0 0 0 0\n8 0 8 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 5 5 5 0 0 0 0 0\n0 0 5 5 5 0 0 0 0 0\n8 0 8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0 8 0\n0 0 0 0 0 0 6 0 0 0\n0 0 0 0 0 0 6 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 6 0 0 0 0 0 0\n0 0 0 6 0 0 0 0 0 0\n8 0 8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0 8\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 4 0 0 0\n0 0 0 4 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n4 0 0 0 0 0 0\n4 0 0 0 0 0 0\n8 0 8 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0 0\n0 0 0 2 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8\n0 0 0 0 0\n0 0 0 0 0\n0 5 5 0 0\n0 5 5 0 0\n8 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0\n0 0 6 0\n0 0 6 0\n0 0 0 0\n0 0 0 0\n0 6 0 0\n0 6 0 0\n8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8\n0 0 0\n0 0 0\n0 4 0\n0 4 0\n0 0 0\n0 0 0\n0 0 0\n0 0 0\n4 0 0\n4 0 0\n8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0\n0 0 0 0\n0 0 0 0\n0 2 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n8 0 8 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "0 8 0 8 6 8 0 8\n8 8 8 8 8 0 8 8\n0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 6 8 0 8 0 8\n8 8 8 0 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 27,
        "percent_correct": 43.75
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "0 8 0 8 0 8\n8 8 8 8 8 8\n0 8 0 8 0 8\n8 8 8 8 8 8\n0 8 0 8 0 8\n8 8 8 8 8 8\n0 8 0 8 0 8\n8 8 8 8 8 8\n0 8 0 8 0 8\n8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 35,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 64,
        "percent_correct": 0.0
      }
    ],
    "009-py_06-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 5 8 0 8 0 8\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 26,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "0 8 0 8 6 8 0 8\n8 8 8 8 8 8 8 8\n0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 6 8 0 8 0 8\n0 8 6 8 0 8 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 23,
        "percent_correct": 52.083333333333336
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "0 8 0 8 0 8\n8 8 8 8 8 8\n0 8 4 8 0 8\n8 8 8 8 8 8\n0 8 0 8 0 8\n8 8 8 8 8 8\n0 8 0 8 0 8\n8 8 8 8 8 8\n4 8 0 8 0 8\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 2 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 0 8 0 8 0 8\n8 8 8 8 8 8 8 8\n0 8 0 8 0 8 0 8\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 56,
        "percent_correct": 12.5
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 62.5
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 50.0
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0\n0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 46.666666666666664
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 68.75
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 4 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 4 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 35,
        "percent_correct": 41.66666666666667
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 75.0
      }
    ],
    "015-py_10-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "016-py_11-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "017-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8\n0 8 0 8 0\n8 0 8 0 8\n0 8 0 8 0\n8 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 4 8 0 8 0 8\n4 4 4 8 0 8 0\n8 4 8 0 8 0 8\n4 8 0 8 0 8 0\n4 4 8 0 8 0 8\n4 8 0 8 0 8 0\n8 0 8 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8\n0 8 0 8 0 8 0\n8 0 8 0 8 0 8\n0 8 0 8 0 8 0\n8 0 8 0 8 0 8\n0 8 0 8 0 8 0\n8 0 8 0 8 0 8",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 4 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 4 0 8 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 75.0
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 2 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 2 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 71.875
      }
    ],
    "022-py_15-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 75.0
      }
    ],
    "023-py_16-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "024-py_17-train": [
      {
        "example": 1,
        "input": "0 0 0 0\n0 5 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0\n8 0 8 0 8 0 8 0\n0 5 0 0 0 5 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 0 6 0\n0 0 0 0\n0 6 0 0",
        "expected_output": "0 0 6 0 0 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 8 0 6 0 8\n8 0 6 0 8 0 6 0\n8 8 8 8 8 8 8 8\n0 6 0 0 0 6 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 32,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0\n0 4 0\n0 0 0\n0 0 0\n4 0 0",
        "expected_output": "8 0 8 8 0 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0\n8 8 8 8 8 8\n0 4 0 0 4 0\n8 0 8 8 0 8\n0 8 8 0 8 0\n4 0 0 4 0 0",
        "transformed_output": "8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8\n8 0 8 0 8 0\n0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 43.333333333333336
      },
      {
        "example": 4,
        "input": "0 0 0 0\n0 2 0 0\n0 0 0 0\n0 0 0 0",
        "expected_output": "8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0\n8 0 8 0 8 0 8 0\n0 2 0 0 0 2 0 0\n8 0 8 0 8 0 8 0\n0 0 0 0 0 0 0 0",
        "transformed_output": "8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 2 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8\n8 0 8 0 8 0 8 0\n0 8 0 8 0 8 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 73.4375
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}