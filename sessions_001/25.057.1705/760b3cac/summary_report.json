{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1933,
        "candidates": 355,
        "total": 2288,
        "cached": 0
      },
      "response_time": 6.084418
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2149,
        "candidates": 621,
        "total": 2770,
        "cached": 0
      },
      "response_time": 6.906688
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1872,
        "candidates": 1427,
        "total": 3299,
        "cached": 0
      },
      "response_time": 17.400675
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 1609,
        "candidates": 1008,
        "total": 2617,
        "cached": 0
      },
      "response_time": 14.399295
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2413,
        "candidates": 789,
        "total": 3202,
        "cached": 0
      },
      "response_time": 8.567679
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3096,
        "candidates": 709,
        "total": 3805,
        "cached": 0
      },
      "response_time": 7.20558
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1933,
        "candidates": 519,
        "total": 2452,
        "cached": 0
      },
      "response_time": 6.795432
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2314,
        "candidates": 634,
        "total": 2948,
        "cached": 0
      },
      "response_time": 7.827649
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1885,
        "candidates": 4477,
        "total": 6362,
        "cached": 0
      },
      "response_time": 41.77397
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 4519,
        "candidates": 881,
        "total": 5400,
        "cached": 0
      },
      "response_time": 9.422328
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 5195,
        "candidates": 177,
        "total": 5372,
        "cached": 0
      },
      "response_time": 2.484684
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 6161,
        "candidates": 753,
        "total": 6914,
        "cached": 0
      },
      "response_time": 6.592931
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1933,
        "candidates": 550,
        "total": 2483,
        "cached": 0
      },
      "response_time": 7.254638
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2345,
        "candidates": 378,
        "total": 2723,
        "cached": 0
      },
      "response_time": 4.754364
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1629,
        "candidates": 4920,
        "total": 6549,
        "cached": 0
      },
      "response_time": 49.180689
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3578,
        "candidates": 1466,
        "total": 5044,
        "cached": 0
      },
      "response_time": 20.565634
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 4839,
        "candidates": 1532,
        "total": 6371,
        "cached": 0
      },
      "response_time": 12.405123
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 6339,
        "candidates": 1116,
        "total": 7455,
        "cached": 0
      },
      "response_time": 11.448135
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 85.18518518518519
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 87.03703703703704
      }
    ],
    "003-py_02-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8\n0 0 0 0 8 8\n0 0 0 0 8 8\n0 0 0 4 4 4\n0 0 0 4 4 4\n0 0 0 4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8\n0 0 0 8 8 8\n0 0 0 8 8 8\n0 0 0 4 4 4\n0 0 0 4 4 4\n0 0 0 4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 0 0\n0 0 0 0 8 8\n0 0 0 8 0 0\n0 0 0 4 4 4\n0 0 0 4 4 4\n0 0 0 4 4 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 85.18518518518519
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 87.03703703703704
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 8 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 8 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 87.03703703703704
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 8 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 90.74074074074075
      }
    ],
    "009-py_06-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 8 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 8 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 87.03703703703704
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 8 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 90.74074074074075
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 68.51851851851852
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 75.92592592592592
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8\n8 8 8 8 8 8 8 8 8\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 64.81481481481481
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 87.03703703703704
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 83.33333333333334
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 92.5925925925926
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 8 8 8 8 0 0 0 0\n0 0 8 8 8 0 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 75.92592592592592
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 8 8 8 8 0 0 0 0\n0 8 8 8 8 0 0 0 0\n0 8 8 8 0 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 68.51851851851852
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 8 8 0 0 0 0 0 0\n0 0 8 8 8 0 0 0 0\n0 8 8 0 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 83.33333333333334
      }
    ],
    "015-py_10-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "017-py_11-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 4 0 8 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 79.62962962962963
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0\n0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 75.92592592592592
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 4 8 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 77.77777777777779
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "8 0 8 8 0 8 0 0 0\n8 8 0 0 8 8 0 0 0\n8 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 0 8 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 0 0 8 0 8 0 0 0\n0 0 0 8 8 8 0 0 0\n0 0 0 8 8 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 0 8 0 8 8 0 8\n0 0 0 8 8 8 8 8 8\n0 0 0 8 8 0 0 8 8\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 0 8 0 0 0\n0 0 0 0 0 8 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 4 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 0 8 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "expected_output": "0 0 8 8 0 0 0 0 0\n8 8 0 0 8 8 0 0 0\n0 0 8 8 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "transformed_output": "0 0 0 0 0 0 0 0 0\n0 0 0 0 8 8 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 4 0 0 0 0 0\n0 0 0 4 4 4 0 0 0\n0 0 0 0 4 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 88.88888888888889
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}