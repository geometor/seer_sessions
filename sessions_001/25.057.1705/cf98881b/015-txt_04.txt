import numpy as np

def get_grid_info(grid):
    """Returns grid dimensions and unique pixel values."""
    return grid.shape, np.unique(grid)

task_data = {
    "train": [
    {
            "input": [[4, 4, 4, 4, 4], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4], [1, 4, 4, 4, 4]],
            "output": [[1, 4, 4, 4], [9, 4, 4, 4], [9, 4, 4, 4], [4, 4, 4, 4]],
        },
        {
            "input": [[4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4, 4], [0, 4, 4, 4, 4, 4, 4]],
            "output": [[0, 4, 4, 4], [9, 4, 4, 4], [9, 4, 4, 4], [4, 4, 4, 4]],
        },
        {
            "input": [[4, 4, 4, 4], [5, 4, 4, 4], [4, 4, 4, 4], [4, 4, 4, 4]],
            "output": [[5, 4, 4, 4], [9, 4, 4, 4], [9, 4, 4, 4], [4, 4, 4, 4]],
        },
        {
            "input": [[6, 4, 4, 4, 4], [4, 4, 4, 4, 4], [4, 4, 4, 4, 4], [3, 4, 4, 4, 4]],
            "output": [[6, 4, 4, 4], [3, 4, 4, 4], [9, 4, 4, 4], [4, 4, 4, 4]],
        },
        {
            "input": [[2, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4], [4, 4, 4, 4, 4, 4], [8, 4, 4, 4, 4, 4]],
            "output": [[2, 4, 4, 4], [8, 4, 4, 4], [9, 4, 4, 4], [4, 4, 4, 4]],
        }
]
}
results = {}

for i, example in enumerate(task_data["train"]):
        input_grid = np.array(example['input'])
        output_grid = np.array(example['output'])
        input_shape, input_values = get_grid_info(input_grid)
        output_shape, output_values = get_grid_info(output_grid)
        
        first_col_in = input_grid[:,0]
        first_col_out = output_grid[:,0]
        
        match = ""
        
        if len(first_col_in) >= 4:
            if np.array_equal(first_col_in[:4], output_grid[:, 0]):
                match = 'Top 4 match'
            else:
                diff = first_col_in[:4] - output_grid[:,0]
                diff_str_list = [str(x) for x in diff]
                match = "Differences: " + ", ".join(diff_str_list)
        else: 
            if np.array_equal(first_col_in, output_grid[:len(first_col_in), 0]):
                match = 'Input shorter than 4, matches section'
            else:
                diff = first_col_in - output_grid[:len(first_col_in),0]
                diff_str_list = [str(x) for x in diff]
                match = "Differences short: " + ", ".join(diff_str_list)
        
        results[i+1] = {
            'input_shape': input_shape,
            'input_values': input_values.tolist(),
            'output_shape': output_shape,
            'output_values': output_values.tolist(),
            'first_column_match': match
        }
print(results)