{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1837,
        "candidates": 466,
        "total": 2303,
        "cached": 0
      },
      "response_time": 7.420696
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2164,
        "candidates": 570,
        "total": 2734,
        "cached": 0
      },
      "response_time": 6.084774
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1817,
        "candidates": 4001,
        "total": 5818,
        "cached": 0
      },
      "response_time": 36.68461
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2809,
        "candidates": 3107,
        "total": 5916,
        "cached": 0
      },
      "response_time": 27.436699
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 5690,
        "candidates": 472,
        "total": 6162,
        "cached": 0
      },
      "response_time": 5.106635
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 5589,
        "candidates": 578,
        "total": 6167,
        "cached": 0
      },
      "response_time": 7.905531
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1897,
        "candidates": 519,
        "total": 2416,
        "cached": 0
      },
      "response_time": 8.333351
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2272,
        "candidates": 567,
        "total": 2839,
        "cached": 0
      },
      "response_time": 5.78332
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1812,
        "candidates": 1449,
        "total": 3261,
        "cached": 0
      },
      "response_time": 15.505313
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2467,
        "candidates": 2268,
        "total": 4735,
        "cached": 0
      },
      "response_time": 21.723937
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 4528,
        "candidates": 250,
        "total": 4778,
        "cached": 0
      },
      "response_time": 3.378806
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3058,
        "candidates": 314,
        "total": 3372,
        "cached": 0
      },
      "response_time": 3.918831
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1933,
        "candidates": 482,
        "total": 2415,
        "cached": 0
      },
      "response_time": 7.495251
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2278,
        "candidates": 298,
        "total": 2576,
        "cached": 0
      },
      "response_time": 4.132091
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1549,
        "candidates": 1138,
        "total": 2687,
        "cached": 0
      },
      "response_time": 15.608207
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2484,
        "candidates": 400,
        "total": 2884,
        "cached": 0
      },
      "response_time": 4.329875
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1652,
        "candidates": 1544,
        "total": 3196,
        "cached": 0
      },
      "response_time": 42.532529
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2990,
        "candidates": 503,
        "total": 3493,
        "cached": 0
      },
      "response_time": 5.557756
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 61.111111111111114
      }
    ],
    "003-py_02-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 61.111111111111114
      }
    ],
    "004-py_03-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 61.111111111111114
      }
    ],
    "005-py_04-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 61.111111111111114
      }
    ],
    "006-py_05-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 61.111111111111114
      }
    ],
    "008-py_06-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 61.111111111111114
      }
    ],
    "009-py_07-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "010-py_08-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 0 2 4 0 0 2 4\n4 2 4 2 4 2 4 2 4 2\n0 0 2 4 0 0 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 0 2 4 0 0 2 4 0 0 2 4 0\n0 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n4 0 2 4 0 0 2 4 0 0 2 4 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 64.44444444444444
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 0 2 4 0 0 2 4 0 0 2 4 0 0 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 0 2 4 0 0 2 4 0 0 2 4 0 0 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 66.66666666666666
      }
    ],
    "011-py_09-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 0 2 4 0 0 2 4\n4 2 4 2 4 2 4 2 4 2\n0 0 2 4 0 0 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 0 2 4 0 0 2 4 0 0 2 4 0\n0 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n4 0 2 4 0 0 2 4 0 0 2 4 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 64.44444444444444
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 0 2 4 0 0 2 4 0 0 2 4 0 0 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 0 2 4 0 0 2 4 0 0 2 4 0 0 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 66.66666666666666
      }
    ],
    "012-py_10-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 0 2 4 0 0 2 4\n0 2 4 2 4 2 4 2 4 2\n0 0 2 4 0 0 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 0 2 4 0 0 2 4 0 0 2 4 0\n0 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 0 2 4 0 0 2 4 0 0 2 4 0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 0 2 4 0 0 2 4 0 0 2 4 0 0 2 4\n0 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 0 2 4 0 0 2 4 0 0 2 4 0 0 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 64.81481481481481
      }
    ],
    "014-py_11-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 63.33333333333333
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 62.22222222222222
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n0 4 2 4 0 4 2 4 0 4 2 4 0 4 2 4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 62.96296296296296
      }
    ],
    "016-py_12-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4\n4 2 4 2 4 2 4 2 4 2\n4 4 2 4 4 4 2 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 56.666666666666664
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n4 4 2 4 4 4 2 4 4 4 2 4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 57.77777777777777
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 55.55555555555556
      }
    ],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0\n4 2 0 2 0 2 4 2 0 2\n4 4 2 0 0 0 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4\n4 2 4 2 4 2 4 2 4 2\n4 4 2 4 4 4 2 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 56.666666666666664
      },
      {
        "example": 2,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4\n4 4 2 4 4 4 2 4 4 4 2 4 4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 57.77777777777777
      },
      {
        "example": 3,
        "input": "2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0\n0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2 0 2\n0 0 2 0 0 0 2 0 0 0 2 0 0 0 2 0 0 0",
        "expected_output": "2 0 0 0 2 4 4 4 2 0 0 0 2 0 0 0 2 4\n4 2 0 2 0 2 4 2 0 2 0 2 4 2 0 2 0 2\n4 4 2 0 0 0 2 0 0 0 2 4 4 4 2 0 0 0",
        "transformed_output": "2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 4\n4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2 4 2\n4 4 2 4 4 4 2 4 4 4 2 4 4 4 2 4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 55.55555555555556
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}