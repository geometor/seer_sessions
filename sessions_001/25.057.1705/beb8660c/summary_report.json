{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1997,
        "candidates": 493,
        "total": 2490,
        "cached": 0
      },
      "response_time": 8.091179
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2354,
        "candidates": 395,
        "total": 2749,
        "cached": 0
      },
      "response_time": 4.470894
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1646,
        "candidates": 1468,
        "total": 3114,
        "cached": 0
      },
      "response_time": 16.925241
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2909,
        "candidates": 487,
        "total": 3396,
        "cached": 0
      },
      "response_time": 10.370765
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1738,
        "candidates": 2840,
        "total": 4578,
        "cached": 0
      },
      "response_time": 27.904013
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 4374,
        "candidates": 752,
        "total": 5126,
        "cached": 0
      },
      "response_time": 7.789284
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1829,
        "candidates": 410,
        "total": 2239,
        "cached": 0
      },
      "response_time": 7.584767
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2098,
        "candidates": 579,
        "total": 2677,
        "cached": 0
      },
      "response_time": 6.049592
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1830,
        "candidates": 2942,
        "total": 4772,
        "cached": 0
      },
      "response_time": 27.022262
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3357,
        "candidates": 3049,
        "total": 6406,
        "cached": 0
      },
      "response_time": 29.742563
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 6199,
        "candidates": 199,
        "total": 6398,
        "cached": 0
      },
      "response_time": 2.777451
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4569,
        "candidates": 690,
        "total": 5259,
        "cached": 0
      },
      "response_time": 5.792166
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 604,
        "total": 2357,
        "cached": 0
      },
      "response_time": 8.53029
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2218,
        "candidates": 176,
        "total": 2394,
        "cached": 0
      },
      "response_time": 3.124696
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1427,
        "candidates": 2411,
        "total": 3838,
        "cached": 0
      },
      "response_time": 23.008139
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3634,
        "candidates": 103,
        "total": 3737,
        "cached": 0
      },
      "response_time": 1.932125
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1354,
        "candidates": 1440,
        "total": 2794,
        "cached": 0
      },
      "response_time": 15.631459
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2589,
        "candidates": 457,
        "total": 3046,
        "cached": 0
      },
      "response_time": 5.192201
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 2 2\n0 0 0 0 0 0 3\n0 0 0 0 1 1 1\n0 5 5 5 5 5 5\n0 0 6 6 6 6 6\n0 0 0 4 4 4 4\n8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 16,
        "percent_correct": 77.14285714285715
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 2 2 2\n0 0 3 3\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 78.57142857142857
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "0 2 2\n0 0 4\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 0 0 0 2 2\n0 0 0 0 0 0 3\n0 0 0 0 1 1 1\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n0 0 6 6 6 6 6\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 54.285714285714285
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 1\n0 0 0 0\n0 2 2 2\n0 0 0 0\n0 0 3 3\n0 0 0 0\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 71.42857142857143
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "0 2 2\n0 0 4\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "005-py_03-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "006-py_04-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 0 2 2 0 0\n0 0 0 0 0 0 3\n0 0 1 1 1 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n0 0 6 6 6 6 6\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 54.285714285714285
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 1\n0 0 0 0\n0 2 2 2\n0 0 0 0\n0 0 3 3\n0 0 0 0\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 71.42857142857143
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "0 2 2\n0 0 4\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "8 8 8 8 8 8 8\n0 0 0 0 0 0 0\n0 0 0 4 4 4 4\n6 6 6 6 6 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n1 1 1 0 0 0 0\n0 0 0 0 3 0 0\n0 2 2 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 49,
        "percent_correct": 30.0
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "8 8 8 8\n0 0 0 0\n0 3 3 0\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 0 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 18,
        "percent_correct": 35.714285714285715
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "8 8 8\n0 4 0\n2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "009-py_06-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "8 8 8 8 8 8 8\n0 0 0 0 0 0 0\n0 0 0 4 4 4 4\n6 6 6 6 6 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n1 1 1 0 0 0 0\n0 0 0 0 3 0 0\n0 2 2 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 49,
        "percent_correct": 30.0
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "8 8 8 8\n0 0 0 0\n0 3 3 0\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 0 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 18,
        "percent_correct": 35.714285714285715
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "8 8 8\n0 4 0\n2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "8 8 8 8 8 8 8\n0 0 0 0 0 0 0\n0 0 0 4 4 4 4\n6 6 6 6 6 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n1 1 1 0 0 0 0\n0 0 0 0 3 0 0\n0 2 2 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 49,
        "percent_correct": 30.0
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "8 8 8 8\n0 0 0 0\n0 3 3 0\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 0 0 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 18,
        "percent_correct": 35.714285714285715
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "8 8 8\n0 4 0\n2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "",
        "match": "ERROR: index 8 is out of bounds for axis 1 with size 7",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "",
        "match": "ERROR: index 5 is out of bounds for axis 1 with size 4",
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "0 2 0\n4 2 0\n0 0 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 34,
        "percent_correct": 51.42857142857142
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 64.28571428571429
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "2 2 0\n0 4 0\n8 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "017-py_11-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "0 2 2 0 0 0 0\n0 0 0 0 3 0 0\n1 1 1 0 0 0 0\n0 0 0 0 0 0 0\n0 5 5 5 5 5 5\n0 0 0 0 0 0 0\n6 6 6 6 6 0 0\n0 0 0 4 4 4 4\n0 0 0 0 0 0 0\n8 8 8 8 8 8 8",
        "expected_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 3\n0 0 0 0 0 2 2\n0 0 0 0 1 1 1\n0 0 0 4 4 4 4\n0 0 6 6 6 6 6\n0 5 5 5 5 5 5\n8 8 8 8 8 8 8",
        "transformed_output": "0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 28,
        "percent_correct": 60.0
      },
      {
        "example": 2,
        "input": "0 0 0 1\n0 0 0 0\n2 2 2 0\n0 0 0 0\n0 3 3 0\n0 0 0 0\n8 8 8 8",
        "expected_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 1\n0 0 3 3\n0 2 2 2\n8 8 8 8",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 64.28571428571429
      },
      {
        "example": 3,
        "input": "2 2 0\n0 4 0\n8 8 8",
        "expected_output": "0 0 4\n0 2 2\n8 8 8",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}