{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1751,
        "candidates": 394,
        "total": 2145,
        "cached": 0
      },
      "response_time": 6.316679
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2007,
        "candidates": 201,
        "total": 2208,
        "cached": 0
      },
      "response_time": 3.136894
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2021,
        "candidates": 1103,
        "total": 3124,
        "cached": 0
      },
      "response_time": 12.724024
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2919,
        "candidates": 197,
        "total": 3116,
        "cached": 0
      },
      "response_time": 18.057695
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2016,
        "candidates": 1414,
        "total": 3430,
        "cached": 0
      },
      "response_time": 15.70315
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3226,
        "candidates": 241,
        "total": 3467,
        "cached": 0
      },
      "response_time": 2.796943
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1751,
        "candidates": 353,
        "total": 2104,
        "cached": 0
      },
      "response_time": 6.976605
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 1966,
        "candidates": 182,
        "total": 2148,
        "cached": 0
      },
      "response_time": 2.727174
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2003,
        "candidates": 1490,
        "total": 3493,
        "cached": 0
      },
      "response_time": 17.41008
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 1976,
        "candidates": 3205,
        "total": 5181,
        "cached": 0
      },
      "response_time": 34.711628
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 4958,
        "candidates": 443,
        "total": 5401,
        "cached": 0
      },
      "response_time": 5.146968
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3288,
        "candidates": 186,
        "total": 3474,
        "cached": 0
      },
      "response_time": 2.483133
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1751,
        "candidates": 186,
        "total": 1937,
        "cached": 0
      },
      "response_time": 4.699624
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 1799,
        "candidates": 151,
        "total": 1950,
        "cached": 0
      },
      "response_time": 2.435429
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1973,
        "candidates": 1769,
        "total": 3742,
        "cached": 0
      },
      "response_time": 18.380111
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3537,
        "candidates": 431,
        "total": 3968,
        "cached": 0
      },
      "response_time": 4.809385
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2252,
        "candidates": 769,
        "total": 3021,
        "cached": 0
      },
      "response_time": 10.118379
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2818,
        "candidates": 191,
        "total": 3009,
        "cached": 0
      },
      "response_time": 2.352945
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1751,
        "candidates": 548,
        "total": 2299,
        "cached": 0
      },
      "response_time": 7.549164
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2160,
        "candidates": 272,
        "total": 2432,
        "cached": 0
      },
      "response_time": 3.646935
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 2092,
        "candidates": 1825,
        "total": 3917,
        "cached": 0
      },
      "response_time": 17.802471
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2092,
        "candidates": 1445,
        "total": 3537,
        "cached": 0
      },
      "response_time": 25.843071
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 3332,
        "candidates": 259,
        "total": 3591,
        "cached": 0
      },
      "response_time": 3.218479
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 3711,
        "candidates": 505,
        "total": 4216,
        "cached": 0
      },
      "response_time": 4.629039
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "1 2 1\n2 1 8\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "4 4 2\n2 4 9\n9 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 8 5\n8 5 5\n8 5 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "9 9 3\n2 9 3\n3 9 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "2 2 2\n2 1 8\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "9 2 2\n2 4 9\n4 4 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 5 8\n8 5 5\n8 8 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "3 9 2\n2 9 3\n9 9 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "2 2 2\n8 1 2\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "2 2 9\n9 4 2\n2 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 5 8\n5 5 8\n5 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "2 9 3\n3 9 2\n3 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "2 2 2\n8 1 2\n1 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "2 2 9\n9 4 2\n2 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 5 8\n5 5 8\n5 8 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "2 9 3\n3 9 2\n3 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "009-py_05-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "010-py_06-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "1 2 1\n2 1 8\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "4 4 2\n2 4 9\n9 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 8 5\n8 5 5\n8 5 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "9 9 3\n2 9 3\n3 9 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "1 2 1\n2 1 8\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "4 4 2\n2 4 9\n9 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 8 5\n8 5 5\n8 5 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "9 9 3\n2 9 3\n3 9 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "1 2 1\n2 1 8\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "4 4 2\n2 4 9\n9 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 8 5\n8 5 5\n8 5 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "9 9 3\n2 9 3\n3 9 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "2 2 1\n2 1 2\n2 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "9 2 4\n2 4 4\n2 9 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 8 8\n5 5 8\n8 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "3 2 9\n9 9 9\n2 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "2 1 2\n2 8 1\n2 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "2 4 4\n2 9 2\n9 2 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "5 5 8\n8 5 5\n8 8 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "9 9 9\n2 3 3\n3 2 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "020-py_12-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "2 2 1\n2 1 2\n8 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "9 2 4\n2 4 4\n9 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 8 8\n5 5 8\n5 8 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "3 2 9\n9 9 9\n3 2 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "021-py_13-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "023-py_14-test": [
      {
        "example": 1,
        "input": "6 4 4\n6 6 4\n4 6 7",
        "expected_output": "7 6 4\n4 6 6\n4 4 6",
        "transformed_output": "7 6 4\n4 6 6\n4 4 6",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "023-py_14-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "1 8 2\n2 1 2\n1 2 2",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "2 9 2\n4 4 2\n4 2 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "5 5 8\n8 5 5\n8 8 8",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "3 3 2\n9 9 9\n9 2 3",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "024-py_15-train": [
      {
        "example": 1,
        "input": "2 2 1\n2 1 2\n2 8 1",
        "expected_output": "1 8 2\n2 1 2\n1 2 2",
        "transformed_output": "2 2 2\n2 1 2\n1 8 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "9 2 4\n2 4 4\n2 9 2",
        "expected_output": "2 9 2\n4 4 2\n4 2 9",
        "transformed_output": "2 9 2\n2 4 4\n2 9 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 3,
        "input": "8 8 8\n5 5 8\n8 5 5",
        "expected_output": "5 5 8\n8 5 5\n8 8 8",
        "transformed_output": "8 8 8\n5 5 8\n5 5 8",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "3 2 9\n9 9 9\n2 3 3",
        "expected_output": "3 3 2\n9 9 9\n9 2 3",
        "transformed_output": "2 3 2\n9 9 9\n3 3 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ]
  },
  "best_train_results": {
    "passed": 4,
    "total": 4
  },
  "best_test_results": {
    "passed": 1,
    "total": 1
  },
  "test_solved": true
}