import numpy as np

def get_grid_dimensions(grid):
    return grid.shape

def analyze_examples(examples):
    analysis = {}
    for i, example in enumerate(examples):
        input_grid = example["input"]
        output_grid = example["output"]
        analysis[f"example_{i+1}"] = {
            "input_shape": get_grid_dimensions(np.array(input_grid)),
            "output_shape": get_grid_dimensions(np.array(output_grid)),
        }
    return analysis

# Assuming 'train' is a list of dictionaries, each with "input" and "output" keys.
# Replace this with the actual 'train' data structure.

examples = [
    {"input": [[5, 5, 5], [5, 5, 5], [5, 5, 5]], "output": [[5, 5, 5], [5, 5, 5], [5, 5, 5]]},
    {"input": [[7, 7], [7, 7], [7, 7], [7, 7], [7, 7]], "output": [[7, 7], [7, 7], [7, 7]]},
    {"input": [[2, 8, 2], [8, 2, 8]], "output": [[2, 8, 2], [2, 8, 2], [2, 8, 2]]},
    {"input": [[6], [6], [6], [6]], "output": [[6], [6], [6]]}
]

analysis = analyze_examples(examples)
print(analysis)