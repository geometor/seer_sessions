examples:
  - example_1:
      input:
        dimensions: (3, 3)
        unique_colors: [1, 2, 3, 4, 5, 6, 7, 8, 9]
        objects:
          - single_pixel_objects:  "Each pixel can be treated as an individual object."
      output:
        dimensions: (3, 3)
        unique_colors: [1, 2, 3, 4, 5, 6, 7, 8, 9]
      transformation: "The output grid is identical to the input grid. It seems like a direct copy operation in this particular instance"
      result: "success"
  - example_2:
      input:
        dimensions: (2, 2)
        unique_colors: [1, 5, 8, 9]
        objects:
          - single_pixel_objects: "Each pixel can be treated as an individual object."
      output:
        dimensions: (3, 3)
        unique_colors: [1, 5, 6, 8, 9]
      transformation: "The output grid copies the top-left 2x2 subgrid and fills the rest of the cells with 6 (magenta). It's an expansion to 3x3 with a default fill."
      result: "success"
  - example_3:
      input:
        dimensions: (4, 5)
        unique_colors: [8]
        objects:
            - large_object: "A single, large object of color 8."
      output:
        dimensions: (3, 3)
        unique_colors: [8]
      transformation: "The output grid is the upper-left 3x3 section of input grid"
      result: "success"
  - example_4:
      input:
        dimensions: (4, 5)
        unique_colors: [0, 5]
        objects:
            - alternating_pattern: "Alternating pattern of 0 and 5"
      output:
        dimensions: (3, 3)
        unique_colors: [0, 5]
      transformation: "The output grid is the upper-left 3x3 section of input grid"
      result: "success"
  - example_5:
      input:
        dimensions: (5, 5)
        unique_colors: [0, 1]
      output:
        dimensions: (3, 3)
        unique_colors: [0, 1]
      transformation: "The output grid is the upper-left 3x3 section of input grid"
      result: "success"
