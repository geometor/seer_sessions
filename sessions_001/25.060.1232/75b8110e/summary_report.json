{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4943,
        "candidates": 662,
        "total": 5605,
        "cached": 0
      },
      "response_time": 9.601491
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 5465,
        "candidates": 964,
        "total": 6429,
        "cached": 0
      },
      "response_time": 9.260925
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 463,
        "total": 2340,
        "cached": 0
      },
      "response_time": 7.350544
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2202,
        "candidates": 838,
        "total": 3040,
        "cached": 0
      },
      "response_time": 13.913526
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2089,
        "candidates": 885,
        "total": 2974,
        "cached": 0
      },
      "response_time": 10.648854
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2770,
        "candidates": 404,
        "total": 3174,
        "cached": 0
      },
      "response_time": 4.393056
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1655,
        "candidates": 1385,
        "total": 3040,
        "cached": 0
      },
      "response_time": 16.969161
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2831,
        "candidates": 531,
        "total": 3362,
        "cached": 0
      },
      "response_time": 4.601735
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 667,
        "total": 2544,
        "cached": 0
      },
      "response_time": 8.449263
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2405,
        "candidates": 878,
        "total": 3283,
        "cached": 0
      },
      "response_time": 19.731119
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2129,
        "candidates": 2318,
        "total": 4447,
        "cached": 0
      },
      "response_time": 21.287425
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 4246,
        "candidates": 309,
        "total": 4555,
        "cached": 0
      },
      "response_time": 3.856141
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1560,
        "candidates": 743,
        "total": 2303,
        "cached": 0
      },
      "response_time": 9.089129
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2093,
        "candidates": 325,
        "total": 2418,
        "cached": 0
      },
      "response_time": 3.028598
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 598,
        "total": 2475,
        "cached": 0
      },
      "response_time": 8.35159
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2334,
        "candidates": 698,
        "total": 3032,
        "cached": 0
      },
      "response_time": 7.703635
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1949,
        "candidates": 5286,
        "total": 7235,
        "cached": 0
      },
      "response_time": 43.913481
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3047,
        "candidates": 1530,
        "total": 4577,
        "cached": 0
      },
      "response_time": 18.192785
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 4371,
        "candidates": 1197,
        "total": 5568,
        "cached": 0
      },
      "response_time": 10.440888
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 7028,
        "candidates": 452,
        "total": 7480,
        "cached": 0
      },
      "response_time": 4.086681
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 567,
        "total": 2444,
        "cached": 0
      },
      "response_time": 7.595397
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2305,
        "candidates": 186,
        "total": 2491,
        "cached": 0
      },
      "response_time": 2.861011
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1437,
        "candidates": 3001,
        "total": 4438,
        "cached": 0
      },
      "response_time": 21.783724
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 4234,
        "candidates": 462,
        "total": 4696,
        "cached": 0
      },
      "response_time": 4.85079
    },
    {
      "response_file": "025-response.json",
      "token_usage": {
        "prompt": 1713,
        "candidates": 1000,
        "total": 2713,
        "cached": 0
      },
      "response_time": 10.427107
    },
    {
      "response_file": "026-response.json",
      "token_usage": {
        "prompt": 2510,
        "candidates": 745,
        "total": 3255,
        "cached": 0
      },
      "response_time": 7.4239
    },
    {
      "response_file": "027-response.json",
      "token_usage": {
        "prompt": 1877,
        "candidates": 493,
        "total": 2370,
        "cached": 0
      },
      "response_time": 6.903586
    },
    {
      "response_file": "028-response.json",
      "token_usage": {
        "prompt": 2231,
        "candidates": 1100,
        "total": 3331,
        "cached": 0
      },
      "response_time": 9.759048
    },
    {
      "response_file": "029-response.json",
      "token_usage": {
        "prompt": 2351,
        "candidates": 1317,
        "total": 3668,
        "cached": 0
      },
      "response_time": 16.833627
    },
    {
      "response_file": "030-response.json",
      "token_usage": {
        "prompt": 3463,
        "candidates": 1203,
        "total": 4666,
        "cached": 0
      },
      "response_time": 9.866016
    },
    {
      "response_file": "031-response.json",
      "token_usage": {
        "prompt": 2453,
        "candidates": 2871,
        "total": 5324,
        "cached": 0
      },
      "response_time": 26.324374
    },
    {
      "response_file": "032-response.json",
      "token_usage": {
        "prompt": 5121,
        "candidates": 696,
        "total": 5817,
        "cached": 0
      },
      "response_time": 5.99211
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "4 4 5 4\n4 4 5 4\n5 5 6 9\n6 6 6 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "4 4 5 5\n5 5 4 4\n4 5 4 4\n4 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "4 5 4 5\n4 5 4 4\n5 6 9 9\n6 9 9 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "4 4 5 5\n4 5 5 4\n4 5 5 4\n5 5 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "4 4 4 5\n5 5 4 5\n5 5 5 4\n5 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "4 0 0 0\n0 4 0 5\n0 0 0 0\n6 6 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "4 0 5 5\n4 0 0 0\n0 6 0 9\n6 0 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "0 0 0 0\n0 0 0 5\n0 0 0 0\n6 6 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "4 0 5 5\n0 4 0 5\n6 0 9 9\n6 0 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 4 5 5\n0 0 5 0\n6 6 0 9\n0 0 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "1 1 1 1\n1 1 1 1\n1 1 1 1\n1 1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "4 0 0 5\n0 4 0 5\n0 6 0 9\n6 6 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "4 0 5 0\n4 0 0 0\n0 0 0 0\n6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "0 0 5 0\n0 0 0 5\n6 0 0 9\n6 6 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "4 0 0 0\n0 4 0 5\n6 6 9 9\n6 0 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 4 0 5\n0 0 5 0\n6 0 0 9\n0 0 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "011-py_07-train": [],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "4 0 0 5\n0 4 0 5\n0 6 0 9\n6 6 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "4 0 5 0\n4 0 0 0\n0 0 0 0\n6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "0 0 5 0\n0 0 0 5\n6 0 0 9\n6 6 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "4 0 0 0\n0 4 0 5\n6 6 9 9\n6 0 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 4 0 5\n0 0 5 0\n6 0 0 9\n0 0 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "4 0 0 5\n0 4 0 5\n0 6 0 9\n6 6 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "4 0 5 0\n4 0 0 0\n0 0 0 0\n6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "0 0 5 0\n0 0 0 5\n6 0 0 9\n6 6 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "4 0 0 0\n0 4 0 5\n6 6 9 9\n6 0 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 4 0 5\n0 0 5 0\n6 0 0 9\n0 0 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "017-py_11-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 81.25
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "5 9 9 4\n6 5 9 0\n6 9 5 4\n6 4 0 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "019-py_12-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "4 4 4 0\n4 4 4 0\n4 4 4 0\n4 4 4 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "4 4 0 9\n4 4 0 9\n4 4 0 9\n4 4 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "6 0 0 0\n6 0 0 0\n6 0 0 0\n6 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "6 4 5 9\n6 4 5 9\n6 4 5 9\n6 4 5 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "6 0 5 9\n6 0 5 9\n6 0 5 9\n6 0 5 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "4 0 0 0\n0 0 5 0\n6 6 0 9\n6 6 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "0 0 5 5\n4 4 5 5\n0 6 9 0\n0 6 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "0 0 5 0\n0 4 0 5\n6 0 9 9\n6 6 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "0 4 5 5\n0 4 0 5\n6 6 9 9\n6 6 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 4 5 5\n0 0 5 0\n6 6 0 9\n6 6 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ],
    "022-py_14-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "0 0 9 0\n0 0 0 9\n9 9 0 0\n9 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "0 9 0 9\n0 9 0 0\n0 9 0 9\n0 0 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "0 9 9 0\n0 9 0 9\n9 9 9 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "9 0 9 9\n0 9 9 9\n9 9 0 9\n9 0 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 0 9 9\n9 0 9 0\n9 0 9 9\n0 9 0 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 25.0
      }
    ],
    "024-py_15-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "0 0 0 0\n0 0 6 0\n0 6 0 0\n9 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "0 0 0 0\n0 0 9 0\n0 0 0 0\n9 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "0 0 6 0\n0 0 0 0\n6 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "0 0 0 9\n0 0 9 0\n0 0 0 0\n9 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 9 0 0\n9 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      }
    ],
    "026-py_16-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "4 0 0\n0 4 0\n0 0 4",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "5 0 0\n0 5 0\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "5 0 0\n0 5 0\n0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "4 0 0 0 0\n0 6 0 0 0\n0 0 6 0 0\n0 0 0 6 0\n0 0 0 0 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "5 0 0\n0 5 0\n0 0 5",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "028-py_17-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      }
    ],
    "030-py_18-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "0 0 0 0\n4 0 5 0\n0 0 0 9\n0 6 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "0 0 0 0\n0 4 5 5\n0 6 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "0 0 0 0\n4 0 0 5\n0 0 9 9\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "0 0 5 0\n0 0 0 0\n6 0 0 9\n0 6 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 0 5\n0 0 0\n6 6 9\n0 6 9",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "031-py_19-train": [],
    "032-py_20-train": [
      {
        "example": 1,
        "input": "4 4 0 0 0 0 5 0\n4 4 0 0 0 0 0 0\n0 0 4 0 0 0 5 0\n0 4 0 0 5 5 0 0\n0 0 6 0 0 0 9 0\n6 6 6 0 0 0 0 9\n6 0 6 6 9 9 0 0\n0 6 6 0 9 0 0 0",
        "expected_output": "4 4 5 0\n6 6 6 9\n6 9 5 6\n5 5 6 0",
        "transformed_output": "4 0 0 0\n4 0 5 5\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      },
      {
        "example": 2,
        "input": "4 0 0 4 5 5 0 0\n0 0 0 0 0 0 5 5\n4 4 0 4 0 5 0 0\n4 0 4 4 0 5 5 5\n0 0 0 6 0 9 0 9\n0 0 6 0 0 9 0 0\n6 0 0 6 0 9 0 9\n0 0 6 6 0 0 0 9",
        "expected_output": "5 5 0 6\n0 9 5 5\n6 5 0 6\n4 5 5 5",
        "transformed_output": "0 0 0 5\n0 4 5 5\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 31.25
      },
      {
        "example": 3,
        "input": "0 0 0 4 5 0 0 0\n4 0 0 0 0 5 0 0\n0 0 0 4 0 0 5 0\n0 4 0 4 0 0 5 0\n6 0 0 0 0 9 9 0\n6 0 0 0 0 9 0 9\n6 0 6 0 9 9 9 0\n6 0 6 0 0 0 0 0",
        "expected_output": "5 9 9 4\n6 5 0 9\n6 9 5 4\n6 4 5 4",
        "transformed_output": "4 0 5 0\n4 4 0 5\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 6.25
      },
      {
        "example": 4,
        "input": "4 0 0 4 0 5 0 5\n0 0 4 0 5 0 0 5\n0 0 4 4 0 0 5 5\n4 0 0 0 5 0 0 5\n6 6 6 0 9 0 9 9\n6 6 6 0 0 9 9 9\n6 0 0 6 9 9 0 9\n6 6 0 6 9 0 9 9",
        "expected_output": "6 5 6 5\n5 6 6 5\n6 9 5 5\n5 6 9 5",
        "transformed_output": "0 0 0 0\n4 0 5 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 0.0
      },
      {
        "example": 5,
        "input": "0 4 4 4 0 5 5 5\n0 0 4 0 5 5 0 5\n0 0 0 0 5 0 0 0\n4 0 0 0 5 0 0 0\n6 6 0 6 0 0 9 9\n0 0 0 6 9 0 9 0\n0 0 0 6 9 0 9 9\n6 6 0 6 0 9 0 9",
        "expected_output": "6 5 5 5\n5 5 9 5\n5 0 9 6\n5 6 0 6",
        "transformed_output": "0 0 5 0\n4 0 5 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 18.75
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}