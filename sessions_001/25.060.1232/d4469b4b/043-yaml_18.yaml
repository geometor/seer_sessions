observations:
  - example_1:
      input_objects:
        - color: 3
          coordinates: [(2, 2)]
          shape: single pixel
      output_objects:
        - color: 5
          coordinates: [(0,0)] # top-left corner, even though it's really a 1x1 grid
          shape: single pixel
      transformation: >
       A single green pixel is transformed to gray. The output size can be smaller than 3x3.
  - example_2:
      input_objects:
        - color: 3
          coordinates: [(1, 1)]
          shape: single pixel
        - color: 3
          coordinates: [(3, 3)]
          shape: single pixel
      output_objects:
        - color: 5
          coordinates: [(0, 0), (0, 2)]
          shape: two single pixels, row-aligned.
      transformation: >
         Two green pixels. The output is a row and seems to maintain relative columns.
  - example_3:
      input_objects:
        - color: 3
          coordinates: [(4, 0)]
          shape: single pixel
        - color: 3
          coordinates: [(2, 4)]
          shape: single pixel
      output_objects:
        - color: 5
          coordinates: [(0, 0), (0, 2)]
          shape: two single pixels, row-aligned.
      transformation: >
        Two green pixels become gray. Output grid is a row.
  - general:
      - input_grid_size: 5x5
      - output_grid_size: variable, up to 3x3, appears to depend on the positions of green pixels
      - color_change: Green (3) always becomes Gray (5)
      - object_type: single pixels only
      - object_interaction: none
      - spatial_relationship: The central 3x3 area of the input grid is extracted.