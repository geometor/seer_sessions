task_data = {
    "train": [
        {
            "input": [
                [5, 5, 5],
                [5, 5, 5],
                [1, 1, 1],
                [1, 1, 1],
                [2, 2, 2]
            ],
            "output": [
                [5],
                [1]
            ]
        },
        {
            "input": [
                [8, 8, 8, 8],
                [8, 8, 8, 8],
                [7, 7, 7, 7],
                [7, 7, 7, 7],
                [8, 8, 8, 8],
                [8, 8, 8, 8]
            ],
            "output": [
                [8],
                [7]
            ]
        },
        {
            "input": [
                [6, 6, 6, 6, 6],
                [6, 6, 6, 6, 6],
                [8, 8, 8, 8, 8],
                [8, 8, 8, 8, 8]
            ],
            "output": [
                [6],
                [8]
            ]
        },
        {
            "input": [
                [1, 1],
                [1, 1],
                [2, 2],
                [2, 2],
                [3, 3],
                [3, 3],
                [1, 1],
                [1, 1]
            ],
            "output": [
                [1],
                [2],
                [3]
            ]
        },
        {
            "input": [
                [3, 3, 3, 3],
                [3, 3, 3, 3],
                [3, 3, 3, 3],
                [3, 3, 3, 3]
            ],
            "output": [[3]]
        }
    ]
}

for i, example in enumerate(task_data['train']):
    print(f"Example {i+1}:")
    print("Input:")
    display_grid(np.array(example["input"]))
    print("Output:")
    display_grid(np.array(example["output"]))
    input_grid = np.array(example['input'])
    output_grid = np.array(example['output'])
    predicted_output = transform(input_grid)
    print("Predicted Output:")
    display_grid(predicted_output)    
    print(f"Prediction is correct: {np.array_equal(predicted_output, output_grid)}")
    print("-" * 20)
