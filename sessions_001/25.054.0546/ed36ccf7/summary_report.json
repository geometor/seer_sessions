{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 395,
        "total": 2148,
        "cached": 0
      },
      "response_time": 6.400325
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 2012,
        "candidates": 153,
        "total": 2165,
        "cached": 0
      },
      "response_time": 2.62409
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1974,
        "candidates": 1221,
        "total": 3195,
        "cached": 0
      },
      "response_time": 14.356728
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2985,
        "candidates": 147,
        "total": 3132,
        "cached": 0
      },
      "response_time": 2.39032
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1967,
        "candidates": 1496,
        "total": 3463,
        "cached": 0
      },
      "response_time": 16.915502
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3259,
        "candidates": 399,
        "total": 3658,
        "cached": 0
      },
      "response_time": 26.766974
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 400,
        "total": 2153,
        "cached": 0
      },
      "response_time": 6.759248
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2014,
        "candidates": 190,
        "total": 2204,
        "cached": 0
      },
      "response_time": 3.120062
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2011,
        "candidates": 1216,
        "total": 3227,
        "cached": 0
      },
      "response_time": 13.956484
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3021,
        "candidates": 346,
        "total": 3367,
        "cached": 0
      },
      "response_time": 4.424141
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2167,
        "candidates": 1050,
        "total": 3217,
        "cached": 0
      },
      "response_time": 12.418667
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3004,
        "candidates": 387,
        "total": 3391,
        "cached": 0
      },
      "response_time": 14.98137
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 231,
        "total": 1984,
        "cached": 0
      },
      "response_time": 4.422505
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 1846,
        "candidates": 204,
        "total": 2050,
        "cached": 0
      },
      "response_time": 2.912766
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2023,
        "candidates": 1225,
        "total": 3248,
        "cached": 0
      },
      "response_time": 13.230899
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 3042,
        "candidates": 342,
        "total": 3384,
        "cached": 0
      },
      "response_time": 3.83197
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2162,
        "candidates": 747,
        "total": 2909,
        "cached": 0
      },
      "response_time": 10.566389
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2705,
        "candidates": 186,
        "total": 2891,
        "cached": 0
      },
      "response_time": 21.339347
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1753,
        "candidates": 368,
        "total": 2121,
        "cached": 0
      },
      "response_time": 5.96852
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 1984,
        "candidates": 151,
        "total": 2135,
        "cached": 0
      },
      "response_time": 2.590608
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1972,
        "candidates": 1100,
        "total": 3072,
        "cached": 0
      },
      "response_time": 12.920432
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2867,
        "candidates": 394,
        "total": 3261,
        "cached": 0
      },
      "response_time": 4.813157
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 2215,
        "candidates": 2164,
        "total": 4379,
        "cached": 0
      },
      "response_time": 23.156792
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 4176,
        "candidates": 309,
        "total": 4485,
        "cached": 0
      },
      "response_time": 6.56972
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "9 9 9\n9 9 0\n9 9 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "6 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 6\n6 0 6\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 0 0\n9 0 0\n9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 4,
        "input": "2 0 2\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "0 0 2\n2 0 0\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "9 9 9\n0 9 9\n0 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "6 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 6\n6 0 6\n6 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "0 0 9\n0 0 9\n9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "2 0 2\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "2 0 0\n0 0 2\n2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "9 0 0\n9 9 9\n9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "6 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "0 6 6\n0 0 0\n6 6 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "0 0 9\n0 0 9\n9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 4,
        "input": "2 0 2\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "2 0 0\n0 0 2\n0 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "0 9 9\n0 9 9\n9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 0\n6 0 6\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 9 9\n0 0 9\n0 0 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 0 0\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "0 2 2\n0 0 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "0 9 9\n0 9 9\n9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 0\n6 0 6\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 9 9\n0 0 9\n0 0 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 0 0\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "0 2 2\n0 0 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "0 9 9\n0 9 9\n9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 0\n6 0 6\n6 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 9 9\n0 0 9\n0 0 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 0 0\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "2 2 0\n0 0 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "014-py_07-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "0 9 9\n0 9 9\n9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 0\n6 0 6\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 9 9\n0 0 9\n0 0 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 0 0\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "0 2 2\n0 0 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "016-py_08-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "0 9 9\n0 9 9\n9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 0\n6 0 6\n6 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 9 9\n0 0 9\n9 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 4,
        "input": "2 0 0\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "0 2 2\n0 0 2\n0 0 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "018-py_09-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "0 9 9\n0 9 9\n9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 0\n6 0 6\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 9 9\n0 0 9\n0 0 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 0 0\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "0 2 2\n0 0 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "020-py_10-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "0 9 9\n0 9 9\n9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 0\n6 0 6\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 9 9\n0 0 9\n0 0 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 0 0\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "0 2 2\n0 0 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ],
    "022-py_11-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "9 9 9\n9 9 9\n9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "0 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 0\n6 0 6\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 9 9\n9 0 9\n9 9 9",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 4,
        "input": "2 0 0\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "0 2 2\n2 0 2\n2 2 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "023-py_12-train": [
      {
        "code_execution_error": "transform function not found"
      }
    ],
    "024-py_13-train": [
      {
        "example": 1,
        "input": "9 0 0\n9 9 9\n9 9 9",
        "expected_output": "0 9 9\n0 9 9\n9 9 9",
        "transformed_output": "0 9 9\n0 9 9\n9 9 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 6 6\n0 0 0\n6 6 0",
        "expected_output": "6 0 0\n6 0 6\n6 0 6",
        "transformed_output": "6 0 0\n6 0 6\n0 0 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 3,
        "input": "0 0 9\n0 0 9\n9 9 9",
        "expected_output": "9 9 9\n0 0 9\n0 0 9",
        "transformed_output": "9 9 9\n0 0 9\n0 0 9",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 4,
        "input": "2 0 0\n0 0 2\n0 2 2",
        "expected_output": "2 2 2\n0 0 2\n2 0 0",
        "transformed_output": "0 2 2\n0 0 2\n2 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      }
    ]
  },
  "best_train_results": {
    "passed": 2,
    "total": 4
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}