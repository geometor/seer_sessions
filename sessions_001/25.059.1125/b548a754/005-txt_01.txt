import numpy as np

def describe_grid(grid, grid_name):
    print(f"  {grid_name} shape: {grid.shape}")
    unique_colors = np.unique(grid)
    print(f"  {grid_name} unique colors: {unique_colors}")
    for color in unique_colors:
        count = np.sum(grid == color)
        print(f"   - Color {color}: {count} pixels")

examples = [
    {
      "input": [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 8, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0]
      ],
      "output": [
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0]
      ]
    },
    {
      "input": [
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 2, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 2, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 2, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 0, 0]
      ],
      "output": [
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 2, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 2, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 2, 2, 1, 1, 2, 2, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      ]
    },
    {
      "input": [
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 8, 0],
        [0, 0, 0, 0, 0, 0, 0, 8, 0, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
      ],
      "output": [
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0, 0],
        [0, 0, 2, 2, 1, 1, 2, 2, 0, 0]
      ]
    }
]

for i, example in enumerate(examples):
    print(f"Example {i + 1}:")
    describe_grid(np.array(example["input"]), "Input")
    describe_grid(np.array(example["output"]), "Output")
    print("-" * 20)