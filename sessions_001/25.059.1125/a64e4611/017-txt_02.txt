import numpy as np

def analyze_example(input_grid, output_grid, predicted_grid):
    rows, cols = input_grid.shape
    analysis = []
    for r in range(rows):
        row_info = {
            'row': r,
            'start_color': input_grid[r, 0],
            'red_positions': [],
            'output_colors': [],
            'predicted_colors': []
        }
        for c in range(cols):
            if input_grid[r, c] == 2:
                row_info['red_positions'].append(c)
            row_info['output_colors'].append(output_grid[r,c])
            row_info['predicted_colors'].append(predicted_grid[r,c])
        analysis.append(row_info)
    return analysis

# Example data (replace with actual data from the task)
examples = [
    {
        "input": np.array([[0, 0, 0, 2, 0, 0]]),
        "output": np.array([[3, 3, 3, 2, 0, 0]]),
        "predicted": np.array([[3, 3, 3, 2, 0, 0]])
    },
    {
        "input": np.array([[0, 0, 2, 0, 0, 2, 0]]),
        "output": np.array([[3, 3, 2, 3, 3, 2, 0]]),
        "predicted": np.array([[3, 3, 2, 3, 3, 2, 0]])
    },
    {
        "input": np.array([[2, 0, 0, 2, 0, 0]]),
        "output": np.array([[2, 0, 0, 2, 0, 0]]),
        "predicted": np.array([[2, 0, 0, 2, 0, 0]])
    },
     {
        "input": np.array([[0, 0, 0, 0, 0, 0]]),
        "output": np.array([[3, 3, 3, 3, 3, 3]]),
        "predicted": np.array([[3, 3, 3, 3, 3, 3]])
    },
    {
        "input": np.array([[2, 0, 0, 0, 0, 0]]),
        "output": np.array([[2, 0, 0, 0, 0, 0]]),
        "predicted": np.array([[2, 0, 0, 0, 0, 0]])
    }

]

for i, example in enumerate(examples):
    analysis = analyze_example(example['input'], example['output'], example['predicted'])
    print(f"Example {i+1}:")
    for row_info in analysis:
        print(f"  Row {row_info['row']}:")
        print(f"    Starts with: {row_info['start_color']}")
        print(f"    Red positions: {row_info['red_positions']}")
        print(f"   Output: {row_info['output_colors']}")
        print(f"   Predicted: {row_info['predicted_colors']}")
        print(f"   Correct: {np.array_equal(row_info['output_colors'],row_info['predicted_colors'])}")