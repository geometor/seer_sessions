example_0:
  input:
    azure_regions: [[(2, 2), (2, 3), (2, 4), (3, 2), (3, 3), (3, 4)]]
    target_pixels: [((1, 2), 2), ((1, 3), 4)]  # (coords), color
    target_pixel_actions:
      - pixel: ((1, 2), 2)
        moved: true
        new_position: (1, 2)  # same position
      - pixel: ((1, 3), 4)
        moved: true
        new_position: (1, 3)  # same position

  output:
      azure_regions: [[(2, 2), (2, 3), (2, 4), (3, 2), (3, 3), (3, 4)]]
      notes: |
          Target Pixels above the azure region stay in the same row (row 1), and do not move. The natural language program is correct on example 0.
example_1:
  input:
    azure_regions: [[(2, 5), (3, 5), (4, 5)]]
    target_pixels: [((2, 4), 1), ((4, 6), 2)]
    target_pixel_actions:
      - pixel: ((2, 4), 1)  #left
        moved: true
        new_position: (6, 4)
      - pixel: ((4, 6), 2)  # right
        moved: false
        new_position: (4, 6)

  output:
     azure_regions:  [[(2, 5), (3, 5), (4, 5)]]
     notes: |
        The target pixel to the left moved to row index -2. The target pixel to the right of the azure region did *not* move. The natural language program is correct for the left target, but incorrectly moves right targets.

example_2:
  input:
    azure_regions: [[(4, 2), (4, 3), (4, 4), (4, 5), (4, 6)]]
    target_pixels: [((3, 2), 1), ((3, 6), 6), ((5, 2), 6), ((5, 6), 4)]
    target_pixel_actions:
      - pixel: ((3, 2), 1)  # above left corner
        moved: true
        new_position: (1, 2)
      - pixel: ((3, 6), 6)  # above right corner
        moved: true
        new_position: (1, 6)
      - pixel: ((5, 2), 6)  # below left corner
        moved: false
        new_position: (5,2)
      - pixel: ((5, 6), 4)  #below right corner
        moved: false
        new_position: (5,6)
  output:
     azure_regions:  [[(4, 2), (4, 3), (4, 4), (4, 5), (4, 6)]]
     notes: |
         Target pixels above move to row index 1, below stay where they are.  The natural language program is correct for above, but incorrectly leaves the below ones.

example_3:
  input:
    azure_regions: [[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7)]]
    target_pixels: [((3, 0), 2), ((3, 2), 6), ((3, 5), 1), ((3, 7), 2)]
    target_pixel_actions:
      - pixel: ((3, 0), 2)  # all are *below*,
        moved: False
        new_position: (3,0)
      - pixel: ((3, 2), 6)
        moved: False
        new_position: (3,2)
      - pixel: ((3, 5), 1)
        moved: false
        new_position: (3,5)
      - pixel: ((3, 7), 2)
        moved: False
        new_position: (3,7)

  output:
      azure_regions: [[(0, 0), (0, 1), (0, 2), (0, 3), (0, 4), (0, 5), (0, 6), (0, 7), (1, 0), (1, 1), (1, 2), (1, 3), (1, 4), (1, 5), (1, 6), (1, 7), (2, 0), (2, 1), (2, 2), (2, 3), (2, 4), (2, 5), (2, 6), (2, 7)]]
      notes: |
          All target pixels are below the azure region, and stay put. The natural language program incorrectly leaves these.