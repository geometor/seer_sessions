from pathlib import Path
import json
import numpy as np

def transform(input_grid):
    # initialize output_grid
    output_grid = np.copy(input_grid)
    rows, cols = input_grid.shape

    # change output pixels
    for r in range(rows):
        for c in range(cols):
            # Find Blue Pixels
            if input_grid[r, c] == 1:
                # Iterate to the Right
                c_current = c + 1
                while c_current < cols and output_grid[r, c_current] == 0:
                    output_grid[r, c_current] = 2
                    c_current += 1
    return output_grid

task_path = Path("data/training/0b17322b.json")

with open(task_path, "r") as task_file:
    task = json.load(task_file)

for set_name in ("train",):
    print(f"--- {set_name} ---")
    for example in task[set_name]:
        input_grid = np.array(example["input"])
        output_grid = np.array(example["output"])

        result = transform(input_grid)
        
        print(f"{np.array_equal(result, output_grid)=}")
        if not np.array_equal(result, output_grid):
          print(f"{input_grid=}")
          print(f"{output_grid=}")
          print(f"{result=}")