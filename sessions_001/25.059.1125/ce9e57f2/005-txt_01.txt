import numpy as np

def analyze_grid(grid, grid_name):
    red_pixels = np.argwhere(grid == 2)
    azure_pixels = np.argwhere(grid == 8)
    print(f"{grid_name}:")
    print(f"  Red Pixels: {red_pixels.tolist()}")
    print(f"  Azure Pixels: {azure_pixels.tolist()}")
    if len(red_pixels) > 0:
        min_red_row = np.min(red_pixels[:, 0])
        max_red_row = np.max(red_pixels[:, 0])
        print(f"  Min Red Row: {min_red_row}, Max Red Row: {max_red_row}")
    print(f" shape: {grid.shape}")
    print("---")

# Example Grids (replace with actual data from the task)
train1_in = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 2, 0, 0, 0, 0],
                      [0, 0, 0, 0, 2, 0, 0, 0, 0],
                      [0, 0, 0, 0, 2, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0]])

train1_out = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 8, 0, 0, 0, 0],
                       [0, 0, 0, 0, 8, 0, 0, 0, 0],
                       [0, 0, 0, 0, 8, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0]])
train2_in = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 0, 2, 0, 0, 0, 0, 0],
                      [0, 0, 0, 2, 0, 0, 0, 0, 0],
                      [0, 0, 0, 2, 0, 0, 0, 0, 0],
                      [0, 0, 0, 2, 0, 0, 0, 0, 0],
                      [0, 0, 0, 2, 0, 0, 0, 0, 0],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0]])
train2_out = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0],
                       [0, 0, 0, 8, 0, 0, 0, 0, 0],
                       [0, 0, 0, 8, 0, 0, 0, 0, 0],
                       [0, 0, 0, 8, 0, 0, 0, 0, 0],
                       [0, 0, 0, 8, 0, 0, 0, 0, 0],
                       [0, 0, 0, 8, 0, 0, 0, 0, 0],
                       [0, 0, 0, 0, 0, 0, 0, 0, 0]])
train3_in = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 2, 0, 0, 0, 0, 0, 0],
                    [0, 0, 2, 0, 0, 0, 0, 0, 0],
                    [0, 0, 2, 0, 0, 0, 0, 0, 0],
                    [0, 0, 2, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0]])
train3_out = np.array([[0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 8, 0, 0, 0, 0, 0, 0],
                    [0, 0, 8, 0, 0, 0, 0, 0, 0],
                    [0, 0, 8, 0, 0, 0, 0, 0, 0],
                    [0, 0, 8, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0],
                    [0, 0, 0, 0, 0, 0, 0, 0, 0]])

analyze_grid(train1_in, "Train 1 Input")
analyze_grid(train1_out, "Train 1 Output")
analyze_grid(train2_in, "Train 2 Input")
analyze_grid(train2_out, "Train 2 Output")
analyze_grid(train3_in, "Train 3 Input")
analyze_grid(train3_out, "Train 3 Output")
