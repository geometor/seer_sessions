{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4827,
        "candidates": 618,
        "total": 5445,
        "cached": 0
      },
      "response_time": 9.287016
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 5305,
        "candidates": 1465,
        "total": 6770,
        "cached": 0
      },
      "response_time": 14.924797
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2471,
        "candidates": 922,
        "total": 3393,
        "cached": 0
      },
      "response_time": 12.063232
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 3257,
        "candidates": 874,
        "total": 4131,
        "cached": 0
      },
      "response_time": 10.099714
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 2125,
        "candidates": 5454,
        "total": 7579,
        "cached": 0
      },
      "response_time": 41.381674
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 7378,
        "candidates": 492,
        "total": 7870,
        "cached": 0
      },
      "response_time": 5.07664
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1744,
        "candidates": 3956,
        "total": 5700,
        "cached": 0
      },
      "response_time": 38.411889
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 5499,
        "candidates": 732,
        "total": 6231,
        "cached": 0
      },
      "response_time": 5.880653
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2471,
        "candidates": 718,
        "total": 3189,
        "cached": 0
      },
      "response_time": 10.336365
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 3048,
        "candidates": 607,
        "total": 3655,
        "cached": 0
      },
      "response_time": 7.208844
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1859,
        "candidates": 4613,
        "total": 6472,
        "cached": 0
      },
      "response_time": 44.852439
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 6269,
        "candidates": 976,
        "total": 7245,
        "cached": 0
      },
      "response_time": 9.229668
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 2232,
        "candidates": 1380,
        "total": 3612,
        "cached": 0
      },
      "response_time": 17.640095
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 3407,
        "candidates": 785,
        "total": 4192,
        "cached": 0
      },
      "response_time": 8.82816
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1977,
        "candidates": 531,
        "total": 2508,
        "cached": 0
      },
      "response_time": 7.895889
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2369,
        "candidates": 1036,
        "total": 3405,
        "cached": 0
      },
      "response_time": 11.10639
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 2287,
        "candidates": 3629,
        "total": 5916,
        "cached": 0
      },
      "response_time": 34.991816
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 5712,
        "candidates": 1331,
        "total": 7043,
        "cached": 0
      },
      "response_time": 12.705399
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 2581,
        "candidates": 5046,
        "total": 7627,
        "cached": 0
      },
      "response_time": 46.33984
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 7430,
        "candidates": 1528,
        "total": 8958,
        "cached": 0
      },
      "response_time": 14.963961
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "",
        "match": false,
        "size_correct": "N/A",
        "color_palette_correct": "N/A",
        "correct_pixel_counts": "N/A",
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "3 0 0 0\n0 0 0 0\n3 3 3 3\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 68.75
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "3 0 0 0\n0 0 0 0\n3 0 3 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 3 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "007-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "3 0 0 0\n0 0 0 0\n3 0 3 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 43.75
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 3 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "0 0 0 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "0 0 2 0\n3 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "0 0 2 0\n1 0 0 0\n3 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 62.5
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "0 0 2 0\n0 0 0 0\n0 0 0 0\n0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "011-py_07-train": [],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "3 3 0\n0 2 3\n3 3 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "2 0\n2 1\n1 3",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "013-py_09-train": [],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "3 2 3 3 3 3 3\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0\n0 0 0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "2 2 1 1 3\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0\n0 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "2",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "016-py_11-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "0 0 0\n0 0 0\n3 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "0 2 2\n0 2 2\n1 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "0 0 0\n0 0 0\n4 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      }
    ],
    "017-py_12-train": [],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "0 2 2\n0 2 2\n3 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "0 2 2\n0 2 2\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "019-py_14-train": [],
    "020-py_15-train": [
      {
        "example": 1,
        "input": "3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n3 3 3 3 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n0 0 0 0 2 3 3 3 3 2 0 0 0 0 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n0 0 0 0 2 0 0 0 0 2 3 3 3 3 2 0 0 0 0\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0\n3 3 3 3 2 3 3 3 3 2 3 3 3 3 2 0 0 0 0",
        "expected_output": "0 0 0 3\n0 0 3 0\n0 3 0 0\n0 3 3 3",
        "transformed_output": "0 2 2\n0 2 2\n3 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n0 0 0 0 8 2 2 2 2 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n2 2 2 2 8 1 1 1 1 8 0 0 0 0 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n0 0 0 0 8 0 0 0 0 8 1 1 1 1 8 0 0 0 0\n8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3\n0 0 0 0 8 0 0 0 0 8 0 0 0 0 8 3 3 3 3",
        "expected_output": "0 0 2 0\n0 0 1 2\n0 1 0 0\n3 0 0 0",
        "transformed_output": "0 8 8\n0 8 8\n0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n0 0 0 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n8 8 8 2 8 8 8 2 0 0 0\n2 2 2 2 2 2 2 2 2 2 2\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4\n0 0 0 2 0 0 0 2 4 4 4",
        "expected_output": "0 8 0\n0 8 8\n4 0 0",
        "transformed_output": "0 2 2\n0 2 2\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}