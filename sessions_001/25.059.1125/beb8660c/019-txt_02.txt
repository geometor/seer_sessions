import numpy as np

def describe_grids(input_grid, output_grid, rotated_input_grid):
    input_array = np.array(input_grid)
    output_array = np.array(output_grid)
    rotated_input_array = np.array(rotated_input_grid)

    results = {
        'input_shape': input_array.shape,
        'output_shape': output_array.shape,
        'rotated_input_shape': rotated_input_array.shape,
      }
    return results

# Data from the previous turn.
examples = [
  {
      "input": [
          [6, 8, 6, 8, 6, 8, 6, 8],
          [6, 8, 6, 8, 6, 8, 6, 8],
      ],
      "output": [
          [6, 6],
          [8, 8],
          [6, 6],
          [8, 8],
          [6, 6],
          [8, 8],
          [6, 6],
          [8, 8],
      ]
  },
  {
    "input": [
      [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
      [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
      [5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5]
    ],
      "output": [
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5],
       [5, 5, 5]
      ]
  },
  {
    "input": [
      [6, 6, 8, 8, 6, 6, 8, 8],
      [6, 6, 8, 8, 6, 6, 8, 8],
      [6, 6, 8, 8, 6, 6, 8, 8],
    ],
    "output": [
        [6, 6, 6],
        [6, 6, 6],
        [8, 8, 8],
        [8, 8, 8],
        [6, 6, 6],
        [6, 6, 6],
        [8, 8, 8],
        [8, 8, 8],
    ]
  }
]

all_results = []
for example in examples:
  rotated_input = np.rot90(np.array(example['input']), k=-1).tolist()  # Rotate input
  results = describe_grids(example['input'], example['output'], rotated_input)
  all_results.append(results)

print(all_results)