{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3463,
        "candidates": 277,
        "total": 3740,
        "cached": 0
      },
      "response_time": 5.769761
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 3602,
        "candidates": 213,
        "total": 3815,
        "cached": 0
      },
      "response_time": 3.022895
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1781,
        "candidates": 250,
        "total": 2031,
        "cached": 0
      },
      "response_time": 4.623416
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 1893,
        "candidates": 147,
        "total": 2040,
        "cached": 0
      },
      "response_time": 2.404247
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1400,
        "candidates": 1098,
        "total": 2498,
        "cached": 0
      },
      "response_time": 31.89515
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2289,
        "candidates": 147,
        "total": 2436,
        "cached": 0
      },
      "response_time": 2.392186
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1400,
        "candidates": 776,
        "total": 2176,
        "cached": 0
      },
      "response_time": 11.723986
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 1970,
        "candidates": 147,
        "total": 2117,
        "cached": 0
      },
      "response_time": 1.945696
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1913,
        "candidates": 496,
        "total": 2409,
        "cached": 0
      },
      "response_time": 7.923805
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2270,
        "candidates": 417,
        "total": 2687,
        "cached": 0
      },
      "response_time": 5.067202
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1668,
        "candidates": 1332,
        "total": 3000,
        "cached": 0
      },
      "response_time": 32.810246
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2796,
        "candidates": 425,
        "total": 3221,
        "cached": 0
      },
      "response_time": 4.097652
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1676,
        "candidates": 588,
        "total": 2264,
        "cached": 0
      },
      "response_time": 7.837102
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2060,
        "candidates": 408,
        "total": 2468,
        "cached": 0
      },
      "response_time": 4.855574
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1861,
        "candidates": 435,
        "total": 2296,
        "cached": 0
      },
      "response_time": 8.00497
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2158,
        "candidates": 239,
        "total": 2397,
        "cached": 0
      },
      "response_time": 3.729228
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1490,
        "candidates": 1147,
        "total": 2637,
        "cached": 0
      },
      "response_time": 28.814211
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2433,
        "candidates": 303,
        "total": 2736,
        "cached": 0
      },
      "response_time": 4.096543
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1554,
        "candidates": 4016,
        "total": 5570,
        "cached": 0
      },
      "response_time": 39.897797
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 5379,
        "candidates": 675,
        "total": 6054,
        "cached": 0
      },
      "response_time": 7.055921
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "1 7 6 6\n7 2 1 6\n2 7 6 6\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "6 6 7 2 7 6 7\n2 6 2 2 7 7 7\n6 6 7 7 2 1 7\n6 2 1 7 1 1 6\n6 2 2 7 2 7 6\n6 1 7 2 6 7 6\n6 1 2 2 6 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "2 2 1 2 2 1\n1 7 2 1 1 2\n6 1 1 2 7 7\n2 2 7 6 7 1\n7 7 6 2 2 1\n7 1 2 1 6 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 33.33333333333333
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "2 2 2 2\n6 6 7 2\n6 1 2 7\n6 6 7 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "2 1 6 2 2 1 6\n6 7 6 2 7 1 6\n6 7 2 7 2 2 6\n6 1 1 7 1 2 6\n7 1 2 7 7 6 6\n7 7 7 2 2 6 2\n7 6 7 2 7 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 34,
        "percent_correct": 30.612244897959183
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 6 1 2 1 7\n1 2 2 6 7 7\n1 7 6 7 2 2\n7 7 2 1 1 6\n2 1 1 2 7 1\n1 2 2 1 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 26,
        "percent_correct": 27.77777777777778
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "2 2 2 2\n6 6 7 2\n6 1 2 7\n6 6 7 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "2 1 6 2 2 1 6\n6 7 6 2 7 1 6\n6 7 2 7 2 2 6\n6 1 1 7 1 2 6\n7 1 2 7 7 6 6\n7 7 7 2 2 6 2\n7 6 7 2 7 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 34,
        "percent_correct": 30.612244897959183
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 6 1 2 1 7\n1 2 2 6 7 7\n1 7 6 7 2 2\n7 7 2 1 1 6\n2 1 1 2 7 1\n1 2 2 1 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 26,
        "percent_correct": 27.77777777777778
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "2 2 2 2\n6 6 7 2\n6 1 2 7\n6 6 7 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 10,
        "percent_correct": 37.5
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "2 1 6 2 2 1 6\n6 7 6 2 7 1 6\n6 7 2 7 2 2 6\n6 1 1 7 1 2 6\n7 1 2 7 7 6 6\n7 7 7 2 2 6 2\n7 6 7 2 7 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 34,
        "percent_correct": 30.612244897959183
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 6 1 2 1 7\n1 2 2 6 7 7\n1 7 6 7 2 2\n7 7 2 1 1 6\n2 1 1 2 7 1\n1 2 2 1 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 26,
        "percent_correct": 27.77777777777778
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "2 2 7 1\n2 7 2 7\n2 6 1 6\n2 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "6 6 6 6 6 2 6\n1 1 2 2 6 6 6\n2 7 2 1 7 2 7\n2 2 7 7 7 2 2\n6 6 2 1 2 7 7\n1 7 7 1 1 7 6\n2 6 6 6 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 26,
        "percent_correct": 46.93877551020408
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "7 7 2 6 1 2\n1 7 2 1 7 2\n2 6 7 1 2 1\n1 2 6 2 1 2\n6 2 7 7 1 2\n1 1 1 7 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 34,
        "percent_correct": 5.555555555555555
      }
    ],
    "011-py_06-train": [],
    "012-py_07-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "2 2 7 1\n2 7 2 7\n2 6 1 6\n2 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "6 6 6 6 6 2 6\n1 1 2 2 6 6 6\n2 7 2 1 7 2 7\n2 2 7 7 7 2 2\n6 6 2 1 2 7 7\n1 7 7 1 1 7 6\n2 6 6 6 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 26,
        "percent_correct": 46.93877551020408
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "7 7 2 6 1 2\n1 7 2 1 7 2\n2 6 7 1 2 1\n1 2 6 2 1 2\n6 2 7 7 1 2\n1 1 1 7 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 34,
        "percent_correct": 5.555555555555555
      }
    ],
    "014-py_08-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "2 2 7 1\n2 7 2 7\n2 6 1 6\n2 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 12,
        "percent_correct": 25.0
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "6 6 6 6 6 2 6\n1 1 2 2 6 6 6\n2 7 2 1 7 2 7\n2 2 7 7 7 2 2\n6 6 2 1 2 7 7\n1 7 7 1 1 7 6\n2 6 6 6 7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 26,
        "percent_correct": 46.93877551020408
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "7 7 2 6 1 2\n1 7 2 1 7 2\n2 6 7 1 2 1\n1 2 6 2 1 2\n6 2 7 7 1 2\n1 1 1 7 2 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 34,
        "percent_correct": 5.555555555555555
      }
    ],
    "016-py_09-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "1 7 6 6\n7 2 1 6\n2 7 6 6\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "6 6 7 2 7 6 7\n2 6 2 2 7 7 7\n6 6 7 7 2 1 7\n6 2 1 7 1 1 6\n6 2 2 7 2 7 6\n6 1 7 2 6 7 6\n6 1 2 2 6 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "2 2 1 2 2 1\n1 7 2 1 1 2\n6 1 1 2 7 7\n2 2 7 6 7 1\n7 7 6 2 2 1\n7 1 2 1 6 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 33.33333333333333
      }
    ],
    "017-py_10-train": [],
    "018-py_11-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "1 7 6 6\n7 2 1 6\n2 7 6 6\n2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 50.0
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "6 6 7 2 7 6 7\n2 6 2 2 7 7 7\n6 6 7 7 2 1 7\n6 2 1 7 1 1 6\n6 2 2 7 2 7 6\n6 1 7 2 6 7 6\n6 1 2 2 6 1 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 32,
        "percent_correct": 34.69387755102041
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "2 2 1 2 2 1\n1 7 2 1 1 2\n6 1 1 2 7 7\n2 2 7 6 7 1\n7 7 6 2 2 1\n7 1 2 1 6 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 24,
        "percent_correct": 33.33333333333333
      }
    ],
    "019-py_12-train": [],
    "020-py_13-train": [
      {
        "example": 1,
        "input": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "expected_output": "2 6 6 6\n2 6 1 6\n2 7 2 7\n2 2 7 1",
        "transformed_output": "6 6 6 2\n6 1 6 2\n7 2 7 2\n1 7 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 14,
        "percent_correct": 12.5
      },
      {
        "example": 2,
        "input": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "expected_output": "2 6 6 6 7 7 7\n1 7 7 1 1 7 6\n6 6 2 1 2 7 7\n2 2 7 7 7 2 2\n2 7 2 1 7 2 7\n1 1 2 2 6 6 6\n6 6 6 6 6 2 6",
        "transformed_output": "7 7 7 6 6 6 2\n6 7 1 1 7 7 1\n7 7 2 1 2 6 6\n2 2 7 7 7 2 2\n7 2 7 1 2 7 2\n6 6 6 2 2 1 1\n6 2 6 6 6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 28,
        "percent_correct": 42.857142857142854
      },
      {
        "example": 3,
        "input": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "expected_output": "1 1 1 7 2 1\n6 2 7 7 1 2\n1 2 6 2 1 2\n2 6 7 1 2 1\n1 7 2 1 7 2\n7 7 2 6 1 2",
        "transformed_output": "1 2 7 1 1 1\n2 1 7 7 2 6\n2 1 2 6 2 1\n1 2 1 7 6 2\n2 7 1 2 7 1\n2 1 6 2 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 30,
        "percent_correct": 16.666666666666664
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}