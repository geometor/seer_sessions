def check_output(task_index):
    from utils import load_task_json
    task = load_task_json(f'00d62c1b', 'train', task_index)
    input_grid = task['input']
    expected_output_grid = task['output']
    actual_output_grid = transform(input_grid)

    print(f"Example {task_index + 1}:")
    print(f"Input Dimensions: {np.array(input_grid).shape}")
    print(f"Expected Output Dimensions: {np.array(expected_output_grid).shape}")
    print(f"Actual Output Dimensions: {np.array(actual_output_grid).shape}")
    
    # find the green line
    input_green = find_object(np.array(input_grid), 3, 'line')
    output_green = find_object(np.array(expected_output_grid), 3, 'line')
    actual_output_green = find_object(np.array(actual_output_grid), 3, 'line')
    print(f"Input Green Line: {input_green}")
    print(f"Expected Output Green Line: {output_green}")
    print(f"Actual Output Green Line: {actual_output_green}")

    # find the red_cross
    input_red = find_object(np.array(input_grid), 2, 'cross')
    output_red = find_object(np.array(expected_output_grid), 2, 'cross')
    actual_output_red = find_object(np.array(actual_output_grid), 2, 'cross')
    print(f"Input Red Cross: {input_red}")
    print(f"Expected Output Red Cross: {output_red}")
    print(f"Actual Output Red Cross: {actual_output_red}")

    print(f"Correct Output: {actual_output_grid == expected_output_grid}")
    print("\n")

for i in range(3):
    check_output(i)
