{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 3713,
        "candidates": 508,
        "total": 4221,
        "cached": 0
      },
      "response_time": 8.870135
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4083,
        "candidates": 499,
        "total": 4582,
        "cached": 0
      },
      "response_time": 5.577817
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1935,
        "candidates": 470,
        "total": 2405,
        "cached": 0
      },
      "response_time": 8.17237
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2267,
        "candidates": 642,
        "total": 2909,
        "cached": 0
      },
      "response_time": 7.432973
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1893,
        "candidates": 1912,
        "total": 3805,
        "cached": 0
      },
      "response_time": 23.712032
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3602,
        "candidates": 963,
        "total": 4565,
        "cached": 0
      },
      "response_time": 8.516739
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1935,
        "candidates": 625,
        "total": 2560,
        "cached": 0
      },
      "response_time": 8.867519
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2423,
        "candidates": 752,
        "total": 3175,
        "cached": 0
      },
      "response_time": 8.435057
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2003,
        "candidates": 3128,
        "total": 5131,
        "cached": 0
      },
      "response_time": 30.280229
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 4928,
        "candidates": 882,
        "total": 5810,
        "cached": 0
      },
      "response_time": 7.824864
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 2133,
        "candidates": 3515,
        "total": 5648,
        "cached": 0
      },
      "response_time": 32.679206
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 5449,
        "candidates": 882,
        "total": 6331,
        "cached": 0
      },
      "response_time": 7.807742
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1935,
        "candidates": 482,
        "total": 2417,
        "cached": 0
      },
      "response_time": 7.931611
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2275,
        "candidates": 775,
        "total": 3050,
        "cached": 0
      },
      "response_time": 7.824027
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2026,
        "candidates": 3223,
        "total": 5249,
        "cached": 0
      },
      "response_time": 32.227465
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 5048,
        "candidates": 484,
        "total": 5532,
        "cached": 0
      },
      "response_time": 8.922446
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1735,
        "candidates": 1622,
        "total": 3357,
        "cached": 0
      },
      "response_time": 16.804507
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 3160,
        "candidates": 557,
        "total": 3717,
        "cached": 0
      },
      "response_time": 5.528198
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 3 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 0 7 7",
        "expected_output": "3 3 7\n3 7 7\n3 7 7",
        "transformed_output": "3 3 3\n3 7 7\n7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 2,
        "percent_correct": 77.77777777777779
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 4 4\n0 0 0 6 6 6 0 0 0 0\n0 0 0 0 6 6 0 0 0 0\n0 0 0 0 0 6 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "6 6 6\n4 6 6\n4 4 6",
        "transformed_output": "4 4 4\n6 6 6\n6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 1 1 0 0 0 0 0 0\n0 1 0 1 0 0 0 0 0 0",
        "expected_output": "1 1 1\n1 3 1\n3 3 3",
        "transformed_output": "3 3 3\n3 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 8,
        "percent_correct": 11.11111111111111
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 3 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 0 7 7",
        "expected_output": "3 3 7\n3 7 7\n3 7 7",
        "transformed_output": "3 3 7\n3 3 7\n3 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 1,
        "percent_correct": 88.88888888888889
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 4 4\n0 0 0 6 6 6 0 0 0 0\n0 0 0 0 6 6 0 0 0 0\n0 0 0 0 0 6 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "6 6 6\n4 6 6\n4 4 6",
        "transformed_output": "0 0 0\n0 0 0\n0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 1 1 0 0 0 0 0 0\n0 1 0 1 0 0 0 0 0 0",
        "expected_output": "1 1 1\n1 3 1\n3 3 3",
        "transformed_output": "3 3 0\n3 3 0\n3 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 7,
        "percent_correct": 22.22222222222222
      }
    ],
    "005-py_03-train": [],
    "006-py_04-train": [],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 3 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 0 7 7",
        "expected_output": "3 3 7\n3 7 7\n3 7 7",
        "transformed_output": "3 3 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 7 7",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 4 4\n0 0 0 6 6 6 0 0 0 0\n0 0 0 0 6 6 0 0 0 0\n0 0 0 0 0 6 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "6 6 6\n4 6 6\n4 4 6",
        "transformed_output": "0 0 0 0 0 4 0\n0 0 0 0 0 4 4\n6 6 6 0 0 0 0\n0 6 6 0 0 0 0\n0 0 6 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 1 1 0 0 0 0 0 0\n0 1 0 1 0 0 0 0 0 0",
        "expected_output": "1 1 1\n1 3 1\n3 3 3",
        "transformed_output": "0 0 0 3 0\n0 0 3 3 3\n0 0 0 0 0\n0 0 0 0 0\n1 1 1 0 0\n1 0 1 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "009-py_06-train": [],
    "010-py_07-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 3 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 0 7 7",
        "expected_output": "3 3 7\n3 7 7\n3 7 7",
        "transformed_output": "3 3 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 7 7",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 4 4\n0 0 0 6 6 6 0 0 0 0\n0 0 0 0 6 6 0 0 0 0\n0 0 0 0 0 6 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "6 6 6\n4 6 6\n4 4 6",
        "transformed_output": "0 0 0 0 0 4 0\n0 0 0 0 0 4 4\n6 6 6 0 0 0 0\n0 6 6 0 0 0 0\n0 0 6 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 1 1 0 0 0 0 0 0\n0 1 0 1 0 0 0 0 0 0",
        "expected_output": "1 1 1\n1 3 1\n3 3 3",
        "transformed_output": "0 0 0 3 0\n0 0 3 3 3\n0 0 0 0 0\n0 0 0 0 0\n1 1 1 0 0\n1 0 1 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "011-py_08-train": [],
    "012-py_09-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 3 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 0 7 7",
        "expected_output": "3 3 7\n3 7 7\n3 7 7",
        "transformed_output": "3 3 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0\n3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 7 7",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 4 4\n0 0 0 6 6 6 0 0 0 0\n0 0 0 0 6 6 0 0 0 0\n0 0 0 0 0 6 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "6 6 6\n4 6 6\n4 4 6",
        "transformed_output": "0 0 0 0 0 4 0\n0 0 0 0 0 4 4\n6 6 6 0 0 0 0\n0 6 6 0 0 0 0\n0 0 6 0 0 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 1 1 0 0 0 0 0 0\n0 1 0 1 0 0 0 0 0 0",
        "expected_output": "1 1 1\n1 3 1\n3 3 3",
        "transformed_output": "0 0 0 3 0\n0 0 3 3 3\n0 0 0 0 0\n0 0 0 0 0\n1 1 1 0 0\n1 0 1 0 0",
        "match": false,
        "size_correct": false,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": "N/A",
        "percent_correct": "N/A"
      }
    ],
    "014-py_10-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 3 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 0 7 7",
        "expected_output": "3 3 7\n3 7 7\n3 7 7",
        "transformed_output": "3 3 3\n3 7 3\n7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 4 4\n0 0 0 6 6 6 0 0 0 0\n0 0 0 0 6 6 0 0 0 0\n0 0 0 0 0 6 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "6 6 6\n4 6 6\n4 4 6",
        "transformed_output": "4 4 4\n4 6 4\n6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 1 1 0 0 0 0 0 0\n0 1 0 1 0 0 0 0 0 0",
        "expected_output": "1 1 1\n1 3 1\n3 3 3",
        "transformed_output": "3 3 3\n3 1 3\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 9,
        "percent_correct": 0.0
      }
    ],
    "015-py_11-train": [],
    "016-py_12-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 3 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 0 7 7",
        "expected_output": "3 3 7\n3 7 7\n3 7 7",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 4 4\n0 0 0 6 6 6 0 0 0 0\n0 0 0 0 6 6 0 0 0 0\n0 0 0 0 0 6 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "6 6 6\n4 6 6\n4 4 6",
        "transformed_output": "4 4 4\n4 4 4\n4 4 4",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 6,
        "percent_correct": 33.33333333333333
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 1 1 0 0 0 0 0 0\n0 1 0 1 0 0 0 0 0 0",
        "expected_output": "1 1 1\n1 3 1\n3 3 3",
        "transformed_output": "3 3 3\n3 3 3\n3 3 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 44.44444444444444
      }
    ],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 3 3 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 3 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 7\n0 0 0 0 0 0 0 0 7 7\n0 0 0 0 0 0 0 0 7 7",
        "expected_output": "3 3 7\n3 7 7\n3 7 7",
        "transformed_output": "7 7 7\n7 7 7\n7 7 7",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      },
      {
        "example": 2,
        "input": "0 0 0 0 0 0 0 0 4 0\n0 0 0 0 0 0 0 0 4 4\n0 0 0 6 6 6 0 0 0 0\n0 0 0 0 6 6 0 0 0 0\n0 0 0 0 0 6 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "6 6 6\n4 6 6\n4 4 6",
        "transformed_output": "6 6 6\n6 6 6\n6 6 6",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 66.66666666666666
      },
      {
        "example": 3,
        "input": "0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 3 0 0 0 0 0\n0 0 0 3 3 3 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 1 1 1 0 0 0 0 0 0\n0 1 0 1 0 0 0 0 0 0",
        "expected_output": "1 1 1\n1 3 1\n3 3 3",
        "transformed_output": "1 1 1\n1 1 1\n1 1 1",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 55.55555555555556
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}