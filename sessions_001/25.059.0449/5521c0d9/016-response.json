{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nShift colored objects (blue vertical line, yellow rectangle, red horizontal line) upwards by a specific number of rows.\nThe blue line shifts up by 4 rows, the yellow rectangle by 2 rows, and the red line by 1 row.\n\"\"\"\n\nimport numpy as np\n\ndef find_object(grid, color):\n    # Find coordinates of pixels of the specified color.\n    coords = np.argwhere(grid == color)\n    return coords\n\ndef shift_object_up(grid, coords, shift_amount):\n    # Create a copy of the grid to modify.\n    new_grid = np.copy(grid)\n\n    # Remove the original object\n    for r, c in coords:\n        new_grid[r, c] = 0\n\n    # Add the object back at the shifted position\n    for r, c in coords:\n        new_r = r - shift_amount\n        if 0 <= new_r < new_grid.shape[0]: #keep within bounds\n            new_grid[new_r, c] = grid[r,c]\n    return new_grid\n    \n\ndef transform(input_grid):\n    # initialize output_grid\n    output_grid = np.copy(input_grid)\n\n    # Find and shift the blue object.\n    blue_coords = find_object(output_grid, 1)\n    if len(blue_coords)>0:\n      output_grid = shift_object_up(output_grid, blue_coords, 4)\n\n    # Find and shift the yellow object.\n    yellow_coords = find_object(output_grid, 4)\n    if len(yellow_coords) > 0:\n        output_grid = shift_object_up(output_grid, yellow_coords, 2)\n\n    # Find and shift the red object\n    red_coords = find_object(output_grid,2)\n    if len(red_coords) > 0:\n      output_grid = shift_object_up(output_grid, red_coords, 1)\n    \n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2942,
    "candidates_token_count": 475,
    "total_token_count": 3417,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 6.663543,
  "response_file": "016-response.json"
}