{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4259,
        "candidates": 334,
        "total": 4593,
        "cached": 0
      },
      "response_time": 6.371445
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4455,
        "candidates": 252,
        "total": 4707,
        "cached": 0
      },
      "response_time": 3.721327
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 1503,
        "candidates": 764,
        "total": 2267,
        "cached": 0
      },
      "response_time": 10.475852
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2059,
        "candidates": 350,
        "total": 2409,
        "cached": 0
      },
      "response_time": 4.025412
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1600,
        "candidates": 928,
        "total": 2528,
        "cached": 0
      },
      "response_time": 9.989589
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 2323,
        "candidates": 293,
        "total": 2616,
        "cached": 0
      },
      "response_time": 26.339896
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 565,
        "total": 2682,
        "cached": 0
      },
      "response_time": 8.274021
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2544,
        "candidates": 174,
        "total": 2718,
        "cached": 0
      },
      "response_time": 2.610293
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 1425,
        "candidates": 1768,
        "total": 3193,
        "cached": 0
      },
      "response_time": 16.749691
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2993,
        "candidates": 221,
        "total": 3214,
        "cached": 0
      },
      "response_time": 2.403993
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1473,
        "candidates": 1637,
        "total": 3110,
        "cached": 0
      },
      "response_time": 17.66778
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 2895,
        "candidates": 226,
        "total": 3121,
        "cached": 0
      },
      "response_time": 7.676127
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 691,
        "total": 2808,
        "cached": 0
      },
      "response_time": 10.136975
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 2668,
        "candidates": 407,
        "total": 3075,
        "cached": 0
      },
      "response_time": 5.864088
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 1657,
        "candidates": 6493,
        "total": 8150,
        "cached": 0
      },
      "response_time": 56.192507
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 6738,
        "candidates": 950,
        "total": 7688,
        "cached": 0
      },
      "response_time": 11.565831
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 7484,
        "candidates": 398,
        "total": 7882,
        "cached": 0
      },
      "response_time": 3.783157
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 7945,
        "candidates": 690,
        "total": 8635,
        "cached": 0
      },
      "response_time": 7.122572
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 490,
        "total": 2607,
        "cached": 0
      },
      "response_time": 7.43263
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2469,
        "candidates": 194,
        "total": 2663,
        "cached": 0
      },
      "response_time": 3.115111
    },
    {
      "response_file": "021-response.json",
      "token_usage": {
        "prompt": 1445,
        "candidates": 1428,
        "total": 2873,
        "cached": 0
      },
      "response_time": 16.745221
    },
    {
      "response_file": "022-response.json",
      "token_usage": {
        "prompt": 2665,
        "candidates": 206,
        "total": 2871,
        "cached": 0
      },
      "response_time": 2.781631
    },
    {
      "response_file": "023-response.json",
      "token_usage": {
        "prompt": 1457,
        "candidates": 1114,
        "total": 2571,
        "cached": 0
      },
      "response_time": 16.250045
    },
    {
      "response_file": "024-response.json",
      "token_usage": {
        "prompt": 2365,
        "candidates": 206,
        "total": 2571,
        "cached": 0
      },
      "response_time": 2.54526
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 5 5 0 0\n5 5 5 5 0 0 5 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 5 0 5 0 0 0 1 0 0\n5 5 5 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 5 5 5 0 0 0 0 0 0\n0 0 5 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 88.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 5 5 0 0\n5 5 5 5 0 0 5 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 5 0 5 0 0 0 1 0 0\n5 5 5 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 5 5 5 0 0 0 0 0 0\n0 0 5 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 88.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 5 5 0 0\n5 5 5 5 0 0 5 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 5 0 5 0 0 0 1 0 0\n5 5 5 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 5 5 5 0 0 0 0 0 0\n0 0 5 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 88.0
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 5 5 5 0 0 0 0 0 0\n0 0 5 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 92.0
      }
    ],
    "009-py_05-train": [],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 5 5 5 0 0 0 0 0 0\n0 0 5 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 92.0
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 5 5 5 0 0 0 0 0 0\n0 0 5 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 92.0
      }
    ],
    "012-py_08-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 5 5 5 0 0 0 0 0 0\n0 0 5 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 8,
        "percent_correct": 92.0
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 96.0
      }
    ],
    "015-py_10-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 96.0
      }
    ],
    "016-py_11-train": [],
    "017-py_12-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 96.0
      }
    ],
    "018-py_13-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 5,
        "percent_correct": 95.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 96.0
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "5 5 0 5 0 0 0 7 0 0\n0 5 5 5 0 0 7 7 7 0\n0 0 5 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 90.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 3,
        "percent_correct": 97.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": true,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 0,
        "percent_correct": 100.0
      }
    ],
    "022-py_15-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "5 5 0 5 0 0 0 5 0 0\n0 5 5 5 0 0 5 5 5 0\n0 0 5 5 0 0 0 5 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n5 5 5 0 0 0 5 5 0 0\n0 0 5 0 0 0 0 5 0 0\n0 0 0 0 5 0 0 0 0 0\n0 0 0 5 5 5 5 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 81.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 5 0 5 0 0 0 0 0 0\n5 5 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 5 5 0 0\n5 5 5 5 0 0 5 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n5 5 0 0 0 0 0 5 5 0\n5 5 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 87.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 5 0 5 0 0 0 5 0 0\n5 5 5 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 5 0 0 0\n0 0 0 0 0 0 5 5 0 0\n0 0 0 0 0 0 5 0 0 0\n0 5 5 5 0 0 0 0 0 0\n0 0 5 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 88.0
      }
    ],
    "023-py_16-train": [],
    "024-py_17-train": [
      {
        "example": 1,
        "input": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 6 6 0 0 0\n7 7 7 0 0 0 6 6 0 0\n0 0 7 0 0 0 0 6 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "expected_output": "1 1 0 5 0 0 0 7 0 0\n0 1 1 5 0 0 7 7 7 0\n0 0 1 5 0 0 0 7 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n7 7 7 0 0 0 5 5 0 0\n0 0 7 0 0 0 0 5 0 0\n0 0 0 0 8 0 0 0 0 0\n0 0 0 8 8 8 8 0 0 0",
        "transformed_output": "5 5 0 5 0 0 0 5 0 0\n0 5 5 5 0 0 5 5 5 0\n0 0 5 5 0 0 0 5 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 5 5 0 0 0\n5 5 5 0 0 0 5 5 0 0\n0 0 5 0 0 0 0 5 0 0\n0 0 0 0 5 0 0 0 0 0\n0 0 0 5 5 5 5 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 81.0
      },
      {
        "example": 2,
        "input": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 9 0\n8 8 0 0 0 0 0 9 9 0\n8 8 0 0 0 0 0 0 0 0",
        "expected_output": "0 3 0 5 0 0 0 0 0 0\n3 3 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 4 4 0 0\n5 5 5 5 0 0 4 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 7 7 7 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n8 8 0 0 0 0 0 5 5 0\n8 8 0 0 0 0 0 0 0 0",
        "transformed_output": "0 5 0 5 0 0 0 0 0 0\n5 5 0 5 0 0 0 0 0 0\n0 0 0 5 0 0 5 5 0 0\n5 5 5 5 0 0 5 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0\n0 0 5 5 5 0 0 0 0 0\n0 0 0 0 0 0 0 0 5 0\n5 5 0 0 0 0 0 5 5 0\n5 5 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 87.0
      },
      {
        "example": 3,
        "input": "0 4 0 5 0 0 0 1 0 0\n4 4 4 5 0 0 1 1 1 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "expected_output": "0 4 0 5 0 0 0 5 0 0\n4 4 4 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 3 0 0 0\n0 0 0 0 0 0 3 3 0 0\n0 0 0 0 0 0 3 0 0 0\n0 6 6 6 0 0 0 0 0 0\n0 0 6 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "transformed_output": "0 5 0 5 0 0 0 5 0 0\n5 5 5 5 0 0 5 5 5 0\n0 0 0 5 0 0 0 0 0 0\n5 5 5 5 0 0 0 0 0 0\n0 0 0 0 0 0 5 0 0 0\n0 0 0 0 0 0 5 5 0 0\n0 0 0 0 0 0 5 0 0 0\n0 5 5 5 0 0 0 0 0 0\n0 0 5 0 0 0 0 0 0 0\n0 0 0 0 0 0 0 0 0 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 88.0
      }
    ]
  },
  "best_train_results": {
    "passed": 1,
    "total": 3
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}