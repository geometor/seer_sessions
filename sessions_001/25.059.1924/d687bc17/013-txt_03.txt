np.array_equal(output_grid,predicted_output)=False
np.array_equal(output_grid,predicted_output)=False
np.array_equal(output_grid,predicted_output)=True
np.array_equal(output_grid,predicted_output)=False
[{'input_shape': (5, 10), 'output_shape': (5, 10), 'changed_pixels': [{'position': (1, 1), 'input_color': 1, 'output_color': 0}, {'position': (2, 1), 'input_color': 0, 'output_color': 1}], 'input_colors': [0, 1, 8], 'output_colors': [0, 1, 8], 'border_preserved': True}, {'input_shape': (5, 10), 'output_shape': (5, 10), 'changed_pixels': [{'position': (2, 3), 'input_color': 5, 'output_color': 0}], 'input_colors': [0, 5, 8], 'output_colors': [0, 8], 'border_preserved': True}, {'input_shape': (7, 14), 'output_shape': (7, 14), 'changed_pixels': [], 'input_colors': [0, 2], 'output_colors': [0, 2], 'border_preserved': True}, {'input_shape': (5, 13), 'output_shape': (5, 13), 'changed_pixels': [{'position': (4, 8), 'input_color': 0, 'output_color': 8}, {'position': (4, 9), 'input_color': 0, 'output_color': 8}, {'position': (4, 10), 'input_color': 0, 'output_color': 8}], 'input_colors': [0, 3, 8], 'output_colors': [3, 8], 'border_preserved': True}]