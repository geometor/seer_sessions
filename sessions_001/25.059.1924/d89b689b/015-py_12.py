import numpy as np

def calculate_object_properties(grid):
    objects = find_objects(grid)
    properties = []
    for obj in objects:
        coords = obj['coords']
        min_r, min_c = np.min(coords, axis=0)
        max_r, max_c = np.max(coords, axis=0)
        width = max_c - min_c + 1
        height = max_r - min_r + 1
        size = len(coords)
        properties.append({
            'color': obj['color'],
            'top_left': (min_r, min_c),
            'bottom_right': (max_r, max_c),
            'width': width,
            'height': height,
            'size': size,
            'shape': 'rectangle' if width>1 and height > 1 else 'point'
        })
    return properties

def print_object_properties(input, output):
    print("Input Object Properties:")
    for obj in calculate_object_properties(np.array(input)):
        print(obj)
    print("\nOutput Object Properties:")
    for obj in calculate_object_properties(np.array(output)):
        print(obj)
    print('-'*20)

examples = [
    {
        "input": [
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        ],
        "output": [
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 8, 8, 8, 8, 8, 8, 8, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 2, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 4],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 3, 0, 0, 0, 0],
            [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        ]
    },
    {
        "input": [
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 4, 0, 0, 0],
          [0, 0, 0, 0, 0, 6, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        ],
        "output": [
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 8, 8, 8],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 4, 0, 0, 0],
          [0, 0, 0, 0, 0, 6, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        ]
    },
    {
        "input": [
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 8, 8, 8, 8, 8, 8, 0, 0],
          [0, 0, 8, 8, 8, 8, 8, 8, 0, 0],
          [0, 0, 8, 8, 8, 8, 8, 8, 0, 0],
          [0, 0, 8, 8, 8, 8, 8, 8, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 5, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        ],
        "output": [
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 8, 8, 8, 8, 8, 8, 0, 0],
          [0, 0, 8, 8, 8, 8, 8, 8, 0, 0],
          [0, 0, 8, 8, 8, 8, 8, 8, 0, 0],
          [0, 0, 8, 8, 8, 8, 8, 8, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 1, 0, 0, 0, 0, 0, 0, 0, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 5, 0],
          [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
        ]
    }
]

for example in examples:
    print_object_properties(example["input"], example["output"])