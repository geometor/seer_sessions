{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4259,
        "candidates": 565,
        "total": 4824,
        "cached": 0
      },
      "response_time": 9.538884
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4684,
        "candidates": 413,
        "total": 5097,
        "cached": 0
      },
      "response_time": 5.090315
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 536,
        "total": 2653,
        "cached": 0
      },
      "response_time": 7.316226
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2515,
        "candidates": 478,
        "total": 2993,
        "cached": 0
      },
      "response_time": 5.375392
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1729,
        "candidates": 3800,
        "total": 5529,
        "cached": 0
      },
      "response_time": 29.590784
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3336,
        "candidates": 1571,
        "total": 4907,
        "cached": 0
      },
      "response_time": 16.042767
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 4704,
        "candidates": 548,
        "total": 5252,
        "cached": 0
      },
      "response_time": 5.665345
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 5330,
        "candidates": 547,
        "total": 5877,
        "cached": 0
      },
      "response_time": 5.051657
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 505,
        "total": 2622,
        "cached": 0
      },
      "response_time": 6.82051
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2484,
        "candidates": 374,
        "total": 2858,
        "cached": 0
      },
      "response_time": 4.54692
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1625,
        "candidates": 3605,
        "total": 5230,
        "cached": 0
      },
      "response_time": 30.114387
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 3600,
        "candidates": 1017,
        "total": 4617,
        "cached": 0
      },
      "response_time": 11.932133
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 4406,
        "candidates": 292,
        "total": 4698,
        "cached": 0
      },
      "response_time": 3.520754
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 5020,
        "candidates": 336,
        "total": 5356,
        "cached": 0
      },
      "response_time": 3.410111
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 526,
        "total": 2643,
        "cached": 0
      },
      "response_time": 6.83245
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2504,
        "candidates": 351,
        "total": 2855,
        "cached": 0
      },
      "response_time": 3.82287
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1601,
        "candidates": 3255,
        "total": 4856,
        "cached": 0
      },
      "response_time": 30.140978
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 2987,
        "candidates": 3531,
        "total": 6518,
        "cached": 0
      },
      "response_time": 29.471179
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 6303,
        "candidates": 544,
        "total": 6847,
        "cached": 0
      },
      "response_time": 5.161233
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 4639,
        "candidates": 524,
        "total": 5163,
        "cached": 0
      },
      "response_time": 5.458303
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 1 5 5 5 1 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 5 5 2 2 5 5 5 5\n3 5 3 5 5 5 5 3 5 3\n3 5 5 5 3 3 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 85.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 1 1 5 5 5\n1 1 5 1 5 5 5 5 5 1\n5 5 5 5 5 2 5 2 2 5\n5 2 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 2 5\n5 5 5 5 2 5 5 5 5 5\n3 3 5 5 3 5 3 3 5 3\n5 5 5 5 5 5 5 3 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 80.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "1 1 5 5 1 5 5 5 1 5\n5 5 1 1 5 5 5 5 2 5\n5 2 5 2 5 2 5 5 2 5\n5 2 5 5 2 5 5 5 5 5\n5 5 5 3 3 5 5 3 5 3\n5 5 3 5 5 5 5 3 5 3\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 22,
        "percent_correct": 78.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 3 5 5 5 2 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 0 2 5 2\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n3 5 3 5 5 5 5 2 5 2\n3 5 5 5 0 0 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 2 5 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 86.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 3 3 5 5 5\n1 1 5 0 5 5 5 5 5 2\n5 5 5 5 5 0 5 2 2 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 2 5\n5 5 5 5 0 5 5 5 5 5\n3 3 5 5 0 5 0 2 5 2\n5 5 5 5 5 5 5 2 5 5\n0 5 5 5 5 5 0 5 5 2\n3 3 5 5 5 5 5 5 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "1 1 5 5 3 5 5 5 2 5\n5 5 1 0 5 5 5 5 2 5\n5 1 5 0 5 0 5 5 2 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 2 5 2\n5 5 3 5 5 5 5 2 5 2\n5 5 3 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 2 5 5\n5 5 3 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 80.0
      }
    ],
    "005-py_03-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 3 5 5 5 2 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 0 2 5 2\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n3 5 3 5 5 5 5 2 5 2\n3 5 5 5 0 0 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 2 5 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 86.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 3 3 5 5 5\n1 1 5 0 5 5 5 5 5 2\n5 5 5 5 5 0 5 2 2 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 2 5\n5 5 5 5 0 5 5 5 5 5\n3 3 5 5 0 5 0 2 5 2\n5 5 5 5 5 5 5 2 5 5\n0 5 5 5 5 5 0 5 5 2\n3 3 5 5 5 5 5 5 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "1 1 5 5 3 5 5 5 2 5\n5 5 1 0 5 5 5 5 2 5\n5 1 5 0 5 0 5 5 2 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 2 5 2\n5 5 3 5 5 5 5 2 5 2\n5 5 3 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 2 5 5\n5 5 3 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 20,
        "percent_correct": 80.0
      }
    ],
    "007-py_04-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "1 1 1 3 3 3 3 2 2 2\n1 1 1 5 5 5 5 2 2 2\n1 1 1 5 5 5 0 2 2 2\n3 5 0 5 5 5 5 0 5 3\n3 5 5 5 0 0 5 5 5 3\n3 5 0 5 5 5 5 0 5 3\n3 5 5 5 0 0 5 5 5 3\n5 5 5 5 5 5 5 2 2 2\n5 5 5 5 5 5 5 2 2 2\n0 5 5 3 3 3 3 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 46,
        "percent_correct": 54.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "1 1 1 3 3 3 3 2 2 2\n1 1 1 0 5 5 5 2 2 2\n1 1 1 5 5 0 5 2 2 2\n3 0 5 5 5 0 5 5 5 3\n3 5 5 5 5 5 5 5 0 3\n3 5 5 5 0 5 5 5 5 3\n3 0 5 5 0 5 0 0 5 3\n5 5 5 5 5 5 5 2 2 2\n0 5 5 5 5 5 0 2 2 2\n0 0 5 3 3 3 3 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 54,
        "percent_correct": 46.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "1 1 1 3 3 3 3 2 2 2\n1 1 1 0 5 5 5 2 2 2\n1 1 1 0 5 0 5 2 2 2\n3 0 5 5 0 5 5 5 5 3\n3 5 5 0 0 5 5 0 5 3\n3 5 0 5 5 5 5 0 5 3\n3 5 0 5 5 0 5 5 5 3\n5 5 5 0 5 5 5 2 2 2\n5 0 5 5 5 0 5 2 2 2\n5 5 0 3 3 3 3 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 57,
        "percent_correct": 43.0
      }
    ],
    "008-py_05-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 3 5 5 5 2 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 0 2 5 2\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 2 5 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 3 3 5 5 5\n1 1 5 0 5 5 5 5 5 2\n5 5 5 5 5 0 5 2 2 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 2 5 5\n3 5 5 5 5 5 0 5 5 2\n3 3 5 5 5 5 5 5 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 76.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "1 1 5 5 3 5 5 5 2 5\n5 5 1 0 5 5 5 5 2 5\n5 1 5 0 5 0 5 5 2 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 3 5 5 5 0 5 2 5 5\n5 5 3 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 23,
        "percent_correct": 77.0
      }
    ],
    "010-py_06-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 2 5 5 5 3 5\n2 2 5 5 5 5 5 5 5 5\n2 5 5 5 5 5 2 3 5 3\n5 5 0 5 5 5 5 3 5 3\n5 5 5 5 2 2 5 5 5 5\n0 5 0 5 5 5 5 3 5 3\n0 5 5 5 1 1 5 5 5 3\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n1 5 5 5 5 5 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 79.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 2 5 5 5 5 5 3\n5 5 5 5 5 2 5 3 3 5\n5 0 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 1 5 5 5 5 5\n0 0 5 5 1 5 1 3 5 3\n5 5 5 5 5 5 5 0 5 5\n1 5 5 5 5 5 1 5 5 0\n1 1 5 5 5 5 5 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 87.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "2 2 5 5 2 5 5 5 3 5\n5 5 2 2 5 5 5 5 3 5\n5 2 5 2 5 2 5 5 3 5\n5 0 5 5 2 5 5 5 5 5\n5 5 5 2 2 5 5 3 5 3\n5 5 0 5 5 5 5 3 5 3\n5 5 0 5 5 1 5 5 5 5\n5 5 5 1 5 5 5 5 5 5\n5 1 5 5 5 1 5 0 5 5\n5 5 1 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 76.0
      }
    ],
    "011-py_07-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 2 5 5 5 3 5\n2 2 5 5 5 5 5 5 5 5\n2 5 5 5 5 5 2 3 5 3\n5 5 0 5 5 5 5 3 5 3\n5 5 5 5 2 2 5 5 5 5\n0 5 0 5 5 5 5 3 5 3\n0 5 5 5 1 1 5 5 5 3\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n1 5 5 5 5 5 5 0 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 79.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 2 5 5 5 5 5 3\n5 5 5 5 5 2 5 3 3 5\n5 0 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 1 5 5 5 5 5\n0 0 5 5 1 5 1 3 5 3\n5 5 5 5 5 5 5 0 5 5\n1 5 5 5 5 5 1 5 5 0\n1 1 5 5 5 5 5 5 0 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 13,
        "percent_correct": 87.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "2 2 5 5 2 5 5 5 3 5\n5 5 2 2 5 5 5 5 3 5\n5 2 5 2 5 2 5 5 3 5\n5 0 5 5 2 5 5 5 5 5\n5 5 5 2 2 5 5 3 5 3\n5 5 0 5 5 5 5 3 5 3\n5 5 0 5 5 1 5 5 5 5\n5 5 5 1 5 5 5 5 5 5\n5 1 5 5 5 1 5 0 5 5\n5 5 1 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": false,
        "correct_pixel_counts": false,
        "pixels_off": 24,
        "percent_correct": 76.0
      }
    ],
    "013-py_08-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 2 5 5 5 3 5\n2 2 5 5 5 5 5 5 5 5\n2 5 5 5 5 5 3 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 5 5 3 2 5 5 5 5\n2 5 3 5 5 5 5 2 5 2\n3 5 5 5 2 2 5 5 5 3\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 3\n2 5 5 5 5 5 5 3 5 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 14,
        "percent_correct": 86.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 2 3 5 5 5\n2 2 5 2 5 5 5 5 5 2\n5 5 5 5 5 3 5 2 2 5\n5 2 5 5 5 3 5 5 5 5\n5 5 5 5 5 5 5 5 2 5\n5 5 5 5 2 5 5 5 5 5\n3 3 5 5 2 5 2 2 5 3\n5 5 5 5 5 5 5 2 5 5\n3 5 5 5 5 5 2 5 5 3\n2 2 5 5 5 5 5 5 3 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 84.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "2 2 5 5 2 5 5 5 3 5\n5 5 2 2 5 5 5 5 2 5\n5 2 5 2 5 3 5 5 2 5\n5 2 5 5 3 5 5 5 5 5\n5 5 5 3 3 5 5 2 5 2\n5 5 3 5 5 5 5 2 5 2\n5 5 3 5 5 2 5 5 5 5\n5 5 5 2 5 5 5 5 5 5\n5 2 5 5 5 2 5 3 5 5\n5 5 2 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      }
    ],
    "014-py_09-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 2 5 5 5 3 5\n2 2 5 5 5 5 5 5 5 5\n2 5 5 5 5 5 2 3 5 3\n5 5 2 5 5 5 5 3 5 3\n5 5 5 5 2 2 5 5 5 5\n2 5 2 5 5 5 5 3 5 3\n2 5 5 5 2 2 5 5 5 3\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n1 5 5 5 5 5 5 2 5 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 85.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 2 5 5 5 5 5 3\n5 5 5 5 5 2 5 3 3 5\n5 2 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 2 3 5 3\n5 5 5 5 5 5 5 2 5 5\n1 5 5 5 5 5 2 5 5 2\n1 1 5 5 5 5 5 5 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 10,
        "percent_correct": 90.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "2 2 5 5 2 5 5 5 3 5\n5 5 2 2 5 5 5 5 3 5\n5 2 5 2 5 2 5 5 3 5\n5 2 5 5 2 5 5 5 5 5\n5 5 5 2 2 5 5 3 5 3\n5 5 2 5 5 5 5 3 5 3\n5 5 2 5 5 2 5 5 5 5\n5 5 5 2 5 5 5 5 5 5\n5 1 5 5 5 2 5 2 5 5\n5 5 1 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 79.0
      }
    ],
    "016-py_10-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 2 5 5 5 2 5\n1 3 5 5 5 5 5 5 5 5\n2 5 5 5 5 5 2 1 5 1\n5 5 1 5 5 5 5 3 5 3\n5 5 5 5 2 1 5 5 5 5\n1 5 1 5 5 5 5 3 5 3\n2 5 5 5 2 1 5 5 5 1\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 1\n1 5 5 5 5 5 5 3 5 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 1 2 5 5 5\n1 3 5 3 5 5 5 5 5 3\n5 5 5 5 5 1 5 1 2 5\n5 3 5 5 5 3 5 5 5 5\n5 5 5 5 5 5 5 5 2 5\n5 5 5 5 1 5 5 5 5 5\n2 1 5 5 2 5 2 1 5 1\n5 5 5 5 5 5 5 3 5 5\n2 5 5 5 5 5 2 5 5 1\n1 3 5 5 5 5 5 5 1 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "2 1 5 5 2 5 5 5 2 5\n5 5 1 3 5 5 5 5 1 5\n5 1 5 1 5 1 5 5 2 5\n5 3 5 5 1 5 5 5 5 5\n5 5 5 1 2 5 5 1 5 1\n5 5 1 5 5 5 5 3 5 3\n5 5 2 5 5 1 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 1 5 5 5 1 5 1 5 5\n5 5 1 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 81.0
      }
    ],
    "017-py_11-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 2 5 5 5 2 5\n1 3 5 5 5 5 5 5 5 5\n2 5 5 5 5 5 2 1 5 1\n5 5 1 5 5 5 5 3 5 3\n5 5 5 5 2 1 5 5 5 5\n1 5 1 5 5 5 5 3 5 3\n2 5 5 5 2 1 5 5 5 1\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 1\n1 5 5 5 5 5 5 3 5 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 1 2 5 5 5\n1 3 5 3 5 5 5 5 5 3\n5 5 5 5 5 1 5 1 2 5\n5 3 5 5 5 3 5 5 5 5\n5 5 5 5 5 5 5 5 2 5\n5 5 5 5 1 5 5 5 5 5\n2 1 5 5 2 5 2 1 5 1\n5 5 5 5 5 5 5 3 5 5\n2 5 5 5 5 5 2 5 5 1\n1 3 5 5 5 5 5 5 1 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "2 1 5 5 2 5 5 5 2 5\n5 5 1 3 5 5 5 5 1 5\n5 1 5 1 5 1 5 5 2 5\n5 3 5 5 1 5 5 5 5 5\n5 5 5 1 2 5 5 1 5 1\n5 5 1 5 5 5 5 3 5 3\n5 5 2 5 5 1 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 1 5 5 5 1 5 1 5 5\n5 5 1 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 81.0
      }
    ],
    "018-py_12-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 2 5 5 5 2 5\n1 3 5 5 5 5 5 5 5 5\n2 5 5 5 5 5 2 1 5 1\n5 5 1 5 5 5 5 3 5 3\n5 5 5 5 2 1 5 5 5 5\n1 5 1 5 5 5 5 3 5 3\n2 5 5 5 2 1 5 5 5 1\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 1\n1 5 5 5 5 5 5 3 5 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 1 2 5 5 5\n1 3 5 3 5 5 5 5 5 3\n5 5 5 5 5 1 5 1 2 5\n5 3 5 5 5 3 5 5 5 5\n5 5 5 5 5 5 5 5 2 5\n5 5 5 5 1 5 5 5 5 5\n2 1 5 5 2 5 2 1 5 1\n5 5 5 5 5 5 5 3 5 5\n2 5 5 5 5 5 2 5 5 1\n1 3 5 5 5 5 5 5 1 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "2 1 5 5 2 5 5 5 2 5\n5 5 1 3 5 5 5 5 1 5\n5 1 5 1 5 1 5 5 2 5\n5 3 5 5 1 5 5 5 5 5\n5 5 5 1 2 5 5 1 5 1\n5 5 1 5 5 5 5 3 5 3\n5 5 2 5 5 1 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 1 5 5 5 1 5 1 5 5\n5 5 1 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 19,
        "percent_correct": 81.0
      }
    ],
    "019-py_13-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 2 5 5 5 2 5\n1 3 5 5 5 5 5 5 5 5\n2 5 5 5 5 5 2 1 5 1\n5 5 3 5 5 5 5 1 5 1\n5 5 5 5 2 1 5 5 5 5\n1 5 1 5 5 5 5 3 5 3\n2 5 5 5 2 1 5 5 5 1\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 1\n1 5 5 5 5 5 5 3 5 3",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 84.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 1 2 5 5 5\n1 3 5 3 5 5 5 5 5 3\n5 5 5 5 5 1 5 1 2 5\n5 1 5 5 5 1 5 5 5 5\n5 5 5 5 5 5 5 5 2 5\n5 5 5 5 1 5 5 5 5 5\n2 1 5 5 2 5 2 1 5 1\n5 5 5 5 5 5 5 1 5 5\n2 5 5 5 5 5 2 5 5 1\n1 3 5 5 5 5 5 5 1 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "2 1 5 5 2 5 5 5 2 5\n5 5 1 3 5 5 5 5 1 5\n5 1 5 1 5 1 5 5 2 5\n5 1 5 5 3 5 5 5 5 5\n5 5 5 1 2 5 5 1 5 1\n5 5 1 5 5 5 5 3 5 3\n5 5 2 5 5 1 5 5 5 5\n5 5 5 1 5 5 5 5 5 5\n5 1 5 5 5 1 5 1 5 5\n5 5 1 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 79.0
      }
    ],
    "020-py_14-train": [
      {
        "example": 1,
        "input": "5 5 5 5 0 5 5 5 0 5\n0 0 5 5 5 5 5 5 5 5\n0 5 5 5 5 5 0 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 5 5 0 0 5 5 5 5\n0 5 0 5 5 5 5 0 5 0\n0 5 5 5 0 0 5 5 5 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 0\n0 5 5 5 5 5 5 0 5 0",
        "expected_output": "5 5 5 5 3 5 5 5 3 5\n1 1 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 1 1 5 2\n5 5 3 5 5 5 5 1 5 2\n5 5 5 5 2 2 5 5 5 5\n2 5 3 5 5 5 5 3 5 2\n2 5 5 5 2 2 5 5 5 2\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n3 5 5 5 5 5 5 3 5 2",
        "transformed_output": "5 5 5 5 2 5 5 5 1 5\n3 2 5 5 5 5 5 5 5 5\n1 5 5 5 5 5 3 2 5 1\n5 5 3 5 5 5 5 2 5 1\n5 5 5 5 3 2 5 5 5 5\n1 5 3 5 5 5 5 2 5 1\n3 5 5 5 2 1 5 5 5 3\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 2\n1 5 5 5 5 5 5 3 5 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      },
      {
        "example": 2,
        "input": "5 5 5 5 5 0 0 5 5 5\n0 0 5 0 5 5 5 5 5 0\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 5 5 5 5\n5 5 5 5 5 5 5 5 0 5\n5 5 5 5 0 5 5 5 5 5\n0 0 5 5 0 5 0 0 5 0\n5 5 5 5 5 5 5 0 5 5\n0 5 5 5 5 5 0 5 5 0\n0 0 5 5 5 5 5 5 0 5",
        "expected_output": "5 5 5 5 5 2 2 5 5 5\n2 2 5 3 5 5 5 5 5 3\n5 5 5 5 5 2 5 2 2 5\n5 3 5 5 5 2 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n2 2 5 5 2 5 1 1 5 3\n5 5 5 5 5 5 5 1 5 5\n1 5 5 5 5 5 3 5 5 3\n1 1 5 5 5 5 5 5 3 5",
        "transformed_output": "5 5 5 5 5 2 1 5 5 5\n3 2 5 1 5 5 5 5 5 3\n5 5 5 5 5 2 5 1 3 5\n5 2 5 5 5 1 5 5 5 5\n5 5 5 5 5 5 5 5 3 5\n5 5 5 5 2 5 5 5 5 5\n1 3 5 5 2 5 1 3 5 2\n5 5 5 5 5 5 5 1 5 5\n3 5 5 5 5 5 2 5 5 1\n3 2 5 5 5 5 5 5 1 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 17,
        "percent_correct": 83.0
      },
      {
        "example": 3,
        "input": "0 0 5 5 0 5 5 5 0 5\n5 5 0 0 5 5 5 5 0 5\n5 0 5 0 5 0 5 5 0 5\n5 0 5 5 0 5 5 5 5 5\n5 5 5 0 0 5 5 0 5 0\n5 5 0 5 5 5 5 0 5 0\n5 5 0 5 5 0 5 5 5 5\n5 5 5 0 5 5 5 5 5 5\n5 0 5 5 5 0 5 0 5 5\n5 5 0 5 5 5 5 5 5 5",
        "expected_output": "2 2 5 5 3 5 5 5 1 5\n5 5 1 1 5 5 5 5 1 5\n5 2 5 1 5 3 5 5 1 5\n5 2 5 5 1 5 5 5 5 5\n5 5 5 1 1 5 5 2 5 2\n5 5 2 5 5 5 5 2 5 2\n5 5 2 5 5 3 5 5 5 5\n5 5 5 3 5 5 5 5 5 5\n5 3 5 5 5 3 5 3 5 5\n5 5 3 5 5 5 5 5 5 5",
        "transformed_output": "2 1 5 5 3 5 5 5 2 5\n5 5 1 3 5 5 5 5 2 5\n5 1 5 3 5 2 5 5 1 5\n5 3 5 5 2 5 5 5 5 5\n5 5 5 1 3 5 5 2 5 1\n5 5 3 5 5 5 5 2 5 1\n5 5 3 5 5 2 5 5 5 5\n5 5 5 1 5 5 5 5 5 5\n5 3 5 5 5 2 5 1 5 5\n5 5 3 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}