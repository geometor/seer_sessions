{
  "response_report": [
    {
      "response_file": "001-response.json",
      "token_usage": {
        "prompt": 4259,
        "candidates": 372,
        "total": 4631,
        "cached": 0
      },
      "response_time": 8.675892
    },
    {
      "response_file": "002-response.json",
      "token_usage": {
        "prompt": 4499,
        "candidates": 421,
        "total": 4920,
        "cached": 0
      },
      "response_time": 4.451385
    },
    {
      "response_file": "003-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 460,
        "total": 2577,
        "cached": 0
      },
      "response_time": 7.753983
    },
    {
      "response_file": "004-response.json",
      "token_usage": {
        "prompt": 2436,
        "candidates": 502,
        "total": 2938,
        "cached": 0
      },
      "response_time": 5.482641
    },
    {
      "response_file": "005-response.json",
      "token_usage": {
        "prompt": 1752,
        "candidates": 1653,
        "total": 3405,
        "cached": 0
      },
      "response_time": 16.127746
    },
    {
      "response_file": "006-response.json",
      "token_usage": {
        "prompt": 3204,
        "candidates": 458,
        "total": 3662,
        "cached": 0
      },
      "response_time": 3.927697
    },
    {
      "response_file": "007-response.json",
      "token_usage": {
        "prompt": 1708,
        "candidates": 718,
        "total": 2426,
        "cached": 0
      },
      "response_time": 9.740695
    },
    {
      "response_file": "008-response.json",
      "token_usage": {
        "prompt": 2223,
        "candidates": 551,
        "total": 2774,
        "cached": 0
      },
      "response_time": 4.947569
    },
    {
      "response_file": "009-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 391,
        "total": 2508,
        "cached": 0
      },
      "response_time": 5.606916
    },
    {
      "response_file": "010-response.json",
      "token_usage": {
        "prompt": 2369,
        "candidates": 527,
        "total": 2896,
        "cached": 0
      },
      "response_time": 6.495693
    },
    {
      "response_file": "011-response.json",
      "token_usage": {
        "prompt": 1778,
        "candidates": 7824,
        "total": 9602,
        "cached": 0
      },
      "response_time": 76.710046
    },
    {
      "response_file": "012-response.json",
      "token_usage": {
        "prompt": 9395,
        "candidates": 617,
        "total": 10012,
        "cached": 0
      },
      "response_time": 6.835335
    },
    {
      "response_file": "013-response.json",
      "token_usage": {
        "prompt": 1868,
        "candidates": 4368,
        "total": 6236,
        "cached": 0
      },
      "response_time": 35.131037
    },
    {
      "response_file": "014-response.json",
      "token_usage": {
        "prompt": 6033,
        "candidates": 575,
        "total": 6608,
        "cached": 0
      },
      "response_time": 5.744691
    },
    {
      "response_file": "015-response.json",
      "token_usage": {
        "prompt": 2117,
        "candidates": 490,
        "total": 2607,
        "cached": 0
      },
      "response_time": 7.65426
    },
    {
      "response_file": "016-response.json",
      "token_usage": {
        "prompt": 2467,
        "candidates": 272,
        "total": 2739,
        "cached": 0
      },
      "response_time": 3.524593
    },
    {
      "response_file": "017-response.json",
      "token_usage": {
        "prompt": 1523,
        "candidates": 2855,
        "total": 4378,
        "cached": 0
      },
      "response_time": 26.546253
    },
    {
      "response_file": "018-response.json",
      "token_usage": {
        "prompt": 4168,
        "candidates": 111,
        "total": 4279,
        "cached": 0
      },
      "response_time": 1.789726
    },
    {
      "response_file": "019-response.json",
      "token_usage": {
        "prompt": 1362,
        "candidates": 1321,
        "total": 2683,
        "cached": 0
      },
      "response_time": 15.174415
    },
    {
      "response_file": "020-response.json",
      "token_usage": {
        "prompt": 2473,
        "candidates": 115,
        "total": 2588,
        "cached": 0
      },
      "response_time": 1.926675
    }
  ],
  "test_report": {
    "002-py_01-train": [
      {
        "example": 1,
        "input": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "expected_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 2 5\n0 5 5 0 0 0 2 2 5 2\n5 0 5 5 5 5 0 5 2 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 0 0 0 0 2 5 2 0\n2 5 2 5 5 0 2 2 0 5\n5 2 0 5 0 2 5 2 5 5\n0 0 0 5 5 0 2 5 5 0",
        "transformed_output": "0 5 5 5 2 0 2 5 2 5\n0 5 0 2 0 2 5 2 0 2\n0 5 5 0 2 0 2 0 2 0\n5 0 5 5 5 2 0 2 0 5\n5 0 0 0 0 5 2 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 75.0
      },
      {
        "example": 2,
        "input": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "expected_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 2 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "transformed_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 2 2 2 2 0 0 0 5 5\n2 2 2 2 2 2 5 0 5 5\n2 2 2 2 2 2 2 0 0 0\n2 2 2 2 2 2 5 0 5 5\n0 2 2 2 2 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 25,
        "percent_correct": 75.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "expected_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 2 5 2 5 5 0 5 5 5\n5 2 5 2 5 5 0 0 5 5\n5 2 2 2 2 5 5 5 0 5\n5 5 5 2 5 0 5 0 0 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 2 2 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "transformed_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 2 0 5\n0 5 0 0 5 0 2 2 2 5\n5 5 5 0 0 2 2 2 2 2\n0 5 5 5 5 2 2 2 2 2\n5 0 0 0 0 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 27,
        "percent_correct": 73.0
      }
    ],
    "004-py_02-train": [
      {
        "example": 1,
        "input": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "expected_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 2 5\n0 5 5 0 0 0 2 2 5 2\n5 0 5 5 5 5 0 5 2 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 0 0 0 0 2 5 2 0\n2 5 2 5 5 0 2 2 0 5\n5 2 0 5 0 2 5 2 5 5\n0 0 0 5 5 0 2 5 5 0",
        "transformed_output": "0 2 2 2 0 0 2 2 2 2\n0 2 0 0 0 2 2 2 0 2\n0 2 2 0 0 0 2 0 2 0\n2 0 2 2 2 2 0 2 0 2\n2 0 0 0 0 2 0 0 2 0\n2 2 0 2 2 2 0 0 2 2\n0 0 0 0 0 0 0 2 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 46,
        "percent_correct": 54.0
      },
      {
        "example": 2,
        "input": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "expected_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 2 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "transformed_output": "0 2 2 2 2 0 0 5 0 5\n2 0 2 0 0 0 0 5 5 5\n2 2 2 2 2 0 5 0 0 5\n2 0 2 2 2 0 0 0 5 5\n2 2 2 2 0 0 2 0 5 5\n2 2 2 2 2 2 0 0 0 0\n0 2 2 2 2 2 2 0 2 2\n0 0 2 2 2 0 0 2 2 0\n2 0 2 2 0 2 0 2 0 2\n2 2 0 2 0 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 53,
        "percent_correct": 47.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "expected_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 2 5 2 5 5 0 5 5 5\n5 2 5 2 5 5 0 0 5 5\n5 2 2 2 2 5 5 5 0 5\n5 5 5 2 5 0 5 0 0 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 2 2 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "transformed_output": "2 2 2 2 0 2 2 2 2 2\n2 2 2 2 0 2 2 2 0 2\n2 0 2 0 2 2 0 2 2 2\n2 0 2 0 2 2 0 0 2 2\n2 0 0 0 0 2 2 2 0 2\n2 2 2 0 2 0 2 0 0 2\n0 2 0 0 2 0 2 2 2 2\n2 2 2 0 0 0 2 2 2 0\n0 2 2 2 2 0 2 2 2 0\n2 0 0 0 0 0 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 73,
        "percent_correct": 27.0
      }
    ],
    "006-py_03-train": [
      {
        "example": 1,
        "input": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "expected_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 2 5\n0 5 5 0 0 0 2 2 5 2\n5 0 5 5 5 5 0 5 2 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 0 0 0 0 2 5 2 0\n2 5 2 5 5 0 2 2 0 5\n5 2 0 5 0 2 5 2 5 5\n0 0 0 5 5 0 2 5 5 0",
        "transformed_output": "0 5 5 5 0 0 2 2 2 5\n0 5 0 0 0 2 2 2 0 5\n0 5 5 0 0 0 2 0 2 0\n5 0 5 5 5 2 0 2 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 22,
        "percent_correct": 78.0
      },
      {
        "example": 2,
        "input": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "expected_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 2 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "transformed_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n2 2 2 2 0 0 5 0 5 5\n2 2 2 2 2 2 0 0 0 0\n0 2 2 2 2 2 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 15,
        "percent_correct": 85.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "expected_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 2 5 2 5 5 0 5 5 5\n5 2 5 2 5 5 0 0 5 5\n5 2 2 2 2 5 5 5 0 5\n5 5 5 2 5 0 5 0 0 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 2 2 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "transformed_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 2 2 2 5\n5 5 5 0 0 0 2 2 2 0\n0 5 5 5 5 0 2 2 2 0\n5 0 0 0 0 0 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 21,
        "percent_correct": 79.0
      }
    ],
    "008-py_04-train": [
      {
        "example": 1,
        "input": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "expected_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 2 5\n0 5 5 0 0 0 2 2 5 2\n5 0 5 5 5 5 0 5 2 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 0 0 0 0 2 5 2 0\n2 5 2 5 5 0 2 2 0 5\n5 2 0 5 0 2 5 2 5 5\n0 0 0 5 5 0 2 5 5 0",
        "transformed_output": "0 2 2 2 0 0 2 2 2 2\n0 2 0 0 0 2 2 2 0 2\n0 2 2 0 0 0 2 0 2 0\n2 0 2 2 2 2 0 2 0 2\n2 0 0 0 0 2 0 0 2 0\n2 2 0 2 2 2 0 0 2 2\n0 0 0 0 0 0 0 2 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 46,
        "percent_correct": 54.0
      },
      {
        "example": 2,
        "input": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "expected_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 2 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "transformed_output": "0 2 2 2 2 0 0 5 0 5\n2 0 2 0 0 0 0 5 5 5\n2 2 2 2 2 0 5 0 0 5\n2 0 2 2 2 0 0 0 5 5\n2 2 2 2 0 0 2 0 5 5\n2 2 2 2 2 2 0 0 0 0\n0 2 2 2 2 2 2 0 2 2\n0 0 2 2 2 0 0 2 2 0\n2 0 2 2 0 2 0 2 0 2\n2 2 0 2 0 2 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 53,
        "percent_correct": 47.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "expected_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 2 5 2 5 5 0 5 5 5\n5 2 5 2 5 5 0 0 5 5\n5 2 2 2 2 5 5 5 0 5\n5 5 5 2 5 0 5 0 0 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 2 2 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "transformed_output": "2 2 2 2 0 2 2 2 2 2\n2 2 2 2 0 2 2 2 0 2\n2 0 2 0 2 2 0 2 2 2\n2 0 2 0 2 2 0 0 2 2\n2 0 0 0 0 2 2 2 0 2\n2 2 2 0 2 0 2 0 0 2\n0 2 0 0 2 0 2 2 2 2\n2 2 2 0 0 0 2 2 2 0\n0 2 2 2 2 0 2 2 2 0\n2 0 0 0 0 0 2 2 2 2",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 73,
        "percent_correct": 27.0
      }
    ],
    "010-py_05-train": [
      {
        "example": 1,
        "input": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "expected_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 2 5\n0 5 5 0 0 0 2 2 5 2\n5 0 5 5 5 5 0 5 2 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 0 0 0 0 2 5 2 0\n2 5 2 5 5 0 2 2 0 5\n5 2 0 5 0 2 5 2 5 5\n0 0 0 5 5 0 2 5 5 0",
        "transformed_output": "0 5 5 5 2 2 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 18,
        "percent_correct": 82.0
      },
      {
        "example": 2,
        "input": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "expected_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 2 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "transformed_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 96.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "expected_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 2 5 2 5 5 0 5 5 5\n5 2 5 2 5 5 0 0 5 5\n5 2 2 2 2 5 5 5 0 5\n5 5 5 2 5 0 5 0 0 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 2 2 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "transformed_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 88.0
      }
    ],
    "012-py_06-train": [
      {
        "example": 1,
        "input": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "expected_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 2 5\n0 5 5 0 0 0 2 2 5 2\n5 0 5 5 5 5 0 5 2 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 0 0 0 0 2 5 2 0\n2 5 2 5 5 0 2 2 0 5\n5 2 0 5 0 2 5 2 5 5\n0 0 0 5 5 0 2 5 5 0",
        "transformed_output": "5 5 5 5 5 5 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n5 5 5 5 5 5 2 0 5 0\n5 5 5 5 5 5 5 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 5 5 5 5 5 5 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 5 5 5 5 5 5 5 5\n5 0 0 5 0 0 5 5 5 5\n5 5 5 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 34,
        "percent_correct": 66.0
      },
      {
        "example": 2,
        "input": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "expected_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 2 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "transformed_output": "5 5 5 5 5 5 5 5 0 5\n5 0 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 0 0 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 2 2 2 2 5 0 0 0 0\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 0 5 0 5\n5 5 5 5 5 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 30,
        "percent_correct": 70.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "expected_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 2 5 2 5 5 0 5 5 5\n5 2 5 2 5 5 0 0 5 5\n5 2 2 2 2 5 5 5 0 5\n5 5 5 2 5 0 5 0 0 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 2 2 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "transformed_output": "5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 0 5 5 5 5 5 5 5 5\n5 0 5 5 5 5 5 5 5 5\n5 5 5 5 5 5 5 5 5 5\n5 5 5 5 5 0 5 0 0 5\n0 5 0 0 5 5 5 5 5 5\n5 5 5 5 5 5 5 2 5 0\n5 5 5 5 5 5 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 23,
        "percent_correct": 77.0
      }
    ],
    "016-py_07-train": [
      {
        "example": 1,
        "input": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "expected_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 2 5\n0 5 5 0 0 0 2 2 5 2\n5 0 5 5 5 5 0 5 2 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 0 0 0 0 2 5 2 0\n2 5 2 5 5 0 2 2 0 5\n5 2 0 5 0 2 5 2 5 5\n0 0 0 5 5 0 2 5 5 0",
        "transformed_output": "0 5 5 5 0 2 2 5 5 5\n0 5 0 2 2 2 5 2 0 5\n0 5 5 0 2 2 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 2 2 2 5 0 2 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 2 2 2 2 2 5 0 2\n0 5 0 5 5 0 2 2 2 5\n5 0 2 5 0 2 5 0 5 5\n0 2 2 5 5 0 2 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 27,
        "percent_correct": 73.0
      },
      {
        "example": 2,
        "input": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "expected_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 2 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "transformed_output": "0 5 5 5 5 0 2 5 0 5\n5 0 5 0 2 2 2 5 5 5\n5 5 5 5 5 0 5 0 2 5\n5 0 5 5 5 0 2 2 5 5\n5 5 5 5 0 2 5 0 5 5\n5 2 2 2 2 5 0 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 2 5 5 5 0 2 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 11,
        "percent_correct": 89.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "expected_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 2 5 2 5 5 0 5 5 5\n5 2 5 2 5 5 0 0 5 5\n5 2 2 2 2 5 5 5 0 5\n5 5 5 2 5 0 5 0 0 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 2 2 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "transformed_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 2 5 5\n5 0 2 2 2 5 5 5 0 5\n5 5 5 0 5 0 5 0 2 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 0 2 2 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 2 2 2 2 5 2 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": true,
        "pixels_off": 14,
        "percent_correct": 86.0
      }
    ],
    "017-py_08-train": [],
    "018-py_09-train": [
      {
        "example": 1,
        "input": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "expected_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 2 5\n0 5 5 0 0 0 2 2 5 2\n5 0 5 5 5 5 0 5 2 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 0 0 0 0 2 5 2 0\n2 5 2 5 5 0 2 2 0 5\n5 2 0 5 0 2 5 2 5 5\n0 0 0 5 5 0 2 5 5 0",
        "transformed_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 84.0
      },
      {
        "example": 2,
        "input": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "expected_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 2 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "transformed_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 96.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "expected_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 2 5 2 5 5 0 5 5 5\n5 2 5 2 5 5 0 0 5 5\n5 2 2 2 2 5 5 5 0 5\n5 5 5 2 5 0 5 0 0 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 2 2 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "transformed_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 88.0
      }
    ],
    "019-py_10-train": [],
    "020-py_11-train": [
      {
        "example": 1,
        "input": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "expected_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 2 5\n0 5 5 0 0 0 2 2 5 2\n5 0 5 5 5 5 0 5 2 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 2 5 5\n0 2 0 0 0 0 2 5 2 0\n2 5 2 5 5 0 2 2 0 5\n5 2 0 5 0 2 5 2 5 5\n0 0 0 5 5 0 2 5 5 0",
        "transformed_output": "0 5 5 5 0 0 2 5 5 5\n0 5 0 0 0 2 5 2 0 5\n0 5 5 0 0 0 2 0 5 0\n5 0 5 5 5 5 0 5 0 5\n5 0 0 0 0 5 0 0 5 0\n5 5 0 5 5 5 0 0 5 5\n0 0 0 0 0 0 0 5 0 0\n0 5 0 5 5 0 0 0 0 5\n5 0 0 5 0 0 5 0 5 5\n0 0 0 5 5 0 0 5 5 0",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 16,
        "percent_correct": 84.0
      },
      {
        "example": 2,
        "input": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "expected_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 2 2 2 2\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "transformed_output": "0 5 5 5 5 0 0 5 0 5\n5 0 5 0 0 0 0 5 5 5\n5 5 5 5 5 0 5 0 0 5\n5 0 5 5 5 0 0 0 5 5\n5 5 5 5 0 0 5 0 5 5\n5 2 2 2 2 5 0 0 0 0\n0 5 5 5 5 5 5 0 5 5\n0 0 5 5 5 0 0 5 5 0\n5 0 5 5 0 5 0 5 0 5\n5 5 0 5 0 5 5 5 5 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 4,
        "percent_correct": 96.0
      },
      {
        "example": 3,
        "input": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "expected_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 2 5 2 5 5 0 5 5 5\n5 2 5 2 5 5 0 0 5 5\n5 2 2 2 2 5 5 5 0 5\n5 5 5 2 5 0 5 0 0 5\n0 5 0 2 5 0 5 5 5 5\n5 5 5 2 2 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "transformed_output": "5 5 5 5 0 5 5 5 5 5\n5 5 5 5 0 5 5 5 0 5\n5 0 5 0 5 5 0 5 5 5\n5 0 5 0 5 5 0 0 5 5\n5 0 0 0 0 5 5 5 0 5\n5 5 5 0 5 0 5 0 0 5\n0 5 0 0 5 0 5 5 5 5\n5 5 5 0 0 0 5 2 5 0\n0 5 5 5 5 0 5 2 5 0\n5 0 0 0 0 0 5 2 2 5",
        "match": false,
        "size_correct": true,
        "color_palette_correct": true,
        "correct_pixel_counts": false,
        "pixels_off": 12,
        "percent_correct": 88.0
      }
    ]
  },
  "best_train_results": {
    "passed": 0,
    "total": 0
  },
  "best_test_results": {
    "passed": 0,
    "total": 0
  },
  "test_solved": false
}