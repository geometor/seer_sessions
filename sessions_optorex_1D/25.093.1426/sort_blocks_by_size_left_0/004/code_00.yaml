task_description: Rearrange a sequence of numbers by consolidating non-zero blocks to the right end, sorted by length.
elements:
  - type: sequence
    properties:
      - content: single-digit non-negative integers
      - length: variable (12 in examples)
  - type: number
    properties:
      - value: 0 (zero)
        role: separator, padding
      - value: non-zero (1-9)
        role: content_element
objects:
  - name: non_zero_block
    description: A contiguous subsequence of one or more non-zero numbers.
    properties:
      - length: number of elements in the block
      - content: sequence of non-zero numbers
      - original_position: index of the first element of the block in the input sequence
relationships:
  - type: separation
    between: non_zero_block
    by: one or more zeros in the input
    transformed_to: single zero separator in the output (if multiple blocks exist)
  - type: ordering
    of: non_zero_block
    in_output: Sorted by block length in descending order. If lengths are equal, the relative order from the input is maintained (stable sort).
actions:
  - name: identify_blocks
    input: input_sequence
    output: list of non_zero_blocks
    notes: Preserves the content of each block.
  - name: sort_blocks
    input: list of non_zero_blocks
    output: list of non_zero_blocks sorted by length (descending, stable)
  - name: construct_output
    input:
      - sorted list of non_zero_blocks
      - original_sequence_length
    output: output_sequence
    steps:
      - Initialize an empty list for the core output.
      - Iterate through the sorted blocks. For each block, append its elements to the core output list.
      - If it's not the last block in the sorted list, append a single zero to the core output list as a separator.
      - Calculate required padding: original_sequence_length minus the length of the core output list.
      - Prepend the calculated number of zeros to the core output list.
      - Convert the final list to the required output format (e.g., space-separated string or NumPy array).