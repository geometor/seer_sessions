task_description: Rearrange a sequence of numbers by consolidating non-zero blocks to the right end, sorting them by length.
elements:
  - type: sequence
    properties:
      - content: single-digit non-negative integers
      - length: variable (12 in examples)
  - type: number
    properties:
      - value: 0 (zero)
        role: separator, padding
      - value: non-zero (1-9)
        role: content_element
objects:
  - name: non_zero_block
    description: A contiguous subsequence of one or more non-zero numbers.
    properties:
      - length: number of elements in the block
      - content: sequence of non-zero numbers
      - original_position: implicit start index or order of appearance in the input sequence
relationships:
  - type: separation
    between: non_zero_block
    by: one or more zeros in the input
    transformed_to: single zero separator in the output (only between blocks)
  - type: ordering
    of: non_zero_block
    in_output: Blocks are ordered based on their length in descending order. If blocks have the same length, their relative order from the input is preserved (stable sort).
actions:
  - name: identify_blocks
    input: input_sequence
    output: list of non_zero_blocks (preserving content and implicit original order)
  - name: sort_blocks
    input: list of non_zero_blocks
    output: ordered list of non_zero_blocks
    method: Stable sort by block length in descending order.
  - name: construct_output
    input:
      - sorted list of non_zero_blocks
      - original_sequence_length
    output: output_sequence
    steps:
      - Initialize an empty core list.
      - Iterate through the sorted blocks. Append each block's content to the core list.
      - If it is not the last block, append a single zero to the core list as a separator.
      - Calculate required padding zeros: original_length - length(core_list).
      - Prepend the padding zeros to the core list to create the final output sequence.
