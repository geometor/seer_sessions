task_type: sequence_transformation
input_type: sequence
  element_type: integer (represented as list or numpy array)
  length: fixed (e.g., 12)
output_type: sequence
  element_type: integer (represented as list or numpy array)
  length: fixed (same as input)

components:
  - object: input_sequence
    properties:
      - elements: list of integers
      - length: integer
  - object: output_sequence
    properties:
      - elements: list of integers
      - length: integer (equals input_sequence length)
  - object: block
    properties:
      - elements: list of non-zero integers (contiguous in input)
      - length: integer (number of elements)
      - start_index: integer (position of the first element in the input_sequence)

actions:
  - name: identify_blocks
    input: input_sequence (list/array of integers)
    output: list of blocks (each with elements, length, start_index)
    description: Scan the input sequence to find all contiguous sub-sequences composed entirely of non-zero digits.
  - name: sort_blocks
    input: list of blocks
    output: sorted list of blocks
    description: Sort the identified blocks first by length in descending order, then by their original start_index in ascending order to break ties.
  - name: construct_output
    input:
      - sorted list of blocks
      - original_sequence_length
    output: output_sequence (list/array of integers)
    description: >
      Calculate the required number of leading zeroes based on the total length,
      the sum of block lengths, and the number of blocks (to account for separators).
      Create the output sequence by starting with the leading zeroes, then appending
      the sorted blocks, placing a single zero separator between consecutive blocks. Ensure the final sequence has the original length.

relationships:
  - The output sequence length must equal the input sequence length.
  - The non-zero elements in the output sequence are exactly the non-zero elements from the input sequence, rearranged into blocks.
  - The order of blocks in the output depends on the sorting criteria (length desc, index asc).
  - The number of leading zeroes depends on the total length and the space occupied by the sorted blocks and their separators.
  - A single zero separates consecutive blocks in the output.