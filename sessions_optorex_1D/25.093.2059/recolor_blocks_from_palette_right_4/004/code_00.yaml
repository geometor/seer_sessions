Task: Replace contiguous blocks of a specific placeholder value (5) in an integer sequence.

Objects:
  - Input_Sequence:
      type: List[int]
      length: 12
      values: Single-digit integers (0-9).
  - Output_Sequence:
      type: List[int]
      length: 12
      derivation: Transformation of Input_Sequence.
  - Placeholder_Value:
      value: 5
      role: Identifies elements within the Input_Sequence that are part of a block designated for replacement.
  - Replacement_Source_List:
      type: List[int]
      source: Extracted non-zero integers from Input_Sequence.
      order: Preserves the original relative order from Input_Sequence.
      role: Provides the sequence of values used for replacing Placeholder_Blocks.
      example: For input `[2, 5, 0, 5, 5]`, the list is `[2, 5]`.
  - Placeholder_Block:
      type: Contiguous subsequence within Input_Sequence.
      composition: One or more instances of Placeholder_Value (5).
      role: Represents a unit that will be entirely replaced by a single value from the Replacement_Source_List.
  - Replacement_Index:
      type: Integer (0-based)
      role: Tracks the next value to be used from the Replacement_Source_List.
  - Current_Replacement_Value:
      type: Integer
      role: Stores the specific replacement value being applied to the current Placeholder_Block being processed.

Relationships:
  - Sequential_Mapping: The Nth Placeholder_Block encountered during iteration maps to the Nth value in the Replacement_Source_List.
  - Preservation: Integers in the Input_Sequence that are not the Placeholder_Value (5) retain their value and position in the Output_Sequence.
  - Block_Uniformity: All elements within a single Placeholder_Block in the Input_Sequence are replaced by the *same* single value (the Current_Replacement_Value for that block) in the Output_Sequence.

Actions:
  - Extract_Replacements: Create the Replacement_Source_List by iterating through the Input_Sequence and collecting all non-zero values in order.
  - Iterate_Input: Process the Input_Sequence element by element using an index `i`.
  - Initialize_Output: Create an empty list for the Output_Sequence.
  - Initialize_Index: Set Replacement_Index to 0.
  - Check_Value: At each element `input[i]`:
      - If `input[i]` is not Placeholder_Value (5), append `input[i]` to Output_Sequence.
      - If `input[i]` is Placeholder_Value (5):
          - Detect_New_Block: Check if it is the start of a new Placeholder_Block (i.e., `i == 0` or `input[i-1] != 5`).
          - Fetch_Replacement: If it's a new block, retrieve the value from `Replacement_Source_List` at the current `Replacement_Index`, store it as `Current_Replacement_Value`, and increment `Replacement_Index`.
          - Append_Replacement: Append the `Current_Replacement_Value` (either newly fetched or carried over from the previous element in the same block) to the Output_Sequence.