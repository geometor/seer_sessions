objects:
  - name: input_sequence
    type: List[int] | numpy.ndarray # Can be a list or numpy array
    description: The initial sequence of integers.
  - name: output_sequence
    type: List[int] | numpy.ndarray # Should match input type
    description: The resulting sequence after transformation.
  - name: key1
    type: int
    description: The first integer in the input_sequence.
  - name: key2
    type: int
    description: The second integer in the input_sequence.
  - name: target_digit
    type: int
    value: 5
    description: The digit in the input_sequence that triggers replacement.
  - name: target_blocks
    type: List[Tuple[int, int]] # List of (start_index, length)
    description: Contiguous blocks of the target_digit (5) within the input_sequence.

properties:
  - object: input_sequence
    property: length
    description: The number of elements in the input sequence.
  - object: output_sequence
    property: length
    description: The number of elements in the output sequence (always equals input length).
  - object: target_blocks
    property: count
    description: The number of identified contiguous blocks of the target_digit.
  - object: target_blocks
    property: order
    description: Blocks are processed based on their appearance order (first, second).

actions:
  - name: identify_keys
    inputs: [input_sequence]
    outputs: [key1, key2]
    description: Extract the first (index 0) and second (index 1) elements from the input_sequence. Assumes sequence has at least 2 elements based on examples.
  - name: identify_target_blocks
    inputs: [input_sequence, target_digit]
    outputs: [target_blocks]
    description: Find all contiguous sequences of the target_digit (5) in the input_sequence.
  - name: initialize_output
    inputs: [input_sequence]
    outputs: [output_sequence]
    description: Create a modifiable copy of the input_sequence (e.g., convert NumPy array to list or copy list).
  - name: replace_first_block
    inputs: [output_sequence, target_blocks, key1]
    outputs: [output_sequence] # Modified sequence
    condition: target_blocks count >= 1
    description: Replace the elements within the bounds of the first identified target_block in the output_sequence with key1.
  - name: replace_second_block
    inputs: [output_sequence, target_blocks, key2] # Operates on potentially modified sequence
    outputs: [output_sequence] # Further modified sequence
    condition: target_blocks count >= 2
    description: Replace the elements within the bounds of the second identified target_block in the output_sequence with key2.
  - name: finalize_output
    inputs: [output_sequence]
    outputs: [final_output] # e.g., convert list back to NumPy array if needed
    description: Ensure the output is in the required format (matching input type if necessary).

relationships:
  - type: replacement
    subject: first target_block
    object: key1
    description: The first block of 5s is replaced by key1 repeated for the block's length.
  - type: replacement
    subject: second target_block
    object: key2
    description: The second block of 5s (if it exists) is replaced by key2 repeated for the block's length.
  - type: positional_invariance
    subject: non-target elements
    description: Digits other than the 5s in the first two identified blocks maintain their original value and position in the output.
  - type: type_consistency
    subject: input_sequence
    object: output_sequence
    description: The output sequence should ideally be of the same data type as the input sequence (e.g., if input is NumPy array, output should be NumPy array).