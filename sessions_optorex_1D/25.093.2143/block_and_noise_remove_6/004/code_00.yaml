Task: Isolate the first longest contiguous block of non-zero numbers.

Input:
  Type: List[int] or NumPy array of integers. # Adjusted based on error
  Properties:
    - Contains non-negative integers.
    - Zero (0) acts as a separator or background value.
    - Non-zero integers form contiguous blocks (objects).
    - Input has a fixed length (e.g., 12 in examples).

Output:
  Type: List[int] (matching input type conventions if necessary).
  Properties:
    - Same length as input.
    - Contains mostly zeros.
    - Preserves exactly one contiguous block of non-zero numbers from the input.

Transformation:
  Action: Identify all contiguous blocks of non-zero numbers in the input sequence.
  Action: For each block, record its start index, end index, and length.
  Action: Determine the maximum length found among all blocks.
  Action: Select the block that has this maximum length and has the smallest start index (i.e., the first occurrence in case of ties in length).
  Action: Construct the output sequence:
    - Initialize a sequence of the same length as the input, filled with zeros.
    - Copy the numbers from the selected block (using its start and end indices) from the input sequence into the corresponding positions in the output sequence.
  Special Case: If the input contains no non-zero numbers, the output is a sequence of all zeros.

Relationships:
  - The selected block in the output is identical in values and relative position to its occurrence in the input.
  - All other elements in the output are zero.
  - Selection priority: 1) Maximum length, 2) Minimum start index.