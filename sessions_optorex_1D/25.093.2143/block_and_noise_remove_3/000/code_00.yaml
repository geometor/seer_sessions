task_description: Identify and isolate the longest contiguous sequence of a single non-zero digit within a list of digits.
elements:
  - name: input_list
    type: list_of_integers
    description: The initial sequence of digits provided.
  - name: output_list
    type: list_of_integers
    description: The resulting sequence after applying the transformation.
    relationship: derived from input_list by isolating the longest run.
  - name: non_zero_digit
    type: integer
    properties:
      - value > 0
    description: Digits that can form sequences.
  - name: zero_digit
    type: integer
    properties:
      - value == 0
    description: Acts as a separator and default background value in the output.
  - name: contiguous_run
    type: object
    properties:
      - digit_value: integer (must be non-zero)
      - start_index: integer
      - end_index: integer
      - length: integer (end_index - start_index + 1)
    description: A sequence of identical, adjacent non-zero digits within the input_list.
    relationship: Found within input_list.
actions:
  - name: find_runs
    input: input_list
    output: list_of_contiguous_runs
    description: Scan the input_list to identify all contiguous_runs of non-zero digits.
  - name: find_longest_run
    input: list_of_contiguous_runs
    output: longest_run (a single contiguous_run object, or potentially null if no non-zero digits exist)
    description: Determine the run with the maximum length. If multiple runs share the maximum length, select the one with the smallest start_index.
  - name: generate_output
    input:
      - input_list_length
      - longest_run
    output: output_list
    description: Create a list of zeros with the same length as the input_list. If a longest_run was found, populate the corresponding indices (from start_index to end_index) in the output_list with the digit_value of the longest_run.