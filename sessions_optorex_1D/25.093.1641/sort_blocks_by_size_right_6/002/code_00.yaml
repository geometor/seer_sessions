InputType: List[int] # Corrected from string
OutputFormat: List[int] # Often represented as space-separated string for display
SequenceLength: 12
Elements:
  - type: Zero (0)
    role: Background/Padding
  - type: TargetDigit (Non-zero integer, e.g., 1, 3, 8)
    role: Signal
    occurrence: Exactly two contiguous, non-overlapping blocks in the input.

Objects:
  - name: InputSequence
    properties:
      - length: 12
      - elements: Integers (0 and one TargetDigit)
  - name: Block1 (B1)
    description: The first contiguous sequence of the TargetDigit encountered in InputSequence.
    properties:
      - length: variable
      - elements: TargetDigit
  - name: Block2 (B2)
    description: The second contiguous sequence of the TargetDigit encountered in InputSequence.
    properties:
      - length: variable
      - elements: TargetDigit
  - name: OutputSequence
    properties:
      - length: 12
      - elements: Integers (0 and the TargetDigit from input)

Actions:
  1. Identify: Find the non-zero TargetDigit in the InputSequence.
  2. Locate: Find the start and end indices of Block1 and Block2 in the InputSequence.
  3. Extract: Create lists representing Block1 and Block2.
  4. Compare: Determine if the length of Block1 is strictly greater than the length of Block2.
  5. ConstructPrefix:
     - If len(Block1) > len(Block2): OutputPrefix = Block2 + [0] + Block1
     - Else (len(Block1) <= len(Block2)): OutputPrefix = Block1 + [0] + Block2
  6. Pad: Append zeros to the OutputPrefix until the total length is 12.
  7. Format: (If necessary for final output) Convert the list of integers to a space-separated string.

Constraints:
  - Input always contains exactly two blocks of the TargetDigit.
  - Input and Output sequences always have a length of 12.