task_elements:
  - item: Input Data
    properties:
      - type: sequence (list or array)
      - content: single digits (integers 0-9)
      - structure: Contains exactly two contiguous blocks of identical non-zero digits. Zeros act as separators or padding.
  - item: Output Data
    properties:
      - type: sequence (list)
      - content: single digits (integers 0-9)
      - structure: Contains the two non-zero blocks from the input, ordered by length (shorter first), separated by a single zero, followed by all remaining original zeros.
objects:
  - object: Non-Zero Block
    description: A contiguous subsequence of identical non-zero digits found in the input.
    properties:
      - digit_value: The digit composing the block (e.g., 9, 2, 6).
      - length: The number of digits in the block.
      - original_order: The sequence in which the block appears in the input (first or second).
      - content: The actual list of digits in the block (e.g., [9, 9, 9, 9]).
  - object: Zero Digit
    description: The digit '0'.
    properties:
      - count: The total number of zeros in the input sequence.
actions:
  - action: Identify Non-Zero Blocks
    description: Scan the input sequence to find the two contiguous blocks of identical non-zero digits. Record their content, length, and original order.
  - action: Count Zeros
    description: Count the total occurrences of the digit 0 in the input sequence.
  - action: Compare Block Lengths
    description: Compare the lengths of the two identified non-zero blocks.
  - action: Determine Output Order
    description: Establish the order for the blocks in the output based on length comparison. The block with the smaller length comes first. If lengths are equal, the block that appeared first in the input comes first in the output.
  - action: Construct Output Sequence
    description: Assemble the final output list by concatenating the first block (per determined order), a single zero digit (if `zero_count > 0`), the second block, and a list containing the remaining (`zero_count - 1`) zero digits.
relationships:
  - relationship: Block Ordering Rule
    description: The relative order of the non-zero blocks in the output depends on their lengths.
    rule: If length(Block1) <= length(Block2), output order is Block1, Block2. Else, output order is Block2, Block1.
  - relationship: Zero Allocation
    description: Zeros from the input are redistributed in the output.
    rule: One zero is used as a separator between the two non-zero blocks. All other zeros are appended to the end of the sequence. If the input contains no zeros, no zero separator is added.