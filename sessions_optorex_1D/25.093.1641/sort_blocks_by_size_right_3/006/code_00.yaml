task_description: Reorder two blocks of identical non-zero digits based on length, separated by a single zero, with remaining zeros appended.
data_format:
  input: Sequence of single digits (represented as integers, likely in a NumPy array).
  output: Sequence of single digits (represented as a NumPy array).
objects:
  - object: Digit Block
    description: A contiguous subsequence of identical non-zero digits within the input sequence.
    properties:
      - value: The non-zero digit composing the block (e.g., 9, 2, 6).
      - length: The number of digits in the block.
      - original_order: The order (first or second) in which the block appears in the input sequence relative to the other non-zero block.
  - object: Zero Digit
    description: The digit '0' acting as background/separator.
    properties:
      - count: The total number of zero digits in the input sequence.
processing_rules:
  - rule: Conservation
    description: The multiset of digits in the output is identical to the input (same count of each digit). Note: Example 2 violates this, likely an error in the example itself.
  - rule: Structure
    description: All valid inputs contain exactly two non-zero Digit Blocks.
actions:
  - action: Identify Blocks
    description: Scan the input sequence to find the two non-zero Digit Blocks. Record their value, length, and original order.
  - action: Count Zeros
    description: Count the total occurrences of the Zero Digit in the input.
  - action: Determine Order
    description: Compare the lengths of the two identified Digit Blocks. The block with the smaller length is designated the 'First Output Block'. If lengths are equal, the block that appeared earlier in the input is the 'First Output Block'. The other block is the 'Second Output Block'.
  - action: Construct Output Array
    description: Create a new sequence (NumPy array) by concatenating the 'First Output Block', followed by a single Zero Digit (if `count` > 0), followed by the 'Second Output Block', followed by all remaining Zero Digits (`count` - 1, if applicable).
expected_output_type: NumPy array of integers.
