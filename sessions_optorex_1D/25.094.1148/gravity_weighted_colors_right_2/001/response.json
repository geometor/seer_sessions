{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\nimport collections\n\ndef parse_input(input_str):\n    \"\"\"Converts the space-separated digit string into a list of integers.\"\"\"\n    return [int(digit) for digit in input_str.split()]\n\ndef format_output(digit_list):\n    \"\"\"Converts a list of integers back into a space-separated string.\"\"\"\n    return \" \".join(map(str, digit_list))\n\ndef sort_digits_descending(digit_list):\n    \"\"\"Sorts a list of digits in descending order.\"\"\"\n    # Python's sort is stable, but for simple integers, reverse=True works directly.\n    # Alternatively, count occurrences and reconstruct.\n    # counts = collections.Counter(digit_list)\n    # sorted_list = [2] * counts[2] + [1] * counts[1] + [0] * counts[0]\n    # Using sort for simplicity\n    digit_list.sort(reverse=True)\n    return digit_list\n\ndef transform(input_str: str) -> str:\n    \"\"\"\n    Sorts the digits in the input string in descending order (2s, then 1s, then 0s).\n\n    Args:\n        input_str: A string containing 12 digits (0, 1, or 2) separated by spaces.\n\n    Returns:\n        A string containing the same digits sorted in descending order,\n        separated by spaces.\n    \"\"\"\n    # 1. Read the input string and extract the individual digits.\n    digits = parse_input(input_str)\n\n    # 2. Sort these digits in descending order.\n    sorted_digits = sort_digits_descending(digits) # Modifies list in-place, returns None, changed to return list for clarity\n\n    # 3. Combine the sorted digits back into a string, separating each digit with a space.\n    output_str = format_output(sorted_digits)\n\n    # 4. Return the resulting string.\n    return output_str\n\n# Example usage (based on train_1):\n# input_data = \"2 2 0 1 0 2 2 0 2 2 0 0\"\n# output_data = transform(input_data)\n# print(f\"Input: {input_data}\")\n# print(f\"Output: {output_data}\")\n# Expected Output: 2 2 2 2 2 2 1 0 0 0 0 0\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 1436,
    "candidates_token_count": 698,
    "total_token_count": 2134,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 6.553291,
  "retries": 1
}