{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nParses an input string representing a list of digits (0, 1, or 2) enclosed in \nsquare brackets and separated by spaces (e.g., '[2 2 0 1 ...]'). It then sorts \nthese digits in descending order (2s first, then 1s, then 0s) and returns the \nresult as a space-separated string.\n\"\"\"\n\nimport re # Used for robust splitting in case of multiple spaces\n\ndef parse_input_string_to_list(input_str: str) -> list[int]:\n    \"\"\"\n    Parses the specific input string format '[d d ...]' into a list of integers.\n    \n    Args:\n        input_str: The input string, e.g., '[2 2 0 1 0 2 2 0 2 2 0 0]'.\n        \n    Returns:\n        A list of integers extracted from the string.\n    \"\"\"\n    # 1. Remove leading '[' and trailing ']'\n    #    Use strip('[]') to handle potential whitespace around brackets as well.\n    content = input_str.strip().strip('[]')\n    \n    # 2. Handle empty case (like '[]' which becomes '')\n    if not content:\n        return []\n        \n    # 3. Split the remaining string by spaces (handle multiple spaces)\n    #    Use re.split to handle one or more spaces as delimiters.\n    digit_strings = re.split(r'\\s+', content.strip())\n    \n    # 4. Convert each part to an integer\n    digits = [int(d) for d in digit_strings]\n    \n    return digits\n\ndef format_list_to_output_string(digit_list: list[int]) -> str:\n    \"\"\"\n    Formats a list of digits into a space-separated string.\n    \n    Args:\n        digit_list: A list of integers (0, 1, or 2).\n        \n    Returns:\n        A string representation, e.g., '2 2 1 0 0'.\n    \"\"\"\n    # 1. Convert each integer back to a string\n    string_digits = [str(d) for d in digit_list]\n    \n    # 2. Join with spaces\n    output_str = \" \".join(string_digits)\n    \n    return output_str\n\ndef transform(input_str: str) -> str:\n    \"\"\"\n    Transforms the input string representation of a digit list by sorting the \n    digits in descending order.\n\n    Args:\n        input_str: A string like '[2 2 0 1 0 2 2 0 2 2 0 0]' containing 12 digits\n                   (0, 1, or 2) separated by spaces within brackets.\n\n    Returns:\n        A string containing the same digits sorted in descending order,\n        separated by spaces, e.g., '2 2 2 2 2 2 1 0 0 0 0 0'.\n    \"\"\"\n    \n    # 1. Parse the input string into a list of integers.\n    #    Handles removal of brackets, splitting, and conversion to int.\n    digits = parse_input_string_to_list(input_str)\n    \n    # 2. Sort the list of digits in descending order (2 > 1 > 0).\n    #    The sort() method modifies the list in-place.\n    digits.sort(reverse=True)\n    \n    # 3. Format the sorted list back into the required output string format.\n    #    Converts integers to strings and joins them with spaces.\n    output_str = format_list_to_output_string(digits)\n    \n    # 4. Return the resulting string.\n    return output_str\n\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 6793,
    "candidates_token_count": 1210,
    "total_token_count": 8003,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 12.211851,
  "retries": 1
}