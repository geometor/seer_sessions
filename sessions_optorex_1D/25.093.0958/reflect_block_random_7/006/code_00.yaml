objects:
  - name: input_data
    type: string or numpy.ndarray
    description: The raw input provided to the task, which can be a space-separated string or a NumPy array (potentially 1xN or Nx1).
  - name: input_sequence
    type: list of integers
    description: A 1D sequence of integers derived from flattening and parsing the input_data.
  - name: output_sequence
    type: list of integers
    description: The sequence of digits produced as output after transformation.
  - name: leading_zeros
    type: list of integers
    description: A sublist containing zeros from the beginning of the input_sequence, up to the first non-zero digit. Can be empty.
  - name: trailing_zeros
    type: list of integers
    description: A sublist containing zeros from the end of the input_sequence, starting after the last non-zero digit. Can be empty.
  - name: core_block
    type: list of integers
    description: The contiguous sublist of the input_sequence between the leading and trailing zeros (inclusive of the first and last non-zero elements). If there are no non-zero elements, this block is empty and the sequence consists only of zeros.
properties:
  - object: input_sequence
    name: elements
    type: list of integers
  - object: input_sequence
    name: length
    type: integer
actions:
  - name: parse_and_flatten_input
    input: input_data
    output: input_sequence
    description: Convert the input_data (string or numpy.ndarray) into a flat list of integers (input_sequence). If input is a NumPy array, flatten it first. If input is a string, split by spaces.
  - name: identify_leading_zeros
    input: input_sequence
    output: leading_zeros, first_non_zero_index
    description: Find the sublist of zeros at the start of the sequence and the index of the first non-zero element. Return an empty list and -1 if all are zeros or the list is empty.
  - name: identify_trailing_zeros
    input: input_sequence
    output: trailing_zeros, last_non_zero_index
    description: Find the sublist of zeros at the end of the sequence and the index of the last non-zero element. Return an empty list and -1 if all are zeros or the list is empty.
  - name: identify_core_block
    input: input_sequence, first_non_zero_index, last_non_zero_index
    output: core_block
    description: Extract the sublist located between the first and last non-zero elements (inclusive). Returns an empty list if no non-zero elements exist.
  - name: reverse_list
    input: list
    output: list
    description: Reverse the order of elements in a given list.
  - name: concatenate_lists
    input: list_1, list_2, list_3
    output: list
    description: Combine multiple lists into a single list in the specified order.
  - name: format_output
    input: list
    output: string
    description: Convert the final list of integers back into a space-separated string.
relationships:
  - type: transformation
    origin: input_data
    target: output_sequence
    rule: The output_sequence is formed by parsing/flattening the input_data, identifying leading zeros, trailing zeros, and the core block. The core block is reversed, and then the leading zeros, reversed core block, and trailing zeros are concatenated.