objects:
  - name: input_sequence
    # Note: Execution environment provided a NumPy array, but examples suggest a sequence of integers.
    # Coder should handle conversion from the actual input type (likely NumPy array) to a list of integers.
    type: sequence of integers 
    description: The sequence of digits provided as input.
  - name: output_sequence
    type: sequence of integers
    description: The sequence of digits produced as output, derived from the input sequence.
  - name: leading_zeros_block
    type: list of integers
    description: A sublist containing the contiguous sequence of zero(s) from the beginning of the input_sequence, up to the first non-zero digit. This block can be empty if the sequence does not start with zero.
  - name: trailing_zeros_block
    type: list of integers
    description: A sublist containing the contiguous sequence of zero(s) from the end of the input_sequence, starting immediately after the last non-zero digit. This block can be empty if the sequence does not end with zero.
  - name: core_block
    type: list of integers
    description: The contiguous sublist of the input_sequence located between the leading_zeros_block and the trailing_zeros_block. This includes the first and last non-zero elements. If the input contains no zeros, this is the entire input_sequence. If the input contains only zeros, this block is effectively empty in the context of reversal, and the leading/trailing blocks cover the whole sequence.
properties:
  - object: input_sequence
    name: elements
    type: list of integers
  - object: input_sequence
    name: length
    type: integer
  - object: output_sequence
    name: length
    type: integer
    relationship: Equal to the length of the input_sequence.
actions:
  - name: handle_input
    description: Receive the input (potentially as a NumPy array) and convert it into a list of integers.
  - name: identify_boundaries
    description: Find the index of the first non-zero element and the index of the last non-zero element in the integer list. Handle cases where all elements are zero.
  - name: extract_sublists
    inputs: integer_list, first_nonzero_index, last_nonzero_index
    outputs: leading_zeros_block, core_block, trailing_zeros_block
    description: Separate the integer list into three parts based on the identified boundaries.
  - name: reverse_list
    input: list
    output: list
    description: Reverse the order of elements within the core_block list.
  - name: concatenate_lists
    input: list_1, list_2, list_3
    output: list
    description: Combine the leading_zeros_block, the reversed core_block, and the trailing_zeros_block into a single list in that order.
  - name: format_output
    description: Convert the final list of integers back into the required output format (likely a space-separated string, matching the example outputs).
relationships:
  - type: transformation
    origin: input_sequence
    target: output_sequence
    rule: The output_sequence is formed by preserving the leading_zeros_block and trailing_zeros_block from the input_sequence in their original positions, while reversing the order of the elements within the core_block located between them.