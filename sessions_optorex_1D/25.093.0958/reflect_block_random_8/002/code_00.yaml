Task: Reverse Subsequence Between First and Last Non-Zero Digits

Input:
  type: list # Changed from string based on execution error
  elements:
    type: integer
    range: 0-9
  description: A sequence (list) of single digits.
  constraints: Fixed length (e.g., 12 in examples).

Output:
  type: list
  elements:
    type: integer
    range: 0-9
  description: A sequence (list) of single digits, transformed from the input.
  constraints: Same length as input.

Transformation:
  action: reverse_subsequence
  target: a portion of the input list
  subsequence_definition:
    start_boundary: index of the first non-zero digit in the input list
    end_boundary: index of the last non-zero digit in the input list
    inclusive: yes
  unchanged_elements:
    - elements before the start_boundary (prefix)
    - elements after the end_boundary (suffix)
  edge_cases:
    - if no non-zero digits exist, the sequence remains unchanged.
    - if only one non-zero digit exists (start_boundary equals end_boundary), the sequence remains unchanged.

Relationships:
  - The output sequence length is identical to the input sequence length.
  - Elements outside the identified subsequence (prefix and suffix) maintain their original positions relative to the start and end of the main sequence.
  - Elements within the identified subsequence maintain their identity but have their order reversed relative to each other within that subsequence's original position.