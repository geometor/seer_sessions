task_elements:
  - object: sequence
    properties:
      - type: list or 1D numpy array of integers
      - contains: digits (0-9)
      - length: variable, but consistent between input and output
  - object: non_zero_segment
    properties:
      - type: sub-sequence / sub-array
      - location: within the main sequence
      - definition: the contiguous block from the first non-zero digit to the last non-zero digit (inclusive)
      - may_be_empty: false (unless the input sequence contains only zeros)
    relationships:
      - contained_within: sequence
  - object: zero_padding
    properties:
      - type: sub-sequence(s) / sub-array(s)
      - value: consists only of the digit 0
      - location: before the first non-zero digit (leading zeros) and after the last non-zero digit (trailing zeros)
    relationships:
      - surrounds: non_zero_segment (leading/trailing padding can be empty)
actions:
  - name: identify_segment_indices
    inputs: sequence
    outputs: start_index, end_index (of the non_zero_segment)
    description: Find the index of the first non-zero element and the index of the last non-zero element. Handle cases with no non-zero elements (return -1 or equivalent).
  - name: extract_subsequences
    inputs: sequence, start_index, end_index
    outputs: leading_zeros, non_zero_segment, trailing_zeros
    description: Separate the sequence into three parts based on the identified indices. If start_index is -1, the non_zero_segment and trailing_zeros are empty, and leading_zeros is the entire sequence.
  - name: reverse_segment
    inputs: non_zero_segment
    outputs: reversed_segment
    description: Reverse the order of the elements within the non_zero_segment. If the segment is empty or has one element, it remains unchanged.
  - name: reconstruct_sequence
    inputs: leading_zeros, reversed_segment, trailing_zeros
    outputs: output_sequence
    description: Concatenate the leading zeros, the reversed segment, and the trailing zeros in that order to form the final output sequence.