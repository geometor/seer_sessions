Data:
  Type: Sequence of single digits
  Format: Space-separated string
  Length: Fixed at 12
Objects:
  - InputSequence: The original list of 12 integer digits derived from the input string.
  - LeadingZeros: A (potentially empty) list containing the sequence of zeros at the beginning of the InputSequence, up to the first non-zero digit.
  - NonZeroSegment: A list containing the contiguous sub-sequence of digits from the InputSequence, starting at the first non-zero digit and ending at the last non-zero digit (inclusive).
  - TrailingZeros: A (potentially empty) list containing the sequence of zeros at the end of the InputSequence, starting after the last non-zero digit.
  - ReversedSegment: The NonZeroSegment with the order of its elements reversed.
  - OutputSequence: The final list of 12 integer digits, formed by concatenating LeadingZeros, ReversedSegment, and TrailingZeros.
Properties:
  - SequenceLength: Constant 12 for both input and output.
  - DigitValue: Integers 0-9.
  - FirstNonZeroIndex: The index of the first digit in InputSequence that is not 0. (-1 if all are 0).
  - LastNonZeroIndex: The index of the last digit in InputSequence that is not 0. (-1 if all are 0).
Actions:
  - Parse: Convert the input string into a list of integers (InputSequence).
  - IdentifyBoundaries: Find the FirstNonZeroIndex and LastNonZeroIndex within the InputSequence.
  - ExtractSegments: Separate the InputSequence into LeadingZeros, NonZeroSegment, and TrailingZeros based on the identified boundaries.
  - Reverse: Create the ReversedSegment by reversing the order of elements in the NonZeroSegment.
  - Reconstruct: Form the OutputSequence by concatenating LeadingZeros, ReversedSegment, and TrailingZeros in order.
  - Format: Convert the OutputSequence back into a space-separated string.
SpecialConditions:
  - If the InputSequence contains only zeros (FirstNonZeroIndex is -1), the OutputSequence is identical to the InputSequence.