Objects:
  - InputSequence:
      type: list
      elements: integers (0-9)
      structure: Consists of three potentially empty parts - [LeadingZeros, NonZeroBlock, TrailingZeros]
      length: Consistent across all examples (12 in this set)
  - OutputSequence:
      type: list
      elements: integers (0-9)
      structure: Derived from InputSequence - [LeadingZeros, ReversedNonZeroBlock, TrailingZeros]
      length: Same as InputSequence
  - LeadingZeros:
      type: sub-sequence
      elements: integer (0)
      location: Start of InputSequence, before the first non-zero digit. Can be empty.
      relation: Identical in InputSequence and OutputSequence.
  - NonZeroBlock:
      type: sub-sequence
      elements: integers (1-9)
      property: contiguous
      location: Between LeadingZeros and TrailingZeros in InputSequence. Can be empty if InputSequence contains only zeros.
  - TrailingZeros:
      type: sub-sequence
      elements: integer (0)
      location: End of InputSequence, after the last non-zero digit. Can be empty.
      relation: Identical in InputSequence and OutputSequence.
  - ReversedNonZeroBlock:
      type: sub-sequence
      elements: integers (1-9)
      location: Between LeadingZeros and TrailingZeros in OutputSequence.
      relation: Contains the same elements as NonZeroBlock but in reverse order.

Actions:
  - Parse: Convert the input string into a list of integers.
  - IdentifyBoundaries: Find the index of the first non-zero digit (`start_index`) and the last non-zero digit (`end_index`) in the input list. Handle the case where no non-zero digits exist.
  - Extract: Separate the input list into three parts: `LeadingZeros` (elements before `start_index`), `NonZeroBlock` (elements from `start_index` to `end_index` inclusive), and `TrailingZeros` (elements after `end_index`).
  - Reverse: Create a new list (`ReversedNonZeroBlock`) by reversing the order of elements in `NonZeroBlock`.
  - Reconstruct: Assemble the output list by concatenating `LeadingZeros`, `ReversedNonZeroBlock`, and `TrailingZeros`.
  - Format: Convert the output list back into a space-separated string.

Relationships:
  - The transformation preserves the overall length of the sequence.
  - The transformation preserves the positions and values of all zero digits that are *outside* the contiguous block of non-zero digits.
  - The core transformation is the reversal of the order of digits within the contiguous block bounded by the first and last non-zero digits.