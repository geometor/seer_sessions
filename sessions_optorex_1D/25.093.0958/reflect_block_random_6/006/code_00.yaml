task_type: sequence_transformation
input_format: string containing space-separated single digits (0-9)
output_format: string containing space-separated single digits (0-9)
input_data_structure: 1D sequence (list or array) of integers
output_data_structure: 1D sequence (list or array) of integers of the same length as the input

objects:
  - name: sequence
    description: The full input list of digits.
    properties:
      - length: integer, number of digits in the sequence.
      - elements: integer digits (0-9).
  - name: leading_zeros
    description: A contiguous subsequence of zeros at the beginning of the input sequence. May be empty.
    properties:
      - elements: only the digit 0.
      - location: starts at index 0.
  - name: trailing_zeros
    description: A contiguous subsequence of zeros at the end of the input sequence. May be empty.
    properties:
      - elements: only the digit 0.
      - location: ends at the last index of the sequence.
  - name: core_subsequence
    description: The contiguous subsequence starting at the first non-zero digit and ending at the last non-zero digit in the input sequence. If the input contains no non-zero digits, this subsequence is considered empty.
    properties:
      - elements: digits (0-9), guaranteed to contain at least one non-zero digit unless the entire input sequence is zeros.
      - location: bounded by the first and last non-zero elements.

actions:
  - name: find_indices
    description: Locate the index of the first non-zero element and the index of the last non-zero element in the input sequence.
    inputs: sequence
    outputs: start_index, end_index (or indicators like None/ -1 if no non-zeros exist)
  - name: extract_parts
    description: Split the input sequence into three parts based on the found indices - leading_zeros, core_subsequence, and trailing_zeros.
    inputs: sequence, start_index, end_index
    outputs: leading_zeros_part, core_subsequence_part, trailing_zeros_part
  - name: reverse_subsequence
    description: Reverse the order of elements within the extracted core_subsequence.
    inputs: core_subsequence_part
    outputs: reversed_core_subsequence
  - name: concatenate_parts
    description: Combine the leading_zeros, reversed_core_subsequence, and trailing_zeros back into a single sequence.
    inputs: leading_zeros_part, reversed_core_subsequence, trailing_zeros_part
    outputs: final_output_sequence

relationships:
  - The length of the output sequence is always equal to the length of the input sequence.
  - The elements in the leading_zeros part of the input appear unchanged at the beginning of the output.
  - The elements in the trailing_zeros part of the input appear unchanged at the end of the output.
  - The elements in the core_subsequence part of the input appear in reverse order in the corresponding segment of the output.
  - If the input sequence contains no non-zero digits, the output sequence is identical to the input sequence.