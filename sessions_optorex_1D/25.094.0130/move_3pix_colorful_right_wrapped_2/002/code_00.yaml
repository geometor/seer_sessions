objects:
  - name: input_sequence
    type: numpy.ndarray # Updated type
    properties:
      - length: 12
      - elements: integers (single digits 0-9)
  - name: output_sequence
    type: string # Expected final format
    properties:
      - format: space-separated digits
      - length: represents 12 digits

relationships:
  - type: transformation
    from: input_sequence
    to: output_sequence
    details: The output sequence is formed by rearranging the elements of the input sequence.

actions:
  - name: split_input_array # Updated action description
    actor: transformation_rule
    input: input_sequence (numpy.ndarray)
    output:
      - first_part: numpy.ndarray containing the first 9 elements
      - last_part: numpy.ndarray containing the last 3 elements
  - name: construct_output_array # Updated action description
    actor: transformation_rule
    input:
      - first_part (numpy.ndarray)
      - last_part (numpy.ndarray)
    output: transformed_array (numpy.ndarray)
    details: Concatenate last_part followed by first_part using array manipulation (e.g., np.concatenate).
  - name: format_output_string # New action for formatting
    actor: transformation_rule
    input: transformed_array (numpy.ndarray)
    output: output_sequence (string)
    details: Convert each integer element in transformed_array to a string and join them with single spaces.

derived_facts:
  - The count of each distinct digit is identical in both the input_sequence and the logical sequence represented by the output_sequence.
  - The transformation is a cyclic rotation: the last 3 elements are moved to the front.