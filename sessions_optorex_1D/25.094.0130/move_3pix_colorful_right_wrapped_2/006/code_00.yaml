objects:
  - name: input_sequence
    type: numpy.ndarray
    properties:
      - shape: (12,) # 1-dimensional array with 12 elements
      - element_type: integer
  - name: output_sequence
    type: string
    properties:
      - format: space-separated digits
      - length: Variable string length, but represents 12 digits

relationships:
  - type: transformation
    from: input_sequence
    to: output_sequence
    details: The output string is formed by rearranging the elements of the input NumPy array and formatting the result.

actions:
  - name: slice_input_array
    actor: transformation_rule
    input: input_sequence
    output:
      - first_part: NumPy array containing the first 9 elements of input_sequence
      - last_part: NumPy array containing the last 3 elements of input_sequence
    details: Uses NumPy array slicing (e.g., `arr[:-3]` and `arr[-3:]`).
  - name: concatenate_parts
    actor: transformation_rule
    input:
      - first_part
      - last_part
    output: reordered_array
    details: Concatenates last_part followed by first_part using `numpy.concatenate`.
  - name: format_to_string
    actor: transformation_rule
    input: reordered_array
    output: output_sequence
    details: Converts each integer element in reordered_array to its string representation and joins them with a single space separator.

derived_facts:
  - The number of elements (digits) remains 12 throughout the transformation.
  - The relative order within the first 9 elements is preserved.
  - The relative order within the last 3 elements is preserved.
  - The transformation is deterministic and consistently applies the same rotational logic.