objects:
  - name: input_string
    type: string
    properties:
      - format: space-separated digits
      - content: sequence of 12 digits
  - name: output_string
    type: string
    properties:
      - format: space-separated digits
      - content: sequence of 12 digits derived from input_string
derived_objects:
  - name: input_list
    type: list
    properties:
      - element_type: string (single digit)
      - length: 12
      - source: derived by splitting input_string by space
  - name: segment_A
    type: list
    properties:
      - source: input_list
      - indices: 0 through 7
  - name: segment_B
    type: list
    properties:
      - source: input_list
      - index: 8 (represented as a single-element list)
  - name: segment_C
    type: list
    properties:
      - source: input_list
      - indices: 9 through 11
  - name: output_list
    type: list
    properties:
      - element_type: string (single digit)
      - length: 12
      - source: concatenation of segment_C, segment_A, segment_B
actions:
  - name: split_string
    input: input_string
    output: input_list
    details: split input_string using space as a delimiter
  - name: slice_list
    input: input_list
    outputs: [segment_A, segment_B, segment_C]
    details: extract elements based on index ranges (0-7, 8, 9-11)
  - name: concatenate_lists
    inputs: [segment_C, segment_A, segment_B]
    output: output_list
    details: join the lists in the specified order C, A, B
  - name: join_list
    input: output_list
    output: output_string
    details: join elements of output_list using space as a delimiter