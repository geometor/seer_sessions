task_elements:
  - input_data:
      type: string
      format: space-separated integers
      quantity: 12
      description: The initial sequence of numbers provided as a single string.
  - parsed_input_sequence:
      type: list
      length: 12
      element_type: integer
      derivation: Created by splitting the input_data string by spaces and converting each part to an integer.
      description: The sequence of numbers represented as a list for processing.
  - transformed_sequence:
      type: list
      length: 12
      element_type: integer
      derivation: Result of applying the transformation rule to the parsed_input_sequence.
      description: The intermediate transformed sequence before formatting for output.
  - output_data:
      type: string
      format: space-separated integers
      quantity: 12
      derivation: Created by converting each integer in the transformed_sequence to a string and joining them with spaces.
      description: The final transformed sequence formatted as a single string.
  - transformation:
      type: cyclic_shift
      details:
        - operation: parse_string_to_list
          input: input_data
          output: parsed_input_sequence
        - operation: right_cyclic_shift
          input: parsed_input_sequence
          output: transformed_sequence
          amount: 3 positions
          steps:
            - select: last 3 elements (indices 9, 10, 11) from parsed_input_sequence
            - select: first 9 elements (indices 0-8) from parsed_input_sequence
            - concatenate: (last 3 elements) + (first 9 elements) to form transformed_sequence
        - operation: format_list_to_string
          input: transformed_sequence
          output: output_data
relationship:
  - The output string is generated by first parsing the input string into a list of 12 integers, then performing a right cyclic shift of 3 positions on this list, and finally formatting the resulting list back into a space-separated string.