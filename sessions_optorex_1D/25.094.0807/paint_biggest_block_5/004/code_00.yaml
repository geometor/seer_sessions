objects:
  - name: input_sequence
    type: List[int]
    description: A sequence of integers provided as input.
  - name: output_sequence
    type: List[int]
    description: The sequence of integers resulting from the transformation, having the same length as the input_sequence.
  - name: candidate_subsequence
    type: Dict
    description: Represents a contiguous subsequence within the input_sequence identified during the scanning phase.
    properties:
      - value: int - The non-zero integer value common to all elements in the subsequence.
      - start_index: int - The 0-based index where the subsequence begins in the input_sequence.
      - length: int - The number of elements in the subsequence.
      - homogeneity: All elements within the subsequence are identical.
      - non_zero: The common value of the elements is not zero.
  - name: target_subsequence
    type: Dict
    description: The specific candidate_subsequence selected for modification based on length and position criteria.
    properties:
      - is_longest: The length of this subsequence is maximal among all candidate_subsequences.
      - is_leftmost: If multiple candidate_subsequences share the maximal length, this one has the smallest start_index.

actions:
  - name: find_candidates
    description: Scan the input_sequence to identify all contiguous subsequences where all elements are identical and non-zero.
    inputs: input_sequence
    outputs: List[candidate_subsequence]
  - name: select_target
    description: >
      From the list of candidate_subsequences, find the maximum length.
      Filter the candidates to keep only those with the maximum length.
      Among the filtered candidates, select the one with the minimum start_index.
      If no candidates were found initially, this action yields no target.
    inputs: List[candidate_subsequence]
    outputs: target_subsequence (or None if no candidates)
  - name: generate_output
    description: >
      Create the output_sequence.
      If a target_subsequence was selected, copy the input_sequence and replace the elements corresponding to the target_subsequence (using its start_index and length) with the integer 1.
      If no target_subsequence was selected (because no candidates were found), the output_sequence is an identical copy of the input_sequence.
    inputs:
      - input_sequence
      - target_subsequence (Optional)
    outputs: output_sequence

relationships:
  - output_sequence length equals input_sequence length.
  - Elements outside the range defined by the target_subsequence remain unchanged between input_sequence and output_sequence.
  - If a target_subsequence exists, the elements within its range in the output_sequence are all 1.