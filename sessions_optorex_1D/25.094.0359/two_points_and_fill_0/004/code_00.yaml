objects:
  - name: input_sequence
    type: list_of_integers
    description: A sequence containing mostly zeros and exactly two occurrences of a single non-zero integer value.
  - name: output_sequence
    type: list_of_integers
    description: The transformed sequence, having the same length as the input. Generated by modifying a copy of the input sequence.
  - name: non_zero_value
    type: integer
    description: The unique positive integer value present (at least twice) in the input sequence. Derived from input_sequence.
  - name: zero_value
    type: integer
    value: 0
    description: The background value in the sequence.
  - name: value_indices
    type: list_of_integers
    description: A list containing all indices where the non_zero_value appears in the input_sequence.
  - name: start_index
    type: integer
    description: The minimum index present in value_indices. Represents the start of the segment to be filled.
  - name: end_index
    type: integer
    description: The maximum index present in value_indices. Represents the end of the segment to be filled.
  - name: fill_segment
    type: range_of_indices
    description: The continuous range of indices from start_index to end_index (inclusive).

actions:
  - name: identify_unique_non_zero_value
    input: input_sequence
    output: non_zero_value
    description: Scan the input sequence to find the single integer value that is not zero. Assumes exactly one such unique value exists.
  - name: find_all_occurrences
    input: input_sequence, non_zero_value
    output: value_indices
    description: Locate all indices where the non_zero_value appears in the input sequence. Assumes at least two occurrences.
  - name: determine_segment_bounds
    input: value_indices
    output: [start_index, end_index]
    description: Calculate the minimum (start_index) and maximum (end_index) values from the list of value_indices.
  - name: copy_sequence
    input: input_sequence
    output: initial_output_sequence
    description: Create an identical copy of the input sequence to serve as the base for the output.
  - name: fill_segment_with_value
    input: initial_output_sequence, start_index, end_index, non_zero_value
    output: final_output_sequence
    description: Modify the sequence by setting the value of all elements from start_index to end_index (inclusive) to the non_zero_value.

relationships:
  - type: derivation
    from: input_sequence
    to: non_zero_value
    description: The non_zero_value is identified from the contents of the input_sequence.
  - type: location
    from: input_sequence, non_zero_value
    to: value_indices
    description: The indices list the positions of the non_zero_value within the input_sequence.
  - type: calculation
    from: value_indices
    to: [start_index, end_index]
    description: The segment bounds are the minimum and maximum of the occurrence indices.
  - type: definition
    from: fill_segment
    to: [start_index, end_index]
    description: The fill_segment spans inclusively from start_index to end_index.
  - type: initialization
    from: output_sequence
    via: copy_sequence
    source: input_sequence
    description: The output_sequence starts as a copy of the input_sequence.
  - type: transformation
    action: fill_segment_with_value
    target: output_sequence
    using: [fill_segment, non_zero_value]
    description: The output_sequence is produced by filling the defined segment in the copied sequence with the non_zero_value.