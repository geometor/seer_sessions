task_description: Fill a 1D sequence segment based on non-zero digit boundaries.
inputs:
  - name: input_sequence
    type: string
    format: space-separated integers
    elements:
      - type: integer
      - value: 0 or a single unique non-zero digit (N > 0) per sequence
outputs:
  - name: output_sequence
    type: string
    format: space-separated integers
    derivation: modified input_sequence
transformation_rule:
  - step: Parse the input string into a list/array of integers.
  - step: Identify all indices where the value is non-zero.
  - condition: If no non-zero values exist:
      - result: Return the original sequence unchanged.
  - condition: If non-zero values exist:
      - action: Determine the non-zero value (`fill_value`). (Guaranteed unique type).
      - action: Find the minimum index (`start_index`) among the non-zero indices.
      - action: Find the maximum index (`end_index`) among the non-zero indices.
      - action: Create a copy of the input sequence.
      - action: Modify the copied sequence by setting all elements from `start_index` to `end_index` (inclusive) to the `fill_value`.
      - result: Format the modified sequence back into a space-separated string.
objects:
  - object: sequence
    properties:
      - type: 1D list/array of integers
      - content: Primarily zeros, with one or more instances of a single non-zero digit.
  - object: non_zero_digit
    properties:
      - type: integer
      - value: > 0
      - role: Defines the fill value and boundary locations.
  - object: segment
    properties:
      - boundaries: Defined by the first (minimum index) and last (maximum index) occurrence of the non_zero_digit.
      - range: Inclusive of start and end indices.
    action_on_segment:
      - type: fill
      - value: non_zero_digit