objects:
  - input_sequence:
      type: numpy array of integers
      properties:
        - length: variable (12 in examples)
        - contains exactly two identical non-zero elements
        - all other elements are zero
  - output_sequence:
      type: numpy array of integers
      properties:
        - length: same as input_sequence
        - contains a contiguous block (segment) of a single non-zero digit
        - all elements outside this block are zero
  - non_zero_digit:
      type: integer
      properties:
        - value: derived from the non-zero elements in the input_sequence (they are identical)
  - start_index:
      type: integer
      properties:
        - value: index of the first occurrence of the non_zero_digit in the input_sequence
  - end_index:
      type: integer
      properties:
        - value: index of the last occurrence of the non_zero_digit in the input_sequence
actions:
  - receive: accept the input as a numpy array of integers (input_sequence)
  - find_indices: determine the indices where elements are non-zero within the input_sequence
  - identify_digit: determine the value of the non-zero elements (non_zero_digit) using the first non-zero index
  - determine_bounds: identify the minimum (start_index) and maximum (end_index) of the non-zero indices
  - create_output: generate an initial output_sequence (numpy array) filled with zeros, matching the input_sequence length
  - fill_segment: modify the output_sequence by setting the elements from start_index to end_index (inclusive) to the non_zero_digit
  - format_output: convert the final output_sequence (numpy array) into a space-separated string
relationships:
  - The non_zero_digit in the output_sequence's filled segment is identical to the non_zero_digit in the input_sequence.
  - The filled segment in the output_sequence spans the range [start_index, end_index] derived from the input_sequence.
  - The length of the output_sequence equals the length of the input_sequence.