task_elements:
  - object: input_array
    type: numpy.ndarray
    description: A 1D NumPy array of integers, containing mostly zeros and exactly two instances of a single non-zero integer.
  - object: output_array
    type: numpy.ndarray
    description: A 1D NumPy array representing the transformed state of the input_array, with the same shape and dtype.
  - property: fill_value
    type: int
    description: The single non-zero integer present in the input_array.
    value_determination: Find the first element in input_array that is not equal to zero using boolean indexing (e.g., `input_array[input_array != 0][0]`).
  - property: non_zero_indices
    type: numpy.ndarray
    description: An array containing the indices where the fill_value occurs in the input_array.
    value_determination: Use `numpy.where(input_array == fill_value)`.
  - property: first_occurrence_index
    type: int
    description: The index of the first appearance of the fill_value in the input_array.
    value_determination: The first element of `non_zero_indices` (`non_zero_indices[0]`).
  - property: last_occurrence_index
    type: int
    description: The index of the second (and last) appearance of the fill_value in the input_array.
    value_determination: The last element of `non_zero_indices` (`non_zero_indices[-1]`).
  - relationship: containment
    description: The fill_value is contained within the input_array exactly twice.
  - action: fill_segment
    description: Replace elements in a copy of the input_array between the first_occurrence_index (exclusive) and the last_occurrence_index (exclusive) with the fill_value.
    target_object: output_array (initially a copy of input_array)
    condition: Affects only elements whose index `i` satisfies `first_occurrence_index < i < last_occurrence_index`.
    value_used: fill_value
    implementation: Use NumPy array slicing assignment: `output_array[first_occurrence_index + 1 : last_occurrence_index] = fill_value`.