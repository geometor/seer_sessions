Observations:
  InputType: List of integers (0-9)
  OutputType: List of integers (0-9)
  SequenceLength: Preserved between input and output
  KeyObjects:
    - Neighbor:
        Description: A non-zero digit at index `i` (where 0 < i < length-1).
        Properties:
          - Value (Y): The digit's value.
          - Index (i): The position in the sequence.
    - LeftElement:
        Description: The digit at index `i-1`.
        Properties:
          - Value (A): The digit's value.
    - RightElement:
        Description: The digit at index `i+1`.
        Properties:
          - Value (C): The digit's value.
    - Pattern:
        Description: A specific configuration of Neighbor, LeftElement, and RightElement that triggers the transformation.
        Types:
          - RunNeighborZero: LeftElement(A) is non-zero, Neighbor(B) is non-zero, RightElement(C) is zero, and A != B. The 'Run' digit is A. Neighbor position relative to Run is 'right'.
          - ZeroNeighborRun: LeftElement(A) is zero, Neighbor(B) is non-zero, RightElement(C) is non-zero, and B != C. The 'Run' digit is C. Neighbor position relative to Run is 'left'.
    - TargetLengthRule:
        Description: A rule determining the desired final length of the block formed by the expanded Neighbor digit.
        Dependencies: Run digit value, Neighbor position relative to Run.
        Mapping:
          - Position 'right': (Run=2 -> Length=3), (Run=3 -> Length=4), (Run=5 -> Length=4)
          - Position 'left': (Run=3 -> Length=3), (Run=5 -> Length=4), (Run=8 -> Length=2)
  PrimaryAction:
    - Expansion:
        Description: The Neighbor digit replaces adjacent zeros in the direction away from the Run.
        Actor: Neighbor digit (Y)
        Target: Adjacent zeros.
        Direction: Leftward if Neighbor position is 'left', Rightward if Neighbor position is 'right'.
        Constraint: Expansion stops when the total count of the Neighbor digit (including the original) reaches TargetLength, or a non-zero digit is encountered, or the sequence boundary is reached.
  ExecutionFlow:
    - Find the first occurrence of either Pattern type (RunNeighborZero or ZeroNeighborRun) by scanning from left to right (index 1 to length-2).
    - If a pattern is found:
      - Determine the Run digit value and Neighbor position ('left' or 'right').
      - Calculate the TargetLength using the TargetLengthRule.
      - Perform the Expansion action.
    - If no pattern is found, the output is identical to the input.
    - The output sequence maintains the original length.
