objects:
  - name: sequence
    type: list of integers
    properties:
      - length: variable (12 in examples)
      - elements: single digits (0-9)
  - name: element
    type: integer
    properties:
      - value: 0-9
      - index: position within the sequence
  - name: input_sequence
    type: sequence
    description: The initial sequence provided as input.
  - name: output_sequence
    type: sequence
    description: The sequence after applying the transformation rule. Initially a copy of the input sequence.
  - name: non_zero_element
    type: element
    constraints:
      - value != 0
  - name: singular_non_zero_element
    type: non_zero_element
    description: A non-zero element whose immediate neighbors (if they exist within the sequence boundaries) have different values than itself.
    properties:
      - value: V (the non-zero digit)
      - index: i (the position)
    conditions:
      - input_sequence[i] == V AND V != 0
      - (i == 0 OR input_sequence[i-1] != V) # Left neighbor check
      - (i == len(input_sequence)-1 OR input_sequence[i+1] != V) # Right neighbor check
  - name: zero_element
    type: element
    constraints:
      - value == 0

actions:
  - name: identify_singular_non_zero
    description: Iterate through the input_sequence to find all elements that meet the definition of a singular_non_zero_element.
  - name: spread_value
    description: For each identified singular_non_zero_element V at index i, modify the output_sequence by changing adjacent zero elements (based on the original input_sequence) to V.
    sub_actions:
      - spread_left: Starting from index i-1, move leftwards. If input_sequence[j] is 0, set output_sequence[j] = V. Stop if j < 0 or input_sequence[j] is non-zero.
      - spread_right: Starting from index i+1, move rightwards. If input_sequence[k] is 0, set output_sequence[k] = V. Stop if k >= len(input_sequence) or input_sequence[k] is non-zero.
  - name: preserve_non_zeros
    description: All non-zero elements from the input_sequence retain their original value and position in the output_sequence, unless overwritten by a spreading value originating from a singular_non_zero_element (which only happens if the original value was 0).
  - name: preserve_unaffected_zeros
    description: Zero elements in the input_sequence that are not adjacent to any singular_non_zero_element, or are separated from one by a non-zero element, remain zero in the output_sequence.

relationships:
  - type: adjacency
    description: Elements at index i and i+1 are adjacent.
  - type: boundary
    description: The start (index 0) and end (index len-1) of the sequence.