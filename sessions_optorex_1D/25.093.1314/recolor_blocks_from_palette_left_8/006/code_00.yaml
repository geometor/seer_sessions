task_description: Replace contiguous blocks of the digit '5' in the first 10 elements of a sequence derived from a space-separated string of 12 integers, based on the values of the last two integers.
input_format:
  type: string
  description: A single string containing 12 integers separated by single spaces.
parsing:
  action: split_string
  arguments:
    delimiter: " "
  action: convert_to_integer
  output: sequence
    role: intermediate_input
    length: 12
    dtype: integer
elements:
  - type: sequence
    role: primary_input
    source: intermediate_input
    length: 12
    dtype: integer
  - type: sequence
    role: output
    length: 12
    dtype: integer
  - type: integer
    value: 5
    role: target_digit
    description: The digit within the first 10 elements (indices 0-9) of the primary_input that undergoes transformation.
  - type: integer
    role: control_value_1
    source: primary_input[10]
    description: The 11th integer, used as the replacement value for the first block of '5's (if two blocks exist).
  - type: integer
    role: control_value_2
    source: primary_input[11]
    description: The 12th integer, used as the replacement value for the second block of '5's (if two blocks exist) or the only block (if one block exists).
  - type: block
    description: A contiguous sub-sequence consisting only of the target_digit ('5') within the first 10 elements (indices 0-9) of the primary_input.
relationships:
  - The output sequence is derived from the primary_input sequence.
  - Elements at indices 10 and 11 remain unchanged from primary_input to output.
  - Elements != 5 at indices 0-9 remain unchanged.
  - Elements == 5 at indices 0-9 are replaced based on block membership and control values.
actions:
  - Parse the input string into a list of 12 integers (primary_input).
  - Initialize the output sequence as a copy of the primary_input sequence.
  - Extract control_value_1 from primary_input[10].
  - Extract control_value_2 from primary_input[11].
  - Identify contiguous blocks of '5's in primary_input[0:10].
  - Count the number of identified blocks.
  - If one block exists, replace all '5's in that block within the output sequence with control_value_2.
  - If two blocks exist, replace all '5's in the first block (lower indices) within the output sequence with control_value_1, and all '5's in the second block (higher indices) with control_value_2.
  - Return the modified output sequence.