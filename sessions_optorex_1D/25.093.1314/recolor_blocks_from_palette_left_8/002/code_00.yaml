task_description: Replace contiguous blocks of the digit '5' in the first 10 elements of a sequence of 12 integers, based on the values of the last two elements.
input_format: A string containing 12 space-separated integers.
output_format: A list or sequence of 12 integers.
elements:
  - type: string
    role: input_string
    description: The raw input data as a string.
  - type: list
    role: input_sequence
    length: 12
    dtype: integer
    description: The sequence derived by parsing the input_string.
  - type: list
    role: output_sequence
    length: 12
    dtype: integer
    description: The transformed sequence.
  - type: integer
    value: 5
    role: target_digit
    description: The digit within the first 10 elements (indices 0-9) of input_sequence that undergoes transformation.
  - type: integer
    role: control_value_1
    source: input_sequence[10]
    description: The 11th element, used as the replacement value for the first block of '5's (if two blocks exist).
  - type: integer
    role: control_value_2
    source: input_sequence[11]
    description: The 12th element, used as the replacement value for the second block of '5's (if two blocks exist) or the only block (if one block exists).
  - type: block
    description: A contiguous sub-sequence consisting only of the target_digit ('5') within the first 10 elements (indices 0-9) of input_sequence. Represented by start and end (exclusive) indices.
relationships:
  - The output_sequence is derived from the input_sequence.
  - Elements at indices 10 and 11 remain unchanged from input_sequence to output_sequence.
  - Elements != 5 at indices 0-9 in input_sequence remain unchanged in output_sequence.
  - Elements == 5 at indices 0-9 in input_sequence are replaced based on block membership and control values.
actions:
  - Parse the input_string into input_sequence (a list of 12 integers).
  - Initialize output_sequence as a copy of input_sequence.
  - Extract control_value_1 from input_sequence[10].
  - Extract control_value_2 from input_sequence[11].
  - Identify contiguous blocks of '5's in input_sequence[0:10]. Store start and end (exclusive) indices for each block.
  - Count the number of identified blocks.
  - If one block exists (start_idx, end_idx), replace elements in output_sequence from start_idx to end_idx-1 with control_value_2.
  - If two blocks exist (block1=(start1, end1), block2=(start2, end2)), replace elements in output_sequence from start1 to end1-1 with control_value_1, and replace elements from start2 to end2-1 with control_value_2.
  - Return the final output_sequence.