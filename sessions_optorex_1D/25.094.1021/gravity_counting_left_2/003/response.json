{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\nimport numpy as np\nimport collections\n\n\"\"\"\nTransforms a sequence of 12 integers by counting the non-zero elements \nand creating an output sequence of 12 integers with that many '1's \ngrouped at the end, preceded by '0's.\n\"\"\"\n\ndef count_non_zero(input_list):\n  \"\"\"Counts the number of non-zero elements in a list or array.\"\"\"\n  return np.count_nonzero(input_list)\n\ndef transform(input_sequence):\n    \"\"\"\n    Transforms an input sequence (list or array) of 12 integers based \n    on the count of non-zero elements.\n\n    Args:\n        input_sequence: A list or numpy array containing 12 integers.\n\n    Returns:\n        list: A list of 12 integers (0s and 1s) where the number of 1s\n              equals the count of non-zero elements in the input, and the\n              1s are grouped at the end of the list.\n    \"\"\"\n    # Ensure input is treated as a list or array-like structure\n    # (No need for explicit conversion if numpy array is passed)\n    \n    # Determine the length of the sequence\n    sequence_length = len(input_sequence)\n    \n    # Count the non-zero elements in the input sequence\n    non_zero_count = count_non_zero(input_sequence)\n\n    # Calculate the number of zeros needed at the beginning\n    zero_count = sequence_length - non_zero_count\n\n    # Create the output list: sequence_length - non_zero_count zeros followed by non_zero_count ones\n    output_list = [0] * zero_count + [1] * non_zero_count\n        \n    return output_list\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 5418,
    "candidates_token_count": 520,
    "total_token_count": 5938,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 7.206881,
  "retries": 1
}