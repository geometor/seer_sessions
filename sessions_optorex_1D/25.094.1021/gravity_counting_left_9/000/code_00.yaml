task_elements:
  - name: input_sequence
    type: list
    subtype: integer_string # strings representing single integers
    properties:
      - length: 12
      - contains_digits: 0-9
      - delimiter: space
  - name: output_sequence
    type: list
    subtype: integer_string # strings representing single integers
    properties:
      - length: 12
      - contains_digits: 0, 1
      - delimiter: space
      - structure: sequence of '0's followed by sequence of '1's

transformation_rule:
  - action: count_zeros
    input: input_sequence
    variable: zero_count (N)
    description: Count the total occurrences of the digit '0' in the input sequence.
  - action: count_non_zeros
    input: input_sequence
    variable: non_zero_count (M)
    description: Count the total occurrences of digits '1' through '9' in the input sequence.
  - action: construct_output
    description: Create the output sequence.
    steps:
      - step: generate_zeros
        count: zero_count (N)
        value: '0'
      - step: generate_ones
        count: non_zero_count (M)
        value: '1'
      - step: concatenate
        parts: [generated_zeros, generated_ones]
      - step: format_output
        delimiter: space

relationships:
  - type: count_match
    element1: number of '0's in output_sequence
    element2: count of '0' digits in input_sequence (zero_count)
  - type: count_match
    element1: number of '1's in output_sequence
    element2: count of non-zero digits ('1'-'9') in input_sequence (non_zero_count)
  - type: length_conservation
    element1: input_sequence
    element2: output_sequence
    property: length (value is 12)
  - type: sum_constraint
    element1: zero_count
    element2: non_zero_count
    value: 12