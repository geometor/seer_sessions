objects:
  - name: input_data
    type: Sequence[int] # Could be List[int] or np.ndarray[int]
    description: A sequence of single-digit integers. May be passed as a list or a NumPy array.
  - name: output_sequence
    type: List[int] # Or np.ndarray[int], depending on required output format
    description: A sequence of binary digits (0 or 1) with the same length as the input data.
  - name: zero_digit
    type: int
    value: 0
    description: The specific digit whose occurrences are counted in the input.
properties:
  - object: input_data
    name: length
    type: int
    description: The total number of elements in the input sequence.
  - object: output_sequence
    name: length
    type: int
  - object: input_data
    name: zero_count
    type: int
    description: The total number of times the digit 0 appears in the input sequence, irrespective of its structure (e.g., counted over all elements if multi-dimensional).
relationships:
  - type: equality
    between: [input_data.length, output_sequence.length]
    description: The input and output sequences have the same number of elements.
  - type: dependency
    description: The value of each element in the output_sequence depends on its index and the zero_count calculated from the input_data. Output elements are 0 for indices less than zero_count, and 1 otherwise.
actions:
  - name: count_zeros
    input: input_data
    output: zero_count
    description: Iterate through all scalar integer elements of the input data (flattening if necessary) and count occurrences of the digit 0. Use a method robust to the input type (e.g., `np.count_nonzero(input_array == 0)` if NumPy).
  - name: generate_output
    input: [input_data.length, zero_count]
    output: output_sequence
    description: Create the output sequence where the first 'zero_count' elements are 0, and the remaining 'length - zero_count' elements are 1.