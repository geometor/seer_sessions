Task: Transform sequence of integers based on non-zero count.

InputObject:
  Type: String
  Format: Space-separated integers (e.g., "0 3 0 8 0 1 4 0 1 0 0 0")
  Represents: A sequence of integers.

OutputObject:
  Type: String
  Format: Space-separated binary integers (0s and 1s) (e.g., "0 0 0 0 0 0 0 1 1 1 1 1")
  Represents: A binary sequence derived from the input.

IntermediateRepresentation:
  Type: List of Integers
  DerivedFrom: InputObject by parsing the string.
  Properties:
    - Length: L (number of integers in the sequence)
    - NonZeroCount: N (count of integers in the sequence > 0)
    - ZeroCount: Z (count of integers in the sequence == 0; Z = L - N)

TransformationRule:
  Action: GenerateOutputSequence
  InputProperties: L, N, Z from IntermediateRepresentation
  OutputStructure: A sequence containing Z zeros followed by N ones.
  FinalOutput: Format the generated sequence as a space-separated string (OutputObject).

Examples_Summary:
  - Consistent input length L=12 across all provided examples.
  - Output length always equals input length L.
  - Number of '1's in output always equals N (NonZeroCount).
  - Number of '0's in output always equals Z (ZeroCount = L - N).
  - '0's always precede '1's in the output.