Task: Transform a sequence of integers based on the count of its non-zero elements.

Input:
  Type: Sequence of integers (e.g., list or NumPy array).
  Identifier: Input_Sequence
  Properties:
    - Length: L (fixed at 12 in examples, but potentially variable).
    - Elements: Integers (non-negative).
    - Non_Zero_Count: N (Count of elements > 0).

Output:
  Type: Sequence of binary integers (0 or 1) (e.g., list or NumPy array).
  Identifier: Output_Sequence
  Properties:
    - Length: L (same as Input_Sequence).
    - Structure: Consists of (L - N) zeros followed by N ones.
    - Zero_Count: Z = L - N
    - One_Count: O = N

Relationship:
  - The number of '1's (O) in the Output_Sequence is equal to the 'Non_Zero_Count' (N) of the Input_Sequence.
  - The number of '0's (Z) in the Output_Sequence is equal to the 'Length' (L) of the Input_Sequence minus the 'Non_Zero_Count' (N).
  - The Output_Sequence is ordered with all '0's preceding all '1's.

Action:
  1. Receive the Input_Sequence.
  2. Determine the total length (L) of the Input_Sequence.
  3. Count the number of non-zero integers (N) within the Input_Sequence.
  4. Calculate the number of zeros required: Z = L - N.
  5. Construct the Output_Sequence by creating Z zeros followed by N ones.
  6. Return the constructed Output_Sequence.