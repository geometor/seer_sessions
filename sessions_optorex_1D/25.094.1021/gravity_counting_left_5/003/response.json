{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nTransforms an input sequence of integers based on the count of its non-zero elements.\nThe output sequence has the same length as the input. It consists of a number of \nleading zeros equal to the count of zeros in the input, followed by a number of \ntrailing ones equal to the count of non-zero elements in the input.\n\"\"\"\n\nimport numpy as np\n\ndef _count_non_zeros(int_sequence):\n  \"\"\"Counts the number of non-zero elements in a sequence of integers.\"\"\"\n  # Convert to numpy array for efficient counting\n  arr = np.array(int_sequence)\n  return np.count_nonzero(arr)\n\ndef transform(input_sequence):\n    \"\"\"\n    Applies the transformation rule to the input sequence.\n\n    Args:\n        input_sequence: A sequence (list or NumPy array) of integers.\n\n    Returns:\n        A NumPy array containing binary integers (0s and 1s)\n        representing the transformed sequence.\n    \"\"\"\n    # 1. Receive the Input_Sequence (implicitly done by function argument).\n\n    # 2. Determine the total length (L) of the Input_Sequence.\n    total_length = len(input_sequence)\n\n    # 3. Count the number of non-zero integers (N) within the Input_Sequence.\n    non_zero_count = _count_non_zeros(input_sequence)\n\n    # 4. Calculate the number of zeros required: Z = L - N.\n    num_zeros = total_length - non_zero_count\n\n    # 5. Construct the Output_Sequence by creating Z zeros followed by N ones.\n    # Create the zeros part\n    zeros_part = np.zeros(num_zeros, dtype=int)\n    # Create the ones part\n    ones_part = np.ones(non_zero_count, dtype=int)\n    # Concatenate the parts\n    output_sequence = np.concatenate((zeros_part, ones_part))\n\n    # 6. Return the constructed Output_Sequence.\n    return output_sequence\n\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 4922,
    "candidates_token_count": 851,
    "total_token_count": 5773,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 8.547513,
  "retries": 1
}