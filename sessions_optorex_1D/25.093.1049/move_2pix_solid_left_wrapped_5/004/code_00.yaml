task_description: "Shift non-zero digits in a sequence two positions to the left, wrapping around, and fill empty spots with zero."
components:
  - object: sequence
    properties:
      - type: list or 1D array of integers
      - length: 12
      - element_type: digit (0-9)
    roles:
      - input_sequence
      - output_sequence
  - object: element
    properties:
      - type: integer
      - value: 0-9
    attributes:
      - is_zero: boolean
      - is_non_zero: boolean
      - position: index (0-11) within the sequence
constants:
  - sequence_length: 12
  - shift_amount: -2 # Represents a left shift of 2
  - fill_value: 0
actions:
  - name: initialize_output
    inputs: sequence_length
    outputs: output_sequence (filled with fill_value)
    description: "Create an output sequence of the specified length, initially filled entirely with zeros."
  - name: iterate_input
    inputs: input_sequence
    outputs: element, index
    description: "Go through each element and its index in the input sequence."
  - name: check_non_zero
    inputs: element
    outputs: boolean
    description: "Determine if the current element's value is not zero."
  - name: calculate_target_index
    inputs:
      - current_index
      - shift_amount
      - sequence_length
    outputs: target_index
    logic: "(current_index + shift_amount) modulo sequence_length"
    description: "Calculate the new position for a non-zero element using modular arithmetic for wrap-around."
  - name: place_element
    inputs:
      - output_sequence
      - target_index
      - element_value
    outputs: updated_output_sequence
    description: "Place the non-zero element from the input into the calculated target index in the output sequence."
process_flow:
  - step: Initialize an output sequence of length 12 with all zeros.
  - step: Iterate through the input sequence from index 0 to 11.
  - step: For each element at index `i` in the input sequence:
      - if the element is non-zero:
          - calculate the target index `t = (i - 2) % 12`.
          - place the element's value into the output sequence at index `t`.
  - step: Return the final output sequence.
