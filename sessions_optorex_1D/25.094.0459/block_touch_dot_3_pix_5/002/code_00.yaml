Task: Reposition a block of digits adjacent to a pivot element in a numerical sequence.

Input_Type: Sequence (List or NumPy array of integers)
Output_Type: Sequence (List or NumPy array of integers)

Elements:
  - Type: Sequence
    Properties:
      - ContainsIntegers: true
      - Length: 12 (observed in examples)
  - Type: PivotElement
    Properties:
      - Value: 2
      - Count: 1 per sequence
      - Role: Anchor point, position is invariant between input and output.
  - Type: PayloadBlock
    Properties:
      - ContainsIntegers: true
      - Digits: Identical, non-zero, not equal to 2.
      - Contiguous: Forms a single block.
      - Count: 1 per sequence
      - Role: The object to be moved.
  - Type: BackgroundElement
    Properties:
      - Value: 0
      - Role: Fills space not occupied by Pivot or Payload in the output.

Relationships:
  - InOutput: PayloadBlock is directly adjacent to PivotElement.
  - Invariance: The index of PivotElement is the same in Input and Output.
  - RelativeOrder: If PayloadBlock starts at an index less than PivotElement's index in the Input, it is placed immediately to the left of PivotElement in the Output. If it starts at an index greater than PivotElement's index, it is placed immediately to the right.

Action:
  - Identify: Locate the index of PivotElement (`pivot_index`) and the properties (value, length, start_index) of the PayloadBlock in the Input Sequence.
  - Construct: Create an Output Sequence of the same length, initialized with BackgroundElement (0).
  - PlacePivot: Copy PivotElement (2) to the Output Sequence at `pivot_index`.
  - DeterminePayloadPlacement:
    - If `payload_start_index < pivot_index`: target start index is `pivot_index - payload_length`.
    - If `payload_start_index > pivot_index`: target start index is `pivot_index + 1`.
  - PlacePayload: Copy the PayloadBlock into the Output Sequence at the determined target start index.
  - FillBackground: Ensure all remaining positions in Output Sequence are BackgroundElement (this is handled by the initialization).