Task: Shift a contiguous non-zero segment within a fixed-length sequence.
Objects:
  - InputSequence:
      Type: Sequence of integers (digits 0-9)
      Format: Presented as a space-separated string.
      Properties:
        - Length: 12 (fixed)
        - Contains: Zeros and potentially non-zero digits.
  - OutputSequence:
      Type: Sequence of integers (digits 0-9)
      Format: Presented as a space-separated string.
      Properties:
        - Length: 12 (same as input)
        - DerivedFrom: InputSequence via segment shifting.
        - DefaultState: Filled with zeros initially.
  - NonZeroSegment:
      Type: Contiguous sub-sequence of InputSequence.
      Properties:
        - Definition: The block of digits starting from the first non-zero digit up to and including the last non-zero digit in InputSequence.
        - Existence: May not exist if InputSequence contains only zeros.
        - Content: Includes all digits (zeros and non-zeros) within its bounds in the InputSequence.
        - RelativeOrder: Preserved from InputSequence.
        - StartIndex (Input): Index of the first non-zero digit.
        - EndIndex (Input): Index of the last non-zero digit.
Actions:
  - ParseInput: Convert the input string into a list or array of integers.
  - IdentifySegmentBounds:
      - Find the index of the first non-zero digit (`StartIndex`).
      - Find the index of the last non-zero digit (`EndIndex`).
      - Handle Case: If no non-zero digits are found, the task result is an all-zero sequence.
  - ExtractSegment: Create a new sequence containing the elements of InputSequence from `StartIndex` to `EndIndex` inclusive.
  - CalculateTargetStartIndex:
      - Formula: `max(0, StartIndex - ShiftAmount)`
      - Ensures the segment starts at or after index 0 in the output.
  - ConstructOutput:
      - Initialize: Create an OutputSequence of `SequenceLength` filled with zeros.
      - PlaceSegment: Copy the `NonZeroSegment` into the `OutputSequence`, starting at the `TargetStartIndex`. Ensure the segment does not write past the end of the `OutputSequence` (though based on examples, the length and shift seem designed to prevent this unless the segment itself is very long).
  - FormatOutput: Convert the resulting list or array of integers back into a space-separated string.
Relationships:
  - OutputSequence is derived by relocating a specific segment of InputSequence.
  - The location of the `NonZeroSegment` in the `OutputSequence` is determined by its original start position and the `ShiftAmount`.
Constants:
  - SequenceLength: 12
  - ShiftAmount: 4 (positions to the left)
  - ZeroValue: 0 (used for padding/initialization)