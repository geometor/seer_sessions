task_name: ShiftCoreBlockLeft4
description: Identify a core block of numbers in an integer sequence and shift it 4 positions to the left.
task_elements:
  - object: sequence
    type: list_of_integers
    role: input
    properties:
      - length: fixed (12 in examples)
      - content: contains zeros and potentially a core_block
  - object: sequence
    type: list_of_integers
    role: output
    properties:
      - length: same as input sequence
      - content: derived from input sequence by shifting the core_block
  - object: core_block
    definition: contiguous subsequence from the first non-zero element to the last non-zero element (inclusive) in the input sequence.
    properties:
      - location_input: defined by start_index (first_nz_idx) and end_index (last_nz_idx)
      - content: list of integers
  - object: zero
    type: integer
    value: 0
    role: padding_element / background_element
  - property: sequence_length
    value: 12 # Based on examples
  - property: shift_amount
    value: 4
    direction: left
  - action: find_non_zero_indices
    input: input_sequence
    output: first_nz_idx, last_nz_idx
    condition: Returns indices if non-zero elements exist, otherwise indicates none found.
  - action: extract_core_block
    inputs: input_sequence, first_nz_idx, last_nz_idx
    output: core_block (list of integers)
    condition: Performed only if non-zero elements exist.
  - action: calculate_output_start_index
    inputs: first_nz_idx, shift_amount
    operation: output_start_idx = first_nz_idx - shift_amount
    output: output_start_idx
  - action: construct_output_sequence
    inputs:
      - sequence_length
      - core_block
      - output_start_idx
    steps:
      - Initialize an output list of `sequence_length` with zeros.
      - Place the `core_block` into the output list starting at `output_start_idx`, ensuring placement respects list boundaries (elements shifted beyond index 0 are lost, elements shifted past the end are truncated).
    output: output_sequence
relationship: transformation
  inputs: input_sequence
  outputs: output_sequence
  rule: The core_block identified in the input_sequence is shifted left by 4 positions to produce the output_sequence, padded with zeros.