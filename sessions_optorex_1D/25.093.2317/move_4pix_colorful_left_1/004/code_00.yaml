task_description: Rearrange a sequence of digits by shifting the core non-zero segment exactly 4 positions to the left, padding with zeros.
constants:
  - name: SHIFT_AMOUNT
    value: 4
elements:
  - object: sequence
    properties:
      - type: list of single-digit integers
      - length: constant between input and output (verified as 12 in examples)
      - items: integers 0-9
  - object: core_segment
    description: The contiguous subsequence starting from the first non-zero digit and ending at the last non-zero digit, inclusive. Contains original values and order.
    properties:
      - content: original digits (non-zero and included zeros)
      - input_start_index: index of the first non-zero digit in the input sequence (equivalent to the number of leading zeros).
      - input_end_index: index of the last non-zero digit in the input sequence.
      - output_start_index: target index for the start of the core segment in the output sequence.
relationships:
  - type: identification
    action: find_core_segment
    inputs: [input_sequence]
    outputs: [core_segment, input_start_index, input_end_index]
    condition: Returns empty segment and indices (-1 or length) if input contains only zeros.
  - type: calculation
    action: determine_output_start_index
    inputs: [input_start_index]
    outputs: [output_start_index]
    rule: output_start_index = max(0, input_start_index - SHIFT_AMOUNT) # SHIFT_AMOUNT is 4
  - type: construction
    action: build_output_sequence
    inputs: [output_start_index, core_segment, sequence_length]
    outputs: [output_sequence]
    rule: Create a new sequence of 'sequence_length' filled with zeros. Place the 'core_segment' into this sequence starting at 'output_start_index'.
special_cases:
  - condition: Input sequence contains only zeros.
    result: Output sequence is identical to the input sequence. (Core segment is empty, placement logic results in no change).
validation_notes:
  - The core segment's content and internal order remain unchanged.
  - The shift amount is consistently 4 positions to the left.
  - The target start index is capped at 0 (no negative indices).
  - Total sequence length is preserved by padding with zeros before and after the shifted core segment.
  - Execution results provided previously contradict this analysis, showing no transformation occurred. The logic described here is based purely on the input/output examples.