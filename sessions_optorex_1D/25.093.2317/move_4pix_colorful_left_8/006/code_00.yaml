Task: Shift a specific content block within a 1D sequence of integers.

Objects:
  - Input_Sequence:
      Type: 1D NumPy array of integers.
      Origin: Parsed from the input representation.
      Properties:
        - length: The total number of integers in the sequence (N).
        - elements: Individual integer values at specific indices.
        - non_zero_indices: Indices where the element value is not zero.
  - Output_Sequence:
      Type: 1D NumPy array of integers.
      Destination: To be formatted into the required output representation.
      Properties:
        - length: Same as Input_Sequence length (N).
        - elements: Derived from Input_Sequence based on transformation rule. Initially all zeros.
  - Content_Block:
      Type: Sub-array of integers (1D NumPy array).
      Origin: Extracted from Input_Sequence.
      Definition: The contiguous segment of the Input_Sequence starting at the index of the *first* non-zero integer and ending at the index of the *last* non-zero integer. If no non-zero integers exist, the block is empty.
      Properties:
        - start_index_input: The index in Input_Sequence where the block begins (minimum non-zero index). None if all zeros.
        - end_index_input: The index in Input_Sequence where the block ends (maximum non-zero index). None if all zeros.
        - length: Number of elements in the block (end_index_input - start_index_input + 1), or 0 if empty.
        - elements: The sequence of integers within the block, preserving relative order.
  - Zero_Element:
      Type: Integer.
      Value: 0.
      Role: Acts as padding/background in the sequences, and the initial state of the Output_Sequence.
  - Shift_Value:
      Type: Integer.
      Value: 4.
      Role: Defines the magnitude of the leftward shift applied to the Content_Block's starting position.

Relationships:
  - Derivation: Output_Sequence is derived from Input_Sequence.
  - Extraction: Content_Block is extracted from Input_Sequence based on non_zero_indices.
  - Preservation: The relative order and values of elements within the Content_Block are maintained from Input_Sequence to Output_Sequence.
  - Positioning: The starting position of the Content_Block in the Output_Sequence is determined by the Content_Block's start_index_input and the Shift_Value.

Actions:
  - Parse: Convert input representation to Input_Sequence (NumPy array).
  - Identify_Block_Bounds: Find the start_index_input (min) and end_index_input (max) from the non_zero_indices of the Input_Sequence. Handle the case where no non-zero elements exist.
  - Extract_Block: If non-zero elements exist, create the Content_Block sub-array from Input_Sequence using slice `[start_index_input : end_index_input + 1]`.
  - Calculate_Output_Start: If a block exists, determine the target starting index: `output_start = max(0, start_index_input - Shift_Value)`.
  - Initialize_Output: Create an Output_Sequence of length N, filled with zeros.
  - Place_Block: If a block exists, copy the elements of the Content_Block into the Output_Sequence starting at the calculated `output_start` index.
  - Format: Convert the final Output_Sequence to the required output representation.