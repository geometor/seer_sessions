Task: Shift a specific content block within a sequence of integers leftwards.

Objects:
  - Input_Sequence:
      Type: List of integers (derived from space-separated string).
      Properties:
        - length (N): The total number of integers (e.g., 12).
        - elements: Integer values at specific indices.
  - Output_Sequence:
      Type: List of integers (formatted to space-separated string).
      Properties:
        - length (N): Same as Input_Sequence length.
        - elements: Derived from Input_Sequence based on transformation rule.
  - Content_Block:
      Type: Sub-list of integers.
      Origin: Extracted from Input_Sequence.
      Definition: The contiguous segment of the Input_Sequence starting at the index of the first non-zero integer (`start_index`).
      Properties:
        - start_index_input: The index in Input_Sequence where the block begins (first non-zero element). Null if all zeros.
        - length: The number of elements in the block, calculated as `min(8, N - start_index_input)`. If `start_index_input` is null, length is 0.
        - elements: The sequence of integers within the block (including any zeros within its calculated length).
  - Zero_Element:
      Type: Integer.
      Value: 0.
      Role: Acts as padding/background in the sequences and can be part of the Content_Block if it falls within the block's calculated length.

Relationships:
  - Derivation: Output_Sequence is derived from Input_Sequence.
  - Extraction: Content_Block is extracted from Input_Sequence based on `start_index_input` and calculated `length`.
  - Preservation: The relative order of elements within the Content_Block is maintained from Input_Sequence to Output_Sequence.
  - Positioning: The starting position of the Content_Block in the Output_Sequence (`output_start_index`) is determined by the `start_index_input`.

Actions:
  - Parse: Convert input string to Input_Sequence list.
  - Find_First_Non_Zero: Locate the index (`start_index_input`) of the first non-zero element in Input_Sequence. Handle the case where no non-zero elements exist.
  - Calculate_Block_Length: Determine the length of the Content_Block using `block_len = min(8, N - start_index_input)`.
  - Extract_Block: Create the Content_Block sub-list from Input_Sequence starting at `start_index_input` with the calculated `block_len`.
  - Calculate_Output_Start: Determine the target starting index for the Content_Block in the Output_Sequence using the rule: `output_start_index = max(0, start_index_input - 4)`.
  - Initialize_Output: Create an Output_Sequence of length N, filled with zeros.
  - Place_Block: Copy the elements of the Content_Block into the Output_Sequence starting at the calculated `output_start_index`.
  - Format: Convert the final Output_Sequence back to a space-separated string.