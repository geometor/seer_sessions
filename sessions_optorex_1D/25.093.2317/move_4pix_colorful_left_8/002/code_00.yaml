Task: Shift a content block within a NumPy array of integers.

Objects:
  - Input_Array:
      Type: numpy.ndarray
      Element Type: Integer
      Origin: Provided directly to the transformation function.
      Properties:
        - shape: 1-dimensional array of a specific length (e.g., 12 in examples).
        - elements: Integer values at specific indices.
  - Output_Array:
      Type: numpy.ndarray
      Element Type: Integer
      Destination: Returned by the transformation function.
      Properties:
        - shape: Same shape as Input_Array.
        - elements: Derived from Input_Array based on the transformation rule.
  - Content_Block:
      Type: numpy.ndarray (sub-array)
      Origin: Extracted from Input_Array.
      Definition: The contiguous segment of the Input_Array starting at the index of the first non-zero integer and ending at the index of the last non-zero integer.
      Properties:
        - start_index_input: The index in Input_Array where the block begins.
        - end_index_input: The index in Input_Array where the block ends.
        - length: Number of elements in the block (end_index_input - start_index_input + 1).
        - elements: The sequence of integers within the block, preserving relative order.
  - Zero_Element:
      Type: Integer
      Value: 0
      Role: Acts as padding/background value in the arrays.

Relationships:
  - Derivation: Output_Array is derived from Input_Array.
  - Extraction: Content_Block is extracted (sliced) from Input_Array.
  - Preservation: The relative order of elements within the Content_Block is maintained from Input_Array to Output_Array.
  - Positioning: The starting position of the Content_Block in the Output_Array depends on its starting position in the Input_Array.

Actions:
  - Identify_Block_Indices: Find the indices of all non-zero elements in the Input_Array (e.g., using `numpy.nonzero`). Determine the minimum (`start_index_input`) and maximum (`end_index_input`) of these indices. Handle the case where no non-zero elements exist.
  - Extract_Block: Create the Content_Block sub-array by slicing the Input_Array from `start_index_input` to `end_index_input` (inclusive).
  - Calculate_Output_Start: Determine the target starting index (`output_start`) for the Content_Block in the Output_Array using the rule: `output_start = max(0, start_index_input - 4)`.
  - Initialize_Output_Array: Create an Output_Array of the same shape and type as the Input_Array, filled with zeros (e.g., using `numpy.zeros_like`).
  - Place_Block: Copy the elements of the Content_Block into the Output_Array starting at the calculated `output_start` index using array slicing assignment.
  - Return_Array: Return the final Output_Array.