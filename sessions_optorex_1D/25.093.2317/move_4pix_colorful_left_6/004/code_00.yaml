task_elements:
  - item: sequence
    properties:
      - type: list of integers
      - length: 12
      - representation: Can be space-separated string or list/array.
  - item: core_block
    properties:
      - type: sub-sequence
      - source: input sequence
      - definition: contiguous elements from the first non-zero digit to the last non-zero digit (inclusive).
      - identification:
          - Find index of first non-zero element (`first_nz`).
          - Find index of last non-zero element (`last_nz`).
          - Extract `input_sequence[first_nz : last_nz + 1]`.
      - contains: integers (can include internal zeros)
      - note: If no non-zero elements exist, the core_block is considered empty or non-existent.
  - item: output_sequence
    properties:
      - type: list of integers
      - length: 12 (same as input)
      - composition: Contains the shifted `core_block` padded with zeros.
transformation:
  action: shift_core_block_left_by_4_clamped
  input: input_sequence (list of 12 integers)
  output: output_sequence (list of 12 integers)
  steps:
    - 1: Find the index of the first non-zero element in the `input_sequence`, `first_nz`.
    - 2: If `first_nz` is not found (sequence is all zeros), return the `input_sequence` unchanged.
    - 3: Find the index of the last non-zero element in the `input_sequence`, `last_nz`.
    - 4: Extract the `core_block` = `input_sequence[first_nz : last_nz + 1]`.
    - 5: Calculate the target starting index for the `core_block` in the `output_sequence`: `new_start = max(0, first_nz - 4)`.
    - 6: Initialize `output_sequence` as a list of 12 zeros.
    - 7: Determine the number of elements from `core_block` that can fit into `output_sequence` starting at `new_start`: `num_elements_to_copy = min(len(core_block), 12 - new_start)`.
    - 8: Copy the first `num_elements_to_copy` elements from `core_block` into `output_sequence` starting at index `new_start`. Specifically: `output_sequence[new_start : new_start + num_elements_to_copy] = core_block[0 : num_elements_to_copy]`.
    - 9: Return the `output_sequence`.
edge_case:
  - condition: input sequence contains only zeros.
    action: return the input sequence directly.