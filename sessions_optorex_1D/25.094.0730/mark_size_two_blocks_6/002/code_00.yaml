task_description: "Modify a sequence of 0s and 1s by changing 0s adjacent to specific '1 1' patterns to 3s."
elements:
  - type: sequence
    name: input_list
    description: "A list of integers composed solely of 0s and 1s."
    contains:
      - type: integer
        possible_values: [0, 1]
  - type: sequence
    name: output_list
    description: "A list derived from input_list where specific 0s are changed to 3s."
    contains:
      - type: integer
        possible_values: [0, 1, 3]
    relationship: "Derived from input_list via conditional modification based on 'isolated_one_one_block' patterns."
objects:
  - name: digit_zero
    value: 0
    property: "Can be transformed into digit_three if adjacent to an isolated_one_one_block."
  - name: digit_one
    value: 1
    property: "Forms the basis of the trigger pattern."
  - name: digit_three
    value: 3
    property: "The result of transforming a digit_zero based on the rule."
  - name: isolated_one_one_block
    description: "A subsequence [1, 1] within the input_list."
    properties:
      - "Located at indices i, i+1."
      - "Must not be preceded by a 1 at index i-1 (unless i=0)."
      - "Must not be followed by a 1 at index i+2 (unless i+1 is the last index)."
    relationship: "Triggers the transformation of adjacent digit_zeros."
actions:
  - name: find_isolated_blocks
    input: input_list
    output: list_of_indices
    description: "Iterates through the input_list to find all starting indices 'i' of isolated_one_one_blocks."
  - name: modify_adjacent_zeros
    input: input_list, list_of_indices (from find_isolated_blocks)
    output: output_list
    description: "Initializes output_list as a copy of input_list. For each identified isolated_one_one_block starting at index 'i', checks the original input_list at index 'i-1' (if valid) and 'i+2' (if valid). If the value at such an adjacent index in the input_list is 0, updates the corresponding index in the output_list to 3."
relationships:
  - type: adjacency
    description: "A digit_zero at index `j` is adjacent to an isolated_one_one_block at `i, i+1` if `j = i-1` or `j = i+2`."
  - type: transformation_trigger
    subject: isolated_one_one_block
    object: adjacent digit_zero (in input_list)
    action: Change the corresponding element in output_list to 3.
constraints:
  - "Input list contains only 0s and 1s."
  - "Output list has the same length as the input list."
  - "Transformation only affects 0s that are adjacent (immediately before or after) to an isolated block of exactly two 1s."
  - "The check for adjacent 0s uses the original input_list values."
  - "1s and non-adjacent 0s remain unchanged."
  - "A block of three or more 1s (e.g., '1 1 1') does not trigger any changes."
