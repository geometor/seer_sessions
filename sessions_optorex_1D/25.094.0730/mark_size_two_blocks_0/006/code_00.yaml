objects:
  - name: sequence_element
    properties:
      - value: integer (0, 1 initially; can become 3 in output)
      - position: index within the sequence (0-based)
  - name: sequence
    properties:
      - elements: list of sequence_element (1D array/list)
      - length: integer

relationships:
  - type: adjacency_pattern
    description: Defines specific patterns around a '0' element required for transformation.
    properties:
      - preceding_exact_11: Boolean indicating if the element is preceded by exactly '1 1'. Checks elements at index-2, index-1, and index-3 (or boundary).
      - succeeding_exact_11: Boolean indicating if the element is succeeded by exactly '1 1'. Checks elements at index+1, index+2, and index+3 (or boundary).

actions:
  - name: check_and_transform_element
    description: Evaluate a '0' element based on adjacency patterns and transform if criteria met.
    inputs:
      - element_index: The index of the element to check.
      - input_sequence: The original sequence.
    outputs:
      - output_value: The value for the element in the output sequence (3 if transformed, original value otherwise).

conditions_for_change:
  - element_value_is_zero: The element at the current index in the input_sequence must be 0.
  - meets_pattern_condition: EITHER the `preceding_exact_11` OR the `succeeding_exact_11` relationship property is true for the element at the current index.
    - preceding_exact_11 definition:
        - index >= 2
        - AND input_sequence[index-2] == 1
        - AND input_sequence[index-1] == 1
        - AND (index == 2 OR input_sequence[index-3] != 1)
    - succeeding_exact_11 definition:
        - index <= length(input_sequence) - 3
        - AND input_sequence[index+1] == 1
        - AND input_sequence[index+2] == 1
        - AND (index == length(input_sequence) - 3 OR input_sequence[index+3] != 1)

transformation_goal:
  - Generate an output sequence of the same length as the input sequence. Iterate through each index of the input sequence. If the element at the current index satisfies both `element_value_is_zero` and `meets_pattern_condition`, the corresponding element in the output sequence is set to 3. Otherwise, the output element takes the same value as the input element.