objects:
  - name: sequence_element
    properties:
      - value: integer (0, 1 initially; can become 3 in output)
      - position: index within the sequence (0-based)
  - name: sequence
    properties:
      - elements: list or array of sequence_element (integers)
      - length: integer (number of elements)

relationships:
  - type: adjacency
    description: Describes the positional relationship between sequence elements.
    properties:
      - preceding_pair: The two elements immediately before the current element (at index-2 and index-1).
      - succeeding_pair: The two elements immediately after the current element (at index+1 and index+2).

actions:
  - name: check_adjacency_pattern
    description: Examine the values of elements adjacent to a specific element with value 0.
    inputs:
      - element_index: The index of the element with value 0.
      - sequence: The input sequence (list or array of integers).
    outputs:
      - boolean: True if the required adjacent pattern exists, False otherwise.
  - name: replace_value
    description: Change the value of a sequence element in a copy of the sequence.
    inputs:
      - element_index: The index of the element to change.
      - new_value: integer (specifically, 3).
      - output_sequence: The sequence being constructed.
    outputs:
      - modified_output_sequence: The sequence with the element's value updated.

conditions_for_change:
  - element_value_is_zero: The sequence element at the current index must have a value of 0.
  - pattern_match: EITHER the two preceding elements (at index-2, index-1) both exist and equal 1, OR the two succeeding elements (at index+1, index+2) both exist and equal 1.

transformation_goal:
  - Create an output sequence (list or array of integers) of the same length as the input, applying the replacement rule to all qualifying 0s, while keeping all other elements identical to the input.