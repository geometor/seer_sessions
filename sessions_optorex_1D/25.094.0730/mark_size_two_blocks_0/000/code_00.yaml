objects:
  - name: sequence_element
    properties:
      - value: integer (0, 1 initially; can become 3 in output)
      - position: index within the sequence (0-based)
  - name: sequence
    properties:
      - elements: list of sequence_element
      - length: integer

relationships:
  - type: adjacency
    description: Describes the positional relationship between sequence elements.
    properties:
      - preceding_element: The element immediately before the current element.
      - succeeding_element: The element immediately after the current element.
      - preceding_pair: The two elements immediately before the current element.
      - succeeding_pair: The two elements immediately after the current element.

actions:
  - name: check_adjacency
    description: Examine the values of elements adjacent to a specific element.
    inputs:
      - sequence_element (specifically, one with value 0)
      - sequence
    outputs:
      - boolean (true if adjacent context meets criteria, false otherwise)
  - name: replace_value
    description: Change the value of a sequence element.
    inputs:
      - sequence_element (the one to change)
      - new_value: integer (specifically, 3)
    outputs:
      - modified_sequence_element

conditions_for_change:
  - element_value_is_zero: The sequence element's value must be 0.
  - adjacent_to_exactly_two_ones:
      - The element must be immediately preceded by the sequence `1 1`.
      - OR The element must be immediately succeeded by the sequence `1 1`.

transformation_goal:
  - Create an output sequence by applying the replacement rule to all qualifying 0s in the input sequence, while keeping all other elements unchanged.