objects:
  - name: input_sequence
    type: numpy.ndarray (or list) of integers
    description: The sequence of numbers provided as input to the transform function.
  - name: output_sequence
    type: numpy.ndarray (or list) of integers
    description: The sequence of numbers generated as output by the transform function.
  - name: head_segment
    type: numpy.ndarray (or list) of integers
    description: The first 3 elements of the input sequence.
  - name: tail_segment
    type: numpy.ndarray (or list) of integers
    description: The elements of the input sequence starting from the 4th element until the end.
properties:
  - object: input_sequence
    property: data_type
    value: sequence of integers (handled as numpy.ndarray in execution)
  - object: input_sequence
    property: length
    value: 12 (based on all examples)
  - object: output_sequence
    property: data_type
    value: sequence of integers (handled as numpy.ndarray in execution)
  - object: output_sequence
    property: length
    value: 12 (based on all examples)
  - object: head_segment
    property: length
    value: 3
actions:
  - name: slice
    actor: system
    input: input_sequence
    output: [head_segment, tail_segment]
    description: Divides the input sequence into two parts; the first 3 elements (head) and the rest (tail).
  - name: concatenate
    actor: system
    input: [tail_segment, head_segment]
    output: output_sequence
    description: Joins the tail_segment and the head_segment, in that order, using sequence concatenation.
relationships:
  - type: transformation
    from: input_sequence
    to: output_sequence
    rule: The output sequence is formed by moving the first 3 elements of the input sequence to the end, preserving relative order within both segments. This is equivalent to a left circular shift (rotation) by 3 positions.