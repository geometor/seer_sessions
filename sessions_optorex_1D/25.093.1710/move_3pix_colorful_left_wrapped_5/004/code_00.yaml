objects:
  - name: input_sequence
    type: list  # Updated from string
    properties:
      - contains: numerical digits (likely integers) # Updated
      - length: 12
  - name: output_sequence
    type: list  # Updated from string
    properties:
      - contains: numerical digits (likely integers) # Updated
      - length: 12
  - name: first_three_elements
    type: sublist
    properties:
      - derived_from: input_sequence (indices 0, 1, 2)
  - name: remaining_elements
    type: sublist
    properties:
      - derived_from: input_sequence (indices 3 to 11)

actions:
  - name: validate_input
    actor: rule
    object: input_sequence
    constraints:
      - type: must be a list
      - length: must be 12
  - name: split_list  # Renamed for clarity
    actor: rule
    object: input_sequence
    parameters:
      - split_point: after index 2 (3rd element)
    results:
      - first_three_elements
      - remaining_elements
  - name: concatenate_lists # Renamed for clarity
    actor: rule
    parameters:
      - list1: remaining_elements
      - list2: first_three_elements
    results:
      - output_sequence

relationships:
  - type: transformation
    from: input_sequence
    to: output_sequence
    rule: Construct the output list by concatenating the sublist containing elements from index 3 onwards with the sublist containing the first 3 elements.
  - type: ordering
    description: The relative order of elements within the 'first_three_elements' sublist is preserved in the output.
  - type: ordering
    description: The relative order of elements within the 'remaining_elements' sublist is preserved in the output.