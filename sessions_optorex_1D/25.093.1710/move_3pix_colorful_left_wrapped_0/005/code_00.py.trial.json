{
  "train": {
    "trials": [
      {
        "match": false,
        "score": null,
        "input": "2 8 6 0 0 0 0 0 5 5 4 4",
        "expected_output": "0 0 0 0 0 5 5 4 4 2 8 6",
        "error": "invalid literal for int() with base 10: '[2 8 6 0 0 0 0 0 5 5 4 4]'",
        "function_output": "Warning: Input sequence length is 1, expected 12.\n"
      },
      {
        "match": false,
        "score": null,
        "input": "2 1 0 0 0 0 0 0 0 0 0 7",
        "expected_output": "0 0 0 0 0 0 0 0 7 2 1 0",
        "error": "invalid literal for int() with base 10: '[2 1 0 0 0 0 0 0 0 0 0 7]'",
        "function_output": "Warning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\n"
      },
      {
        "match": false,
        "score": null,
        "input": "2 3 9 8 4 6 0 0 0 0 0 0",
        "expected_output": "8 4 6 0 0 0 0 0 0 2 3 9",
        "error": "invalid literal for int() with base 10: '[2 3 9 8 4 6 0 0 0 0 0 0]'",
        "function_output": "Warning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\n"
      },
      {
        "match": false,
        "score": null,
        "input": "2 9 7 4 1 7 1 0 5 8 7 6",
        "expected_output": "4 1 7 1 0 5 8 7 6 2 9 7",
        "error": "invalid literal for int() with base 10: '[2 9 7 4 1 7 1 0 5 8 7 6]'",
        "function_output": "Warning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\n"
      },
      {
        "match": false,
        "score": null,
        "input": "3 9 2 0 0 0 0 0 0 8 5 5",
        "expected_output": "0 0 0 0 0 0 8 5 5 3 9 2",
        "error": "invalid literal for int() with base 10: '[3 9 2 0 0 0 0 0 0 8 5 5]'",
        "function_output": "Warning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\n"
      },
      {
        "match": false,
        "score": null,
        "input": "4 5 7 0 0 5 7 6 1 4 2 1",
        "expected_output": "0 0 5 7 6 1 4 2 1 4 5 7",
        "error": "invalid literal for int() with base 10: '[4 5 7 0 0 5 7 6 1 4 2 1]'",
        "function_output": "Warning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\n"
      },
      {
        "match": false,
        "score": null,
        "input": "1 2 9 0 0 0 0 0 0 0 0 6",
        "expected_output": "0 0 0 0 0 0 0 0 6 1 2 9",
        "error": "invalid literal for int() with base 10: '[1 2 9 0 0 0 0 0 0 0 0 6]'",
        "function_output": "Warning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\nWarning: Input sequence length is 1, expected 12.\n"
      }
    ],
    "error": null
  },
  "test": {
    "trials": [
      {
        "match": false,
        "score": null,
        "input": "0 0 0 0 2 3 3 5 4 9 0 0",
        "expected_output": "0 2 3 3 5 4 9 0 0 0 0 0",
        "error": "invalid literal for int() with base 10: '[0 0 0 0 2 3 3 5 4 9 0 0]'",
        "function_output": "Warning: Input sequence length is 1, expected 12.\n"
      }
    ],
    "error": null
  },
  "total_score": null,
  "average_score": null
}