task_description: Modifies elements in a 1D sequence of 12 integers based on the values at specific related indices in the input sequence.
elements:
  - name: sequence
    type: list or 1D numpy array of integers
    length: 12
    properties:
      - Contains zero
      - Contains one dominant non-zero digit (N)
  - name: dominant_digit_N
    type: integer
    source: The first non-zero digit found in the input sequence.
  - name: index_group_1
    type: tuple
    value: (1, 2, 3)
    description: Indices involved in the first part of the transformation rule.
  - name: index_group_2
    type: tuple
    value: (4, 6)
    description: Indices involved in the second part of the transformation rule.
actions:
  - name: transform_sequence
    inputs:
      - input_sequence: The 1D input sequence.
      - dominant_digit_N: The dominant non-zero digit.
    output: output_sequence: The transformed 1D sequence.
    logic:
      - Initialize output_sequence as a copy of input_sequence.
      - Process index_group_1 (1, 2, 3):
        - If input_sequence[1] equals dominant_digit_N:
          - Set output_sequence[1] to 0.
          - If input_sequence[2] equals 0:
            - Set output_sequence[2] to dominant_digit_N.
          - Else (if input_sequence[2] is not 0):
            - If input_sequence[3] equals 0:
              - Set output_sequence[3] to dominant_digit_N.
      - Process index_group_2 (4, 6):
        - If input_sequence[4] equals dominant_digit_N:
          - Set output_sequence[4] to 0.
          - If input_sequence[6] equals 0:
            - Set output_sequence[6] to dominant_digit_N.
      - Return output_sequence.
relationships:
  - The transformation depends on the value of dominant_digit_N.
  - Changes are localized to indices 1, 2, 3, 4, 6 based on specific conditions related to the input values at these indices.
  - Modifications at indices 2, 3, and 6 are conditional upon the values at preceding indices within their respective groups (1 for 2/3, 4 for 6) and their own initial value (must be 0 to be changed to N).
assumptions:
  - The input data structure for the core logic is a 1D sequence/array of length 12. Any necessary adaptation from other formats (like a 2D array from a test harness) must be handled before applying this logic.