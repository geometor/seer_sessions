objects:
  - name: input_grid
    type: numpy_array_2d
    description: >
      A 2-dimensional NumPy array representing the input sequence.
      It has a shape of (1, N), where N is the number of integers in the input string.
  - name: output_grid
    type: numpy_array_2d
    description: >
      A 2-dimensional NumPy array representing the output sequence,
      derived from the input_grid. It has the same shape as the input_grid.
  - name: grid_element
    type: integer
    description: An individual number within the grid.
  - name: target_coordinates
    type: tuple_of_indices
    value: (0, 1) # (row 0, column 1)
    description: >
      The specific coordinates (row index, column index) in the grid
      that are subject to modification. This corresponds to the second element
      in the sequence.
  - name: replacement_value
    type: integer
    value: 0
    description: The value used to replace the element at the target_coordinates.

properties:
  - object: input_grid
    property: shape
    description: A tuple representing the dimensions of the input grid (e.g., (1, 12)).
  - object: output_grid
    property: shape
    description: A tuple representing the dimensions of the output grid (equal to input shape).
  - object: grid_element
    property: value
    description: The numerical value of the element.
  - object: grid_element
    property: coordinates
    description: The (row, column) index of the element within the grid.

actions:
  - name: read_input_grid
    description: Obtain the input grid (a 2D NumPy array).
  - name: identify_target_element
    description: Locate the element at the target_coordinates (0, 1) in the input_grid.
  - name: replace_element
    description: >
      Create a copy of the input_grid. In the copy, change the value
      of the element at target_coordinates (0, 1) to the replacement_value (0).
  - name: construct_output_grid
    description: The modified copy of the input grid serves as the output_grid.

relationships:
  - type: transformation
    from: input_grid
    to: output_grid
    rule: >
      The element at coordinates (0, 1) is set to 0; all other elements
      retain their original values and positions.
  - type: positional_invariance
    description: >
      Elements not at coordinates (0, 1) maintain their original value and
      position in the output_grid relative to the input_grid.
  - type: structural_identity
    description: The output_grid has the same shape and data type as the input_grid.