task_description: Shift a contiguous block of non-zero digits 3 positions to the left within a fixed-length sequence, padding with zeros.

objects:
  - name: sequence
    type: list_of_integers (fixed length 12)
    properties:
      - contains_digits_0_to_9
      - fixed_length_across_input_output (length is 12)
      - contains_a_single_contiguous_block_of_non_zero_digits
  - name: non_zero_block
    type: sub_sequence_of_integers
    properties:
      - extracted_from_input_sequence
      - contains_only_digits_1_to_9
      - maintains_relative_order_of_digits
      - has_a_start_index_in_input
      - has_an_end_index_in_input
  - name: zero_digit
    type: integer
    properties:
      - value_is_0
      - acts_as_padding

parameters:
  - name: shift_amount
    type: integer
    value: 3
    description: The number of positions to shift the non-zero block to the left.
  - name: sequence_length
    type: integer
    value: 12
    description: The fixed length of the input and output sequences.

actions:
  - name: identify_non_zero_block
    input: input_sequence
    output: non_zero_block, start_index, end_index
    description: Find the first and last non-zero digits in the input sequence to define the block and its boundaries. Handle the case of an all-zero input.
  - name: calculate_target_start_index
    input: original_start_index
    parameter: shift_amount (value is 3)
    output: target_start_index
    description: Calculate the new starting position for the non_zero_block by subtracting the shift_amount from the original start_index. Clamp the result at 0 (cannot be negative).
  - name: construct_output_sequence
    input: non_zero_block, target_start_index, sequence_length (value is 12)
    output: output_sequence
    description: Create a new sequence of zeros with the specified sequence_length. Place the non_zero_block into this sequence starting at the target_start_index. Ensure the block does not extend beyond the sequence length (though not expected based on examples). The remaining positions automatically remain zero.

relationships:
  - input_sequence contains non_zero_block
  - output_sequence contains non_zero_block at a shifted position
  - length(input_sequence) == length(output_sequence) == 12
  - target_start_index = max(0, original_start_index - 3)
  - relative_order(non_zero_digits_in_input) == relative_order(non_zero_digits_in_output)