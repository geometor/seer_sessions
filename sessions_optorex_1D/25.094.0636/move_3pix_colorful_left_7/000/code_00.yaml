task_elements:
  - object: sequence
    properties:
      - type: list of integers
      - length: 12
      - contains: digits 0-9
    roles:
      - input_sequence
      - output_sequence
  - object: sub_sequence
    properties:
      - type: list of integers
      - derived_from: input_sequence
      - boundaries: defined by the first and last non-zero digits (inclusive)
      - content: sequence of digits between the first and last non-zero elements of the input
    role:
      - core_data_block
  - object: zero_digit
    properties:
      - value: 0
    role:
      - padding_element
  - object: non_zero_digit
    properties:
      - value: range 1-9
    role:
      - boundary_marker (first and last non-zero define the sub_sequence)
      - data_element (part of the sub_sequence)
actions:
  - name: identify_boundaries
    inputs:
      - input_sequence
    outputs:
      - start_index: index of the first non-zero digit
      - end_index: index of the last non-zero digit
  - name: extract_sub_sequence
    inputs:
      - input_sequence
      - start_index
      - end_index
    outputs:
      - core_data_block: the sub-sequence from start_index to end_index (inclusive)
  - name: calculate_output_position
    inputs:
      - start_index
    constants:
      - shift_amount: 3
    outputs:
      - output_start_index: start_index - shift_amount
  - name: construct_output
    inputs:
      - core_data_block
      - output_start_index
    constants:
      - output_length: 12
      - padding_value: 0
    outputs:
      - output_sequence: a sequence of length 12, padded with zeros, containing the core_data_block at the output_start_index
relationships:
  - type: transformation
    from: input_sequence
    to: output_sequence
    rule: extract the sub-sequence between the first and last non-zero digits and shift it 3 positions to the left, padding the remaining positions with zeros.