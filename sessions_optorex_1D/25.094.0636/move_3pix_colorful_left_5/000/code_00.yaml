task_elements:
  - object: sequence
    properties:
      - type: list of integers
      - length: fixed (e.g., 12 in examples)
      - contains: digits (0-9)
  - object: segment
    properties:
      - definition: sub-sequence from the first non-zero digit to the last non-zero digit in the input sequence.
      - includes: all digits (zeros and non-zeros) within its boundaries.
      - relationship: part of the input sequence.
  - object: zero
    properties:
      - value: 0
      - role: can be part of the segment or padding outside the segment.
  - object: non-zero_digit
    properties:
      - value: 1-9
      - role: define the start and end boundaries of the segment.
      - relationship: relative order is preserved during transformation.
actions:
  - action: identify_segment
    input: input sequence
    output: the segment (sub-sequence)
    steps:
      - find the index of the first non-zero digit.
      - find the index of the last non-zero digit.
      - extract the sub-sequence between these indices (inclusive).
  - action: shift_segment
    input: segment, shift amount
    output: shifted segment position
    details:
      - shift_amount: fixed value (3 positions)
      - direction: left
  - action: construct_output
    input: sequence length, shifted segment, start index of shifted segment
    output: output sequence
    steps:
      - create a new sequence of the original length, filled with zeros.
      - place the shifted segment into the new sequence starting at the calculated left-shifted index.
relationships:
  - input sequence and output sequence have the same length.
  - the relative order of digits within the identified segment is preserved in the output.
  - the segment is moved 3 positions to the left relative to its original position in the input.
constants:
  - shift_amount: 3
  - shift_direction: left