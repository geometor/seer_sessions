task_elements:
  - type: sequence
    description: Input is a sequence of 12 integers.
    properties:
      length: 12
      content_type: integers
      structure: linear list/array
  - type: sequence
    description: Output is a sequence of 12 integers derived from the input.
    properties:
      length: 12
      content_type: integers
      structure: linear list/array

key_objects:
  - object: key_digit
    description: The integer value found in the first three positions (always identical and non-zero) of the input sequence.
    source: input[0]
  - object: trigger_location
    description: An instance of the key_digit found in the input sequence at an index `i`.
    condition: `i >= 3` and `input[i] == key_digit` and `i+1 < length(input)` # Ensures modification indices are valid
    relevant_indices: Index `i` where the key_digit is found.

derived_objects:
  - object: output_sequence
    description: The sequence generated by applying modifications to a copy of the input sequence.
    initial_state: Exact copy of the input sequence.
    final_state: Result after applying all modifications.

actions:
  - action: identify_key_digit
    actor: system
    input: input_sequence
    output: key_digit
    description: Extract the integer value from the first element (index 0) of the input sequence.
  - action: copy_sequence
    actor: system
    input: input_sequence
    output: output_sequence (initial state)
    description: Create a modifiable copy of the input sequence.
  - action: scan_for_triggers
    actor: system
    input: input_sequence, key_digit
    output: list_of_trigger_indices
    description: Iterate through the input sequence from index `i = 3` up to `length - 2`. If `input[i]` matches the `key_digit`, record the index `i`.
  - action: apply_triplet_modification
    actor: system
    input: output_sequence (current state), key_digit, trigger_index `i`
    output: output_sequence (updated state)
    description: For a given trigger index `i`, set the elements in the output sequence at indices `i-1`, `i`, and `i+1` to the `key_digit`.

relationships:
  - relationship: modification_trigger
    subject: trigger_location (at index `i`)
    verb: triggers
    object: apply_triplet_modification (centered at `i`)
    description: Finding the key_digit at index `i` (where `i>=3` and `i+1 < length`) causes the modification action to be performed on the output sequence at indices `i-1, i, i+1`.
  - relationship: sequential_application
    description: Modifications are determined based on *all* trigger locations found in the original *input* sequence before being applied to the *output* sequence. This prevents modifications from affecting the detection of subsequent triggers.

process_flow:
  - step: 1. Copy input sequence to output sequence.
  - step: 2. Identify key digit from input sequence.
  - step: 3. Scan input sequence (indices 3 to length-2) to find all trigger indices `i` where input[i] equals key digit.
  - step: 4. For each found trigger index `i`, modify the output sequence at indices `i-1`, `i`, `i+1` by setting them to the key digit.
  - step: 5. Return the final output sequence.