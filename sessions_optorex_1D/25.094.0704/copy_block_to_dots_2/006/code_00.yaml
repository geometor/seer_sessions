objects:
  - name: input_sequence
    type: list_of_integers
    properties:
      - length: 12 (fixed based on examples)
      - contains: Primarily zeros and one repeating non-zero integer (N)
      - structure: Often starts with [N, N, N, ...], but the core logic doesn't strictly depend on this starting pattern, only on finding the first N.
  - name: output_sequence
    type: list_of_integers
    properties:
      - length: 12 (same as input)
      - derived_from: input_sequence via a conditional replacement rule.
  - name: non_zero_integer
    symbol: N
    properties:
      - value: Determined by the first non-zero element found in the input_sequence.
      - role: The digit used for triggering and replacement.
  - name: zero
    symbol: 0
    properties:
      - value: 0
      - role: Background element, absence of N.

actions:
  - name: identify_non_zero_integer
    actor: transformation_rule
    input: input_sequence
    output: N
    description: Find the first element in the input_sequence that is not zero.
  - name: identify_trigger_points
    actor: transformation_rule
    input: input_sequence, N
    output: list_of_indices (trigger_indices)
    description: >
      Iterate through the input_sequence from index i = 3 up to (length - 2).
      A trigger point is found at index 'i' if input_sequence[i] equals N
      AND input_sequence[i-1] does NOT equal N. Collect all such indices 'i'.
  - name: generate_output_sequence
    actor: transformation_rule
    input: input_sequence, trigger_indices, N
    output: output_sequence
    description: >
      1. Create a mutable copy of the input_sequence.
      2. For each index 'i' in the trigger_indices list:
         Modify the copy by setting the elements at indices (i-1), i, and (i+1) to the value N.
      3. The final modified copy is the output_sequence.

relationships:
  - type: derivation
    from: input_sequence
    to: output_sequence
    rule: >
      The output sequence is derived from the input sequence. First, the characteristic non-zero integer N is identified. Then, trigger points are located in the original input sequence based on the condition N appearing at index i (3 <= i < length-1) preceded by a non-N value. Finally, a copy of the input sequence is modified: for every trigger point i, the elements at indices i-1, i, and i+1 are replaced with N.