task_elements:
  - type: sequence
    role: input
    subtype: integer_list_or_array # Adjusted based on error
    properties:
      - length: variable (e.g., 12 in examples)
      - element_type: integer
  - type: sequence
    role: output
    subtype: integer_list_or_array # Adjusted based on error
    properties:
      - length: same_as_input
      - element_type: integer
objects:
  - name: zero
    value: 0
    role: pattern_component / background
  - name: non_zero_digit
    symbol: N
    role: active_element / pattern_component
    properties:
      - value > 0
patterns:
  - name: isolated_non_zero
    structure: [zero, non_zero_digit(N), zero] # Represented as [0, N, 0]
    location: input_sequence (indices i-1, i, i+1)
    condition: input[i-1] == 0 and input[i] == N != 0 and input[i+1] == 0
actions:
  - name: expand_isolated_non_zero
    trigger: detection of isolated_non_zero pattern (0 N 0) at indices i-1, i, i+1 in the original input sequence
    effect: modify output sequence
    details: set output[i-1]=N, output[i]=N, output[i+1]=N
  - name: copy_element
    trigger: element at index j in input is not part of an 'expand_isolated_non_zero' action triggered by a pattern centered at j-1, j, or j+1.
    effect: set initial output element value
    details: Initialize output[j] = input[j]. This value is potentially overwritten by the 'expand_isolated_non_zero' action.
relationships:
  - type: correspondence
    description: Output sequence is derived from input sequence based on local patterns detected in the original input.
    input_elements: elements at i-1, i, i+1
    output_elements: elements at i-1, i, i+1
  - type: state_dependence
    description: The transformation rule depends solely on the configuration of the original input sequence. Modifications are determined based on the input and then applied to create the output, without intermediate steps affecting subsequent pattern detection within the same transformation.