task_description: Transform a sequence of 12 digits based on the position of a specific non-zero digit.
elements:
  - sequence:
      type: numpy.ndarray | List[int] # Adjusted type based on error
      length: 12
      dtype: int
  - active_digit:
      type: int
      property: non-zero
      role: primary value and trigger; identified as the first non-zero element in the input.
  - zero:
      type: int
      value: 0
      role: background/placeholder
actions:
  - identify: Find the first non-zero element in the input sequence (active_digit).
  - copy: Create a modifiable copy of the input sequence to serve as the initial output sequence.
  - scan: Iterate through the *input* sequence using indices `i` from 3 to 10 (inclusive).
  - trigger: Check if the element at index `i` in the *input* sequence is equal to the active_digit.
  - replace: If triggered, modify the *output* sequence by setting the elements at indices `i-1`, `i`, and `i+1` to the active_digit.
transformation:
  - rule: For each element equal to the active_digit found at index 'i' in the *input* sequence (where 3 <= i <= 10), set the elements at indices i-1, i, and i+1 in the *output* sequence to the active_digit.
  - initialization: The output sequence starts as a copy of the input sequence.
  - scope: Replacements modify the output based on the *original* input triggers. Multiple triggers can occur, and their effects accumulate in the output sequence.
relationships:
  - The active_digit defines the value used for replacement.
  - The position (index 'i') of a trigger active_digit in the input determines the location (indices i-1, i, i+1) of the replacement block in the output.
input_format: Assumed to be a NumPy array or list of 12 integers based on runtime errors. Output format should likely match the input format.