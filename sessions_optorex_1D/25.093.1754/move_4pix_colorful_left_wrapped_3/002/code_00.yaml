task_description: Rearrange a sequence of 12 digits by splitting it into two parts and swapping their order.
input_data:
  type: list or numpy.ndarray # Updated based on execution error
  element_type: integer
  length: 12
  constraints: Elements are single digits (0-9).
output_data:
  type: list or numpy.ndarray # Assuming output format matches input
  element_type: integer
  length: 12
  derivation: Rearrangement of the input list/array.
transformation:
  action: Split and Swap
  input: A list or array of 12 integers.
  split_point: Fixed index 4 (0-based index, meaning after the 4th element).
  segments:
    - segment_1: The first 4 elements of the input (indices 0 through 3).
    - segment_2: The last 8 elements of the input (indices 4 through 11).
  output_construction: Concatenate segment_2 followed by segment_1.
relationships:
  - The output contains exactly the same elements as the input, but in a different order.
  - The length of the input and output is constant (12).
  - The transformation rule (split at index 4, swap segments) is consistent across all examples.