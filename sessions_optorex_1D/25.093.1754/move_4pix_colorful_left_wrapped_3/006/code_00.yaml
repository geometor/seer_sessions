task_description: Rearrange a sequence of 12 integers by splitting it into two parts and swapping their order.
input_data:
  type: list or numpy.ndarray # Updated based on error
  element_type: integer
  length: 12
  constraints: Elements are single digits (0-9).
output_data:
  type: list or numpy.ndarray # Consistent with input type
  element_type: integer
  length: 12
  derivation: Rearrangement of the input sequence.
transformation:
  action: Split and Swap
  input_object: Sequence of 12 integers.
  split_point: Fixed index 4 (splitting the sequence into elements 0-3 and 4-11).
  segments:
    - segment_1: The first 4 elements of the input sequence (indices 0 to 3).
    - segment_2: The last 8 elements of the input sequence (indices 4 to 11).
  output_construction: Concatenate segment_2 followed by segment_1.
relationships:
  - The output sequence contains exactly the same elements as the input sequence, but in a different order.
  - The length of the input and output sequences is constant (12).
  - The transformation rule (split at index 4, swap segments) is consistent across all examples.