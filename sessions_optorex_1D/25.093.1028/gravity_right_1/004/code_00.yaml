objects:
  - name: input_string
    type: String
    description: A string containing space-separated single-digit integers.
  - name: input_sequence
    type: List[Integer]
    description: A sequence of single-digit integers derived by parsing the input_string.
  - name: output_sequence
    type: List[Integer]
    description: A sequence of single-digit integers representing the transformed result before formatting.
  - name: output_string
    type: String
    description: A string containing space-separated single-digit integers, representing the final formatted output.
  - name: zero_digit
    type: Integer
    value: 0
    description: The digit '0'.
  - name: non_zero_digit
    type: Integer
    value_range: 1-9
    description: Any digit from '1' to '9'.
  - name: zeros_list
    type: List[Integer]
    description: A list containing only the zero digits from the input_sequence.
  - name: non_zeros_list
    type: List[Integer]
    description: A list containing only the non-zero digits from the input_sequence, preserving their original relative order.

properties:
  - object: input_sequence
    property: length
    description: The number of digits in the input sequence.
  - object: output_sequence
    property: length
    description: The number of digits in the output sequence (equal to input length).
  - object: non_zeros_list
    property: relative_order
    description: The order in which non-zero digits appear relative to each other, identical to their relative order in input_sequence.
  - object: zero_digit
    property: count
    description: The number of times the zero digit appears in the input sequence.

actions:
  - name: parse_input_string
    input: input_string
    output: input_sequence
    description: Convert the space-separated input string into a list of integers.
  - name: partition_sequence
    input: input_sequence
    outputs: [zeros_list, non_zeros_list]
    description: Iterate through the input_sequence, creating two separate lists: one for all zero digits and one for all non-zero digits, preserving the relative order within the non_zeros_list.
  - name: concatenate_lists
    inputs: [zeros_list, non_zeros_list]
    output: output_sequence
    description: Combine the zeros_list and the non_zeros_list to form the output_sequence, with all zeros appearing first.
  - name: format_output_sequence
    input: output_sequence
    output: output_string
    description: Convert the list of integers in output_sequence back into a space-separated string.

relationships:
  - type: equality
    between: [input_sequence.length, output_sequence.length]
    description: The input and output sequences have the same number of elements.
  - type: equality
    between: [non_zeros_list (elements), input_sequence (non-zero elements)]
    property: relative_order
    description: The relative order of non-zero digits in the input_sequence is the same as the order of elements in the non_zeros_list and the non-zero part of the output_sequence.
  - type: composition
    result: output_sequence
    components: [zeros_list, non_zeros_list]
    description: The output_sequence is formed by the concatenation of zeros_list followed by non_zeros_list.
  - type: representation
    source: input_string
    target: input_sequence
    via: parse_input_string
  - type: representation
    source: output_sequence
    target: output_string
    via: format_output_sequence
