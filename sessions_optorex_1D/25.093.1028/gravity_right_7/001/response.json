{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\nimport math\nimport numpy as np\nimport re\n\n\"\"\"\nIdentifies all zero digits and all non-zero digits in the input sequence.\nConstructs the output sequence by concatenating all identified zero digits followed by all identified non-zero digits, preserving the original relative order of the non-zero digits.\n\"\"\"\n\ndef transform(input_str: str) -> str:\n    \"\"\"\n    Moves all zeros in the input sequence to the beginning, preserving the relative order of non-zero elements.\n\n    Args:\n        input_str: A string containing space-separated single digits.\n\n    Returns:\n        A string containing space-separated single digits with zeros moved to the front.\n    \"\"\"\n\n    # 1. Read the input sequence of digits.\n    # Convert the space-separated string into a list of integers.\n    try:\n        input_digits = [int(d) for d in input_str.split()]\n    except ValueError:\n        # Handle potential errors if the input string contains non-digits\n        print(f\"Error: Input string '{input_str}' contains non-digit characters.\")\n        return \"\" # Or raise an exception\n\n    # 2. Create two empty lists: one for zero digits and one for non-zero digits.\n    zeros_list = []\n    non_zeros_list = []\n\n    # 3. Iterate through the input sequence, digit by digit.\n    # 4. For each digit:\n    #    *   If the digit is 0, append it to the zeros_list.\n    #    *   If the digit is not 0, append it to the non_zeros_list.\n    for digit in input_digits:\n        if digit == 0:\n            zeros_list.append(digit)\n        else:\n            non_zeros_list.append(digit)\n\n    # 5. Concatenate the zeros_list and the non_zeros_list to form the final output sequence.\n    output_digits = zeros_list + non_zeros_list\n\n    # 6. Format the output sequence as a space-separated string of digits.\n    output_str = \" \".join(map(str, output_digits))\n\n    return output_str\n\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 1311,
    "candidates_token_count": 490,
    "total_token_count": 1801,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 6.629046,
  "retries": 1
}