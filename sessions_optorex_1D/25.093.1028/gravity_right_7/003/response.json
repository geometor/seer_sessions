{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\nimport math\nimport numpy as np\nimport re # Although not used in the final logic, keeping it for consistency if future regex needed\n\n\"\"\"\nMoves all zeros in the input sequence to the beginning, while preserving the relative order of the non-zero elements. The input is assumed to be a sequence (like a list or NumPy array) of digits.\n\"\"\"\n\ndef transform(input_sequence):\n    \"\"\"\n    Rearranges a sequence of digits by moving all zeros to the front,\n    maintaining the relative order of the non-zero digits.\n\n    Args:\n        input_sequence: A list or array-like sequence of integers (digits 0-9).\n\n    Returns:\n        A new list containing the rearranged sequence of digits.\n    \"\"\"\n\n    # 1. Initialize lists to store zero and non-zero elements\n    zeros_list = []\n    non_zeros_list = []\n\n    # 2. Iterate through the input sequence\n    for digit in input_sequence:\n        # 3. Partition elements based on value\n        if digit == 0:\n            # Append zeros to the zeros list\n            zeros_list.append(digit)\n        else:\n            # Append non-zeros to the non-zeros list, preserving order\n            non_zeros_list.append(digit)\n\n    # 4. Concatenate the lists: zeros first, then non-zeros\n    output_sequence = zeros_list + non_zeros_list\n\n    # 5. Return the rearranged sequence\n    return output_sequence\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 5307,
    "candidates_token_count": 336,
    "total_token_count": 5643,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 6.121045,
  "retries": 1
}