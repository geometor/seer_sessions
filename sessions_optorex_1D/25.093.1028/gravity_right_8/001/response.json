{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\nimport math\nimport collections\n\n\"\"\"\nProcesses a space-separated string of digits. It rearranges the digits such that all '0's appear first, followed by all non-zero digits. The relative order of the non-zero digits is preserved from the input string.\n\"\"\"\n\ndef parse_input_string(input_str):\n  \"\"\"Converts a space-separated string of digits into a list of strings.\"\"\"\n  return input_str.split(' ')\n\ndef filter_digits(digit_list):\n  \"\"\"Separates a list of digit strings into two lists: zeros and non-zeros.\"\"\"\n  zeros = []\n  non_zeros = []\n  for digit in digit_list:\n    if digit == '0':\n      zeros.append(digit)\n    else:\n      non_zeros.append(digit)\n  return zeros, non_zeros\n\ndef format_output_string(digit_list):\n  \"\"\"Joins a list of digit strings into a single space-separated string.\"\"\"\n  return ' '.join(digit_list)\n\ndef transform(input_str):\n  \"\"\"\n  Rearranges digits in a space-separated string, placing all zeros at the beginning\n  while preserving the relative order of non-zero digits.\n\n  Args:\n    input_str: A string containing space-separated digits.\n\n  Returns:\n    A string with digits rearranged according to the rule.\n  \"\"\"\n  # 1. Parse the input string into a list of individual digits (as strings).\n  input_digits = parse_input_string(input_str)\n\n  # 2 & 3 & 4. Filter the digits into two lists: one for zeros and one for non-zeros,\n  # maintaining the order for non-zeros.\n  zeros_list, non_zeros_list = filter_digits(input_digits)\n\n  # 5. Combine the list of zeros followed by the list of non-zeros.\n  rearranged_digits = zeros_list + non_zeros_list\n\n  # 6. Convert the rearranged list back into a space-separated string.\n  output_str = format_output_string(rearranged_digits)\n\n  return output_str\n\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 1696,
    "candidates_token_count": 485,
    "total_token_count": 2181,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 7.061122,
  "retries": 1
}