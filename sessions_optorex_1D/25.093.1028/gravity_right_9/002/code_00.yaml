Task: Reorder sequence elements based on value (zero vs. non-zero)

Input:
  - object: input_array
    properties:
      - type: numpy.ndarray
      - content: sequence of integers (0-9)
      - elements: contains a mix of zeros and non-zero digits

Output:
  - object: output_array # Assuming output type matches input type contextually
    properties:
      - type: numpy.ndarray # Or potentially list[int]
      - content: sequence of integers (0-9)
      - length: identical to input_array length
      - composition: contains the same multiset of integers as input_array

Transformation:
  - action: convert_to_list # Optional but often easier for manipulation
    description: Convert the input NumPy array to a Python list.
    operands:
      - input_array
    output: input_list
  - action: partition
    description: Separate the elements of the input_list into two groups.
    operands:
      - input_list
    based_on: element value (is zero or is non-zero)
    outputs:
      - group_zeros: a list containing all 0s from the input.
      - group_non_zeros: a list containing all non-zero integers from the input, preserving their original relative order.
  - action: concatenate
    description: Combine the two groups to form the output sequence.
    operands:
      - group_zeros
      - group_non_zeros
    order: group_zeros first, followed by group_non_zeros.
    output: ordered_list
  - action: convert_to_array # Optional, if output must be NumPy array
    description: Convert the ordered list back into a NumPy array.
    operands:
      - ordered_list
    output: output_array

Relationships:
  - The output_array (or list) is a permutation of the input_array (or list).
  - All zeros from the input precede all non-zeros in the output.
  - The relative order of non-zero elements is maintained from input to output.