Task: Reorder sequence elements by partitioning based on value (zero vs. non-zero)

Input:
  - object: input_sequence
    properties:
      - type: sequence (represented as string or NumPy array)
      - content: single-digit integers (0-9)
      - elements: contains a mix of zeros and non-zero digits

Output:
  - object: output_sequence
    properties:
      - type: sequence (same format as input)
      - content: single-digit integers (0-9)
      - length: identical to input_sequence length
      - composition: contains the same multiset of digits as input_sequence (same numbers, same counts)

Transformation:
  - action: partition
    description: Divide the elements of the input_sequence into two distinct groups based on their value.
    operands:
      - input_sequence
    condition: element is zero OR element is non-zero
    outputs:
      - group_zeros: an ordered sequence containing only the '0' elements from the input_sequence. The number of elements matches the count of zeros in the input.
      - group_non_zeros: an ordered sequence containing only the non-zero elements (digits 1-9) from the input_sequence. The relative order of these non-zero elements must be identical to their relative order in the input_sequence.
  - action: concatenate
    description: Combine the two partitioned groups sequentially to form the final output sequence.
    operands:
      - group_zeros
      - group_non_zeros
    order: group_zeros must precede group_non_zeros entirely.
    output: ordered_sequence

Relationships:
  - The output_sequence is a specific permutation of the input_sequence.
  - All '0' elements from the input_sequence appear contiguously at the beginning of the output_sequence.
  - All non-zero elements from the input_sequence appear contiguously at the end of the output_sequence.
  - The relative order of the non-zero elements within their subsequence is strictly preserved from input to output.