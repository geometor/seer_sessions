task_type: sequence_transformation
input_data:
  type: sequence
  element_type: integer
  separator: space # Format of the raw input string
  length: fixed (12 in examples)
  element_range: 0-9
  processing: Assumed to be parsed into a list or NumPy array of integers before being passed to the core transform function.
output_data:
  type: sequence
  element_type: integer # Binary (0 or 1)
  separator: space # Format of the raw output string
  length: same as input (12 in examples)
  element_range: 0-1
  processing: Expected to be returned as a NumPy array from the core transform function, likely formatted to a string later.
transformation_rule:
  - step: 1
    action: count_non_zeros
    source: input_sequence (list/array of integers)
    variable: N (count of elements != 0)
  - step: 2
    action: get_length
    source: input_sequence
    variable: L (total number of elements)
  - step: 3
    action: calculate_zero_count
    computation: L - N
    variable: Z (count of zeros needed in output)
  - step: 4
    action: construct_output_sequence
    details: Create a sequence/array containing N ones followed by Z zeros.
    output: transformed_sequence (NumPy array of integers)
relationship:
  - The number of '1's in the output sequence equals the count of non-zero elements in the input sequence.
  - The number of '0's in the output sequence equals the count of zero elements in the input sequence.
  - The total length of the output sequence equals the total length of the input sequence.