task_type: sequence_transformation
input_data:
  type: sequence # Assumed to be pre-parsed into a sequence (list/array) of numbers based on execution error
  element_type: integer
  length: fixed (12 in examples)
  element_range: 0-9
output_data:
  type: sequence
  element_type: integer
  length: same as input (12 in examples)
  element_range: 0-1
transformation:
  - action: count
    target: non-zero elements in the input sequence
    input: sequence of integers (e.g., list or array)
    result: a count (N)
  - action: construct_output_sequence
    parameters:
      - non_zero_count (N)
      - total_length (L) derived from input sequence length
    details:
      - Create a sequence containing N ones.
      - Create a sequence containing (L - N) zeros.
      - Concatenate the sequence of ones and the sequence of zeros.
    output: sequence of integers (length L)
relationship:
  - The count of non-zero elements in the input sequence directly determines the count of '1's in the output sequence.
  - The '1's always appear at the beginning of the output sequence.
  - The '0's fill the remainder of the output sequence to match the input length.
  - The original values (other than zero/non-zero) and positions of input elements do not influence the output structure, only the count does.