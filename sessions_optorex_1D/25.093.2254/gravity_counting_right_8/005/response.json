{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nTransforms an input grid of shape (1, 12) containing digits by counting the \nnon-zero elements in the row and setting the corresponding number of leading \nelements in the output grid's row to 1, with the rest being 0.\n\"\"\"\n\nimport numpy as np\n\n# Helper function (though np.count_nonzero is used directly below for simplicity)\n# def count_non_zeros_in_row(row):\n#   \"\"\"Counts the number of non-zero elements in a 1D NumPy array (row).\"\"\"\n#   return np.count_nonzero(row)\n\ndef transform(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Applies the transformation rule to the input grid.\n\n    Args:\n        input_grid: A NumPy array of shape (1, 12) containing integers 0-9.\n\n    Returns:\n        A NumPy array of shape (1, 12) representing the transformed grid.\n    \"\"\"\n    # Ensure the input has the expected shape (optional but good practice)\n    if input_grid.shape != (1, 12):\n        raise ValueError(f\"Input grid must have shape (1, 12), but got {input_grid.shape}\")\n\n    # Extract the first (and only) row from the input grid\n    input_row = input_grid[0]\n\n    # Count the number of non-zero elements in the input row\n    non_zero_count = np.count_nonzero(input_row)\n\n    # Initialize the output_grid with zeros, matching the input grid's shape and type\n    output_grid = np.zeros_like(input_grid)\n\n    # Access the first (and only) row of the output grid\n    # Set the first 'non_zero_count' elements of this row to 1 using slicing\n    # This works correctly even if non_zero_count is 0 (empty slice)\n    output_grid[0, :non_zero_count] = 1\n\n    # The remaining elements are already initialized to 0\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 4547,
    "candidates_token_count": 1007,
    "total_token_count": 5554,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 9.606413,
  "retries": 1
}