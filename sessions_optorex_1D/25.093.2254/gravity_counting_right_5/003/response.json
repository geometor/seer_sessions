{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nCounts the non-zero integers in the input sequence/array. Let this count be N. \nGenerates an output sequence/array of length 12 containing N integers \nwith the value 1, followed by 12 - N integers with the value 0.\n\"\"\"\n\nimport numpy as np\n\ndef count_non_zeros(sequence):\n  \"\"\"Counts the number of non-zero elements in a sequence (list or numpy array).\"\"\"\n  # Use numpy's efficient count_nonzero for arrays, otherwise iterate\n  if isinstance(sequence, np.ndarray):\n      return np.count_nonzero(sequence)\n  else:\n      count = 0\n      for item in sequence:\n          if item != 0:\n              count += 1\n      return count\n\ndef generate_output_sequence(length, num_ones):\n  \"\"\"Generates a numpy array of 1s followed by 0s.\"\"\"\n  # Create an array of zeros\n  output = np.zeros(length, dtype=int)\n  # Set the first num_ones elements to 1\n  output[:num_ones] = 1\n  return output\n\ndef transform(input_sequence):\n    \"\"\"\n    Transforms an input sequence (list or NumPy array) of 12 integers \n    into an output sequence of 1s and 0s based on the count of \n    non-zero input integers.\n    \"\"\"\n    \n    # Assume the input is a sequence (like list or numpy array)\n    # Define the fixed length of the sequences\n    sequence_length = 12 # Or len(input_sequence) if it can vary, but examples show 12\n    \n    # Count the non-zero elements in the input sequence\n    non_zero_count = count_non_zeros(input_sequence)\n    \n    # Generate the output sequence based on the count\n    output_sequence = generate_output_sequence(sequence_length, non_zero_count)\n    \n    # Return the resulting sequence (as a numpy array for consistency)\n    return output_sequence\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 4054,
    "candidates_token_count": 552,
    "total_token_count": 4606,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 5.646327,
  "retries": 1
}