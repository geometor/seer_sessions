task_description: "Transform a sequence of digits into a binary sequence where the count of leading '1's equals the count of non-zero digits in the input."
input_object:
  type: sequence
  elements: digits (integers 0-9)
  representation: space-separated string
  properties:
    - length: L (fixed at 12 in examples)
    - contains_zeros: boolean
    - contains_non_zeros: boolean
output_object:
  type: sequence
  elements: binary digits ('1' or '0')
  representation: space-separated string
  properties:
    - length: L (same as input)
    - structure: consists of N '1's followed by (L - N) '0's
transformation:
  action: map_count_to_structure
  steps:
    - 1: Parse the input string into a list of integers.
    - 2: Count the number of elements in the list that are not equal to 0. Let this count be N.
    - 3: Determine the total length of the input list, L.
    - 4: Construct an output list containing N elements of '1'.
    - 5: Append (L - N) elements of '0' to the output list.
    - 6: Format the output list as a space-separated string.
relationship:
  - input: count of non-zero digits (N)
  - output: number of leading '1's (N)
  - input: total length (L)
  - output: total length (L)
constants:
  - zero_digit: 0
  - output_one: '1'
  - output_zero: '0'
  - delimiter: space