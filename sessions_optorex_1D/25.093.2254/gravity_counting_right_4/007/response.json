{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\nimport numpy as np\n\n\"\"\"\nTransforms an input NumPy array of 12 integers (0-9) into an output NumPy array of 12 binary digits (0 or 1). The number of '1's at the beginning of the output sequence equals the count of non-zero integers in the input sequence. The remaining positions in the output sequence are filled with '0's to maintain a total length of 12.\n\"\"\"\n\ndef count_non_zeros_np(data_array):\n  \"\"\"Counts the number of non-zero elements in a NumPy array.\"\"\"\n  return np.count_nonzero(data_array)\n\ndef transform(input_grid):\n    \"\"\"\n    Applies the transformation rule to the input NumPy array.\n\n    Args:\n      input_grid: A NumPy array containing 12 integers.\n\n    Returns:\n      A NumPy array containing 12 binary integers (0s and 1s).\n    \"\"\"\n\n    # 1. Accept an input NumPy array containing 12 integers. (Handled by function signature)\n\n    # 2. Count the number of elements in the input array that are not equal to 0.\n    non_zero_count = count_non_zeros_np(input_grid)\n\n    # 3. Determine the total length of the input array.\n    total_length = len(input_grid) # Should be 12 based on examples\n\n    # 4. Calculate the number of zeros required for the output.\n    zero_count = total_length - non_zero_count\n\n    # 5. Create a new NumPy array.\n    # 6. Populate the beginning of the new array with non_zero_count elements, each having the value 1.\n    output_ones = np.ones(non_zero_count, dtype=int)\n\n    # 7. Populate the remainder of the new array with zero_count elements, each having the value 0.\n    output_zeros = np.zeros(zero_count, dtype=int)\n\n    # Concatenate the ones and zeros parts to form the final output array\n    output_grid = np.concatenate((output_ones, output_zeros))\n\n    # 8. Return the newly created NumPy array.\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 6725,
    "candidates_token_count": 683,
    "total_token_count": 7408,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 6.408836,
  "retries": 1
}