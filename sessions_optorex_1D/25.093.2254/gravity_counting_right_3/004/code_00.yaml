task_description: "Transforms a sequence of integers into a binary sequence (1s and 0s) of the same length. The number of 1s in the output equals the count of non-zero integers in the input, with 1s appearing first, followed by 0s."
input_elements:
  - name: input_sequence
    # Changed type from string to list/array
    type: list[int] or numpy.ndarray 
    description: "A sequence (list or array) of integers."
    properties:
      - length: L
      - element_type: int
output_elements:
  - name: output_sequence
    # Changed type from string to list/array for consistency
    type: list[int] or numpy.ndarray 
    description: "A sequence (list or array) composed of 1s followed by 0s."
    properties:
      - length: L (same as input_sequence length)
      - element_type: int (values are only 0 or 1)
transformation:
  actions:
    - name: count_non_zeros
      input: input_sequence
      output: non_zero_count (N)
      description: "Iterates through the input sequence and counts how many elements are not equal to 0."
    - name: get_length
      input: input_sequence
      output: sequence_length (L)
      description: "Determines the total number of elements in the input sequence."
    - name: construct_output_sequence
      inputs:
        - non_zero_count (N)
        - sequence_length (L)
      output: output_sequence
      description: "Creates a new sequence containing N elements with the value 1, followed by (L - N) elements with the value 0."
  relationships:
    - The length of the output_sequence is identical to the length of the input_sequence.
    - The quantity of '1's in the output_sequence is determined solely by the quantity of non-zero numbers in the input_sequence.