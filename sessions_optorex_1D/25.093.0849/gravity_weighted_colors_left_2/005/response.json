{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\nimport sys\nimport math\n# Add imports if needed, e.g.:\n# import numpy as np\n# import re\n# from collections import Counter\n\n\"\"\"\nSorts a sequence of space-separated integers (0, 1, 2) provided as a string\nin non-decreasing order and returns the result as a space-separated string.\n\"\"\"\n\ndef parse_input_string(input_str: str) -> list[int]:\n  \"\"\"\n  Parses a string of space-separated integers into a list of integers.\n  Assumes input is well-formed with single spaces separating valid integer representations.\n  \"\"\"\n  # Split the string by spaces\n  parts = input_str.split(' ')\n  # Convert each part to an integer\n  # Note: This will raise ValueError if any part is not a valid integer\n  # or if input has unexpected formatting (e.g., multiple spaces leading to empty strings).\n  # Based on examples, assuming clean input.\n  return [int(part) for part in parts]\n\ndef format_output_list(int_list: list[int]) -> str:\n  \"\"\"\n  Formats a list of integers into a space-separated string.\n  \"\"\"\n  # Convert each integer back to string and join with spaces\n  return \" \".join(map(str, int_list))\n\ndef transform(input_str: str) -> str:\n    \"\"\"\n    Takes an input string of space-separated integers, sorts them numerically,\n    and returns the sorted sequence as a space-separated string.\n\n    Args:\n        input_str: A string containing integers (0, 1, or 2) separated by single spaces.\n\n    Returns:\n        A string containing the same integers sorted non-decreasingly, separated by single spaces.\n    \"\"\"\n\n    # 1. Parse the input string into a list of integer values.\n    #    Example: \"2 1 0 2\" -> [2, 1, 0, 2]\n    numbers = parse_input_string(input_str)\n\n    # 2. Sort the list of integers numerically in non-decreasing (ascending) order.\n    #    Example: [2, 1, 0, 2] -> [0, 1, 2, 2]\n    sorted_numbers = sorted(numbers)\n\n    # 3. Format the sorted list back into a string with integers separated by single spaces.\n    #    Example: [0, 1, 2, 2] -> \"0 1 2 2\"\n    output_str = format_output_list(sorted_numbers)\n\n    # 4. Return the resulting string.\n    return output_str\n\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 6417,
    "candidates_token_count": 601,
    "total_token_count": 7018,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 17.527824,
  "retries": 1
}