{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\nimport sys\nimport math\n# Add imports if needed, e.g.:\n# import numpy as np\n# import re\n\n\"\"\"\nSorts a sequence of space-separated integers (0, 1, 2) in non-decreasing order.\n\"\"\"\n\ndef parse_input(input_str):\n  \"\"\"\n  Parses a string of space-separated integers into a list of integers.\n  \"\"\"\n  return [int(x) for x in input_str.split()]\n\ndef format_output(int_list):\n  \"\"\"\n  Formats a list of integers into a space-separated string.\n  \"\"\"\n  return \" \".join(map(str, int_list))\n\ndef transform(input_str):\n    \"\"\"\n    Takes a string of space-separated integers, sorts them numerically,\n    and returns the sorted sequence as a space-separated string.\n    \"\"\"\n\n    # 1. Parse the input string into a list of integer values.\n    #    Example: \"2 1 0 2\" -> [2, 1, 0, 2]\n    int_list = parse_input(input_str)\n\n    # 2. Sort this list/array of integers in non-decreasing (ascending) numerical order.\n    #    Example: [2, 1, 0, 2] -> [0, 1, 2, 2]\n    sorted_list = sorted(int_list)\n\n    # 3. Format the sorted list/array back into a string with integers separated by single spaces.\n    #    Example: [0, 1, 2, 2] -> \"0 1 2 2\"\n    output_str = format_output(sorted_list)\n\n    # 4. Return the resulting string.\n    return output_str\n\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 1533,
    "candidates_token_count": 405,
    "total_token_count": 1938,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 6.31974,
  "retries": 1
}