{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nSorts a sequence of integers (0, 1, 2) in non-decreasing order by counting the occurrences of each integer and reconstructing the sequence.\n\"\"\"\n\nimport numpy as np\nimport collections\n\ndef transform(input_sequence):\n  \"\"\"\n  Transforms an input sequence of integers (0, 1, 2) into a sorted sequence.\n\n  Args:\n    input_sequence: A list or numpy array containing integers 0, 1, and 2.\n\n  Returns:\n    A numpy array containing the same integers as the input, sorted in\n    non-decreasing order (0s, then 1s, then 2s).\n  \"\"\"\n\n  # Ensure input is a numpy array for easier processing\n  if not isinstance(input_sequence, np.ndarray):\n      input_sequence = np.array(input_sequence)\n\n  # Count the occurrences of each integer (0, 1, 2)\n  # Using collections.Counter is efficient for counting hashable items\n  counts = collections.Counter(input_sequence)\n  count0 = counts.get(0, 0) # Get count of 0, default to 0 if not present\n  count1 = counts.get(1, 0) # Get count of 1, default to 0 if not present\n  count2 = counts.get(2, 0) # Get count of 2, default to 0 if not present\n\n  # Construct the output sequence based on the counts\n  # Create lists/arrays of each number repeated by its count\n  zeros = np.zeros(count0, dtype=int)\n  ones = np.ones(count1, dtype=int)\n  twos = np.full(count2, 2, dtype=int) # Use np.full for values other than 0 or 1\n\n  # Concatenate the arrays to form the final sorted sequence\n  output_sequence = np.concatenate((zeros, ones, twos))\n\n  # Return the sorted sequence as a numpy array\n  return output_sequence\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3362,
    "candidates_token_count": 453,
    "total_token_count": 3815,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 10.274265,
  "retries": 1
}