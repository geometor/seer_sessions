objects:
  - name: input_sequence
    type: numpy.ndarray # Updated type
    description: A sequence (NumPy array) of single-digit integers.
  - name: output_sequence
    type: numpy.ndarray # Updated type
    description: The transformed sequence (NumPy array) of single-digit integers, same length as the input.
  - name: non_zero_elements
    type: List[int] # Internal representation can still be a list for Counter
    description: A collection of elements from the input_sequence that are not equal to zero.
  - name: mode_digit
    type: int
    description: The single digit that appears most frequently among the non_zero_elements. Assumed to be unique and non-zero based on examples. Can be None if no non-zero elements exist.

properties:
  - object: input_sequence
    property: size # NumPy uses size or shape[0] for length
    description: The number of elements in the sequence.
  - object: output_sequence
    property: size
    description: The number of elements in the sequence, equal to the input_sequence size.

actions:
  - name: filter_non_zeros
    input: input_sequence (numpy.ndarray)
    output: non_zero_elements (List[int])
    description: Extract elements from the input_sequence that are not zero.
  - name: find_mode
    input: non_zero_elements (List[int])
    output: mode_digit (int or None)
    description: Determine the element that occurs most frequently in the non_zero_elements list. Returns None if the list is empty.
  - name: transform_sequence
    input:
      - input_sequence (numpy.ndarray)
      - mode_digit (int or None)
    output: output_sequence (numpy.ndarray)
    description: Create a new sequence (NumPy array). Iterate through the input_sequence. If an element is zero, keep it. If an element is non-zero and a mode_digit exists, replace it with the mode_digit. If no mode_digit exists (all zeros input), return a copy of the input_sequence.

relationships:
  - type: preservation
    object1: input_sequence
    object2: output_sequence
    details: Zero elements maintain their value and position.
  - type: replacement
    object1: input_sequence
    object2: output_sequence
    details: All non-zero elements in the input are replaced by the mode_digit in the output (if a mode exists), maintaining their positions.
  - type: derivation
    object1: non_zero_elements
    object2: mode_digit
    details: The mode_digit is derived from the frequency analysis of non_zero_elements.