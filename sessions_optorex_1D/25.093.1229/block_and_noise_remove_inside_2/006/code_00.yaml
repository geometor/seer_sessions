task_type: sequence_transformation
input_type: space_separated_string_of_digits
output_type: space_separated_string_of_digits
input_properties:
  - format: string
  - elements: single_digit_integers (0-9) separated by spaces
  - length: 12 digits in all examples
output_properties:
  - format: string
  - elements: single_digit_integers (0-9) separated by spaces
  - length: same as input length
objects:
  - input_string: the raw input string
  - digit_list: a list of integers derived from parsing the input_string
  - boundary_zeros: leading and trailing zero elements in the digit_list
  - active_segment: the sublist between the first and last non-zero elements (inclusive)
  - dominant_digit: the integer (1-9) that occurs most frequently within the active_segment
  - output_list: the transformed list of digits
  - output_string: the final space-separated string representation of the output_list
relationships:
  - boundary_zeros define the active_segment. If no non-zero elements exist in digit_list, the sequence remains unchanged. If no boundary zeros exist, the active_segment is the entire digit_list.
  - boundary_zeros are preserved in their original positions in the output_list.
actions:
  - parse_string: convert the input_string into a digit_list (list of integers).
  - identify_boundaries: find the index of the first (`start_index`) and last (`end_index`) non-zero elements in the digit_list.
  - handle_all_zeros: if no non-zero elements found, skip transformation.
  - define_segment: extract the sublist (active_segment) from `start_index` to `end_index` (inclusive) from the digit_list.
  - calculate_frequencies: count occurrences of each digit within the active_segment.
  - find_dominant: determine the digit with the highest frequency in the active_segment.
  - construct_output_list: create a new list by:
      - Taking elements from digit_list before `start_index`.
      - Appending the dominant_digit repeated for the length of the active_segment.
      - Taking elements from digit_list after `end_index`.
  - format_output_string: convert the output_list back into a space-separated string.