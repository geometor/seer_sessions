Objects:
  - Input_Sequence:
      type: Sequence[Integer] # Changed from String, could be List or numpy.ndarray
      properties:
        - length: 12
        - elements: Integers (including 0)
  - Output_Sequence:
      type: Sequence[Integer] # Likely List or numpy.ndarray
      properties:
        - length: 12
        - elements: Integers (including 0)
  - Element:
      type: Integer
  - Zero:
      type: Integer
      value: 0
  - Shift_Amount:
      type: Integer
      value: 4
  - Sequence_Length:
      type: Integer
      value: 12

Actions:
  - Receive_Input:
      actor: System
      object: Input_Sequence (as a sequence/array, not string)
  - Initialize_Output:
      actor: System
      target: Output_Sequence
      length: Sequence_Length (12)
      initial_value: Zero (0)
  - Copy_Elements_With_Shift:
      actor: System
      source: Input_Sequence
      destination: Output_Sequence
      shift: Shift_Amount (4)
      condition: Copy `Input_Sequence[i]` to `Output_Sequence[i + shift]` only if `i + shift < Sequence_Length`. Elements from `Input_Sequence` starting at index `Sequence_Length - shift` are effectively discarded.
  - Return_Output:
      actor: System
      object: Output_Sequence

Relationships:
  - Mapping: Each element `Input_Sequence[i]` maps to `Output_Sequence[i + Shift_Amount]` if `i + Shift_Amount < Sequence_Length`.
  - Initialization: The first `Shift_Amount` elements of `Output_Sequence` remain as the initialized `Zero` value.
  - Constraint: The length of both `Input_Sequence` and `Output_Sequence` is fixed at `Sequence_Length` (12).