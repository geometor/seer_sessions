task_type: sequence_manipulation
input_type: list_of_integers
output_type: list_of_integers
sequence_length: 12
elements:
  - type: background
    value: 0
    role: padding
  - type: non_zero_block
    description: The first contiguous subsequence of non-zero integers found when scanning from left to right.
    properties:
      - content: The sequence of non-zero integers comprising the block.
      - start_index_input: The 0-based index where the block begins in the input sequence.
      - length: The number of integers in the block.
action:
  type: shift_and_replace
  target: non_zero_block
  details:
    - Create an output sequence of the same length as the input, initialized entirely with the background value (0).
    - Identify the `non_zero_block` (content and start_index_input) in the input sequence.
    - If no `non_zero_block` is found, the output remains the initialized background sequence.
    - Calculate the `target_start_index` for the output sequence by adding 4 to the `start_index_input`.
    - Place the `content` of the `non_zero_block` into the output sequence, starting at the `target_start_index`. Ensure the placement respects the bounds of the output sequence (length 12); if the shifted block would extend beyond index 11, only the part of the block that fits within the bounds [target_start_index, 11] is placed.
relationship: The output sequence is derived from the input sequence by relocating the first contiguous block of non-zero numbers 4 positions to the right, preserving the block's content and replacing the original positions and shifted-over positions with zeros.
constraints:
  - Input sequences have a fixed length of 12.
  - Assumes at most one contiguous block of non-zero integers needs processing (or focuses only on the first one found).