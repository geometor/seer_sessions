task_elements:
  - object: input_sequence
    properties:
      - type: 1D sequence (list or NumPy array) of integers
      - length: 12
      - role: input data
  - object: output_sequence
    properties:
      - type: 1D sequence (list or NumPy array) of integers
      - length: 12
      - role: result of transformation
  - object: slice
    properties:
      - source: input_sequence
      - indices: 0 through 7 (inclusive)
      - length: 8
      - role: elements to be preserved and shifted
  - object: slice
    properties:
      - target: output_sequence
      - indices: 4 through 11 (inclusive)
      - length: 8
      - role: destination for the shifted elements
  - object: padding_elements
    properties:
      - value: 0
      - count: 4
      - role: fill initial positions in the output sequence
transformation:
  type: positional right shift with padding and truncation
  action: copy slice and pad
  details:
    - Create a new output sequence of length 12, initialized with zeros.
    - Identify the source slice from the input sequence (elements at indices 0 to 7).
    - Identify the target slice in the output sequence (elements at indices 4 to 11).
    - Copy the elements from the source slice to the target slice.
    - The first 4 elements of the output sequence remain zeros (padding).
    - The last 4 elements of the input sequence (indices 8 to 11) are effectively discarded.
relationships:
  - The output sequence is derived element-wise from the input sequence based on a fixed shift rule.
  - `output_sequence[i] = 0` for `0 <= i < 4`.
  - `output_sequence[i] = input_sequence[i - 4]` for `4 <= i < 12`.