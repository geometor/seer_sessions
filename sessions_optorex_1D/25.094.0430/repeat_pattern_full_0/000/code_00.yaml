objects:
  - name: input_sequence
    properties:
      - type: list of integers
      - contains: a repeating pattern followed by zeros
      - length: L (e.g., 12 in the examples)
  - name: output_sequence
    properties:
      - type: list of integers
      - length: L (same as input)
      - contains: repetitions of the fundamental pattern from the input
  - name: fundamental_pattern
    properties:
      - type: list of integers (subset of input_sequence)
      - derived_from: the initial non-zero part of the input_sequence
      - characteristic: the shortest sequence that repeats to form the non-zero part of the input

actions:
  - name: identify_non_zero_prefix
    inputs: input_sequence
    outputs: sequence of numbers before the first zero
  - name: find_fundamental_pattern
    inputs: non_zero_prefix
    outputs: fundamental_pattern
    logic: Find the shortest repeating unit at the start of the non_zero_prefix. Iterate through possible lengths 'p_len' from 1 up to half the length of the non_zero_prefix. The pattern is the sequence of length 'p_len' if the elements from index 0 to p_len-1 are identical to the elements from index p_len to 2*p_len-1.
  - name: generate_output
    inputs:
      - fundamental_pattern
      - original_input_length (L)
    outputs: output_sequence
    logic: Repeat the fundamental_pattern until the generated sequence has length L. If the total length of repetitions exceeds L, truncate the sequence to length L.

relationships:
  - The output_sequence is derived from the fundamental_pattern identified in the input_sequence.
  - The length of the output_sequence is identical to the length of the input_sequence.
  - The fundamental_pattern is determined by finding the first repetition within the non-zero prefix of the input_sequence.