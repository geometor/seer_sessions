task_elements:
  - type: sequence
    role: input
    format: string of space-separated single digits
    properties:
      - contains integers 0-9
      - fixed total length of 12 (based on examples)
      - always ends with one or more '0' digits
      - consists of a non-zero prefix followed by one or more zeros

  - type: sequence
    role: output
    format: string of space-separated single digits
    properties:
      - contains integers derived from the input's non-zero prefix
      - does not contain zeros (based on examples)
      - fixed total length of 12 (based on examples)

transformation:
  actions:
    - parse the input string into a list of integers.
    - identify the sub-list containing all digits from the start up to, but not including, the first occurrence of zero (`prefix_sequence`).
    - count the number of zero digits from the first zero to the end of the input list (`zero_count`). This is equivalent to `total_length - length(prefix_sequence)`.
    - select the first `zero_count` digits from the `prefix_sequence` (`suffix_sequence`).
    - construct the output list by concatenating the `prefix_sequence` and the `suffix_sequence`.
    - format the output list back into a string of space-separated digits.

relationships:
  - the number of trailing zeros (`zero_count`) in the input determines the number of digits selected from the start of the `prefix_sequence` to form the `suffix_sequence`.
  - the output sequence is formed by appending the `suffix_sequence` to the `prefix_sequence`.
  - the length of the output sequence is equal to the length of the input sequence (12 in all examples).