task_elements:
  - object: input_sequence
    type: list of integers
    source: space-separated string input
    properties:
      - contains single non-negative digits
      - always contains at least one zero
      - terminates with one or more zeros (trailing zeros)

  - object: prefix_sequence
    type: list of integers
    derivation: sub-sequence of input_sequence from the start up to (but not including) the first zero element.
    properties:
      - contains only non-zero digits from the input (based on examples)

  - object: zero_count
    type: integer
    derivation: count of elements in the input_sequence starting from the first zero to the end of the sequence.
    calculation: length(input_sequence) - length(prefix_sequence)

  - object: suffix_sequence
    type: list of integers
    derivation: the first 'zero_count' elements of the 'prefix_sequence'.
    properties:
      - length is equal to 'zero_count'
      - elements are copied from the beginning of 'prefix_sequence'

  - object: output_sequence
    type: list of integers
    derivation: concatenation of 'prefix_sequence' and 'suffix_sequence'.
    format: converted to space-separated string for final output

transformation_actions:
  - parse: convert the input string into a list of integers (input_sequence).
  - locate_zero: find the index of the first occurrence of zero in input_sequence.
  - extract_prefix: create prefix_sequence using elements before the first zero index.
  - count_zeros: calculate zero_count as the total length minus the index of the first zero (or length of prefix_sequence).
  - extract_suffix: create suffix_sequence by taking the first zero_count elements from prefix_sequence.
  - concatenate: join prefix_sequence and suffix_sequence to form output_sequence.
  - format_output: convert output_sequence into a space-separated string.

constraints:
  - input always contains digits 0-9.
  - input always ends with at least one zero.
  - output consists of digits from the input prefix.
  - output length is determined by len(prefix_sequence) + zero_count.
  - output length is consistently 12 in all provided training examples (implying len(input_sequence) is also 12).