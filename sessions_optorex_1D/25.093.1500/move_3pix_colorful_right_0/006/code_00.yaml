task_description: Shifts the first contiguous block of non-zero numbers found in an input sequence 3 positions to the right, padding with zeros.
elements:
  - object: sequence
    properties:
      - type: list or numpy array of integers
      - length: fixed (12 in examples)
      - content: non-negative integers
  - object: non_zero_block
    properties:
      - type: sub-sequence or sub-array
      - content: the first contiguous sequence of non-zero integers found in the input sequence
      - relative_order: preserved between input and output
  - object: zero
    properties:
      - type: integer
      - value: 0
      - role: padding element filling space not occupied by the shifted non_zero_block
actions:
  - name: find_first_non_zero_block
    input: input_sequence (list or numpy array)
    output:
      - start_index: integer (0-based index of the first element of the block, or indicator like None if no block)
      - block_content: list or numpy array of integers (the block itself)
  - name: calculate_new_position
    input: start_index
    parameters:
      - shift_amount: 3 (constant positive integer)
    output:
      - new_start_index: integer (calculated start index for the output)
  - name: construct_output_sequence
    input:
      - total_length: integer (length of the original sequence)
      - new_start_index: integer
      - block_content: list or numpy array of integers
    output:
      - output_sequence: list or numpy array of integers (of total_length, filled with zeros and the shifted block)
relationships:
  - The output sequence is derived from the input sequence by relocating the non_zero_block.
  - The relocation is a fixed rightward shift of 3 positions applied to the block's starting index.
  - Elements of the non_zero_block that would fall outside the sequence boundaries after shifting are truncated.
  - If no non_zero_block exists in the input, the output sequence is identical to the input sequence.