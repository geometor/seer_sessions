task_description: >
  Shift the first contiguous block of non-zero numbers found in a fixed-length integer sequence 
  three positions to the right, padding with zeros.
elements:
  - object: sequence
    properties:
      - type: list or array of integers
      - length: fixed (e.g., 12 in examples)
      - content: non-negative integers
  - object: non_zero_block
    properties:
      - type: sub-sequence
      - criteria: first contiguous run of elements != 0 in the input sequence
      - content: integers > 0
      - relative_order: preserved from input
  - object: zero_padding
    properties:
      - type: integer
      - value: 0
      - role: fills positions not occupied by the shifted non_zero_block in the output
parameters:
  - name: sequence_length
    value: 12 (derived from examples)
  - name: shift_amount
    value: 3 (constant, positive indicates right shift)
actions:
  - name: find_first_non_zero_block
    input: input_sequence
    output:
      - block_content: list of integers
      - start_index: integer (0-based index of the first element of the block in the input)
      - block_length: integer
    condition: Returns None or equivalent if no non-zero elements exist.
  - name: calculate_new_start_index
    input: start_index
    parameters:
      - shift_amount: 3
    output:
      - new_start_index: integer (input_start_index + shift_amount)
  - name: construct_output_sequence
    input:
      - sequence_length: integer
      - new_start_index: integer
      - block_content: list of integers
      - block_length: integer
    output:
      - output_sequence: list or array of integers
    process:
      - Initialize output sequence of `sequence_length` with all zeros.
      - Iterate from `i = 0` to `block_length - 1`.
      - Calculate target index `t = new_start_index + i`.
      - If `0 <= t < sequence_length`, place `block_content[i]` at `output_sequence[t]`.
      - Otherwise (if `t` is out of bounds), stop or ignore (effectively truncating the block).
relationships:
  - The output sequence is derived from the input sequence by repositioning the non_zero_block.
  - The position shift is fixed (+3) relative to the original start index.
  - Zeros fill all other positions.
edge_cases:
  - Input sequence contains no non-zero numbers: Output is identical to input (all zeros).
  - Shifted block extends beyond sequence boundaries: The block is truncated; only elements fitting within the sequence length appear in the output.