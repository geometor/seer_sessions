task_elements:
  - item: input_sequence
    type: List[int]
    properties:
      - length: fixed (e.g., 12)
      - elements: single digits (0-9)
  - item: output_sequence
    type: List[int]
    properties:
      - length: same as input_sequence
      - elements: single digits (0-9)
  - item: non_zero_block
    type: List[int]
    description: A contiguous sub-sequence of the input_sequence containing only non-zero integers, bounded by zeros or the sequence ends.
    properties:
      - start_index: The index of the first element of the block in the input_sequence.
      - end_index: The index of the last element of the block in the input_sequence.
      - elements: The non-zero integers forming the block.
relationships:
  - type: positional_shift
    source: non_zero_block (from input_sequence)
    target: non_zero_block (in output_sequence)
    details: The starting index of the non_zero_block in the output_sequence is exactly 3 greater than its starting index in the input_sequence.
  - type: element_replacement
    details: All positions in the output_sequence are initially zero. The non_zero_block from the input is then placed into the output_sequence at the calculated shifted position.
actions:
  - action: identify_non_zero_block
    input: input_sequence
    output: non_zero_block, start_index, end_index
    description: Find the first and last indices bounding the contiguous sequence of non-zero numbers. Extract this sequence. Handle the case where no non-zero numbers exist.
  - action: construct_output
    input: input_sequence_length, non_zero_block, start_index
    output: output_sequence
    description: Create a new sequence of zeros with the same length as the input. Place the non_zero_block into this new sequence starting at index (start_index + 3). If no non_zero_block was found, the output is the sequence of zeros.