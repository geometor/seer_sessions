Task: Shift a segment within a sequence.
Input:
  Type: Sequence (List or NumPy array)
  Element_Type: Integer
  Dimensions: 1D (or treat as flattened 1D)
  Length: 12
  Properties:
    - Contains zeros and non-zero digits (0-9).
Output:
  Type: Sequence (List)
  Element_Type: Integer
  Dimensions: 1D
  Length: 12
Objects:
  - Zero (0): Represents empty space or background filler.
  - Non_Zero_Digit: An integer from 1 to 9.
  - Non_Zero_Block: 
      Type: Sub-sequence
      Definition: The first contiguous sequence of one or more Non_Zero_Digits found when scanning the input from left to right.
      Properties:
        - start_index: The 0-based index of the first digit in the block within the input sequence.
        - end_index: The 0-based index of the last digit in the block within the input sequence.
        - content: The ordered list of Non_Zero_Digits in the block.
  - Input_Sequence: The original sequence of 12 integers.
  - Output_Sequence: The transformed sequence of 12 integers. Initialized with all Zeros.
Action:
  Name: Shift_Right_And_Copy
  Source_Object: Non_Zero_Block from Input_Sequence
  Target_Object: Output_Sequence
  Parameters:
    - shift_amount: 3 (integer)
  Procedure:
    1. Identify the Non_Zero_Block in the Input_Sequence.
    2. If no Non_Zero_Block is found, the Output_Sequence remains all Zeros.
    3. If a Non_Zero_Block is found:
       a. Calculate the target_start_index = Non_Zero_Block.start_index + shift_amount.
       b. Iterate through the Non_Zero_Block.content. For each digit at relative position `i` (0-based) within the block:
          i. Calculate the target_index = target_start_index + `i`.
          ii. If target_index is within the bounds of the Output_Sequence (0 <= target_index < 12), place the digit at Output_Sequence[target_index].
          iii. If target_index is out of bounds, the digit is discarded (truncation).
Relationship:
  - The Output_Sequence is derived from the Input_Sequence by relocating the identified Non_Zero_Block according to the Shift_Right_And_Copy action.
  - The relative order of digits within the Non_Zero_Block is preserved in the Output_Sequence, subject to boundary truncation.
Edge Cases:
  - Input contains only Zeros: Output is all Zeros.
  - Non_Zero_Block shift results in the entire block being placed outside the sequence boundaries: Output is all Zeros.
  - Non_Zero_Block shift results in partial truncation: Only the part of the block fitting within the boundaries appears in the Output_Sequence.