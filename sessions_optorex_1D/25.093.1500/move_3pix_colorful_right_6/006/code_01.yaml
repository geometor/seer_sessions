task_elements:
  - object: input_list
    properties:
      - type: list
      - contains: integers
      - length: fixed (12 in examples)
      - structure: 1-dimensional
  - object: output_list
    properties:
      - type: list
      - contains: integers
      - length: same as input_list (12 in examples)
      - structure: 1-dimensional
      - derived_from: input_list
      - default_value: 0
  - object: non_zero_block
    properties:
      - type: sublist
      - derived_from: input_list
      - definition: Contiguous sequence from the first non-zero element to the last non-zero element (inclusive).
      - existence: May be empty if input_list contains only zeros.
      - properties_preserved:
        - relative_order_of_elements
        - values_of_elements
  - object: indices
    properties:
      - name: first_nz_index
        description: Index of the first non-zero element in input_list (None if all zeros).
      - name: last_nz_index
        description: Index of the last non-zero element in input_list (None if all zeros).
      - name: new_start_index
        description: Calculated target start index for the block in output_list (first_nz_index + shift_amount).

actions:
  - name: find_non_zero_indices
    input: input_list
    output: first_nz_index, last_nz_index
    description: Iterate through the input_list to find the indices bounding the contiguous block of non-zero elements.
  - name: extract_sublist
    input: input_list, first_nz_index, last_nz_index
    output: non_zero_block
    condition: Only if first_nz_index is not None.
    description: Create a new list containing elements from input_list[first_nz_index] up to input_list[last_nz_index].
  - name: initialize_output
    input: list_length
    output: output_list
    description: Create a list of the specified length, filled with the padding_value (0).
  - name: place_block
    input: output_list, non_zero_block, new_start_index
    output: modified output_list
    condition: Only if non_zero_block is not empty.
    description: >
      Copy elements from non_zero_block into output_list starting at new_start_index.
      Handle boundary conditions: ensure placement does not exceed output_list bounds.
      Truncate non_zero_block if necessary. Only place if new_start_index is within list bounds.

relationships:
  - type: spatial_transformation
    from: input_list
    to: output_list
    rule: The contiguous block of non-zero elements from the input is shifted right by a fixed amount within the output list, maintaining relative order, padded with zeros.
  - type: index_mapping
    from: first_nz_index (input)
    to: new_start_index (output)
    rule: new_start_index = first_nz_index + shift_amount

constants:
  - name: shift_amount
    value: 3
    unit: list indices
    direction: right (positive increase)
  - name: padding_value
    value: 0