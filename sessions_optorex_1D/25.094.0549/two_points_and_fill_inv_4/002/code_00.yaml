objects:
  - name: sequence
    type: list of integers
    description: Represents both the input and output data structures, a 1D list of single-digit integers.
  - name: contiguous_block
    type: subsequence
    description: A run of identical consecutive elements within the input sequence.
properties:
  - object: sequence
    name: length
    type: integer
    description: The number of elements in the sequence (remains constant between input and output).
  - object: contiguous_block
    name: value
    type: integer
    description: The integer value repeated in the block.
  - object: contiguous_block
    name: start_index
    type: integer
    description: The 0-based index of the first element of the block in the original sequence.
  - object: contiguous_block
    name: end_index
    type: integer
    description: The 0-based index of the last element of the block in the original sequence.
  - object: contiguous_block
    name: block_length
    type: integer
    description: The number of elements in the block (end_index - start_index + 1).
actions:
  - name: find_contiguous_blocks
    description: Iterate through the input sequence to identify all contiguous_blocks, noting their value, start_index, and end_index.
  - name: preserve_block
    description: Copy a block from the input sequence to the output sequence without modification.
  - name: hollow_out_block
    description: Modify a block in the output sequence by keeping the first and last elements identical to the input block's value, and setting all intermediate elements to 0.
relationships:
  - The output sequence is derived from the input sequence, maintaining the same length.
  - The transformation applied to each contiguous_block depends on its properties (value and block_length).
  - If a contiguous_block has a value of 0, it is preserved in the output.
  - If a contiguous_block has a non-zero value and its block_length is 1 or 2, it is preserved in the output.
  - If a contiguous_block has a non-zero value and its block_length is greater than 2, the hollow_out_block action is applied to the corresponding positions in the output sequence.