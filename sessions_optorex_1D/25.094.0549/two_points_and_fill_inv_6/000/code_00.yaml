objects:
  - name: sequence
    type: list
    properties:
      - elements: list of integers (digits 0-9)
      - length: integer (consistently 12 in examples)
  - name: block
    type: contiguous subsequence
    properties:
      - elements: identical non-zero integers
      - location: defined by start and end index within the sequence
      - length: integer (number of elements in the block)
      - value: the non-zero integer comprising the block
  - name: element
    type: integer
    properties:
      - value: 0-9
      - index: position within the sequence

actions:
  - name: identify_blocks
    description: Scan the input sequence to find contiguous blocks of identical non-zero digits.
    inputs: input_sequence
    outputs: list_of_blocks (each with value, start_index, end_index, length)
  - name: modify_block
    description: Change elements within a block based on its length.
    inputs: block, output_sequence
    outputs: modified_output_sequence
    condition: If block.length > 2
    effect: Sets elements in output_sequence from block.start_index + 1 to block.end_index - 1 to 0.
  - name: preserve_block
    description: Keep block elements unchanged.
    inputs: block
    condition: If block.length <= 2
    effect: No change to corresponding elements in the output_sequence.
  - name: preserve_zeros
    description: Ensure elements with value 0 remain 0.
    inputs: input_sequence
    outputs: output_sequence
    effect: Elements with value 0 are copied directly to the output.

relationships:
  - input_sequence and output_sequence have the same length.
  - The transformation focuses on non-zero blocks; zero elements are inherently preserved.
  - The modification rule (modify_block vs. preserve_block) depends solely on the block's length property.
  - Blocks are processed independently.