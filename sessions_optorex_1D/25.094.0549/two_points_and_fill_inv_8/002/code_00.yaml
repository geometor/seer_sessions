task_description: Modifying interior elements of contiguous non-zero runs within a 1D sequence, assuming input/output are 2D NumPy arrays.
elements:
  - name: input_array
    type: 2D NumPy array
    properties:
      - shape: (1, N)
      - dtype: integer
    role: input data structure containing the sequence
  - name: output_array
    type: 2D NumPy array
    properties:
      - shape: (1, N)
      - dtype: integer
    role: output data structure
  - name: sequence
    type: 1D NumPy array (derived from input_array[0])
    role: the actual sequence to be processed
  - name: non_zero_run
    type: contiguous slice of the sequence
    properties:
      - all elements are the same non-zero digit
      - bounded by zeros or sequence ends
    role: primary object of transformation
  - name: zero_element
    type: integer
    value: 0
    role: delimiter, generally preserved
  - name: run_length
    type: integer
    role: property determining the action on a non_zero_run
actions:
  - name: extract_sequence
    input: input_array
    output: 1D sequence (input_array[0])
  - name: identify_runs
    input: sequence
    output: list of non_zero_runs (with start/end indices and value)
  - name: modify_run
    input: non_zero_run
    condition: run_length > 2
    effect: change all elements in the sequence slice except the first and last to 0
  - name: preserve_run
    input: non_zero_run
    condition: run_length <= 2
    effect: keep the run unchanged in the sequence
  - name: preserve_zeros
    input: zero_elements in the sequence
    effect: keep zero elements unchanged
  - name: copy_and_package
    input: sequence (potentially modified)
    output: output_array (copy of modified sequence, maintaining 2D shape)
relationships:
  - input_array shape[1] equals output_array shape[1]
  - transformation is applied independently to each non_zero_run within the extracted sequence
  - output_array is constructed by applying modifications/preservations to the sequence and then packaging it back into the 2D shape.