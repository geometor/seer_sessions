objects:
  - name: sequence
    type: numpy.ndarray (1-dimensional)
    description: Represents both the input and output data structures, containing single-digit integers.
  - name: block
    type: contiguous_subsequence
    description: A run of identical non-zero digits within the input sequence (array).
    properties:
      - value: integer (non-zero, 1-9)
      - start_index: integer
      - end_index: integer
      - length: integer (>= 1)
  - name: digit
    type: integer
    description: Individual element within a sequence (array). Can be 0-9.

properties:
  - object: sequence
    name: shape
    type: tuple (e.g., (N,))
  - object: sequence
    name: dtype
    type: numpy_datatype (e.g., int)
  - object: sequence
    name: elements
    type: numpy.ndarray

actions:
  - name: identify_blocks
    description: Scan the input NumPy array to find all contiguous blocks of identical non-zero digits.
    inputs:
      - input_sequence: sequence (numpy.ndarray)
    outputs:
      - list_of_blocks: list[block] # conceptual output, might be implicit in the iteration
  - name: modify_sequence
    description: Create the output NumPy array by applying transformations based on identified blocks.
    inputs:
      - input_sequence: sequence (numpy.ndarray)
    outputs:
      - output_sequence: sequence (numpy.ndarray)

relationships:
  - type: preservation
    description: Input digits that are '0' remain '0' in the output array at the same position.
  - type: boundary_preservation
    description: For each identified non-zero block, the digit at the start_index and the digit at the end_index in the input array are preserved in the output array at the same indices.
  - type: zero_replacement
    description: For each identified non-zero block with length > 2, all digits in the input array at indices strictly between start_index and end_index are replaced with '0' in the output array.
  - type: shape_conservation
    description: The output array has the same shape and dtype as the input array.
