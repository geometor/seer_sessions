objects:
  - name: sequence
    type: list_of_integers
    description: Represents both the input and output data structures, assumed to be a sequence of single-digit integers.
  - name: block
    type: contiguous_subsequence
    description: A run of identical non-zero digits within the input sequence.
    properties:
      - value: integer (non-zero)
      - start_index: integer
      - end_index: integer
      - length: integer (>= 1)
  - name: digit
    type: integer
    description: Individual element within a sequence. Can be 0-9.

properties:
  - object: sequence
    name: length
    type: integer
  - object: sequence
    name: elements
    type: list_of_digits

actions:
  - name: identify_blocks
    description: Scan the input sequence to find all contiguous blocks of identical non-zero digits.
    inputs:
      - input_sequence: sequence
    outputs:
      - list_of_blocks: list[block]
  - name: modify_sequence
    description: Create the output sequence by applying transformations based on identified blocks.
    inputs:
      - input_sequence: sequence
      - identified_blocks: list[block] # Note: Implicitly done by iterating and modifying a copy.
    outputs:
      - output_sequence: sequence

relationships:
  - type: preservation
    description: Input digits that are '0' remain '0' in the output at the same position.
  - type: boundary_preservation
    description: For each identified non-zero block, the digit at the start_index and the digit at the end_index in the input sequence are preserved in the output sequence at the same indices. Blocks of length 1 or 2 are fully preserved.
  - type: zero_replacement
    description: For each identified non-zero block with length > 2, all digits in the input sequence at indices strictly between start_index and end_index are replaced with '0' in the output sequence.
  - type: length_conservation
    description: The output sequence has the same length as the input sequence.
