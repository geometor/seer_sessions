objects:
  - name: input_string
    type: string
    description: A string containing space-separated single digits (0-9).
  - name: output_string
    type: string
    description: A string containing space-separated single digits (0-9), representing the transformed sequence.
  - name: sequence
    type: list_of_integers
    description: An intermediate representation derived by parsing the input_string. Also used to build the result before formatting as output_string.
  - name: block
    type: contiguous_subsequence
    description: A run of identical non-zero digits within the parsed sequence.
    properties:
      - value: integer (non-zero)
      - start_index: integer
      - end_index: integer
      - length: integer (>= 1)
  - name: digit
    type: integer
    description: Individual element within a sequence. Can be 0-9.

properties:
  - object: sequence
    name: length
    type: integer
  - object: sequence
    name: elements
    type: list_of_digits

actions:
  - name: parse_input
    description: Convert the input_string into a sequence (list_of_integers).
    inputs:
      - input_string: input_string
    outputs:
      - parsed_sequence: sequence
  - name: identify_blocks
    description: Scan the parsed_sequence to find all contiguous blocks of identical non-zero digits.
    inputs:
      - parsed_sequence: sequence
    outputs:
      - list_of_blocks: list[block]
  - name: modify_sequence
    description: Create a new sequence by applying transformations based on identified blocks. Starts with a copy of the parsed_sequence.
    inputs:
      - parsed_sequence: sequence
      - identified_blocks: list[block]
    outputs:
      - modified_sequence: sequence
  - name: format_output
    description: Convert the modified_sequence back into a space-separated string (output_string).
    inputs:
      - modified_sequence: sequence
    outputs:
      - output_string: output_string

relationships:
  - type: preservation
    description: Input digits that are '0' remain '0' in the modified sequence at the same position.
  - type: boundary_preservation
    description: For each identified non-zero block, the digit at the start_index and the digit at the end_index in the parsed sequence are preserved in the modified sequence at the same indices.
  - type: zero_replacement
    description: For each identified non-zero block with length > 2, all digits in the parsed sequence at indices strictly between start_index and end_index are replaced with '0' in the modified sequence. Blocks of length 1 or 2 remain unchanged.
  - type: length_conservation
    description: The output_string has the same number of space-separated digits as the input_string. The modified_sequence has the same length as the parsed_sequence.
