task_elements:
  - item: input_sequence
    properties:
      - type: list of integers
      - length: 12
      - content: contains exactly one contiguous block of identical non-zero digits, surrounded by zeros.
  - item: output_sequence
    properties:
      - type: list of integers
      - length: 12
      - content: derived from input_sequence by shifting the non-zero block.
  - item: block
    properties:
      - type: contiguous sub-sequence within input_sequence
      - content: identical non-zero digits (e.g., 1, 6, 7)
      - location: defined by start and end indices
      - length: number of digits in the block
    relationships:
      - part_of: input_sequence
      - copied_to: output_sequence (at a shifted position)
  - item: zero
    properties:
      - type: integer
      - value: 0
      - role: background/filler in both input and output sequences.
transformation:
  - action: find_block
    source: input_sequence
    target: block
    details: Identify the value, start index, end index, and length of the contiguous block of identical non-zero digits.
  - action: calculate_new_indices
    source: block (from input_sequence)
    details: Calculate the new start index by subtracting 4 from the original start index. Calculate the new end index by subtracting 4 from the original end index.
  - action: construct_output
    target: output_sequence
    details:
      - Initialize output_sequence as a list of 12 zeros.
      - Copy the identified block (using its value and length) into the output_sequence, starting at the calculated new start index.
constraints:
  - Input sequence length is always 12.
  - Exactly one contiguous block of identical non-zero digits exists in the input.
  - The shift amount is consistently 4 positions to the left.
  - The indices resulting from the shift are assumed to be valid (within the 0-11 range based on examples).