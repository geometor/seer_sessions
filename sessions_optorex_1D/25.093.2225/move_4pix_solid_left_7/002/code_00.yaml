Task: Sequence Transformation (Left Shift)

Input_Object:
  - Name: InputSequence
    Type: List or Array of Integers
    Length: 12
    Structure: Contains exactly one contiguous block of identical non-zero integers. All other elements are 0.

Output_Object:
  - Name: OutputSequence
    Type: List or Array of Integers
    Length: 12
    Structure: Contains the same block of non-zero integers as the input, shifted. All other elements are 0.

Derived_Object:
  - Name: NonZeroBlock
    Source: InputSequence
    Properties:
      - Value: The non-zero integer value (e.g., 1, 7, 8, 6, 2, 5).
      - Length: The number of times the value repeats contiguously (e.g., 4, 1, 6).
      - InputStartIndex: The 0-based index where the block begins in the InputSequence.

Transformation_Action:
  - Name: ShiftBlockLeft
  - Amount: 4 positions
  - AppliedTo: NonZeroBlock

Relationship:
  - The OutputSequence is generated from the InputSequence.
  - Find the NonZeroBlock (Value, Length, InputStartIndex) in the InputSequence.
  - Calculate the OutputStartIndex = InputStartIndex - 4.
  - Create the OutputSequence, initialized with 12 zeros.
  - Place the NonZeroBlock (Value, Length) into the OutputSequence starting at the calculated OutputStartIndex.
  - Ensure placement respects the boundaries (indices 0-11) of the OutputSequence; parts of the block shifted beyond the left boundary (index < 0) are discarded.