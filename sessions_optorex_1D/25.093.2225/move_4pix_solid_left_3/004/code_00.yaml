task_elements:
  - object: input_grid
    properties:
      - type: numpy_array
      - dimensions: 2
      - shape: [1, 12] # 1 row, 12 columns
      - dtype: integer
  - object: output_grid
    properties:
      - type: numpy_array
      - dimensions: 2
      - shape: [1, 12] # 1 row, 12 columns
      - dtype: integer
  - object: sequence_content
    properties:
      - within: input_grid/output_grid row
      - composition: mostly_zeros_with_block_of_non_zero_digit
  - object: shift_operation
    properties:
      - direction: left
      - magnitude: 4 positions
      - applied_to: row_elements
  - object: padding
    properties:
      - value: 0
      - count: 4
      - position: appended_to_right_end_of_row
action:
  - name: transform_row
    parameters:
      - grid: input_grid
      - shift_amount: 4
      - pad_value: 0
    steps:
      - 1: Extract the single row from the input_grid (as a 1D array).
      - 2: Slice the row starting from index 'shift_amount' to the end.
      - 3: Create a 1D padding array of 'pad_value' with length 'shift_amount'.
      - 4: Concatenate the sliced row and the padding array.
      - 5: Reshape the concatenated 1D array back into a 2D array with shape (1, 12).
    produces: output_grid