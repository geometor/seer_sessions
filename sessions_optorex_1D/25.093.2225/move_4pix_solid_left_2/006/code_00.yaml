Task: Shift a block of non-zero digits within a fixed-length sequence.

Input_Type: List of integers or numpy array (based on runtime errors).
Output_Type: List of integers or numpy array (expected to match input type).

Constraint:
  - Sequence_Length: 12 elements.
  - Input_Structure: Contains exactly one contiguous block of identical non-zero digits. Remaining elements are 0.

Objects:
  - Name: Sequence
    Properties:
      - Type: List[int] or np.ndarray
      - Length: 12
  - Name: NonZeroBlock
    Properties:
      - Type: Sub-sequence of identical non-zero integers.
      - Digit: The non-zero integer composing the block (e.g., 5, 9, 7). Extracted from the first non-zero element found.
      - Length: Number of times the digit repeats contiguously. Determined by iterating until a different digit or zero is encountered.
      - Input_Position: Start index within the input sequence. Found by locating the first non-zero element.

Action:
  - Name: ShiftLeft
  - Target: NonZeroBlock
  - Parameter: ShiftAmount = 4 positions.
  - Constraint: The new start index cannot be less than 0 (clamped at 0).
  - Description: Calculate the target start index for the NonZeroBlock in the output sequence by subtracting ShiftAmount (4) from its Input_Position. Apply the minimum value constraint (max(0, Input_Position - 4)).

Output_Generation:
  - Create a new sequence of the same length (12) initialized with zeros.
  - Place the NonZeroBlock (using its identified Digit and Length) into the new sequence starting at the calculated target start index.
  - Ensure the block placement does not exceed the sequence bounds (length 12).