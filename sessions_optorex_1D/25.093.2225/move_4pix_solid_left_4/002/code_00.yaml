task_description: "Shift the first contiguous block of non-zero digits 4 positions to the left within a sequence, maintaining block content and sequence length."
elements:
  - object: sequence
    properties:
      - type: list or 1D NumPy array of integers
      - length: 12 (fixed)
      - content: Contains mostly zeros and potentially one contiguous block of identical non-zero digits.
  - object: block
    properties:
      - type: sub-sequence of one or more identical non-zero integers
      - identification: The first contiguous sequence of non-zero integers found when scanning from left to right.
      - location: Defined by a start index within the sequence.
      - content: Remains unchanged during transformation.
actions:
  - name: find_block
    input: input sequence
    output:
      - the non-zero block (as a list of integers)
      - its starting index in the input sequence
    notes: Returns a representation indicating no block found (e.g., None, -1) if the input sequence contains only zeros.
  - name: calculate_new_start_index
    input: original start index
    output: new start index
    logic: new_start_index = original_start_index - 4
  - name: construct_output_sequence
    input:
      - block (list of integers)
      - new start index
      - sequence length (12)
    output: output sequence (list or array of 12 integers)
    logic: Create a sequence of 12 zeros. Place the block elements into this sequence starting at the new start index. Elements of the block that would fall outside the sequence bounds (index < 0 or index >= 12) due to the shift are omitted.
relationships:
  - The output sequence always has a length of 12.
  - The non-zero digits forming the block in the input sequence are preserved and appear in the same order in the output sequence, if they fall within the bounds after shifting.
  - The start position of the block in the output sequence is determined by subtracting a fixed offset from the start position in the input sequence.
constants:
  - sequence_length: 12
  - shift_amount: -4 (representing a left shift by 4 positions)
error_handling:
  - If the input sequence contains only zeros, the output sequence should also contain only zeros.
  - The transformation must handle potential NumPy array inputs, ensuring comparisons work correctly (e.g., element-wise comparison `val != 0` within loops).