task_description: "Shift the first contiguous block of non-zero digits 4 positions to the left within a 1D sequence of fixed length 12, padding with zeros."
elements:
  - object: sequence
    properties:
      - type: list or 1D array of integers
      - length: 12
      - structure: Contains mostly zeros and potentially one contiguous block of identical non-zero digits. Assumed to be effectively 1D for processing.
  - object: block
    properties:
      - type: sub-sequence of one or more identical non-zero integers
      - location: Defined by start index within the 1D sequence. Only the first such block is considered if multiple exist (though not seen in examples).
      - content: Remains unchanged during transformation.
actions:
  - name: ensure_1d
    input: input data (potentially nested list/grid)
    output: flattened 1D sequence (list or 1D array)
  - name: identify_block
    input: 1D sequence
    output: the non-zero block (list of ints) and its start index (int)
    notes: Returns (None, -1) or equivalent if no block found.
  - name: calculate_new_position
    input: original start index (int)
    output: new start index (int) = original start index - 4
  - name: construct_output
    input:
      - block (list of ints)
      - new start index (int)
      - sequence length (12)
    output: output sequence (list or 1D array)
    notes: Initializes a sequence of 12 zeros. Places the block at the new start index. Elements shifted before index 0 are omitted.
relationships:
  - The output sequence contains the same non-zero block as the input sequence.
  - The start position of the block in the output sequence is consistently 4 positions to the left of its start position in the input sequence.
constants:
  - sequence_length: 12
  - shift_amount: -4 (left shift by 4)
error_handling:
  - Input structure: Must handle potential nesting (e.g., [[...]]) by flattening to 1D.
  - No block found: Output should be all zeros.
  - Shift out of bounds: Elements shifted to indices < 0 are discarded.