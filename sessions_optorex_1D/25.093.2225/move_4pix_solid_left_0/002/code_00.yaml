task_type: grid_transformation # Changed from sequence
input_description: A 2D grid (NumPy array) with 1 row and 12 columns.
output_description: A 2D grid (NumPy array) with 1 row and 12 columns, representing the transformed sequence.
elements:
  - name: background_value
    value: 0
    role: fills the grid cells outside the foreground object
  - name: foreground_object
    properties:
      - type: contiguous block of identical non-zero integers within the single row
      - value: the specific non-zero integer (e.g., 1, 3, 5, 6, 9)
      - length: number of cells in the block
      - start_index: column index of the first cell of the block in the input grid's row
    role: the primary element being manipulated
relationships:
  - type: spatial
    description: The foreground_object exists as a horizontal segment within the single row of the grid.
actions:
  - name: extract_sequence
    description: Get the 1D sequence of values from the first (and only) row of the input grid.
  - name: identify_foreground_object
    description: Locate the contiguous block of non-zero identical integers within the extracted 1D sequence. Determine its value, start index, and length.
  - name: shift_object_left
    description: Calculate the target start index for the foreground_object in the output sequence by subtracting the shift amount (4) from its start index in the input sequence.
  - name: reconstruct_sequence
    description: Create a new 1D sequence (list or 1D array) of the same length as the input sequence, initially filled with the background_value (0).
  - name: place_shifted_object
    description: Place the identified foreground_object (using its original value and length) into the new 1D sequence, starting at the calculated target start index. Ensure placement respects sequence boundaries.
  - name: format_output_grid
    description: Convert the reconstructed 1D sequence into a 2D grid (1 row, N columns) matching the expected output format.
constants:
  - name: grid_rows
    value: 1
  - name: grid_columns
    value: 12 # Or determine dynamically from input shape
  - name: shift_amount
    value: 4 # Shift is to the left (decrease index)