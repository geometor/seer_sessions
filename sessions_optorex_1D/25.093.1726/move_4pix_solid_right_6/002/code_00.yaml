objects:
  - input_sequence:
      type: sequence of integers (e.g., list or NumPy array)
      length: 12
      properties:
        - contains a contiguous block of identical non-zero digits
        - remaining elements are zero
  - output_sequence:
      type: sequence of integers (e.g., list or NumPy array)
      length: 12
      properties:
        - contains the same contiguous block of non-zero digits as the input, shifted right
        - remaining elements are zero
  - non_zero_element:
      type: integer
      properties:
        - value is not 0
  - zero_element:
      type: integer
      value: 0
  - shift_amount:
      type: integer
      value: 4
  - sequence_length:
      type: integer
      value: 12
actions:
  - create: generate a new sequence of `sequence_length` filled with `zero_element`
  - iterate: process each element of the `input_sequence` by its index `i`
  - check: determine if an element at index `i` is a `non_zero_element`
  - calculate_target_index: compute `j = i + shift_amount`
  - check_bounds: verify if `j` is less than `sequence_length`
  - copy_element: place the `non_zero_element` from `input_sequence[i]` into `output_sequence[j]`
relationships:
  - transformation: `input_sequence` is transformed into `output_sequence`
  - shifting_rule: each `non_zero_element` at index `i` in the `input_sequence` is moved to index `i + shift_amount` in the `output_sequence`, provided `i + shift_amount` is less than `sequence_length`
  - padding_rule: positions in the `output_sequence` not filled by shifted `non_zero_element`s remain `zero_element`