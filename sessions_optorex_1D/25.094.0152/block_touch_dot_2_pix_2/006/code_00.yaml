task_elements:
  - object: sequence
    properties:
      - type: list or 1D numpy array
      - element_type: integer
      - length: 12
  - object: element
    properties:
      - type: integer
      - value: specific numbers (0, 1, 6 are key triggers)
      - position: index (0-11)
  - object: block
    properties:
      - type: contiguous sequence of identical non-zero elements
      - value: the repeated integer (specifically 6)
      - start_index: position of the first element
      - end_index: position of the last element
actions:
  - name: identify_blocks
    description: Find all maximal contiguous blocks of a specific value (e.g., 6).
  - name: check_neighbors
    description: Examine elements adjacent to a specific element or block.
    parameters:
      - direction: left or right
      - count: number of adjacent positions to check (1 or 2)
      - expected_value: value to look for (typically 0)
  - name: move_element_or_block
    description: Relocate an element or a block within the sequence by swapping/shifting positions with adjacent zeros.
    parameters:
      - target: the element (value 1) or block (value 6) to move
      - direction: left or right
      - distance: number of positions to shift (1 or 2)
rules:
  - rule: movement_rule_6_left
    priority: 1
    description: The first identified block of `6`s (scanning left-to-right) moves 2 positions left if immediately preceded by `0, 0`.
    condition: block_value == 6 AND start_index >= 2 AND element_at(start_index - 1) == 0 AND element_at(start_index - 2) == 0
    action: move_element_or_block(target=block, direction=left, distance=2)
  - rule: movement_rule_6_right
    priority: 2
    description: If rule 6-Left did not apply, the first identified block of `6`s (scanning left-to-right) moves 2 positions right if immediately followed by `0, 0`.
    condition: block_value == 6 AND end_index <= length - 3 AND element_at(end_index + 1) == 0 AND element_at(end_index + 2) == 0
    action: move_element_or_block(target=block, direction=right, distance=2)
  - rule: movement_rule_1_right
    priority: 3
    description: If neither rule 6 applied, the first identified element `1` (scanning left-to-right) moves 1 position right if immediately followed by a `0`.
    condition: element_value == 1 AND index < length - 1 AND element_at(index + 1) == 0
    action: move_element_or_block(target=element_at_index, direction=right, distance=1)
  - note: Only the highest priority rule that matches is executed. If multiple blocks or elements could satisfy a rule, the leftmost one triggers the action. If no rules match, the sequence is unchanged. Other numbers act as stationary obstacles or are unaffected.