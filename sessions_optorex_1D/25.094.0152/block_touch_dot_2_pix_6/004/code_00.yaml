InputSource:
  - Type: NumPy Array (as provided by testing environment)
    Properties:
      - ElementType: Integer
      - Length: 12 (expected)
Processing:
  - InitialStep: Convert Input NumPy Array to Python List
Objects:
  - Sequence:
      Type: List of Integers
      Length: 12
  - Pivot:
      Properties:
        - Value: 2
        - Count: 1
        - Position: Fixed (remains same in output as input)
  - DataBlock:
      Properties:
        - Type: Contiguous sub-sequence of non-zero integers (excluding Pivot)
        - Existence: Typically one per sequence (can be absent or adjacent to Pivot)
        - Position: Relative to Pivot (Left, Right, Adjacent)
        - Length: Variable
  - Filler:
      Properties:
        - Value: 0
        - Role: Background, occupies space not used by Pivot or DataBlock
Relationships:
  - RelativePosition: Between DataBlock and Pivot (Left, Right, Adjacent)
  - Gap:
      Properties:
        - Type: Number of Fillers (zeros) strictly between DataBlock and Pivot
        - Value: Integer >= 0
Actions:
  - ConvertInput: Change the input NumPy array to a Python List.
  - LocatePivot: Find the index of the Pivot (value 2) in the List.
  - IdentifyDataBlock: Find the start index, end index, and values of the contiguous non-zero sequence (excluding Pivot) in the List.
  - CalculateGap: Determine the number of zeros between the DataBlock and the Pivot.
  - DetermineShift:
      Based on Gap:
        - If Gap = 0, Shift Amount = 0
        - If Gap = 1, Shift Amount = 1
        - If Gap > 1, Shift Amount = 2
      Based on RelativePosition:
        - If DataBlock is Left of Pivot, Shift Direction = Right
        - If DataBlock is Right of Pivot, Shift Direction = Left
        - If DataBlock is Adjacent or Absent, Shift Direction = None
  - ApplyShift: Calculate the new start index for the DataBlock based on the shift amount and direction.
  - ConstructOutput: Create a new List of length 12, place the Pivot at its original index, place the shifted DataBlock values starting at the new index (avoiding overwriting the Pivot), and fill remaining positions with Filler (0).
