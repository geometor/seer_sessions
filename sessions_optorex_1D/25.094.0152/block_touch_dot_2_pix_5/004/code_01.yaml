task_elements:
  - type: sequence
    format: list of single-digit integers
    role: input & output
objects:
  - name: digit_sequence
    properties:
      - elements: single digits (0-9)
      - order: significant
      - length: preserved during transformation
      - element_counts: preserved during transformation
  - name: zero_digit
    value: 0
    properties:
      - role: potentially mobile element
  - name: non_zero_digit
    value: 1-9
    properties:
      - role: boundary marker for mobile zeros
  - name: zero_block
    properties:
      - composition: one or more contiguous zero_digits
      - context: location within the digit_sequence
      - state: mobile or static
        criteria:
          mobile: immediately preceded by a non_zero_digit (L) AND immediately followed by a non_zero_digit (R)
          static: otherwise (e.g., at sequence ends, adjacent to only one non_zero_digit, adjacent only to other zeros)
relationships:
  - type: adjacency
    between: digits in the sequence (determines neighbors and blocks)
  - type: comparison
    between: left (L) and right (R) non_zero_digit neighbors of a mobile zero_block
    evaluates: L < R or L > R
actions:
  - name: identify_mobile_zero_blocks
    input: digit_sequence
    output: list of mobile zero_blocks (with their original indices and count) and their L/R neighbors
  - name: partition_zeros
    input: list of mobile zero_blocks and their L/R neighbors
    output: two lists: zeros_to_prepend, zeros_to_append
    logic:
      - if L < R for a block, add its zeros to zeros_to_append
      - if L > R for a block, add its zeros to zeros_to_prepend
  - name: extract_mobile_zeros
    input: digit_sequence, indices of mobile zero_blocks
    output: core_sequence (original sequence with mobile zeros removed)
  - name: reconstruct_sequence
    input: zeros_to_prepend, core_sequence, zeros_to_append
    output: final transformed digit_sequence
    logic: concatenate the three input lists in order