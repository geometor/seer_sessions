InputType: List[int] or numpy.ndarray # Changed from string
OutputType: List[int] or numpy.ndarray # Changed from string
SequenceLength: 12 (observed in all examples)
PivotElement:
  Value: 2
  Occurrence: Exactly once per sequence
  Behavior: Position remains fixed during transformation.
ElementBehavior:
  - ElementType: Non-zero integer
    Location: Left of Pivot (index < index_of_2)
    Action: Conditional Shift Right
    Condition: If element is at index `i`, and elements at `i+1` and `i+2` are both 0, and `i+2 < index_of_2`.
    ShiftAmount: 2 positions right (move from `i` to `i+2`)
    Iteration: Apply iteratively, processing from right-to-left (closer to pivot first in each pass) until no more shifts occur on the left side.
  - ElementType: Non-zero integer
    Location: Right of Pivot (index > index_of_2)
    Action: Conditional Shift Left
    Condition: If element is at index `i`, and elements at `i-1` and `i-2` are both 0, and `i-2 > index_of_2`.
    ShiftAmount: 2 positions left (move from `i` to `i-2`)
    Iteration: Apply iteratively, processing from left-to-right (closer to pivot first in each pass) until no more shifts occur on the right side.
  - ElementType: Zero (0)
    Behavior: Act as space fillers enabling shifts; are replaced by shifted non-zero elements.
  - ElementType: Pivot (2)
    Behavior: Remains stationary, defines the split point for left/right processing.
Constraints:
  - Elements immediately adjacent to the pivot (at index `index_of_2 - 1` or `index_of_2 + 1`) do not shift via this rule.
  - Blocks of adjacent non-zero numbers maintain their relative order when shifted.