Task: Conditionally rearrange elements in a sequence based on local patterns involving the numbers 0 and 2.

Input_Type: List of 12 integers.
Output_Type: List of 12 integers.

Objects:
  - Sequence: The input list of 12 integers.
  - Element: An integer within the sequence.
  - Number_Zero: The integer 0, acting as empty space or a swappable/fillable element.
  - Number_Two: The integer 2, acting as a boundary or trigger for specific transformations.
  - Non_Zero_Non_Two_Element (X): Any integer element that is not 0 and not 2.
  - Zero_Block: A contiguous sub-sequence containing only 0s.
  - Movable_Block (Y): A contiguous sub-sequence containing only Non_Zero_Non_Two_Elements.

Properties:
  - Position: The index (0-11) of an element in the sequence.
  - Value: The integer value of an element.
  - Adjacency: Elements at consecutive indices.
  - Contiguity: Elements forming an unbroken block.

Relationships/Patterns:
  - Pattern_Swap: A Non_Zero_Non_Two_Element `X` followed immediately by a 0, followed immediately by a 2 (sub-sequence `X, 0, 2`). Found by scanning left-to-right.
  - Pattern_Shift: The integer 2 followed immediately by a Zero_Block (of length >= 1), followed immediately by a Movable_Block `Y`. (sub-sequence `2, 0..., 0, Y`). Found by scanning left-to-right for the initial '2'.

Actions:
  - Scan: Iterate through the sequence (typically left-to-right) to find the first occurrence of a pattern.
  - Identify: Recognize occurrences of Pattern_Swap or Pattern_Shift.
  - Apply_Swap: If Pattern_Swap is found first, swap the positions of `X` and 0.
  - Apply_Shift: If Pattern_Shift is found first (and Pattern_Swap was not found), move the Movable_Block `Y` to the position immediately following the '2', and place the Zero_Block immediately after the moved `Y`.
  - Halt: Stop processing and return the modified sequence after the first applicable action (Swap or Shift) is performed.
  - No_Change: If neither pattern is found during the scan, return the original sequence unmodified.