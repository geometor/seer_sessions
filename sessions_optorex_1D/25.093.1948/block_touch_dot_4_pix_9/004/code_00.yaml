Task: Conditionally rearrange elements in a sequence of 12 integers based on prioritized local patterns involving 0 and 2.

Objects:
  - Sequence: A list of 12 integers.
  - Element: An integer within the sequence.
  - Zero: The integer 0, representing empty space.
  - Two: The integer 2, acting as a critical marker for patterns.
  - Movable_Element (X): Any integer that is not 0 and not 2.
  - Movable_Block (Y): A contiguous sub-sequence containing only Movable_Elements.
  - Zero_Block: A contiguous sub-sequence containing only Zeros.

Properties:
  - Position: The index (0-11) of an element.
  - Value: The integer value of an element.
  - Length: The number of elements in a block or sequence (always 12 for the main sequence).
  - Contiguity: Elements being adjacent in the sequence.

Relationships/Patterns:
  - Pattern_Swap (Priority 1): A Movable_Element (X) followed immediately by a Zero, followed immediately by a Two (X, 0, 2). Searched left-to-right.
  - Pattern_Shift (Priority 2): A Two followed immediately by a non-empty Zero_Block, followed immediately by a non-empty Movable_Block (Y) (2, 0..., 0, Y). Searched left-to-right.

Actions:
  - Scan: Iterate through the sequence from left to right (index 0 to end).
  - Identify_Pattern1: Find the first occurrence of Pattern_Swap.
  - Identify_Pattern2: Find the first occurrence of Pattern_Shift.
  - Execute_Swap: If Pattern_Swap is found, swap the positions of X and the adjacent Zero. Halt processing.
  - Execute_Shift: If Pattern_Swap is not found and Pattern_Shift is found, move Movable_Block (Y) to the position immediately after the Two. Move the Zero_Block to the position immediately after the moved Movable_Block (Y). Halt processing.
  - No_Change: If neither pattern is found, output the original sequence unchanged.