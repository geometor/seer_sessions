Objects:
  - Sequence:
      Type: List or Array of Integers
      Properties:
        - Elements: Single-digit integers (0-9).
        - Length: Fixed (appears to be 12 in examples).
        - Ordered.
  - PatternInstance:
      Properties:
        - AnchorDigit: The first NonZeroDigit in the pattern.
          - Index: Position of AnchorDigit.
        - PrecedingZeros: A contiguous sub-sequence of one or more ZeroDigits immediately following the AnchorDigit.
          - StartIndex: Position of the first ZeroDigit.
          - Count: Number of ZeroDigits.
        - MovingBlock: A contiguous sub-sequence of identical NonZeroDigits immediately following the PrecedingZeros.
          - StartIndex: Position of the first digit in the block.
          - Length: Number of digits in the block.
          - Value: The repeated digit value.
  - Digit:
      Types:
        - ZeroDigit (Value is 0).
        - NonZeroDigit (Value is 1-9).

Relationships:
  - A PatternInstance is defined by an AnchorDigit -> PrecedingZeros -> MovingBlock sequence.
  - The transformation *targets* the *first* PatternInstance found when scanning the Sequence from left to right.

Action:
  - Find: Locate the first PatternInstance in the input Sequence.
  - Check: If no PatternInstance is found, the Sequence remains unchanged.
  - Calculate: If a PatternInstance is found, calculate the `shift_amount = min(PrecedingZeros.Count, MovingBlock.Length)`.
  - Conditional Execution:
      - If `shift_amount` is 0, the Sequence remains unchanged.
      - If `shift_amount` > 0:
          - Construct New Sequence:
              1. Copy elements from the original Sequence *before* the `shift_amount` zeros that are immediately preceding the MovingBlock (i.e., up to index `MovingBlock.StartIndex - shift_amount`).
              2. Append the *entire* MovingBlock.
              3. Append elements from the original Sequence that were *after* the MovingBlock (i.e., from index `MovingBlock.StartIndex + MovingBlock.Length` onwards).
              4. Append `shift_amount` ZeroDigits to the end.
          - Replace: The original Sequence is replaced by the New Sequence.

Input Handling:
  - The process accepts input as either:
      - A string of space-separated digits.
      - A list or NumPy array of integers.
  - If input is a string, it's parsed into a list of integers first.

Output Formatting:
  - The final Sequence (modified or original) is formatted as a string of space-separated digits.