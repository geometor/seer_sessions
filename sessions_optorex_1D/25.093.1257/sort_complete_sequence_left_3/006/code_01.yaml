Task: Sequence Transformation

Input_Object:
  Type: numpy.ndarray
  Shape: (12,)
  Element_Type: Integer (Digit)
  Properties:
    - Length: Always 12
    - Initial_Segment:
        Indices: 0-3
        Content: Always [0, 0, 0, 0]
    - Variable_Segment:
        Indices: 4-11
        Content: Contains exactly one unique non-zero digit (X) and exactly two zeros (0).
        Constraint: The non-zero digit X appears 6 times. The arrangement varies.

Output_Object:
  Type: String
  Format: Space-separated digits
  Properties:
    - Length: Represents 12 digits.
    - Structure:
      - Prefix: "0 0 0 0"
      - Suffix_Pattern: Corresponds to the sequence [X, X, X, 0, X, X, 0, X], joined by spaces, where X is the non-zero digit identified from the input's Variable_Segment.

Relationships:
  - Identity: The first four elements ([0, 0, 0, 0]) of the input NumPy array correspond to the first four "0"s in the output string.
  - Value_Extraction: The unique non-zero digit 'X' within the input array's elements at indices 4 through 11 is extracted.
  - Pattern_Substitution: The subarray from index 4 to 11 in the input is disregarded in terms of its specific arrangement. It is replaced conceptually by the fixed pattern [X, X, X, 0, X, X, 0, X] during the construction of the output string.

Action:
  - Accept a 12-element NumPy array of integers as input.
  - Identify the unique non-zero digit (X) within the slice `input_array[4:12]`.
  - Construct a new list representing the target sequence: `[0, 0, 0, 0, X, X, X, 0, X, X, 0, X]`.
  - Convert the elements of this target list to strings.
  - Join the string elements with spaces to form the final output string.