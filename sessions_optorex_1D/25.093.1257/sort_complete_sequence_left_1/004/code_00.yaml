Input:
  type: sequence or grid (likely 1x12 or 1D array of length 12)
  element_type: integer digit (0-9)
  structure:
    - prefix:
        indices: 0 to 3
        value: Always [0, 0, 0, 0]
    - suffix:
        indices: 4 to 11 (length 8)
        contains:
          - 0 (zero)
          - non_zero_digit (X): A single unique non-zero digit repeated one or more times.
        constraint: Only one unique non_zero_digit X exists in the suffix.

Output:
  type: sequence or grid (same dimensions/shape as input, e.g., 1x12 or 1D array of length 12)
  element_type: integer digit (0-9)
  structure:
    - prefix:
        indices: 0 to 3
        value: [0, 0, 0, 0] (Identical to input prefix)
    - suffix:
        indices: 4 to 11 (length 8)
        pattern: [X, X, X, 0, X, X, 0, X]
        value_source: X is the unique non_zero_digit identified from the input suffix.

Transformation:
  - action: Identify the unique non-zero digit (X) in the input elements from index 4 to 11.
  - action: Construct a new sequence of 8 digits using the pattern [X, X, X, 0, X, X, 0, X].
  - action: Create the output sequence/grid by concatenating the fixed prefix [0, 0, 0, 0] with the newly constructed 8-digit suffix.
  - ensures: Output shape/dimensions match the input shape/dimensions.