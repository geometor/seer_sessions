Input:
  type: sequence or array
  length: 12
  element_type: integer (digit)
  structure:
    - prefix:
        length: 4
        value: [0, 0, 0, 0]
        indices: [0, 1, 2, 3]
    - suffix:
        length: 8
        indices: [4, 5, 6, 7, 8, 9, 10, 11]
        contains:
          - 0
          - non_zero_digit (let's call it X)
        constraint: Only one unique non_zero_digit X exists in the suffix.

Output:
  type: sequence or array
  length: 12
  element_type: integer (digit)
  structure:
    - prefix:
        length: 4
        value: [0, 0, 0, 0]
        indices: [0, 1, 2, 3]
    - suffix:
        length: 8
        indices: [4, 5, 6, 7, 8, 9, 10, 11]
        pattern: [X, X, X, 0, X, X, 0, X] # Where X is the unique non_zero_digit identified from the input suffix.

Transformation:
  - action: receive input sequence/array of 12 integers.
  - action: identify the unique non-zero digit (X) within the last 8 elements (input suffix).
  - action: construct a new sequence/array of 12 integers.
    - step 1: copy the first 4 elements from the input (always [0, 0, 0, 0]).
    - step 2: generate the next 8 elements (output suffix) using the identified digit X and the fixed pattern [X, X, X, 0, X, X, 0, X].
  - action: return the constructed 12-element sequence/array.
