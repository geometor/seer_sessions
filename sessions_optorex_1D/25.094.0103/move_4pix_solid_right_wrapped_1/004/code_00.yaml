task_elements:
  - item: sequence
    properties:
      - type: numpy.ndarray # Confirmed via inspection
      - element_type: numpy integer types (e.g., numpy.int64)
      - length: 12
      - contains: single-digit non-negative integers
  - item: number
    properties:
      - role: background (most frequent)
      - role: foreground (least frequent)
relationships:
  - type: frequency
    description: Each unique number (value) has a count within the sequence.
  - type: position
    description: Each number occupies specific indices (0 to 11) in the sequence.
actions:
  - action: convert_elements_to_int
    description: Convert all elements in the input numpy array to standard Python integers.
    inputs: input numpy array
    outputs: list of Python integers
  - action: identify_frequencies
    description: Count occurrences of each unique integer in the converted list.
    inputs: list of Python integers
    outputs: counts of each integer
  - action: determine_roles
    description: Identify the background (most frequent) and foreground (least frequent) integers based on counts. Handle the case where only one unique integer exists.
    inputs: integer counts
    outputs: background integer, foreground integer
  - action: initialize_output
    description: Create a new list of length 12 filled with the background integer.
    inputs: background integer, length (12)
    outputs: output list
  - action: relocate_foreground
    description: Iterate through the original input numpy array. For each element at index 'i' whose integer value matches the foreground integer, place the foreground integer at position '(i + 4) mod 12' in the output list.
    inputs: input numpy array, foreground integer, output list
    outputs: modified output list