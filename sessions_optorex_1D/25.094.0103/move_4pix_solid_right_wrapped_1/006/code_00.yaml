task_elements:
  - item: input_grid
    properties:
      - type: numpy.ndarray
      - shape: [1, 12] # 1 row, 12 columns
      - dtype: integer (e.g., np.int64)
      - contains: single-digit integers
  - item: sequence
    properties:
      - derived_from: input_grid (by flattening)
      - type: list of integers (Python standard int)
      - length: 12
      - contains: single-digit integers
  - item: number
    properties:
      - role: background (most frequent in sequence)
      - role: foreground (least frequent in sequence)
      - type: integer (Python standard int)
relationships:
  - type: frequency
    description: Each number has a count within the flattened sequence.
  - type: position
    description: Each number occupies specific indices (0-11) in the flattened sequence.
actions:
  - action: flatten_input
    description: Convert the input 1x12 NumPy array into a 1D list or array of 12 elements.
  - action: convert_elements
    description: Ensure all elements in the flattened sequence are standard Python integers.
  - action: identify_frequencies
    description: Count occurrences of each unique integer in the flattened sequence.
  - action: determine_roles
    description: Identify the background (most frequent) and foreground (least frequent) integers. Handle the case where only one unique integer exists (background equals foreground).
  - action: initialize_output
    description: Create a new list of length 12 filled with the background integer.
  - action: relocate_foreground
    description: Iterate through the flattened input sequence. For each position 'i' holding the foreground integer, place that integer at position '(i + 4) mod 12' in the output list.