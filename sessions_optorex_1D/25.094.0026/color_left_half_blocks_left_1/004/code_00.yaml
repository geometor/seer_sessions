task_description: "Transform a sequence of 0s and 2s by selectively replacing some 2s with 8s based on their grouping within the sequence."
elements:
  - type: sequence # Conceptually 1D for the transformation logic
    role: input
    dtype: integer
    vocabulary: [0, 2]
    source: Flattened 2D input grid
  - type: sequence
    role: output
    dtype: integer
    vocabulary: [0, 2, 8]
    structure: Same length as input sequence
structure:
  - constraint: "Output sequence length equals input sequence length."
  - invariant: "Positions of 0s remain unchanged."
objects:
  - object: "Contiguous block of 2s"
    description: "A maximal sequence of one or more consecutive 2s in the flattened input sequence, delimited by 0s or sequence boundaries."
    properties:
      - name: "Length"
        symbol: L
        description: "The number of 2s in the block."
actions:
  - action: "Conditional Replacement"
    target: "Elements within a 'Contiguous block of 2s'"
    condition: |
      Based on the block's length (L):
      - If L = 1: No replacement occurs.
      - If L = 2 or L = 3: Replace the last '2' in the block with '8'.
      - If L >= 4: Replace the last two '2's in the block with '8'.
    input_source: "Flattened input sequence"
    output_effect: "Modifies the elements within the block for the output sequence."
relationships:
  - relationship: "Input to Output Mapping"
    description: "Each element in the output sequence corresponds positionally to an element in the flattened input sequence. 0s map to 0s. 2s map to 2s or 8s based on the block rule applied to the flattened sequence."
