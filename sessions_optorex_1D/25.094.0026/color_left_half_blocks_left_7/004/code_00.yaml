Task: Sequence Transformation

Input:
  - name: input_array
    type: numpy.ndarray
    description: A 1D NumPy array containing string representations of single digits ('0' or '2').

Output:
  - name: output_string
    type: str
    description: A single string containing transformed digits ('0', '2', or '8'), separated by spaces.

Elements:
  - name: digit_string
    type: str  # Note: Elements in the input array might be np.str_ or similar, but treated as strings.
    properties:
      - value: '0', '2' (input) or '0', '2', '8' (output)
      - position: index within the sequence (0-based)

Relationships:
  - type: adjacency
    description: A digit at index 'i' has a preceding digit at index 'i-1' (for i > 0).

Actions:
  - name: iterate_array
    description: Traverse the input NumPy array from the second element (index 1) to the end.
  - name: check_condition
    description: For the element at index 'i', check if its value is '2' and the value of the element at index 'i-1' is also '2'.
  - name: build_output_list
    description: Create a new list, adding elements based on the condition check. Ensure elements are standard Python strings.
  - name: join_list
    description: Concatenate the elements of the output list into a single space-separated string.

Transformation_Rule:
  - The first element of the input array is copied directly to the output list.
  - For each subsequent element (at index `i` > 0):
    - If the element at index `i` is '2' AND the element at index `i-1` is '2', add the string '8' to the output list.
    - Otherwise, add the original element (from index `i`) as a string to the output list.
  - Finally, join the elements of the output list with spaces.