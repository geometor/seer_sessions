Task: Sequence Transformation

Input:
  Type: List[int]
  Description: A sequence of single-digit integers.

Output:
  Type: List[int]
  Description: A transformed sequence of single-digit integers based on the input.

Objects:
  - Name: ZeroElement
    Properties:
      - value: 0
  - Name: NonZeroElement
    Properties:
      - value: {1, 2, 3, 4, 5, 6, 7, 8, 9}
  - Name: ContiguousNonZeroBlock
    Properties:
      - elements: List[NonZeroElement]
      - start_index: int
      - end_index: int
    Description: A sequence of one or more adjacent NonZeroElements.

Relationships:
  - Type: Precedes
    Arg1: Element | Block
    Arg2: Element | Block
    Description: Arg1 appears immediately before Arg2 in the sequence.
  - Type: Follows
    Arg1: Element | Block
    Arg2: Element | Block
    Description: Arg1 appears immediately after Arg2 in the sequence.
  - Type: ContainsIndex
    Arg1: Sequence
    Arg2: Index
    Description: The sequence includes the specified index.

Identified Pattern:
  - Trigger: Finding the first index 'm' such that sequence[m] is ZeroElement AND sequence[m-1] is NonZeroElement.
  - Target Block: The ContiguousNonZeroBlock ending at index 'm-1'. Let its start index be 'k'.
  - Condition: Check if 'k' > 0.
  - Action (if k > 0): The NonZeroBlock (sequence[k:m]) and the element preceding it (sequence[k-1]) shift positions. The block moves one step left, and the preceding element moves to the position immediately after the block (index m-1).
  - Action (if k == 0): The last element of the NonZeroBlock (sequence[m-1]) swaps positions with the ZeroElement immediately following it (sequence[m]).
