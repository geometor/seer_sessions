Task: Sequence Transformation

Input:
  Type: List of Integers
  Properties:
    - Contains single-digit integers (0-9)
    - Fixed length

Output:
  Type: List of Integers
  Properties:
    - Same length as input
    - Derived from input via element rearrangement

Objects:
  - Sequence: The list of integers.
  - Element: An individual integer within the sequence.
  - NonZeroElement: An element with a value > 0.
  - ZeroElement: An element with a value == 0.
  - Block: A contiguous sub-sequence of identical NonZeroElements.

Relationships:
  - Position: Index of an element within the sequence.
  - PrecedingElement: Element at index `i-1` relative to element at index `i`.
  - FollowingElement: Element at index `i+1` relative to element at index `i`.
  - FirstNonZero: The NonZeroElement with the lowest index.
  - FirstBlock: The Block containing the FirstNonZero element (if it's part of a block starting at index 0) or just the FirstNonZero element itself.
  - NextBlock: The first Block of NonZeroElements occurring after the FirstBlock.

Actions:
  - FindIndex: Locate the index of the FirstNonZero element.
  - FindBlockEnd: Determine the last index of a contiguous Block.
  - FindNextBlockStart: Determine the starting index of the NextBlock.
  - CheckValue: Verify if an element at a given index is zero.
  - Swap: Exchange the positions of two elements in the sequence.

TransformationRule:
  - Condition: Based on the index of the FirstNonZero element.
  - Case 1 (FirstNonZero at Index > 0):
    - Action: Swap the FirstNonZero element with its PrecedingElement.
  - Case 2 (FirstNonZero at Index 0):
    - Find the end index (`end_idx`) of the FirstBlock.
    - Find the start index (`next_start_idx`) of the NextBlock.
    - Check if NextBlock exists and if the element at `next_start_idx - 1` is a ZeroElement.
    - Action (if condition met): Swap the element at `end_idx` with the element at `next_start_idx - 1`.
    - Action (otherwise - although not explicitly shown in examples, implies no change or a default behavior if conditions aren't met): The sequence remains unchanged or follows a different rule not covered. Based on provided examples, the condition is always met for Case 2.
