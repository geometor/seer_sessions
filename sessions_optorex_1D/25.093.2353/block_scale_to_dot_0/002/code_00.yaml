objects:
  - name: sequence
    type: List[int] # Or numpy.ndarray
    description: A sequence of single-digit integers.
  - name: element
    type: int
    properties:
      - value: The integer value (0-9).
      - is_zero: Boolean, true if value is 0.
      - is_two: Boolean, true if value is 2.
      - is_boundary: Boolean, true if value is non-zero.
  - name: zero_segment
    type: List[int] # Represents a slice/view of the main sequence
    description: A contiguous sub-sequence containing only zeros located between two non-zero elements.
    properties:
      - left_boundary_value: The value of the non-zero element immediately preceding the segment.
      - left_boundary_index: The index of the non-zero element immediately preceding the segment.
      - right_boundary_value: The value of the non-zero element immediately following the segment.
      - right_boundary_index: The index of the non-zero element immediately following the segment.

actions:
  - name: identify_boundaries
    description: Find the indices and values of all non-zero elements in the sequence.
  - name: locate_zero_segments_between_boundaries
    description: Identify segments composed entirely of zeros located strictly between two consecutive non-zero boundaries found in the previous step.
  - name: fill_segment_conditionally
    description: Replace the zeros in an identified segment based on the values of its boundaries.
    inputs:
      - segment_indices: The start (exclusive) and end (exclusive) index of the zero segment.
      - left_boundary_value: The value of the left boundary.
      - right_boundary_value: The value of the right boundary.
    outputs:
      - Modified sequence segment.

relationships:
  - type: adjacency
    description: Non-zero elements define the start and end of potential zero segments to be filled.
  - type: conditional_filling
    description: The decision to fill a zero segment and the value used for filling depend specifically on whether exactly one of the adjacent non-zero boundaries is the digit '2'.

rules:
  - description: A zero segment situated between two non-zero numbers (`left_val` at index `i`, `right_val` at index `j`) is filled if exactly one of the boundary values is '2'.
    condition: A segment of the sequence from index `i+1` to `j-1` consists entirely of zeros.
    sub_rules:
      - condition: `left_val` == 2 and `right_val` != 2
        action: Fill the zero segment (indices `i+1` to `j-1`) with `right_val`.
      - condition: `left_val` != 2 and `right_val` == 2
        action: Fill the zero segment (indices `i+1` to `j-1`) with `left_val`.
      - condition: (`left_val` == 2 and `right_val` == 2) or (`left_val` != 2 and `right_val` != 2)
        action: Do not modify the zero segment.
  - description: Zeros not located strictly between two non-zero numbers (e.g., leading zeros, trailing zeros, zeros adjacent to only one non-zero number) are never modified.