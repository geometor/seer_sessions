task_type: sequence transformation
input_type: 1D list/array of single-digit integers
output_type: 1D list/array of single-digit integers (same size as input)
constants:
  target_element: 2
  zero_element: 0
objects:
  - name: sequence
    type: list or array of integers
  - name: target_marker
    value: 2
    description: Marks the end boundary for the potential fill operation.
  - name: fill_source
    type: non-zero integer
    description: The last non-zero integer encountered *before* the target_marker. Its value is used for filling.
    location: index strictly less than the index of the first target_marker.
  - name: fill_candidate
    value: 0
    description: The integer value eligible to be replaced by the fill_source value.
  - name: fill_zone
    type: sub-sequence
    description: The contiguous region of the sequence between the fill_source and the target_marker.
    location: indices strictly greater than the fill_source index and strictly less than the target_marker index.
properties:
  - index: Position of an element within the sequence.
  - value: The integer value of an element.
  - existence: Whether the target_marker exists in the sequence.
  - preceding_non_zero: Whether a non-zero element exists before the target_marker.
actions:
  - locate: Find the index of the first occurrence of the target_marker (2).
  - scan_backwards: From the position *before* the target_marker, find the index and value of the last non-zero element (the fill_source).
  - conditional_fill: If both the target_marker and a preceding fill_source are found, iterate through the fill_zone. Replace any fill_candidate (0) elements within this zone with the value of the fill_source.
  - copy: Create a mutable copy of the input sequence to perform modifications.
relationships:
  - boundary: The target_marker defines the right boundary (exclusive) of the fill_zone.
  - source: The last non-zero element before the target_marker defines the left boundary (exclusive) of the fill_zone and provides the value for filling.
  - transformation_trigger: The transformation (filling zeros) only occurs if a target_marker (2) exists AND a non-zero element precedes it.