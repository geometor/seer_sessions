task_type: sequence_transformation
input_structure:
  type: list
  element_type: integer
  range: 0-9
  length: 12 (observed constant)
  properties:
    - contains mostly zeros
    - contains one contiguous block of identical non-zero digits
output_structure:
  type: list
  element_type: integer
  range: 0-9
  length: 12 (same as input)
  properties:
    - contains mostly zeros
    - contains the same contiguous block of non-zero digits as the input
objects:
  - id: zero_element
    type: integer
    value: 0
    role: background/padding
  - id: non_zero_block
    type: sub-sequence
    properties:
      - consists of identical non-zero digits
      - contiguous within the main sequence
      - variable length
      - variable digit value (3, 4, 7, 8, 9 observed)
relationships:
  - input.length == output.length
  - input.non_zero_block == output.non_zero_block (content and length preserved)
actions:
  - id: find_block
    description: Locate the start and end indices of the non_zero_block in the input sequence.
  - id: calculate_new_position
    description: Determine the target start index for the non_zero_block in the output sequence.
    rule: target_start_index = input_start_index - 3
  - id: construct_output
    description: Create a new sequence of the same length as the input, initially filled with zeros.
  - id: place_block
    description: Copy the non_zero_block from the input into the output sequence at the calculated new position. Handle boundary conditions (indices < 0 are ignored, placement stops at sequence end).
transformation_rule:
  description: Shift the contiguous block of non-zero digits 3 positions to the left within the sequence, filling the original position with zeros and truncating the block if it shifts past the beginning of the sequence.
constants:
  - shift_amount: -3 (left shift by 3 positions)