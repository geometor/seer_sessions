task_description: Transform a sequence by shifting a specific block of elements.
elements:
  - type: sequence
    description: A 1-dimensional sequence (list or array) of integers.
    properties:
      - length: Constant between input and output (12 in examples).
      - composition: Contains mostly zeros and exactly one contiguous block of identical non-zero integers.
  - type: block
    description: The contiguous sub-sequence of identical non-zero integers within the input sequence.
    properties:
      - value: The non-zero integer comprising the block (e.g., 3, 5, 8, 6, 1, 2). Remains constant.
      - length: The number of elements in the block. Remains constant.
      - input_start_index: The 0-based index where the block begins in the input sequence. (Verified values: 5, 4, 9, 7, 7, 6, 3).
actions:
  - type: identify
    description: Locate the 'block' within the input 'sequence'. Determine its value, length, and input_start_index.
  - type: calculate_shift
    description: Determine the target starting position for the block in the output sequence.
    details: Subtract a fixed value of 3 from the block's input_start_index. (Verified: 5-3=2, 4-3=1, 9-3=6, 7-3=4, 7-3=4, 6-3=3, 3-3=0).
  - type: construct_output
    description: Create the output sequence.
    details:
      - Initialize an output sequence of the same length as the input, filled with zeros.
      - Place the identified 'block' (with its original value and length) into the output sequence starting at the calculated target index. Handle cases where the shifted block might partially or fully extend beyond the sequence boundaries (though not observed in these examples, the logic should implicitly handle writing only within bounds).