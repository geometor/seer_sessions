objects:
  - name: input_data
    type: bytes
    description: Raw input received by the transformation function, likely representing space-separated digits.
  - name: input_sequence
    type: List[str] # Digits represented as strings
    description: A sequence of single digits derived from decoding and parsing input_data.
  - name: output_sequence
    type: List[str] # Digits represented as strings
    description: The sequence of single digits produced as output, maintaining the same length as input_sequence.
  - name: digit_zero
    type: str
    value: '0'
    description: The digit zero represented as a string.
  - name: non_zero_digit
    type: str
    description: Any digit from '1' to '9' represented as a string.
properties:
  - name: length
    description: The number of digits in a sequence. Remains constant between input and output.
  - name: index
    description: The position of a digit within a sequence (0-based).
  - name: value
    description: The string value of a digit ('0' through '9').
actions:
  - name: decode_input
    actor: system
    input: input_data
    output: str
    description: Decode the input bytes into a string (e.g., using UTF-8).
  - name: parse_digits
    actor: system
    input: str # Decoded input string
    output: input_sequence
    description: Split the string into a list of individual digit strings.
  - name: find_first_non_zero_index
    actor: system
    input: input_sequence
    output: index (k) or -1 if not found
    description: Identify the index (k) of the first digit in the input sequence whose integer value is not 0. Returns -1 if all digits are '0'.
  - name: construct_output_sequence
    actor: system
    input: input_sequence, index (k)
    output: output_sequence
    description: Create the output sequence based on the index k. If k is -1 (all zeros), the output is identical to the input. If k >= 0, the output is input_sequence[0:k] + ['0'] + input_sequence[k:n-1], where n is the length of input_sequence.
  - name: format_output
    actor: system
    input: output_sequence
    output: str
    description: Join the digits in the output sequence into a single space-separated string.
relationships:
  - type: transformation
    from: input_sequence
    to: output_sequence
    rule: The output sequence is generated by finding the index 'k' of the first non-zero digit. If found, the sequence is reconstructed by taking elements before index k, appending '0', and then appending elements from index k up to the second-to-last element of the input. This replaces the first non-zero digit with '0', shifts subsequent elements right, and truncates the last element to maintain length. If no non-zero digit is found, the sequence remains unchanged.
  - type: length_preservation
    element: input_sequence
    related_element: output_sequence
    property: length
    description: The output sequence always has the same number of digits as the input sequence.