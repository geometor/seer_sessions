objects:
  - name: input_sequence
    type: List[int]
    description: A sequence of single digits provided as input.
  - name: output_sequence
    type: List[int]
    description: The sequence of single digits produced as output.
  - name: digit_zero
    type: int
    value: 0
    description: The digit '0'.
  - name: non_zero_digit
    type: int
    description: Any digit from 1 to 9.
properties:
  - name: length
    description: The number of digits in a sequence. Denoted as 'n'.
  - name: index
    description: The position of a digit within a sequence (0-based).
  - name: value
    description: The numerical value of a digit.
  - name: first_non_zero_index
    type: int
    description: The index 'k' of the first digit in the input sequence that is not '0'. If all digits are '0', this index is considered non-existent or -1.
actions:
  - name: find_first_non_zero_index
    actor: system
    input: input_sequence
    output: k (index) or -1
    description: Identify the index 'k' of the first digit in the input sequence that is not '0'. Return -1 if all digits are '0'.
  - name: construct_output_sequence
    actor: system
    input: input_sequence, k (index)
    output: output_sequence
    description: Create the output sequence based on the input sequence and index 'k'.
relationships:
  - type: transformation
    from: input_sequence
    to: output_sequence
    rule: The output sequence has the same length 'n' as the input. Find the index 'k' of the first non-zero digit in the input. The output sequence is formed by concatenating three parts: (1) the input digits from index 0 up to (but not including) 'k', (2) the digit '0', and (3) the input digits from index 'k' up to (but not including) the last digit (index n-1). If the input sequence contains only zeros (k = -1), the output sequence is identical to the input sequence.
  - type: equality
    property: length
    between: input_sequence, output_sequence
    condition: Always true for this transformation.