objects:
  - name: sequence
    properties:
      - type: 1D NumPy array of integers (digits 0-9)
      - ordered
      - fixed_length (observed as 12 in examples, assume consistent length)
  - name: digit
    properties:
      - value: integer (0-9)
      - position: index within the sequence (array index)
actions:
  - name: find_first_non_zero_index
    inputs:
      - sequence (NumPy array)
    outputs:
      - index: integer representing the position of the first digit > 0, or an indicator (-1 or similar) if none exists.
  - name: transform_sequence
    inputs:
      - sequence (NumPy array)
    outputs:
      - modified_sequence (NumPy array of the same length)
    logic:
      - Step 1: Find the index 'i' of the first non-zero element using `find_first_non_zero_index`.
      - Step 2: If no non-zero element is found (index is -1 or invalid), return a copy of the original sequence.
      - Step 3: If index 'i' is found:
          - Create a new sequence (output_sequence) of the same size.
          - Copy elements from input_sequence[0] to input_sequence[i-1] into output_sequence[0] to output_sequence[i-1].
          - Set output_sequence[i] = 0.
          - Copy elements from input_sequence[i] to input_sequence[n-2] into output_sequence[i+1] to output_sequence[n-1] (where 'n' is the sequence length).
          - Return output_sequence.
relationships:
  - The transformation depends on the index of the first non-zero element.
  - The output sequence length is always equal to the input sequence length.
  - The transformation involves setting the element at the first non-zero index to zero and right-shifting subsequent elements, discarding the original last element.