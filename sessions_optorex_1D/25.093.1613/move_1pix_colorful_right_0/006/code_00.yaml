task_description: "Shift a sequence of digits by inserting a zero before the first non-zero digit and removing the last digit to maintain length."
elements:
  - type: sequence
    properties:
      - content: single digits (0-9)
      - representation: space-separated string (input/output)
      - internal_representation: list of integers (for processing)
      - length: fixed (12 in examples)
      - structure: ordered
  - type: digit
    properties:
      - value: 0-9
      - significance: zero vs. non-zero determines transformation point
  - type: index
    properties:
      - role: position of the first non-zero digit
actions:
  - name: parse_input_string
    input: space-separated string sequence
    output: list of integers
  - name: find_first_non_zero_index
    input: list of integers
    output: index (integer) or indicator (-1) if all zeros
  - name: insert_zero_at_index
    target: list of integers
    position: index found by 'find_first_non_zero_index'
    condition: a non-zero digit exists (index is not -1)
  - name: remove_last_element
    target: list of integers (after insertion)
    condition: a non-zero digit exists (insertion occurred)
  - name: format_output_string
    input: list of integers
    output: space-separated string sequence
transformation_rule:
  condition: "Input is a space-separated string of digits."
  steps:
    - Parse the input string into a list of integers.
    - Find the index of the first non-zero digit in the list (`first_nz_idx`).
    - If `first_nz_idx` is -1 (all digits are zero):
        - Return the original input string.
    - If `first_nz_idx` is found (>= 0):
        - Create a mutable copy of the integer list.
        - Insert the integer `0` into the copied list at `first_nz_idx`.
        - Remove the last element from the copied list.
        - Convert the modified list back into a space-separated string.
        - Return the resulting string.
invariants:
  - The length of the output sequence (string length and number of digits) is the same as the input.
  - The relative order of the original digits is preserved, except for the insertion of '0' and the removal of the last digit.