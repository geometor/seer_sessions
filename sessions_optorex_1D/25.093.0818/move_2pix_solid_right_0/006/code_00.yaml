task_description: Shifting a single contiguous block of identical non-zero digits within a 1D sequence two positions to the right.
elements:
  - object: sequence
    properties:
      - type: 1D list or array of integers
      - contains: elements
      - length: variable, but consistent within a single task instance (e.g., 12 in examples)
  - object: element
    properties:
      - type: integer
      - value: 0 (background) or a single non-zero digit (block value)
      - position: index within the sequence
  - object: block
    properties:
      - type: contiguous sub-sequence
      - elements: all elements have the same non-zero value
      - uniqueness: only one such block exists per input sequence in the examples
      - location: defined by start_index and end_index
      - value: the specific non-zero digit comprising the block
actions:
  - action: parse_input
    actor: system
    input: input_data (format potentially variable: string, list, array)
    output: input_list (standardized list of integers)
    description: Converts the input data into a standard list of integers for processing.
  - action: identify_non_zero_block
    actor: system
    input: input_list
    output: block_properties (value, start_index, end_index)
    description: Finds the contiguous segment of the first-encountered non-zero identical digits. Returns None or indicates failure if no block is found.
  - action: shift_block
    actor: system
    input: block_properties
    parameters:
      - shift_amount: 2
      - direction: right
    output: new_block_start_index
    description: Calculates the new starting position for the block by adding the shift amount (2) to the original start index.
  - action: generate_output_list
    actor: system
    input:
      - input_sequence_length
      - original_block_properties (value, length)
      - new_block_start_index
    output: output_list (list of integers)
    description: Creates a new list of the same length as the input, initially filled with zeros, then places the identified block (using its value and length) at the calculated new starting position, respecting boundary conditions.
relationships:
  - type: transformation
    from: input_sequence
    to: output_sequence (as a list/array of integers)
    rule: The single contiguous block of identical non-zero digits in the input sequence is shifted exactly two positions to the right. The background remains zero. The output must be returned as a list or array of integers.