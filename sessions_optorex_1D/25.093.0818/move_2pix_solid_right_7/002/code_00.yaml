Input:
  type: string
  format: space-separated digits
  length: 12 (consistent)
  structure: Contains a single contiguous block of identical non-zero digits surrounded by zeros.

Output:
  type: string
  format: space-separated digits
  length: 12 (consistent)
  structure: Derived from input by shifting the non-zero block.

Objects:
  - name: digit_sequence
    source: input_string (parsed)
    type: list_or_array_of_integers
    properties:
      - length: 12

  - name: non_zero_block
    type: sub_sequence
    properties:
      - elements: identical non-zero integers
      - contiguous: true
      - source_digit: the repeated non-zero digit
      - source_start_index: the starting index in the input sequence
      - source_end_index: the ending index (inclusive) in the input sequence
      - length: (source_end_index - source_start_index + 1)

Transformation_Rule:
  action: shift_right
  target: non_zero_block
  parameter:
    shift_amount: 2
  result:
    - new_start_index: source_start_index + 2
    - new_end_index: source_end_index + 2

Output_Construction:
  process:
    1. Initialize an output sequence of length 12 with all zeros.
    2. Identify the `non_zero_block` (digit, start index, end index) in the input sequence.
    3. Calculate the target start index: `new_start_index = source_start_index + 2`.
    4. Calculate the target end index: `new_end_index = source_end_index + 2`.
    5. Iterate from `new_start_index` up to `min(new_end_index, 11)`.
    6. For each index in this range, set the value in the output sequence to `source_digit`.
  final_format: Convert the resulting integer sequence back to a space-separated string.

Constraints:
  - Input always contains exactly one non-zero block.
  - Input and output length are always 12.
  - Shift amount is always 2 to the right.