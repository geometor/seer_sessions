objects:
  - name: sequence
    type: list of integers
    description: The input and output data structure, representing a sequence of digits.
  - name: element
    type: integer
    description: An individual digit within the sequence.
  - name: non_zero_block
    type: list of integers
    description: A contiguous sub-sequence containing only non-zero elements.
properties:
  - object: element
    name: value
    type: integer
    description: The numerical value of the element (0-9).
  - object: element
    name: index
    type: integer
    description: The zero-based position of the element within the sequence.
  - object: non_zero_block
    name: start_index
    type: integer
    description: The index in the main sequence where the block begins.
  - object: non_zero_block
    name: end_index
    type: integer
    description: The index in the main sequence where the block ends.
  - object: sequence
    name: length
    type: integer
    description: The number of elements in the sequence.
relationships:
  - type: adjacency
    description: Elements can be adjacent (left neighbor, right neighbor) within the sequence.
    properties:
      - element_1: index i
      - element_2: index i+1 (right neighbor)
  - type: containment
    description: A non_zero_block is contained within the sequence.
  - type: relative_position
    description: An element can be located before, within, or after a non_zero_block.
actions:
  - name: scan
    description: Iterate through the sequence elements.
  - name: find_first_non_zero_block
    description: Locate the start and end indices of the first contiguous block of non-zero elements in the sequence. Returns special values (e.g., -1) if no such block exists.
  - name: find_first_pattern_after_block
    description: Starting from the index immediately following the end of the identified non_zero_block, find the index 'i' of the first element that is 0 AND whose immediate right neighbor (i+1) is non-zero. Returns a special value if not found.
  - name: move_element
    description: Remove an element from one index and insert it at another index, shifting intermediate elements. Specifically, remove the '0' found by `find_first_pattern_after_block` from its index 'i' and insert it at the `start_index` of the `non_zero_block`.
  - name: no_change
    description: The sequence remains unaltered if either no non_zero_block is found, or if no qualifying '0 followed by non-zero' pattern is found after the block.