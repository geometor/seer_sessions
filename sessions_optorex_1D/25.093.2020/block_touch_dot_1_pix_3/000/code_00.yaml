Task: Shift a block relative to a fixed point '2'.

Objects:
  - name: Sequence
    type: List[int]
    length: 12
    elements: Digits 0-9
  - name: Pivot
    type: Digit
    value: 2
    property: Stationary position
  - name: Block
    type: Contiguous Subsequence
    elements: Digits 1, 3, 4, 5, 6, 7, 8, 9 (non-zero, non-pivot)
    property: Mobile
  - name: Space
    type: Digit
    value: 0
    property: Swappable with Block

Relationships:
  - type: Relative Position
    object1: Block
    object2: Pivot
    states: [Left Of, Right Of]
  - type: Adjacency
    object1: Block
    object2: Space
    states: [Space follows Block, Space precedes Block]

Actions:
  - name: Identify Pivot Position
    input: Sequence
    output: index_pivot
  - name: Identify Blocks
    input: Sequence
    output: List[Block_info(start_index, end_index, content)]
  - name: Determine Shift Direction
    input: Block_info, index_pivot
    output: Direction (Left, Right, None)
    condition: |
      if block.end_index < index_pivot: return Right
      if block.start_index > index_pivot: return Left
      else: return None
  - name: Perform Shift and Swap
    input: Sequence, Block_info, Direction
    output: Modified Sequence
    condition: |
      Requires an adjacent '0' in the direction opposite the shift.
      - If Direction is Right and Sequence[block.end_index + 1] == 0:
          Swap Block(start:end) with Space(end+1). Block moves to start+1:end+1, Space moves to start.
      - If Direction is Left and Sequence[block.start_index - 1] == 0:
          Swap Block(start:end) with Space(start-1). Block moves to start-1:end-1, Space moves to end.
    assumption: Only one block shifts per task instance based on examples.