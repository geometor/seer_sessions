Objects:
  - name: Sequence
    type: List[Integer]
    properties:
      - length: 12
  - name: Element
    type: Integer
    properties:
      - value
      - position (index)

Identified_Numbers:
  - trigger_value_1: 0
  - trigger_value_2: 2

Key_Positions:
  - name: penultimate
    index: n-2  # where n is sequence length (10 for n=12)
  - name: ultimate
    index: n-1  # (11 for n=12)
  - name: antepenultimate
    index: n-3  # (9 for n=12)

Actions:
  - name: Check_Condition_1
    description: Verify if the penultimate element is 0 and the ultimate element is 2.
    inputs:
      - Sequence[penultimate]
      - Sequence[ultimate]
    condition: Sequence[penultimate] == 0 and Sequence[ultimate] == 2
  - name: Check_Condition_2
    description: Verify if the antepenultimate element is 2 and the penultimate element is 0.
    inputs:
      - Sequence[antepenultimate]
      - Sequence[penultimate]
    condition: Sequence[antepenultimate] == 2 and Sequence[penultimate] == 0
  - name: Move_To_Start
    description: Remove the penultimate element (0) and insert it at the beginning (index 0).
    target: Element at penultimate position
  - name: Move_To_End
    description: Remove the penultimate element (0) and append it to the end.
    target: Element at penultimate position
  - name: No_Change
    description: Keep the sequence as is.

Relationships:
  - Condition_1 triggers Move_To_Start.
  - Condition_2 triggers Move_To_End.
  - If neither Condition_1 nor Condition_2 is met, No_Change occurs.