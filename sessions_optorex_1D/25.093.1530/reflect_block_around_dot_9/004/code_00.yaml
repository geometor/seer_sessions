task_description: Reflect non-zero elements across a fixed pivot within a sequence.
input_format: A string containing space-separated single-digit integers.
output_format: A string containing space-separated single-digit integers, representing the transformed sequence.
constraints:
  - The input sequence has a fixed length (12 in the examples).
  - The integer '2' appears exactly once in the input sequence.
  - Input elements are single digits (0-9).
objects:
  - name: sequence
    type: List[int]
    description: The list of integers derived from the input/output string. Fixed length.
  - name: pivot_element
    type: int
    value: 2
    description: The specific integer value used as the center point for reflection. Its position remains unchanged.
  - name: movable_element
    type: int
    description: Any integer in the sequence that is not the pivot_element (2) and not the placeholder_element (0). These elements are subject to relocation.
  - name: placeholder_element
    type: int
    value: 0
    description: Represents empty or background positions in the sequence. Fills positions not occupied by the pivot or reflected movable elements in the output.
properties:
  - name: position
    type: int
    description: The zero-based index of an element within the sequence.
  - name: pivot_position
    type: int
    description: The index of the pivot_element (2) in the input sequence. This index is invariant between input and output.
relationships:
  - type: reflection
    description: >
      The output position of a movable element is determined by reflecting its
      input position across the pivot_position.
    rule: >
      If a movable_element is at `input_position` (i) and the pivot_element is
      at `pivot_position` (p), its `output_position` (j) is calculated as
      `j = 2 * p - i`.
    condition: The calculated `output_position` must be within the valid index range of the sequence [0, length-1]. Movable elements whose reflected position falls outside this range are omitted from the output (effectively replaced by the placeholder_element).
  - type: invariance
    description: The pivot_element (2) always occupies the same position in the output sequence as it did in the input sequence.
actions:
  - name: parse_input
    input: input_string
    output: sequence (List[int])
    description: Convert the space-separated input string into a list of integers.
  - name: find_pivot_position
    input: sequence
    output: pivot_position (int)
    description: Locate the index of the pivot_element (2) in the input sequence.
  - name: initialize_output
    input: sequence_length
    output: output_sequence (List[int])
    description: Create a new list of the same length, filled with placeholder_element (0).
  - name: place_pivot
    input: output_sequence, pivot_element, pivot_position
    output: modified_output_sequence
    description: Place the pivot_element (2) into the output_sequence at the pivot_position.
  - name: reflect_elements
    input: input_sequence, output_sequence, pivot_position
    output: final_output_sequence
    description: >
      Iterate through the input_sequence. For each movable_element at input_position `i`,
      calculate its reflected_position `j = 2 * pivot_position - i`.
      If `j` is within the sequence bounds [0, length-1], place the movable_element
      into the output_sequence at index `j`.
  - name: format_output
    input: final_output_sequence (List[int])
    output: output_string
    description: Convert the final list of integers back into a space-separated string.