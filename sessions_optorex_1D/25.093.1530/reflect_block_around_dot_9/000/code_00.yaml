task: Reflect non-zero elements (excluding pivot 2) across the pivot's position within a fixed-length list.
input_format: A string of space-separated single-digit integers.
output_format: A string of space-separated single-digit integers.
constraints:
  - List length is fixed (12 in examples).
  - The digit '2' appears exactly once and acts as the pivot.
objects:
  - name: sequence
    type: List[int]
    description: Represents the input and output data structure.
  - name: pivot_element
    type: int
    value: 2
    description: The element around which the reflection occurs. Remains fixed in position.
  - name: movable_element
    type: int
    description: Any non-zero integer other than the pivot (2). These elements change position.
  - name: placeholder_element
    type: int
    value: 0
    description: Represents empty space in the sequence. Fills positions not occupied by the pivot or reflected movable elements.
properties:
  - name: position
    type: int
    description: The index of an element within the sequence (0-based).
  - name: pivot_position
    type: int
    description: The index of the pivot element (2) in the input sequence.
  - name: distance_from_pivot
    type: int
    description: The absolute difference between an element's position and the pivot_position.
actions:
  - name: find_pivot
    description: Locate the index of the pivot element (2) in the input sequence.
  - name: identify_movable
    description: Find all non-zero elements and their positions, excluding the pivot.
  - name: calculate_reflection
    input: element_position, pivot_position
    output: reflected_position
    description: Determine the new position for a movable element by reflecting its original position across the pivot_position. If original position is `i` and pivot is at `p`, the new position is `p + (p - i) = 2*p - i`. Alternatively, if distance is `d = abs(i-p)`, new position is `p + d` if `i < p`, and `p - d` if `i > p`.
  - name: construct_output
    description: Create a new sequence initialized with placeholders (0), place the pivot element at its original position, and place each movable element at its calculated reflected position.
relationships:
  - type: reflection
    description: Each movable element's position in the output is a reflection of its input position across the pivot position.
    element1: movable_element (input position `i`)
    element2: pivot_element (position `p`)
    element3: movable_element (output position `p + (p - i)`)
  - type: invariance
    description: The pivot element (2) maintains its original position in the output sequence.
    element: pivot_element
  - type: preservation
    description: The values of movable elements are preserved during the transformation.