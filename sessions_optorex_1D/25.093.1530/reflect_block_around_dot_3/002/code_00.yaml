Task: Rearrange elements in a sequence around a pivot, preserving relative spacing.
Input:
  Type: List or 1D NumPy array of integers (single digits).
  Length: Variable (consistent between input/output pairs).
  Contains:
    - Zeros: Multiple instances, acting as spacers.
    - Pivot: Exactly one instance of the integer 2.
    - Group: One contiguous block of identical non-zero integers (X), where X is not 2.
Output:
  Type: List or 1D NumPy array of integers (single digits).
  Length: Same as input.
  Contains:
    - Zeros: Fill remaining space.
    - Pivot: Exactly one instance of the integer 2.
    - Group: The same contiguous block of integer X as in the input.
Objects:
  - Pivot Element:
    Value: 2
    Properties: Unique in the sequence.
    Role: Static reference point; its index remains unchanged.
  - Group Element Block:
    Value: X (where X != 0 and X != 2)
    Properties: Contiguous block of one or more identical digits X. Unique block type in the sequence.
    Role: Mobile element; its position changes relative to the Pivot.
  - Gap Element:
    Value: 0
    Properties: Can occur between Pivot and Group. The number of zeros in this specific gap is significant.
    Role: Defines spacing that is preserved during transformation.
  - Filler Element:
    Value: 0
    Role: Occupies all positions not taken by the Pivot or the moved Group block.
Relationships:
  - Pivot Position: Index `p_idx` is constant from input to output.
  - Group Position (Input): Defined by start index `g_start`, end index `g_end`, length `g_len`. Position relative to pivot (before or after).
  - Gap Size (Input): Number of zeros strictly between the Pivot and the Group.
    - If Group before Pivot: `gap = p_idx - g_end - 1`
    - If Group after Pivot: `gap = g_start - p_idx - 1`
  - Group Position (Output): Determined by swapping sides relative to the pivot and preserving the gap size.
    - If Group was *before* Pivot in input: New start index = `p_idx + 1 + gap`
    - If Group was *after* Pivot in input: New start index = `p_idx - g_len - gap`
Actions:
  1. Identify the input sequence (potentially a NumPy array).
  2. Create an output sequence of the same length, initialized with zeros.
  3. Find the index (`p_idx`) of the Pivot Element (2).
  4. Place the Pivot Element (2) in the output sequence at `p_idx`.
  5. Identify the Group Element block: its value (`X`), length (`g_len`), start index (`g_start`), and end index (`g_end`) in the input.
  6. Determine if the Group block is before (`g_end < p_idx`) or after (`g_start > p_idx`) the Pivot in the input.
  7. Calculate the `gap` size (number of zeros) between the Pivot and the Group block in the input.
  8. Calculate the target starting index (`output_start`) for the Group block in the output sequence based on whether it was originally before or after the pivot, preserving the `gap`.
     - If before: `output_start = p_idx + 1 + gap`
     - If after: `output_start = p_idx - g_len - gap`
  9. Place the Group Element block (value `X`, length `g_len`) into the output sequence starting at `output_start`.
  10. Return the constructed output sequence.