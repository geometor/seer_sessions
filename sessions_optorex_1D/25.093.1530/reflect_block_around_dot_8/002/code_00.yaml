objects:
  - name: sequence
    type: numpy.ndarray
    properties:
      - length: 12
      - elements: integers (0-9)
      - dtype: integer
  - name: element
    type: integer
    properties:
      - value: 0-9
      - index: position in the sequence (0-11)
  - name: pivot_element
    type: element
    properties:
      - value: 2
      - role: center of reflection
  - name: reflected_element
    type: element
    properties:
      - value: non-zero integer (excluding 2)
      - role: element whose position is transformed
  - name: background_element
    type: element
    properties:
      - value: 0
      - role: placeholder / empty space

actions:
  - name: find_pivot_index
    description: Locate the index of the element with value 2 in the input NumPy array.
    inputs: input_sequence (numpy.ndarray)
    outputs: pivot_index (integer)
    method: Use numpy.where(input_sequence == 2)[0][0]
  - name: reflect_position
    description: Calculate the target index for a reflected_element based on its original index and the pivot_index.
    inputs:
      - element_index (integer)
      - pivot_index (integer)
    outputs: new_index (integer)
    formula: new_index = (2 * pivot_index) - element_index
  - name: construct_output
    description: Build the output NumPy array by placing elements in their final positions.
    inputs:
      - input_sequence (numpy.ndarray)
      - pivot_index (integer)
    outputs: output_sequence (numpy.ndarray)

relationships:
  - type: positional_reflection
    description: The output index of a reflected_element is determined by mirroring its distance from the pivot_element across the pivot_index.
    between: [reflected_element, pivot_element]
  - type: index_invariance
    description: The pivot_element retains its original index in the output sequence.
    between: [pivot_element (input), pivot_element (output)]
  - type: value_invariance
    description: The values of all non-zero elements remain unchanged during the transformation.
    between: [input_sequence, output_sequence]