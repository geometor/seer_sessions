task_description: Transform a sequence by swapping the relative position of a 'target block' with respect to a 'pivot' element (2), maintaining the pivot's absolute position and the count of zeros ('gap') between the pivot and the block.

elements:
  - object: sequence
    properties:
      - type: list of integers
      - length: fixed (e.g., 12 in examples)
      - contains: zeros, one pivot, one target block
  - object: pivot
    properties:
      - value: 2
      - count: 1 per sequence
      - role: positional reference point
      - state: position remains unchanged in output
  - object: target_block
    properties:
      - type: contiguous subsequence
      - content: identical integers
      - condition: value is non-zero and not equal to pivot value (2)
      - length: variable (>= 1)
      - count: 1 per sequence
      - role: element to be repositioned relative to pivot
  - object: zero
    properties:
      - value: 0
      - role: filler/spacer, defines the gap
  - object: gap
    properties:
      - definition: number of zeros strictly located between the pivot and the target_block in the input sequence
      - role: conserved quantity
      - state: the count of zeros between pivot and block is the same in input and output

relationships:
  - type: relative_position
    between: [target_block, pivot]
    states: [target_block_left_of_pivot, target_block_right_of_pivot]
    transformation: state is flipped in the output (left -> right, right -> left)
  - type: absolute_position
    of: pivot
    state: constant between input and output

actions:
  - action: identify_pivot
    input: input_sequence
    output: pivot_value, pivot_index
  - action: identify_target_block
    input: input_sequence, pivot_value
    output: block_value, block_start_index, block_end_index, block_length
  - action: determine_initial_relative_position
    input: block_end_index, pivot_index
    output: is_left (boolean)
  - action: calculate_gap_size
    input: input_sequence, block_start_index, block_end_index, pivot_index
    output: gap (integer count of zeros)
  - action: initialize_output
    details: Create a new sequence of the same length as input, filled with zeros.
  - action: place_pivot_in_output
    input: output_sequence, pivot_value, pivot_index
    effect: Sets element at pivot_index in output_sequence to pivot_value.
  - action: calculate_new_block_position
    input: pivot_index, gap, block_length, is_left (initial relative position)
    output: new_block_start_index
    logic: |
      if is_left:
        new_block_start_index = pivot_index + 1 + gap
      else: # was right
        new_block_end_index = pivot_index - 1 - gap
        new_block_start_index = new_block_end_index - block_length + 1
  - action: place_target_block_in_output
    input: output_sequence, block_value, new_block_start_index, block_length
    effect: Fills the output_sequence with block_value from new_block_start_index for block_length elements.
    precondition: Ensure calculated indices are within sequence bounds.