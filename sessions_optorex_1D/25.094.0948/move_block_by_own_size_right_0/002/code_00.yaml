Input:
  type: sequence (potentially numpy array)
  element_type: integer
  length: 12
  contains:
    - background: zeros (value 0) representing empty space
    - object:
        type: contiguous block
        properties:
          value: a single non-zero integer (consistent within the block)
          length: variable (number of elements in the block)
          start_index: index of the first element of the block
          end_index: index of the last element of the block
        constraints: Only one such block exists in the input.
Output:
  type: sequence (matching input type)
  element_type: integer
  length: 12
  structure: derived from input by applying a transformation
Transformation:
  action: shift_right
  target: object (the contiguous block of non-zero integers)
  parameter: shift_distance
  rule: shift_distance equals the length of the object
  effect:
    - The object is moved to a new position within the sequence.
    - The new start_index = old start_index + object length.
    - The original positions occupied by the object become zeros.
Constraints:
  - The sequence length remains 12.
  - The shift operation occurs within the bounds of the sequence; elements shifted beyond the last index are discarded (no wrap-around).