task_elements:
  - object: sequence
    description: A fixed-size (length 12) 1D grid represented as a list or array of integers.
    properties:
      - length: 12
      - type: list or numpy array of integers
      - structure: Contains mostly zeros and one contiguous block of identical non-zero integers.
  - object: block
    description: The single contiguous sub-sequence within the main sequence consisting of identical non-zero integers.
    properties:
      - value: The non-zero integer value (e.g., 6, 4, 2, 8, 3). Is consistent across all examples.
      - length: The number of elements in the block (variable, e.g., 1, 2, 3, 4).
      - start_index_input: The 0-based index of the first element of the block in the input sequence.
      - end_index_input: The 0-based index of the last element of the block in the input sequence (start_index_input + length - 1).
      - start_index_output: The 0-based index of the first element of the block in the output sequence.
  - object: zero
    description: The integer 0, representing the background or empty space in the sequence.
relationships:
  - type: spatial
    description: The block is embedded within the sequence, surrounded by zeros.
  - type: transformation
    description: The block's position shifts from the input sequence to the output sequence. The block itself (value and length) remains unchanged.
  - type: dependency
    description: The amount of the block's rightward shift is determined by its length.
actions:
  - action: identify_block
    description: Locate the unique contiguous block of identical non-zero integers in the input sequence. Determine its value, starting index, and length.
  - action: calculate_shift_distance
    description: Determine the distance the block needs to move to the right. This distance is strictly equal to the length of the block identified in the previous step.
  - action: calculate_new_position
    description: Calculate the starting index for the block in the output sequence by adding the shift distance (block length) to the block's starting index in the input sequence. (new_start = input_start + block_length)
  - action: construct_output
    description: Create a new sequence of the same fixed size (12) initialized with zeros. Place the identified block (using its original value and length) into this new sequence, starting at the calculated new position.