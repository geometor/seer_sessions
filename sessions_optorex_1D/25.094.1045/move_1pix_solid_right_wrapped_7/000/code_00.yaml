Task: Transform a sequence of integers based on the first zero/non-zero boundary.

Objects:
  - name: Sequence
    type: List[int]
    description: The input and output data structure.
  - name: Element
    type: int
    description: Individual integer within the sequence.
    properties:
      - value: The integer value (e.g., 0, 4, 6, 7, 8).
      - type: derived property - either 'zero' or 'non-zero'.
      - index: Position within the sequence.
  - name: Zero Block
    type: List[Element]
    description: A contiguous sub-sequence of zero elements.
    properties:
      - start_index: Index of the first zero in the block.
      - end_index: Index of the last zero in the block.
  - name: Boundary
    type: Tuple[int, int]
    description: The pair of adjacent indices (i, i+1) where the zero/non-zero status changes between elements.

Relationships:
  - Adjacency: Elements at index `i` and `i+1` are adjacent.
  - Boundary Type:
    - Type 1: Non-zero element at index `i` followed by a zero element at index `i+1`.
    - Type 2: Zero element at index `i` followed by a non-zero element at index `i+1`.

Actions:
  - Scan: Iterate through the sequence from left to right (index `i` from 0 to length-2).
  - Find Boundary: Identify the first index `i` where `sequence[i]` and `sequence[i+1]` differ in their zero/non-zero status.
  - Identify Block Start (for Type 2 Boundary): Find the starting index `k` of the contiguous zero block ending at index `i`.
  - Swap: Exchange the values of two elements at specified indices based on the identified boundary type.
