task_description: Apply a transformation independently to each row of an input grid.
input_type: 2D grid of integers (list of lists or 2D NumPy array).
output_type: 2D grid of integers with the same dimensions as the input.
row_transformation:
  description: Shift the first contiguous block of non-zero numbers within a row to the left.
  elements:
    - name: row
      type: sequence of integers (one row of the grid)
      properties:
        - contains zeros
        - may contain a single contiguous block of non-zero numbers
    - name: non_zero_block
      type: sub-sequence of integers
      properties:
        - elements: all non-zero
        - contiguous: appears as a single block in the row
        - location: defined by start_index and end_index within the row
        - length: the number of elements in the block
  action:
    - name: shift_left_within_row
      target: non_zero_block
      parameter: shift_amount
      constraint: shift_amount is equal to the length of the non_zero_block
  processing_steps_per_row:
    - step: 1. Identify the first contiguous block of non-zero numbers in the row.
    - step: 2. Determine the start index and the length of this block. If no block exists, the row remains unchanged (or filled with zeros).
    - step: 3. Calculate the shift amount, which is equal to the length of the block.
    - step: 4. Calculate the new start index for the block by subtracting the shift amount from the original start index (clamped at 0).
    - step: 5. Construct the output row (same length), initially filled with zeros.
    - step: 6. Place the identified non-zero block into the output row starting at the calculated new start index.
grid_transformation:
  - step: 1. Initialize an empty output grid.
  - step: 2. For each row in the input grid:
      - step: 2a. Apply the `row_transformation` described above to the current row.
      - step: 2b. Append the resulting transformed row to the output grid.
  - step: 3. Return the completed output grid.