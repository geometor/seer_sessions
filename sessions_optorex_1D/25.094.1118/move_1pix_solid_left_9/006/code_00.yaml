Data:
  Type: Sequence of integers (List or 1D NumPy array)
  Structure: Linear array/list
  Elements: Single digits (0-9)
  Length: Variable, fixed within a single task instance (e.g., 12 in examples)

Input_Constraint:
  Contains_at_most_one_block: True # Assumption based on examples
  Block_Properties:
    - Type: Contiguous subsequence
    - Element_Value: Identical non-zero integer (e.g., 7, 5, 9, 8)
    - Background: Padded with zeros (0)

Objects:
  - Name: Input Sequence
    Type: List or 1D NumPy array of integers
  - Name: Zero Padding
    Properties:
      - Value: 0
      - Role: Background filler
  - Name: Non-Zero Block
    Properties:
      - Element_Value: A single digit from 1-9
      - Contiguity: Forms a single continuous segment
      - Homogeneity: All elements within the block are identical
      - Location: Defined by start and end indices
      - Existence: May not exist, or may not meet contiguity/homogeneity criteria
  - Name: Output Sequence
    Type: List or 1D NumPy array of integers
    Properties:
      - Same length as Input Sequence
      - Contains the transformed Non-Zero Block or only Zero Padding

Relationships:
  - Non-Zero Block (if valid) is found within the Input Sequence.
  - Output Sequence is derived from Input Sequence based on the Non-Zero Block's transformation.

Actions:
  - Find_Block:
    - Input: Input Sequence
    - Process: Identify indices and value of a single, contiguous, homogeneous block of non-zero digits.
    - Output: (start_index, end_index, value) or (None, None, None)
  - Create_Output:
    - Input: Length of Input Sequence
    - Process: Initialize a sequence of the same length with zeros.
  - Shift_Block:
    - Input: Output Sequence, block details (start, end, value)
    - Condition: A valid block was found AND start_index > 0.
    - Process: Copy the `value` into the Output Sequence from `start_index - 1` to `end_index - 1`.
    - Output: Modified Output Sequence.

Transformation_Rule:
  - If a single, contiguous block of identical non-zero digits is found starting at index `S > 0` and ending just before index `E`, the output sequence will have the same block shifted one position to the left (from `S-1` to `E-1`), with all other positions being zero.
  - If no such block is found, or if the block starts at index 0, the output sequence will consist entirely of zeros.