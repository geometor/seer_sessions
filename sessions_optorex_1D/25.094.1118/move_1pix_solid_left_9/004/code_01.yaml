Data:
  Type: Sequence (1D Array/List) of integers
  Structure: Linear
  Elements: Single digits (0-9)
  Length: Fixed (e.g., 12 in examples)
  Constraint: Contains at most one contiguous block of identical non-zero digits. The block is surrounded by zeros.

Objects:
  - Name: ZeroPadding
    Properties:
      - Value: 0
      - Role: Background filler
  - Name: NonZeroBlock
    Properties:
      - Value: A single non-zero digit (e.g., 7, 5, 9, 8)
      - Homogeneity: All elements within the block have the same non-zero value.
      - Contiguity: Elements form an unbroken sequence.
      - Uniqueness: Assumed to be the only such block in the sequence.
      - Position: Defined by start (inclusive) and end (exclusive) indices.
      - Constraint: Block start index is greater than 0 in inputs where a shift occurs.

Actions:
  - Identification: Locate the start index, end index, and value of the NonZeroBlock.
  - Condition Check: Verify that the NonZeroBlock exists and its start index is greater than 0.
  - Transformation (Shift Left): Create a new sequence filled with zeros. Place the identified NonZeroBlock into the new sequence, starting at an index decremented by one (original start index - 1).
  - Output Generation: Return the newly created sequence.

Edge Cases (Inferred/Potential):
  - Input contains all zeros: Output should be all zeros. (Handled by `find_non_zero_block_indices` returning None).
  - NonZeroBlock starts at index 0: Transformation (left shift) is not possible according to the observed pattern. The current code produces all zeros in this case, which might need clarification based on requirements outside the examples.
  - Multiple blocks or non-contiguous non-zero elements: Assumed not to occur based on examples. The `find_non_zero_block_indices` function handles this by returning None.