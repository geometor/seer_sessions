objects:
  - name: input_sequence
    type: List[int]
    properties:
      - contains only 0s and 2s
  - name: output_sequence
    type: List[int]
    properties:
      - contains only 0s, 2s, and 8s
      - same length as input_sequence
  - name: group_of_twos
    type: concept
    description: A contiguous sub-sequence within the input_sequence containing only the number 2.
    properties:
      - start_index: The index in the input_sequence where the group begins.
      - length: The number of 2s in the group.

relationships:
  - type: mapping
    from: input_sequence element at index i
    to: output_sequence element at index i
  - type: dependency
    element: output value at index i
    depends_on:
      - input value at index i
      - input value at index i-1 (if i > 0)
      - membership of input[i] in a group_of_twos
      - properties of the group_of_twos (start_index, length)

actions:
  - name: identify_groups
    description: Scan the input_sequence to find all consecutive groups_of_twos.
  - name: transform_elements
    description: Iterate through the input_sequence and determine the corresponding output value based on transformation rules.
    rules:
      - If input[i] is 0, output[i] is 0.
      - If input[i] is 2, apply group-based rules:
        - Rule 1: The first '2' of any group_of_twos is transformed to '8'.
        - Rule 2: The second '2' of a group_of_twos is transformed to '8' ONLY IF the group's length is 3 or more AND the group does not start at the beginning of the input_sequence (start_index > 0). Otherwise, it remains '2'.
        - Rule 3: Any subsequent '2's (third, fourth, etc.) in a group_of_twos remain '2'.
