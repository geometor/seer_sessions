objects:
  - name: input_sequence
    type: List[int]
    properties:
      - contains only 0s and 2s
      - fixed length (observed as 12 in examples)
  - name: output_sequence
    type: List[int]
    properties:
      - contains only 0s, 2s, and 8s
      - same length as input_sequence
  - name: group_of_twos
    type: concept
    description: A contiguous sub-sequence within the input_sequence containing only the number 2.
    properties:
      - start_index: The index in the input_sequence where the group begins.
      - length: The number of 2s in the group.

relationships:
  - type: mapping
    from: input_sequence element at index i
    to: output_sequence element at index i
  - type: dependency
    element: output value at index i
    depends_on:
      - input value at index i
      - properties of the group_of_twos that input[i] belongs to (if input[i] is 2)

actions:
  - name: scan_and_transform
    description: Iterate through the input_sequence, identify elements and groups, and build the output_sequence based on transformation rules.
    rules:
      - Rule 1: If the element is 0, append 0 to the output.
      - Rule 2: If the element is 2, identify the full extent (length) of the consecutive group of 2s it belongs to, starting from the current position.
        - Append 8 to the output for the first 2 in the group.
        - If the group length is 2 or more:
          - Check if the group length is 4 or more.
          - If yes (length >= 4), append 8 for the second 2.
          - If no (length < 4), append 2 for the second 2.
        - If the group length is 3 or more:
          - For each subsequent 2 (from the third to the end of the group), append 2.
        - Advance the scan position past the processed group.