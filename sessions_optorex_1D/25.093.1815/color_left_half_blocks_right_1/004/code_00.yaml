task_type: sequence_transformation
input_format: linear sequence of space-separated integers (likely requiring parsing into a list/array)
output_format: linear sequence of space-separated integers
input_elements:
  - type: integer
    values: [0, 2]
    role:
      0: delimiter
      2: data_value
output_elements:
  - type: integer
    values: [0, 2, 8]
    role:
      0: preserved_delimiter
      2: preserved_data_value
      8: transformed_data_value
structure:
  - linear_sequence
invariants:
  - sequence_length
  - value_0_preserved: Elements with value 0 remain unchanged in value and position.
relationships:
  - type: contiguity
    description: Transformation applies to contiguous blocks of '2's.
  - type: boundary_condition
    description: Value '0' and sequence start/end act as boundaries defining blocks of '2's.
actions:
  - parse_input: Convert input string representation into a 1D list/array of integers.
  - identify_blocks: Iterate through the sequence, locating contiguous segments containing only the value '2'. Segments are delimited by '0's or sequence boundaries.
  - calculate_length: Determine the length (L) of each identified block of '2's.
  - calculate_modification_count: For each block, compute N = floor(L / 2).
  - modify_elements: For each block starting at index `start_idx`, change the values at indices `start_idx` through `start_idx + N - 1` from '2' to '8' in a copy of the sequence.
  - format_output: Convert the resulting list/array back to the required output format (space-separated string).