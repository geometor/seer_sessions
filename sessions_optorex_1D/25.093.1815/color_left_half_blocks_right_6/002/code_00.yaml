InputType: Sequence of Integers (List or NumPy Array)
OutputType: Sequence of Integers (List or NumPy Array)
Elements:
  - Digit: 0
    Properties:
      - Immutable: Always remains 0 in the output.
      - Boundary: Marks the end of a preceding block of 2s and allows the start of a new qualifying block of 2s.
  - Digit: 2
    Properties:
      - Potentially Mutable: Can change to 8 based on context.
      - Context: Transformation depends on position within a consecutive block of 2s and the total length of that block.
      - Block Definition: A consecutive run of one or more 2s.
      - Qualifying Block: A block of 2s that starts either at the beginning of the sequence or immediately following a 0.
  - Digit: 8
    Properties:
      - Output Only: Does not appear in the input.
      - Derived: Results from the transformation of a 2 based on specific rules.
TransformationRule:
  Action: Iterate through the input sequence.
  Conditions:
    - If element is 0: Copy to output.
    - If element is 2:
        - Check if it's the start of a Qualifying Block (index 0 or previous element is 0).
        - If YES (start of Qualifying Block):
            - Determine `block_length` (number of consecutive 2s starting here).
            - Process the block:
                - First 2 (position 0) -> 8
                - Second 2 (position 1) -> 8 if `block_length` >= 4, else 2
                - Third 2 (position 2) -> 8 if `block_length` >= 6, else 2
                - Subsequent 2s (position 3+) -> 2
            - Append transformed block elements to output.
            - Advance iteration index past the processed block.
        - If NO (not the start of a Qualifying Block, i.e., preceded by a 2):
            - Copy 2 to output.
            - Advance iteration index by 1.