Objects:
  - Input_Sequence:
      Type: List[int]
      Properties:
        - elements: Consists of digits 0 and 2.
        - length: Variable.
  - Output_Sequence:
      Type: List[int]
      Properties:
        - elements: Consists of digits 0, 2, and 8.
        - length: Same as Input_Sequence.
  - Digit:
      Type: int
      Values: [0, 2, 8]
  - Block_of_Twos:
      Type: Subsequence
      Properties:
        - elements: Contains only the digit 2.
        - contiguous: Elements are adjacent in the Input_Sequence.
        - length: (L) Number of 2s in the block.
        - preceding_element: The element in the Input_Sequence immediately before the block (or boundary if at the start).

Relationships:
  - Output_Sequence is derived from Input_Sequence.
  - A Digit '2' in the Input_Sequence may become '8' in the Output_Sequence.
  - The transformation of a '2' depends on its membership in a Block_of_Twos and the block's preceding_element.

Actions:
  - Iterate through the Input_Sequence.
  - Identify contiguous Blocks_of_Twos.
  - For each Block_of_Twos:
      - Determine its length (L).
      - Determine its preceding_element (or boundary condition).
      - If preceded_element is 0 or boundary:
          - Calculate the number of elements to change: N = floor(L / 2).
          - Change the first N elements of the block from 2 to 8 in the Output_Sequence.
  - Copy all '0's directly from Input_Sequence to Output_Sequence.
  - Copy '2's that are not part of the modified initial segment of a block directly to the Output_Sequence.