Task: Sequence Transformation

Input:
  Type: Sequence
  Elements:
    Type: Integer
    Values: [0, 2]

Output:
  Type: Sequence
  Elements:
    Type: Integer
    Values: [0, 2, 8]
  Constraint: Same length as input sequence.

Objects:
  - Name: Number
    Properties:
      - Value: (0, 2, 8)
      - Position: Index in the sequence
  - Name: Block
    Definition: A contiguous subsequence of identical numbers (specifically '2' in this task).
    Properties:
      - Start_Index: Position of the first element of the block.
      - End_Index: Position of the last element of the block.
      - Length: Number of elements in the block.
      - Value: The number constituting the block (always '2').

Relationships:
  - Name: Contiguity
    Applies To: Numbers in a sequence.
    Definition: Numbers are adjacent in the sequence. Used to define Blocks.
  - Name: Bounded By
    Applies To: Blocks
    Definition: A block is bounded by numbers different from its constituent value (i.e., '0') or by the sequence boundaries (start/end).

Action:
  - Name: Transform
    Actor: Rule Engine
    Object: Number (Value=2)
    Condition: Based on position within a Block and Block Length.
    Result: Number Value changes from 2 to 8.
    Rule:
      1. Identify all Blocks of value '2'.
      2. For each Block:
         - Get Block Length (L).
         - If L >= 4:
           - Change Number at Block.Start_Index from 2 to 8.
           - Change Number at Block.Start_Index + 1 from 2 to 8.
         - Else (L < 4):
           - Change Number at Block.Start_Index from 2 to 8.

Default Behavior:
  - Numbers with Value=0 remain unchanged.
  - Numbers with Value=2 not meeting the Transform conditions remain unchanged.