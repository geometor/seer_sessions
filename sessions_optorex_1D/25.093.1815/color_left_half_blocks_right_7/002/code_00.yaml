task_description: "Transform a sequence of integers based on contiguous blocks of the value 2."
elements:
  - object: sequence
    properties:
      - type: list or array of integers
      - allowed_input_values: [0, 2]
      - allowed_output_values: [0, 2, 8]
  - object: value_0
    properties:
      - value: 0
    actions:
      - remains unchanged in the output.
  - object: value_2
    properties:
      - value: 2
    actions:
      - may be transformed to 8 based on context.
      - may remain 2 based on context.
  - object: block_of_2s
    properties:
      - definition: A contiguous subsequence consisting only of the value 2.
      - length: k (number of 2s in the block)
    relationships:
      - separated by value 0 or sequence boundaries.
transformation_rule:
  condition: Applies to blocks of consecutive 2s.
  action:
    - For a block of k twos starting at a specific index:
      - Calculate the number of 2s to change: `num_to_change = floor(k / 2)`.
      - Replace the first `num_to_change` values (2s) within that block's segment in the sequence with the value 8.
      - Keep the remaining `k - num_to_change` values (2s) in the block unchanged.
  scope: Applied independently to each block of 2s within the input sequence.
input_format: Sequence (list or NumPy array) of integers.
output_format: Sequence (list or NumPy array) of integers. # Assuming based on input type