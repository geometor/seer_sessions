task_description: "Transform a sequence of digits by modifying contiguous blocks of the digit 2."
input_format: "A string of space-separated digits."
output_format: "A string of space-separated digits."
elements:
  - object: sequence
    properties:
      - type: list of digits (integers derived from input string)
      - allowed_input_digits: [0, 2]
      - allowed_output_digits: [0, 2, 8]
  - object: digit_0
    properties:
      - value: 0
    actions:
      - remains unchanged in the output sequence.
  - object: digit_2
    properties:
      - value: 2
    actions:
      - may be transformed to 8 based on its position within a block of 2s.
      - may remain 2 based on its position within a block of 2s.
  - object: block_of_2s
    properties:
      - definition: A contiguous subsequence within the main sequence consisting only of the digit 2.
      - length: k (number of 2s in the block)
    relationships:
      - separated by the digit 0 or by the sequence boundaries.
transformation_rule:
  scope: Applied independently to each identified block_of_2s within the sequence.
  condition: Must be a block_of_2s with length k >= 1.
  action:
    - For a block of k twos starting at index `start`:
      - Calculate the number of twos to change: `num_to_change = floor(k / 2)`.
      - The first `num_to_change` digits (at indices `start` to `start + num_to_change - 1`) are changed from 2 to 8.
      - The remaining `k - num_to_change` digits (at indices `start + num_to_change` to `start + k - 1`) remain as 2.
  unchanged_elements: Digits with value 0 are kept in their original positions.
