task_elements:
  - item: input_data
    properties:
      format: string
      content: 12 single digits separated by spaces
      interpretable_as: 1D sequence of 12 integers
      structure: Can be mapped to a 3x4 grid (3 rows, 4 columns) in row-major order.
        (e.g., "d1 d2 d3 d4 d5 d6 d7 d8 d9 d10 d11 d12" maps to [[d1, d2, d3, d4], [d5, d6, d7, d8], [d9, d10, d11, d12]])

  - item: output_data
    properties:
      format: string
      content: 12 single digits separated by spaces
      derivation: Result of transforming the input grid and flattening it back to a sequence.

transformation:
  type: grid_manipulation
  steps:
    - step: 1
      action: parse_input_string
      description: Convert the space-separated input string into a list or array of 12 integers.
    - step: 2
      action: reshape_to_grid
      parameters:
        rows: 3
        columns: 4
        order: row-major
      description: Arrange the 1D sequence of 12 integers into a 3x4 grid.
    - step: 3
      action: circular_row_shift
      parameters:
        direction: upwards
        magnitude: 1 position
      description: Perform a vertical circular shift on the grid rows. The original rows at indices [0, 1, 2] move to new indices [2, 0, 1]. (i.e., New Row 0 is Old Row 1, New Row 1 is Old Row 2, New Row 2 is Old Row 0).
    - step: 4
      action: flatten_grid
      parameters:
        order: row-major
      description: Convert the transformed 3x4 grid back into a 1D sequence of 12 integers.
    - step: 5
      action: format_output_string
      description: Convert the 1D sequence of integers into a space-separated string.

relationships:
  - type: structural_mapping
    from: input_string
    to: 3x4_grid
  - type: element_preservation
    description: The count of each distinct digit is the same in the input and output sequences.
  - type: inverse_operation
    description: Flattening is the inverse of reshaping (preserving order).