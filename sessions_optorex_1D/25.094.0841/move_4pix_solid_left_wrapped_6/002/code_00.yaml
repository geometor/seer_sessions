task_elements:
  - object: input_sequence
    properties:
      - type: list or array of integers  # Corrected type
      - length: 12
      - elements: single digits (0-9)
  - object: output_sequence
    properties:
      - type: list or array of integers
      - length: 12
      - elements: single digits (0-9)
      - derived_from: input_sequence
  - object: non_zero_subsequence
    properties:
      - type: list of integers
      - elements: non-zero digits from input_sequence
      - order: preserved relative order from input_sequence
      - count: N (number of non-zero elements)
  - object: zero_elements
    properties:
      - value: 0
      - count: 12 - N
  - object: shift_rules
    properties:
      - type: mapping
      - input: N (count of non-zero elements)
      - output: shift_amount
      - rules:
          - N in [1, 2, 3, 4] -> shift = 8
          - N = 5 -> shift = 4
          - N = 7 -> shift = 5
          - N = 8 -> shift = 2
          # - Other N values not observed in training data

relationship:
  - type: transformation
    applies_to: input_sequence
    results_in: output_sequence
    steps:
      - action: identify_and_extract
        actor: system
        input: input_sequence
        output: non_zero_subsequence, first_nz_idx_in, N
        details: Accepts input sequence (list/array). Finds all non-zero elements, notes their order, finds the index of the first one, and counts them. Handles empty input or all-zero input gracefully.
      - action: determine_shift
        actor: system
        input: N (count of non-zero elements)
        output: shift_amount
        details: Calculates shift based on N using the predefined shift_rules mapping.
      - action: calculate_start_position
        actor: system
        input: first_nz_idx_in, shift_amount, sequence_length (12)
        output: output_start_idx
        details: Computes (first_nz_idx_in + shift_amount) % 12.
      - action: construct_output
        actor: system
        input: non_zero_subsequence, output_start_idx, sequence_length (12)
        output: output_sequence (list/array)
        details: Creates a list/array of 12 zeros, then places the non_zero_subsequence into it starting at output_start_idx, wrapping around cyclically.