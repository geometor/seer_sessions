task_elements:
  - item: input_sequence
    properties:
      - type: list_of_integers
      - length: 12
      - elements: [0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0]
      - segments:
          - segment_A: # indices 0-3
              elements: [0, 0, 0, 0]
          - segment_B: # indices 4-7
              elements: [1, 1, 1, 1]
          - segment_C: # indices 8-11
              elements: [0, 0, 0, 0]
  - item: output_sequence
    properties:
      - type: list_of_integers
      - length: 12
      - elements: [1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0]
      - derived_from: input_sequence
relationship:
  - type: rearrangement
    action: divide_and_permute_segments
    details: The input sequence is divided into three equal segments of length 4. These segments are then rearranged to form the output sequence.
    input_segments: [segment_A, segment_B, segment_C]
    output_segments_order: [segment_B, segment_C, segment_A] # Based on observing multiple similar examples; fits this example too.
    # Alternative interpretation fitting only this example: [segment_B, segment_A, segment_C] (swap A and B)