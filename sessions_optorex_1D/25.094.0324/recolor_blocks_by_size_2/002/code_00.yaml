task_elements:
  - object: sequence
    description: A 1-dimensional array or list of integers representing the input or output.
    properties:
      - length: The number of integers in the sequence (consistently 12).
      - values: The integers contained within (0, 3 for input; 0, 1, 2 for output).
  - object: integer
    description: An individual number within the sequence.
    properties:
      - value: The integer value (0, 1, 2, or 3).
      - position: The index within the sequence.
  - object: block
    description: A contiguous sub-sequence of identical non-zero integers (specifically '3' in the input).
    properties:
      - value: The integer composing the block (always 3 in input).
      - start_index: The 0-based index of the first integer in the block.
      - end_index: The 0-based index of the last integer in the block.
      - length: The number of integers in the block.
    relationships:
      - order: Blocks appear sequentially within the main sequence. We can identify the 'first' block and 'second' block of '3's.
actions:
  - action: identify_blocks_of_3
    description: Scan the input sequence to find all contiguous blocks of the integer '3'.
    inputs:
      - input sequence (list/array of integers)
    outputs:
      - list of blocks (each with start_index, end_index, length), ordered by start_index.
  - action: determine_transformation_pattern
    description: Check the length of the first identified block of '3's to decide the replacement values. Assumes exactly two blocks are found.
    inputs:
      - first block of '3's
    outputs:
      - pattern_type: A pair representing the replacement value for the first block and the second block, e.g., (2, 1) or (1, 2).
  - action: apply_transformation
    description: Create the output sequence by applying the determined pattern to the blocks of '3's and keeping '0's unchanged.
    inputs:
      - input sequence
      - identified blocks (list containing the two blocks of '3's)
      - pattern_type (e.g., (2, 1) or (1, 2))
    outputs:
      - output sequence (list/array of integers)
relationships:
  - type: mapping
    description: How input integers correspond to output integers.
    details:
      - Input '0' maps to Output '0'.
      - Input '3' maps to Output '1' or '2'.
  - type: block_based_transformation
    description: The mapping of '3's depends on which block they belong to and a condition on the first block.
    details: All '3's in the first block map to one value (1 or 2), and all '3's in the second block map to the other value (2 or 1).
  - type: conditional_logic
    description: The rule determining the specific mapping values for the blocks.
    details: If the length of the first block of '3's is greater than 2, the first block maps to '1' and the second block maps to '2'. Otherwise (length <= 2), the first block maps to '2' and the second block maps to '1'.