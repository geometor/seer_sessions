task_elements:
  - object: sequence
    description: A sequence of single-digit integers.
    properties:
      - type: numpy.ndarray (or list) of integers
      - elements: 0, 3 (input); 0, 1, 2 (output)
      - length: preserved between input and output

  - object: number_0
    properties:
      - value: 0
      - role: separator, identity element
    action:
      - maps directly to 0 in the output at the same position.

  - object: number_3
    properties:
      - value: 3
      - role: element to be transformed within blocks
    action:
      - transformed to 1 or 2 based on the properties of the block it belongs to.

  - object: block_of_3s
    description: A contiguous subsequence containing only the number 3, bounded by 0s or sequence ends.
    properties:
      - composed_of: number_3
      - separator: number_0 or sequence boundary
      - location: start and end indices within the main sequence
      - length: count of 3s within the block
    relationships:
      - exactly two such blocks exist in the provided examples.
      - blocks are compared based on their lengths.
    action:
      - All 3s within the block having the greater length are transformed to 1s.
      - All 3s within the block having the lesser length are transformed to 2s.
      - (Implicit assumption: blocks will have different lengths based on examples).

  - object: transformation_rule
    description: The overall process mapping input sequence to output sequence.
    steps:
      - Identify all contiguous blocks of 3s, recording their start index, end index, and length.
      - Compare the lengths of the identified blocks.
      - Create an output sequence initialized with the input sequence values.
      - For the block with the greater length, replace all 3s within its range with 1s in the output sequence.
      - For the block with the lesser length, replace all 3s within its range with 2s in the output sequence.
      - Preserve all 0s from the input in the output.