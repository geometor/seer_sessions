task_type: sequence_transformation
input_elements:
  - type: integer
    values: [0, 3]
output_elements:
  - type: integer
    values: [0, 1, 2]
data_structure:
  - name: sequence
    type: list_of_integers # Input might be list-like, explicit conversion to list recommended
objects:
  - name: block_of_3s
    description: A contiguous subsequence within the input sequence where all elements are the integer 3.
    properties:
      - name: length
        type: integer
        description: The count of elements in the block.
      - name: position
        type: tuple(integer, integer)
        description: The start and end indices (inclusive) of the block within the parent sequence.
relationships:
  - type: identity_mapping
    description: Input elements with value 0 map directly to output elements with value 0 at the same index.
  - type: block_based_transformation
    description: Input elements with value 3 are transformed based on the properties (specifically length) of the block_of_3s they belong to.
  - type: relative_length_determination
    description: The lengths of the two identified blocks_of_3s are compared to determine which is 'longer' and which is 'shorter'.
constraints_observed:
  - Input sequences contain exactly two distinct blocks_of_3s.
  - The two blocks_of_3s in any given input sequence always have different lengths.
actions:
  - name: identify_and_characterize_blocks
    input: input_sequence
    process: Scan the sequence to find all contiguous blocks of the value 3. For each block, record its start index, end index, and length.
    output: A list containing details (start, end, length) for exactly two blocks.
  - name: compare_and_classify_blocks
    input: The list of two block details.
    process: Compare the 'length' property of the two blocks.
    output: Identification of one block as 'longer' and the other as 'shorter'.
  - name: generate_output_sequence
    input: input_sequence, longer_block_details, shorter_block_details
    process:
      - Initialize the output sequence as a copy of the input sequence.
      - For indices from the start to the end of the 'longer' block, set the corresponding output element to 1.
      - For indices from the start to the end of the 'shorter' block, set the corresponding output element to 2.
    output: The final transformed sequence.