objects:
  - name: input_array
    type: numpy.ndarray
    properties:
      - dtype: int
      - shape: 1D
      - contains_values: [0, 3]
      - first_element: value at index 0 (either 0 or 3)
  - name: output_array
    type: numpy.ndarray
    properties:
      - dtype: int
      - shape: 1D (same length as input_array)
      - contains_values: [0, 1, 2]
  - name: block_of_3s
    type: contiguous_subarray
    properties:
      - composed_of: integer 3
      - location: within input_array
      - index: ordinal position (1st, 2nd, ...) among blocks of 3s

relationships:
  - type: element_wise_mapping
    from: input_array element at index `i`
    to: output_array element at index `i`
    conditions:
      - if input_array[i] is 0, then output_array[i] is 0.
      - if input_array[i] is 3:
          - mapping depends on whether the 3 belongs to the first block_of_3s or a subsequent block_of_3s encountered when iterating from left to right.
          - the specific rule (first_block -> 1 or first_block -> 2) depends on the value of input_array[0].

actions:
  - name: initialize_output
    actor: transformation_process
    input: input_array
    output: output_array of the same size, potentially filled with zeros.
  - name: determine_mapping_rule
    actor: transformation_process
    input: first_element of input_array
    output: rule specifying map values (e.g., first_block_value=2, subsequent_block_value=1 OR first_block_value=1, subsequent_block_value=2)
  - name: iterate_and_map
    actor: transformation_process
    input: input_array, mapping_rule
    output: populated output_array
    details: Iterates through input_array, identifies blocks of 3s, tracks block order, and applies the determined mapping rule to populate output_array.