Task: Replace blocks of '3's based on relative block lengths in a numerical sequence.

Input:
  Type: NumPy array
  Elements:
    - Name: Digit
      Properties:
        Value: Integer (0 or 3 observed)
  Structure: Contains contiguous blocks of '3's separated by '0's. Length is fixed (12 observed).

Output:
  Type: String
  Format: Space-separated digits
  Elements:
    - Name: Digit
      Properties:
        Value: Integer (0, 1, or 2 observed)
  Structure: Mirrors input structure in terms of length and '0' positions, with '3' blocks replaced.

Objects_and_Properties:
  - Object: Sequence (handled as NumPy array then Python list)
    Properties:
      - Digits: List of integers
      - Length: Fixed integer (12)
  - Object: Block
    Properties:
      - Value: The repeated digit (specifically 3)
      - Start_Index: Position of the first digit in the block (0-based)
      - End_Index: Position of the last digit in the block (0-based)
      - Length: Number of digits in the block

Relationships:
  - Between input and output digits:
      - If input digit is 0, corresponding output digit is 0.
      - If input digit is 3, corresponding output digit depends on the block it belongs to and the relative lengths of the two '3' blocks.
  - Between blocks of '3's:
      - Assumption: Exactly two blocks of '3's exist in the input.
      - Comparison: The length of the first block (chronologically) is compared to the length of the second block.

Actions:
  1. Convert the input NumPy array into a Python list of integers.
  2. Initialize an output list identical to the converted input list.
  3. Identify all contiguous blocks of the digit '3' in the input list. Record the start index, end index, and length for each block.
  4. Check if exactly two blocks of '3's were found.
  5. If two blocks are found:
     - Get the first block (Block A) and the second block (Block B).
     - Compare Length(Block A) and Length(Block B).
     - If Length(Block A) >= Length(Block B):
       - Replace digits in the output list corresponding to Block A's positions with '1'.
       - Replace digits in the output list corresponding to Block B's positions with '2'.
     - Else (Length(Block A) < Length(Block B)):
       - Replace digits in the output list corresponding to Block A's positions with '2'.
       - Replace digits in the output list corresponding to Block B's positions with '1'.
  6. Convert the modified output list of integers back into a single string with digits separated by spaces.