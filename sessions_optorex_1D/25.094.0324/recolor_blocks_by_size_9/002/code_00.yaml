objects:
  - name: input_sequence
    type: numpy.ndarray or list of integers
    description: Represents the input data structure containing digits 0 and 3.
  - name: output_sequence
    type: numpy.ndarray or list of integers
    description: Represents the output data structure containing digits 0, 1, and 2. Length is identical to input_sequence.
  - name: segment
    type: contiguous sub-sequence of identical digits
    description: The sequence can be broken down into segments (e.g., [0, 0], [3, 3, 3], [0]).
  - name: group_of_zeros
    type: segment
    properties:
      - value: 0
    description: A segment consisting only of zeros. These remain unchanged in the output.
  - name: group_of_threes
    type: segment
    properties:
      - value: 3
      - length: integer (number of digits in the group)
      - start_index: integer
      - end_index: integer
      - order: integer (1st or 2nd group of threes encountered)
    description: A segment consisting only of threes. Examples provided always contain exactly two such groups.

relationships:
  - type: comparison
    between: [group_of_threes (order 1), group_of_threes (order 2)]
    property: length
    result: Determines the transformation rule (which group becomes '1's and which becomes '2's).

actions:
  - name: identify_segments
    input: input_sequence
    output: list of segments (or direct identification of groups)
    description: Process the input sequence to locate contiguous segments, particularly groups of '3's.
  - name: extract_groups_of_threes
    input: input_sequence
    output: ordered list containing exactly two group_of_threes (Group 1, Group 2)
    description: Find the start index, end index, and length of the first and second groups of '3's.
  - name: compare_lengths
    input: [Group 1, Group 2]
    output: comparison result (Group 1 shorter, Group 1 longer or equal)
    description: Compare the lengths of the two identified groups of threes.
  - name: transform_groups
    input: input_sequence, Group 1 info, Group 2 info, comparison result
    output: output_sequence
    description: Create a copy of the input sequence. Based on the length comparison, replace the elements corresponding to Group 1 and Group 2 with either '1's or '2's according to the rule. Preserve '0's.