task_elements:
  - object: input_grid
    properties:
      - type: 1D numpy array
      - element_type: integer
      - allowed_values: [0, 3]
  - object: output_grid
    properties:
      - type: 1D numpy array
      - element_type: integer
      - allowed_values: [0, 1, 2]
      - constraint: same shape and length as input_grid
  - object: digit_zero
    properties:
      - value: 0
    relationship:
      - maps directly from input_grid to output_grid at the same index
  - object: digit_three
    properties:
      - value: 3
    relationship:
      - appears in contiguous groups in the input_grid
      - is transformed to either 1 or 2 in the output_grid
  - object: group_of_threes
    properties:
      - definition: a contiguous subsequence of only '3's within the input_grid
      - attribute: length (number of '3's in the group)
      - attribute: start_index
      - attribute: end_index
    relationship:
      - there are exactly two such groups in each valid input example
      - the lengths of the two groups are different
      - comparison: one group is 'longer', the other is 'shorter'
    action:
      - identify all such groups in the input_grid using their indices and lengths
actions_on_groups:
  - action: map_longer_group
    condition: applies to the group_of_threes with the maximum length
    effect: replace elements with value '3' within this group's index range with '1's in the output_grid
  - action: map_shorter_group
    condition: applies to the group_of_threes with the minimum length
    effect: replace elements with value '3' within this group's index range with '2's in the output_grid
processing_flow:
  - step: 1. Receive the input_grid (1D NumPy array).
  - step: 2. Create a copy of the input_grid as the initial output_grid.
  - step: 3. Find all contiguous groups of value '3' in the input_grid.
  - step: 4. Check if exactly two groups were found.
  - step: 5. If two groups found, identify the longer and shorter groups based on length.
  - step: 6. Modify the output_grid by replacing '3's with '1's at the indices of the longer group.
  - step: 7. Modify the output_grid by replacing '3's with '2's at the indices of the shorter group.
  - step: 8. Return the modified output_grid.