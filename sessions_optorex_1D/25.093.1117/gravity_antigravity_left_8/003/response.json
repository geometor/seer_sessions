{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nAccepts a NumPy array containing the digits 0, 1, and 2.\nRearranges the digits based on the priority order: 2s first, then 0s, then 1s.\nOutputs the newly constructed and sorted NumPy array.\n\"\"\"\n\nimport numpy as np\nimport collections\n\ndef count_digits(input_array: np.ndarray) -> collections.Counter:\n    \"\"\"Counts the occurrences of each digit in the input NumPy array.\"\"\"\n    return collections.Counter(input_array)\n\ndef construct_sorted_array(counts: collections.Counter) -> np.ndarray:\n    \"\"\"Constructs a sorted NumPy array based on digit counts and priority (2 > 0 > 1).\"\"\"\n    count_2 = counts.get(2, 0)\n    count_0 = counts.get(0, 0)\n    count_1 = counts.get(1, 0)\n\n    # Create arrays for each digit based on their counts\n    twos = np.full(count_2, 2, dtype=int)\n    zeros = np.full(count_0, 0, dtype=int)\n    ones = np.full(count_1, 1, dtype=int)\n\n    # Concatenate arrays in the desired order: 2s, then 0s, then 1s\n    output_array = np.concatenate((twos, zeros, ones))\n    return output_array\n\ndef transform(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Sorts the digits in the input NumPy array based on the priority 2 > 0 > 1.\n\n    Args:\n        input_grid: A NumPy array containing digits (0, 1, 2).\n\n    Returns:\n        A NumPy array with digits sorted according to the rule.\n    \"\"\"\n\n    # Count the occurrences of each digit (0, 1, 2) in the input array\n    digit_counts = count_digits(input_grid)\n\n    # Construct the output array based on the counts and the sorting priority (2 > 0 > 1)\n    output_grid = construct_sorted_array(digit_counts)\n\n    # Ensure the output has the same dtype as input if necessary, though concatenation defaults should work\n    output_grid = output_grid.astype(input_grid.dtype)\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 5938,
    "candidates_token_count": 530,
    "total_token_count": 6468,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 6.705633,
  "retries": 1
}