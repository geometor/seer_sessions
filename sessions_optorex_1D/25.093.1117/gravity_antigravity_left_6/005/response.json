{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nTransforms a 1D NumPy array of digits (0, 1, 2) by sorting its elements \naccording to the specific order: all 2s first, followed by all 0s, \nthen all 1s. The counts of each digit are preserved from the input \nto the output.\n\"\"\"\n\nimport numpy as np\n\n# Helper function to count specific values in a NumPy array\ndef count_value(arr: np.ndarray, value: int) -> int:\n    \"\"\"Counts the occurrences of a specific value in a NumPy array.\"\"\"\n    # Use np.sum with a boolean comparison for efficient counting\n    return np.sum(arr == value)\n\ndef transform(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Applies the 2 > 0 > 1 sorting rule to the input NumPy array of digits.\n\n    Args:\n        input_grid: A 1D NumPy array containing integers (0, 1, or 2).\n\n    Returns:\n        A 1D NumPy array containing the sorted digits.\n    \"\"\"\n\n    # 1. Count the number of times 2, 0, and 1 appear in the input array.\n    count_2 = count_value(input_grid, 2)\n    count_0 = count_value(input_grid, 0)\n    count_1 = count_value(input_grid, 1)\n\n    # 2. Construct the output sequence using the counts and the desired order (2, 0, 1).\n    # Create lists/arrays for each number based on counts.\n    output_part_2 = np.full(count_2, 2, dtype=input_grid.dtype)\n    output_part_0 = np.full(count_0, 0, dtype=input_grid.dtype)\n    output_part_1 = np.full(count_1, 1, dtype=input_grid.dtype)\n\n    # 3. Concatenate the parts to form the final output array.\n    output_grid = np.concatenate((output_part_2, output_part_0, output_part_1))\n\n    # 4. Return the constructed output array.\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 6466,
    "candidates_token_count": 504,
    "total_token_count": 6970,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 7.113589,
  "retries": 1
}