{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nTransforms an input NumPy array of digits (0, 1, 2) by sorting them according to a specific order: \nall 2s first, followed by all 0s, then all 1s. The counts of each digit are preserved \nfrom the input to the output. The output is also a NumPy array.\n\"\"\"\n\nimport numpy as np\nimport collections\n\ndef transform(input_grid: np.ndarray) -> np.ndarray:\n    \"\"\"\n    Applies the 2 > 0 > 1 sorting rule to the input NumPy array of digits.\n\n    Args:\n        input_grid: A NumPy array containing integers (0, 1, or 2).\n\n    Returns:\n        A NumPy array containing the sorted digits.\n    \"\"\"\n\n    # 1. Count the occurrences of each digit (0, 1, 2) in the input array.\n    # The input is already a sequence of numbers (NumPy array), so no parsing is needed.\n    counts = collections.Counter(input_grid)\n    count_2 = counts.get(2, 0)\n    count_0 = counts.get(0, 0)\n    count_1 = counts.get(1, 0)\n\n    # 2. Create a new list to build the output sequence.\n    # Initialize an empty list.\n    output_list = []\n\n    # 3. Append the integer 2 to the output list based on its count.\n    output_list.extend([2] * count_2)\n\n    # 4. Append the integer 0 to the output list based on its count.\n    output_list.extend([0] * count_0)\n\n    # 5. Append the integer 1 to the output list based on its count.\n    output_list.extend([1] * count_1)\n\n    # 6. Convert the constructed list into a NumPy array.\n    output_grid = np.array(output_list, dtype=input_grid.dtype) # Preserve original dtype if needed\n\n    # 7. Return the final sorted NumPy array.\n    return output_grid\n\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 6003,
    "candidates_token_count": 475,
    "total_token_count": 6478,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-exp-03-25",
  "response_time": 6.41489,
  "retries": 1
}