objects:
  - name: input_sequence
    type: list_of_digits
    properties:
      - digits: [0, 1, 2]
      - length: 12 (observed)
  - name: output_sequence
    type: list_of_digits
    properties:
      - digits: [0, 1, 2]
      - length: 12 (observed)
  - name: digit
    type: integer
    values: [0, 1, 2]

actions:
  - name: count_digits
    input: input_sequence
    output: counts_per_digit (e.g., count_of_0, count_of_1, count_of_2)
  - name: construct_output
    input: counts_per_digit
    output: output_sequence
    steps:
      - append '2' repeated count_of_2 times
      - append '0' repeated count_of_0 times
      - append '1' repeated count_of_1 times

relationships:
  - type: conservation
    description: The count of each distinct digit (0, 1, 2) in the input_sequence is preserved in the output_sequence.
  - type: ordering
    description: The digits in the output_sequence are ordered according to the rule 2 > 0 > 1. All instances of '2' appear first, followed by all instances of '0', followed by all instances of '1'.