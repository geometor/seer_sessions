input_source:
  type: string
  description: A sequence of 12 digits separated by single spaces.
  example: "2 7 0 0 1 1 6 9 4 5 9 2"
parsed_input:
  type: list_of_strings
  description: The input string split into a list of 12 digit strings.
  length: 12
  source: input_source
  derived_by: splitting input_source by space
objects:
  - name: parsed_input_sequence
    type: list_of_strings # representing digits
    properties:
      - length: 12
  - name: first_segment
    type: sub_sequence # list slice
    properties:
      - source: parsed_input_sequence
      - indices: 0 through 7 (first 8 elements)
  - name: second_segment
    type: sub_sequence # list slice
    properties:
      - source: parsed_input_sequence
      - indices: 8 through 11 (last 4 elements)
  - name: reordered_sequence
    type: list_of_strings # representing digits
    properties:
      - length: 12
      - composition: concatenation of second_segment followed by first_segment
output_target:
  type: string
  description: A sequence of 12 digits separated by single spaces, representing the reordered sequence.
  derived_by: joining elements of reordered_sequence with spaces
actions:
  - name: parse_input
    input: input_source (string)
    output: parsed_input_sequence (list_of_strings)
    method: split string by space character
  - name: split_parsed_input
    input: parsed_input_sequence
    outputs: [first_segment, second_segment]
    parameters:
      - split_index: 8 (split after the 8th element)
    method: list slicing
  - name: concatenate_segments
    inputs: [second_segment, first_segment]
    output: reordered_sequence
    method: list concatenation
  - name: format_output
    input: reordered_sequence
    output: output_target (string)
    method: join list elements with space character
relationships:
  - type: transformation
    from: input_source
    to: output_target
    steps: [parse_input, split_parsed_input, concatenate_segments, format_output]