task_type: grid_transformation
grid_properties:
  size: 5x5
  cell_values:
    input: [0, 5]
    output: [0, 1, 2, 5]
transformation:
  scope: column-based
  condition_find_target_column:
    target_object: column
    property: all_cells_are_5
    variable_assignment: assign_index_to_j
  actions:
    - description: "Transform the target column j"
      target_element: column
      column_index: j
      action: replace_all_values
      input_value: 5
      output_value: 1
    - description: "Determine target column k for placing the value 2"
      target_variable: k
      condition: j == 2 # Middle column index for a 5x5 grid
      value_if_true: 4 # Last column index
      value_if_false_rule: 4 - j # Reflected column index
    - description: "Place the value 2 in the last row"
      target_element: cell
      row_index: 4 # Last row index for a 5x5 grid
      column_index: k # Determined column index from previous step
      action: set_value
      output_value: 2
    - description: "Handle non-target cells"
      target_element: cell
      condition: cell_is_not_part_of_initial_column_j_transformation
      output_value: same_as_input # Cells not in column j initially remain unchanged unless overwritten by the '2' placement.
relationships:
  - The output grid is primarily a copy of the input grid.
  - A specific column pattern (all 5s, index `j`) triggers modifications.
  - All values in the identified column `j` are changed to 1.
  - A single value '2' is placed in the last row (row 4).
  - The column index `k` for the '2' depends conditionally on the index `j` of the all-5s column (`k=4` if `j=2`, else `k=4-j`).