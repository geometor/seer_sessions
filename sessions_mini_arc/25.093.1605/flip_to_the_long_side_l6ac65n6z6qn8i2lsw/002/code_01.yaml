task_elements:
  - object: grid
    properties:
      - type: 2D array of integers
      - dimensions: variable (e.g., 5x5 in examples)
      - cells: contain non-negative integers
  - object: column
    properties:
      - index: position within the grid (0-based)
      - content: list of integers
      - property: contains_non_zero (boolean, true if any cell in the column is > 0)
      - property: lowest_nz_index (integer, the minimum index among all columns where contains_non_zero is true, or -1 if all columns are zero)
  - relationship: adjacency
    between: columns
    definition: Columns with indices `j` and `j+1` are adjacent.
  - action: conditional_swap_columns
    condition: Depends on the parity of the lowest index of a non-zero column (`lowest_nz_index`).
    sub_action_1:
      condition: `lowest_nz_index` is odd (or grid is all zeros, treat as even case for consistency? Let's assume not all zeros based on examples).
      iterator: column index `j` starting from 1, incrementing by 2 (1, 3, 5, ...)
      operation: If column `j+1` exists, swap column `j` and column `j+1`.
    sub_action_2:
      condition: `lowest_nz_index` is even.
      iterator: column index `j` starting from 0, incrementing by 2 (0, 2, 4, ...)
      operation: If column `j+1` exists, swap column `j` and column `j+1`.
transformation_goal:
  - Rearrange the grid by swapping specific adjacent pairs of columns based on the position of the first non-zero column.