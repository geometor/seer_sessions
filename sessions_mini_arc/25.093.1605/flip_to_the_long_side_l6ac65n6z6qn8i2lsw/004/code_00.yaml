task_elements:
  - object: grid
    properties:
      - type: 2D array (list of lists) of integers
      - dimensions: variable rows and columns
      - cells: contain non-negative integers
      - state: input_grid, output_grid

  - property: first_non_zero_column_index
    applies_to: grid
    definition: The smallest column index `j` such that at least one cell `grid[i][j]` is non-zero. If all cells are zero, this property is considered 'even' for determining swap behavior (or effectively index 0).

  - relationship: adjacency
    between: columns
    definition: Columns with indices `j` and `j+1` are adjacent.

  - action: swap_adjacent_column_pairs
    target: grid
    parameters:
      - start_index: The index of the first column in the first pair to swap (either 0 or 1).
    condition: Applied iteratively to pairs `(j, j+1)` where `j >= start_index` and `j` increments by 2. Requires `j+1` to be a valid column index.
    effect: Modifies the grid by exchanging the entire contents of column `j` with column `j+1` for all applicable pairs.

transformation_rule:
  - step: 1. Determine the `first_non_zero_column_index` of the `input_grid`.
  - step: 2. Set the `start_index` for swapping:
      - If `first_non_zero_column_index` is odd, set `start_index` to 1.
      - Otherwise (if even or if the grid is all zeros), set `start_index` to 0.
  - step: 3. Create a copy of the `input_grid` to serve as the initial `output_grid`.
  - step: 4. Apply the `swap_adjacent_column_pairs` action to the `output_grid`, using the determined `start_index`.
  - step: 5. The final state of the `output_grid` is the result.
