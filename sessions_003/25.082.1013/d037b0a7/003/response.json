{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\n1.  **Identify Non-Zero Pixels:** Find all pixels with a value other than 0.\n2. **Conditional Horizontal Propagation** If a non-zero pixel is found, fill that pixel's value horizontally leftwards in that row. This leftward spread stops at the left edge of the input, or if any non-zero pixels are in the way.\n3.  **Vertical Propagation:** For *every* non-zero pixel in the input grid, propagate its value downwards to the bottom of the grid.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    output_grid = np.copy(input_grid)\n    rows, cols = input_grid.shape\n\n    # Horizontal Propagation (Leftwards)\n    for r in range(rows):\n        for c in range(cols):\n            if input_grid[r, c] != 0:\n                #fill left\n                for k in range(c -1, -1, -1):\n                    if output_grid[r,k] == 0:\n                        output_grid[r,k] = input_grid[r,c]\n                    else:\n                        break\n\n    # Vertical Propagation (Downwards)\n    for r in range(rows):\n        for c in range(cols):\n            if input_grid[r, c] != 0:  # Use input_grid for the trigger\n                for k in range(r + 1, rows):\n                    output_grid[k, c] = output_grid[r,c]\n\n\n    return output_grid\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3614,
    "candidates_token_count": 351,
    "total_token_count": 3965,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 5.964544
}