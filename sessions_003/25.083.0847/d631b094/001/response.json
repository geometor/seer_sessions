{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe transformation extracts the non-zero values from the input, and creates an output grid where each row represents a unique non-zero value. The number of a given non-zero value is is equal to the maximum number of times it appears in any single column of the input.\n\"\"\"\n\nimport numpy as np\n\ndef get_nonzero_counts(input_grid):\n    \"\"\"Counts the occurrences of each non-zero value in each column.\"\"\"\n    counts = {}\n    for col in range(input_grid.shape[1]):\n        for val in input_grid[:, col]:\n            if val != 0:\n                if val not in counts:\n                    counts[val] = 0\n                counts[val] += 1\n    return counts\n\ndef transform(input_grid):\n    \"\"\"Transforms the input grid according to the defined rule.\"\"\"\n\n    # Convert input to numpy array\n    input_grid = np.array(input_grid)\n    \n    # Count non-zero values in columns\n    counts = get_nonzero_counts(input_grid)\n\n     # Determine the size of the output grid\n    output_size = sum(1 for count in counts.values() )\n    output_width = max(counts.values()) if counts else 0\n    \n    #Initialize output\n    output_grid = []\n    #create a row for each non zero value in the counts\n    for val, count in counts.items():\n      row = [val] * count\n      output_grid.append(row)\n    \n    # Ensure all rows have the same length by padding with zeros\n    for row in output_grid:\n      while len(row) < output_width:\n        row.append(0)\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 1667,
    "candidates_token_count": 389,
    "total_token_count": 2056,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 7.67836
}