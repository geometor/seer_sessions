{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\n1.  **Identify:** Find all non-zero pixels in the input grid. Each of these is a \"seed\" pixel.\n2.  **Iterate:** For each seed pixel:\n3.  **Top Rectangle:** Create a rectangle of the same color as the seed pixel. This rectangle's bottom edge is the row *above* the seed pixel's row. The rectangle extends upwards to the top edge of the grid (row 0). The rectangle extends horizontally to the left and right edges of the grid.\n4.  **Bottom Rectangle:** Create another rectangle of the same color. This rectangle's top edge is the row *below* the seed pixel's row. This rectangle extends downwards to the bottom edge of the grid. The rectangle extends horizontally to the left and right edges of the grid.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"Transforms the input grid according to the observed rule.\"\"\"\n\n    output_grid = np.zeros_like(input_grid)\n    rows, cols = input_grid.shape\n\n    # 1. Identify Non-Zero Pixels\n    non_zero_pixels = []\n    for r in range(rows):\n        for c in range(cols):\n            if input_grid[r, c] != 0:\n                non_zero_pixels.append((r, c, input_grid[r, c]))\n\n    # 2. Iterate through non-zero pixels\n    for r, c, value in non_zero_pixels:\n        # 3. Generate Top Rectangle\n        for i in range(r):  # Up to the row above the seed\n            for j in range(cols): # Extend to all columns\n                output_grid[i, j] = value\n\n        # 4. Generate Bottom Rectangle\n        for i in range(r + 1, rows):  # From the row below the seed to the bottom\n            for j in range(cols): # Extend to all columns\n                output_grid[i, j] = value\n\n    return output_grid\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3693,
    "candidates_token_count": 454,
    "total_token_count": 4147,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 6.142138
}