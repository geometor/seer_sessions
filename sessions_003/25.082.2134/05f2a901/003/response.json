{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe transformation removes empty (white) rows *between* objects, preserving leading and trailing empty rows.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid by removing empty rows between objects,\n    preserving leading and trailing empty rows.\n    \"\"\"\n    input_grid = np.array(input_grid)\n    rows, cols = input_grid.shape\n    output_grid = np.zeros_like(input_grid)\n\n    # 1. Find the indices of non-empty rows.\n    non_empty_row_indices = []\n    for r in range(rows):\n        if not all(input_grid[r] == 0):\n            non_empty_row_indices.append(r)\n\n    # 2. Copy leading empty rows.\n    current_output_row = 0\n    for r in range(rows):\n        if r < (non_empty_row_indices[0] if non_empty_row_indices else rows) :\n          output_grid[current_output_row] = input_grid[r]\n          current_output_row += 1\n        else:\n          break\n\n    # 3. Copy non-empty rows and trailing, removing rows between objects.\n    \n    for r in non_empty_row_indices:\n        output_grid[current_output_row] = input_grid[r]\n        current_output_row += 1\n\n\n    return output_grid.tolist()\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 7952,
    "candidates_token_count": 342,
    "total_token_count": 8294,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 6.747872
}