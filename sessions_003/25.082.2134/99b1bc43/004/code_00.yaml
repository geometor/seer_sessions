objects:
  - name: input_grid
    properties:
      type: grid
      shape: variable
      colors: [0, 1, 2, 4] # Based on examples
    observations:
      - The input grid is always divided into two subgrids.
      - A horizontal line of yellow (4) pixels consistently separates the two subgrids.

  - name: output_grid
    properties:
      type: grid
      shape: [4, 4]
      colors: [0, 3]
    observations:
      - The output grid is always 4x4.
      - It only contains black (0) and green (3) pixels.

  - name: subgrid_A
    properties:
      type: grid
      derived_from: input_grid (top portion)
    observations:
      - Contains blue (1) pixels that seem to determine the position of green pixels in the output.

  - name: subgrid_B
    properties:
      type: grid
      derived_from: input_grid (bottom portion)
    observations:
      - Always starts with a row of yellow (4) pixels.
      - The content below the yellow row doesn't seem to affect the output directly.

actions:
  - name: map_pixels
    description: Blue pixels in subgrid_A are mapped to green pixels in the output_grid.
    parameters:
      input: subgrid_A blue pixel coordinates
      output: output_grid green pixel coordinates
    observations:
       - It is not a direct coordinate translation; there's a transformation rule involved.
       - The rule appears to involve both row and column manipulation.
