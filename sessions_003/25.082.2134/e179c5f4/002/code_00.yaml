objects:
  - name: input_grid
    type: grid
    properties:
      height: variable (10 in all examples)
      width: variable (2, 3, and 4 in the examples)
      bottom_left_pixel: 1 (blue)
      other_pixels: 0 (white)

  - name: output_grid
    type: grid
    properties:
      height: same as input_grid height
      width: same as input_grid width
      pixels:
        contains: [1 (blue), 8 (azure)]

transformations:
  - action: generate_pattern
    input: input_grid
    output: output_grid
    rule: |
      The height and width of the output_grid are the same as the input_grid.
      The pattern starts with the bottom left pixel of the input being blue (1) in the bottom left of the output. The pattern created in each row seems to be influenced by the width and the position of colors in the prior row.