objects:
  - name: input_grid
    type: grid
    properties:
      rows: variable
      columns: variable
      colors: [0, 1, 4, 6, 7, 8]  # Based on observed examples
      blue_line:
        exists: true
        type: horizontal_line
        color: 1
        row_index: variable  # Determined dynamically
  - name: upper_section
    type: grid
    properties:
      rows: derived_from_input_grid # Rows above blue_line
      columns: 4 # fixed
      source: input_grid
  - name: lower_section
    type: grid
    properties:
      rows: derived_from_input_grid
      columns: variable #derived_from_input_grid
      source: input_grid

  - name: output_grid
    type: grid
    properties:
      rows: 4 # always
      columns: 4 # always

actions:
  - name: find_blue_line
    input: input_grid
    output: row_index
    description: Locates the row index of the horizontal blue line.
  - name: create_output
    input: [ upper_section, lower_section ]
    output: output_grid
    description: >
       Constructs the 4x4 output grid by combining upper and lower sections based on position and
       a column-wise merge rule from the upper and lower section. The first
       four columns from the upper section form the base, but if a pixel's
       value in a given column and row does not match the corresponding
       pixel in the expected output, the value is replaced by the next
       available pixel value from the same column in the lower section.