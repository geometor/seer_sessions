objects:
  - name: input_grid
    type: grid
    properties:
      rows: variable
      columns: variable
      elements: integers (0-9 representing colors)
  - name: output_grid
    type: grid
    properties:
      rows: 4
      columns: 4
      elements: integers (0-9 representing colors)
  - name: blue_line
    type: line
    properties:
      orientation: horizontal
      color: blue (1)
      row_index: variable (separates upper and lower sections)
  - name: upper_section
    type: grid
    properties:
      rows: variable (derived from blue_line_row)
      columns: same as input_grid
      elements: integers (0-9)
  - name: lower_section
    type: grid
    properties:
      rows: variable
      columns: same as input_grid
      elements: integers (0-9)
  - name: output_columns
    type: columns
    properties:
        count: 4
        source_columns: first four columns of the upper section

actions:
  - name: separate
    input: input_grid
    output: [upper_section, lower_section]
    parameters:
      separator: blue_line
  - name: extract_columns
    input: upper_section
    output: output_columns
    parameters:
      column_indices: [0, 1, 2, 3]  # First four columns
  - name: replace_pixels
    input: [output_columns, lower_section]
    output: output_grid
    parameters:
      replacement_rule: |
        For each column in output_columns:
          For each pixel in the column:
            If the pixel is black (0):
              Find the first non-black pixel in the *same* column of the lower_section.
              Replace the black pixel with the value of the non-black pixel.
            Else:
              Keep the original pixel value.
  - name: create_grid
    input: transformed columns
    output: output_grid