{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nIdentify and retain only the unique columns from the input grid, preserving their original order of appearance, to form the output grid.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid by retaining only unique columns, preserving original order.\n\n    Args:\n        input_grid: A 2D numpy array representing the input grid.\n\n    Returns:\n        A 2D numpy array representing the transformed output grid.\n    \"\"\"\n    # Convert to numpy array for easier manipulation\n    input_grid = np.array(input_grid)\n\n    # Initialize an empty list to store the unique columns\n    unique_columns = []\n\n    # Iterate through the columns of the input grid\n    for i in range(input_grid.shape[1]):\n        current_column = tuple(input_grid[:, i])  # Convert to tuple for easy comparison\n\n        # Check if the current column is already in the unique_columns list\n        if current_column not in unique_columns:\n            unique_columns.append(current_column)\n\n    # Convert the list of unique columns back into a 2D numpy array\n    output_grid = np.column_stack(unique_columns) if unique_columns else np.array([])\n\n    return output_grid.tolist()\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3222,
    "candidates_token_count": 290,
    "total_token_count": 3512,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.657455
}