observations:
  - task: 05269061
    examples:
      - example_id: 1
        input_rows:
          - row_id: 1
            non_zero_elements: [2, 8, 3]
            repetition_pattern: reversed, fills entire row
          - row_id: 2
            non_zero_elements: [8, 3]
            repetition_pattern: reversed, fills entire row
          - row_id: 3
            non_zero_elements: [3]
            repetition_pattern: reversed, fills entire row
          - row_id: 4
            non_zero_elements: []
            repetition_pattern: none, output is all zeros (or same as the reversed sequence of non-zero entries from input)
          - row_id: 5
            non_zero_elements: []
            repetition_pattern: none, output is all zeros (or same as the reversed sequence of non-zero entries from input)
          - row_id: 6
            non_zero_elements: []
            repetition_pattern: none, output is all zeros (or same as the reversed sequence of non-zero entries from input)
          - row_id: 7
            non_zero_elements: []
            repetition_pattern: none, output is all zeros (or same as the reversed sequence of non-zero entries from input)
        output_rows:
          - row_id: 1 #all rows are the same
            elements: [2, 8, 3, 2, 8, 3, 2]
            derived_from: input_row_1
          - row_id: 2
            elements: [8, 3, 2, 8, 3, 2, 8]
            derived_from: input_row_2
          - row_id: 3
            elements: [3, 2, 8, 3, 2, 8, 3]
            derived_from: input_row_3
          - row_id: 4
            elements: [2, 8, 3, 2, 8, 3, 2]
            derived_from: input_row_1
          - row_id: 5
            elements: [8, 3, 2, 8, 3, 2, 8]
            derived_from: input_row_2
          - row_id: 6
            elements: [3, 2, 8, 3, 2, 8, 3]
            derived_from: input_row_3
          - row_id: 7
            elements:  [2, 8, 3, 2, 8, 3, 2]
            derived_from: input_row_1

      - example_id: 2
        input_rows:
          - row_id: 1
            non_zero_elements: []
            repetition_pattern: none, output is all zeros
          - row_id: 2
            non_zero_elements: []
            repetition_pattern: none, output is all zeros
          - row_id: 3
            non_zero_elements: [1]
            repetition_pattern: reversed and repeated
          - row_id: 4
            non_zero_elements: [1, 2]
            repetition_pattern: reversed and repeated
          - row_id: 5
            non_zero_elements: [1, 2, 4]
            repetition_pattern: reversed and repeated
          - row_id: 6
            non_zero_elements: [1, 2, 4]
            repetition_pattern: reversed and repeated
          - row_id: 7
            non_zero_elements: [1, 2, 4]
            repetition_pattern: reversed and repeated
        output_rows: # all output rows use the sequence from input row 5,6, or 7
          - row_id: 1
            elements: [2, 4, 1, 2, 4, 1, 2]
            derived_from: input_row_5
          - row_id: 2
            elements: [4, 1, 2, 4, 1, 2, 4]
            derived_from: input_row_5
          - row_id: 3
            elements: [1, 2, 4, 1, 2, 4, 1]
            derived_from: input_row_5
          - row_id: 4
            elements: [2, 4, 1, 2, 4, 1, 2]
            derived_from: input_row_5
          - row_id: 5
            elements: [4, 1, 2, 4, 1, 2, 4]
            derived_from: input_row_5
          - row_id: 6
            elements: [1, 2, 4, 1, 2, 4, 1]
            derived_from: input_row_5
          - row_id: 7
            elements: [2, 4, 1, 2, 4, 1, 2]
            derived_from: input_row_5

      - example_id: 3
        input_rows:
          - row_id: 1
            non_zero_elements: [8, 3]
            repetition_pattern: reversed, repeated
          - row_id: 2
            non_zero_elements: [8, 3]
            repetition_pattern: reversed, repeated
          - row_id: 3
            non_zero_elements: [8, 3]
            repetition_pattern: reversed, repeated
          - row_id: 4
            non_zero_elements: [8, 3, 4]
            repetition_pattern: reversed, repeated
          - row_id: 5
            non_zero_elements: [8, 3, 4]
            repetition_pattern: reversed, repeated
          - row_id: 6
            non_zero_elements: [3, 4]
            repetition_pattern: reversed, repeated
          - row_id: 7
            non_zero_elements: [4]
            repetition_pattern: reversed, repeated
        output_rows: # all output rows use sequence from their corresponding input_row
          - row_id: 1
            elements: [4, 8, 3, 4, 8, 3, 4]
            derived_from: input_row_4
          - row_id: 2
            elements: [8, 3, 4, 8, 3, 4, 8]
            derived_from: input_row_4
          - row_id: 3
            elements: [3, 4, 8, 3, 4, 8, 3]
            derived_from: input_row_4
          - row_id: 4
            elements: [4, 8, 3, 4, 8, 3, 4]
            derived_from: input_row_4
          - row_id: 5
            elements: [8, 3, 4, 8, 3, 4, 8]
            derived_from: input_row_4
          - row_id: 6
            elements: [3, 4, 8, 3, 4, 8, 3]
            derived_from: input_row_4
          - row_id: 7
            elements: [4, 8, 3, 4, 8, 3, 4]
            derived_from: input_row_4
    transformation_rule: "For each row, extract the non-zero elements. Reverse this sequence.  Repeat this reversed sequence to fill the output row, matching the width of the input grid. If a row has no non-zero elements, fill the corresponding output row with the reversed non-zero sequence from the *first* row that *does* contain non-zero elements."
