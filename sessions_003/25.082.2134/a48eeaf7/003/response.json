{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nGray pixels move to be adjacent to the closest red pixel, prioritizing creating a vertical stack above the red pixels. If there are no red pixels, gray pixels remain unchanged.\n\"\"\"\n\nimport numpy as np\n\ndef find_objects(grid, color):\n    \"\"\"Finds the positions of all pixels of a given color.\"\"\"\n    return np.argwhere(grid == color)\n\ndef transform(input_grid):\n    \"\"\"Transforms the input grid according to the observed rules.\"\"\"\n    \n    # Initialize output grid as a copy of the input grid\n    output_grid = np.copy(input_grid)\n    \n    # Find the positions of gray (5) and red (2) pixels\n    gray_positions = find_objects(input_grid, 5)\n    red_positions = find_objects(input_grid, 2)\n\n    # Iterate through gray pixels and apply transformation rules\n    for gray_pos in gray_positions:\n        row, col = gray_pos\n        \n        # If no red pixels, skip transformation for this gray pixel\n        if len(red_positions) == 0:\n            continue\n\n        # Find the nearest red pixel (prioritize horizontal distance)\n        min_dist = float('inf')\n        nearest_red = None\n        for red_pos in red_positions:\n            dist = abs(red_pos[1] - col) + abs(red_pos[0] - row) #Manhattan Distance\n            if dist < min_dist:\n                min_dist = dist\n                nearest_red = red_pos\n\n        # Reposition the gray pixel, remove old one.\n        output_grid[row, col] = 0\n        if nearest_red is not None: #added condition if red pixels exist\n            output_grid[nearest_red[0]-1, nearest_red[1]] = 5\n        \n\n    return output_grid\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 4063,
    "candidates_token_count": 423,
    "total_token_count": 4486,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 7.765379
}