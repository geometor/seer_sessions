example1:
  input:
    objects:
      - color: gray
        locations: [[1,2], [2,2], [2,6], [3,0], [3,2], [3,6], [4,0], [4,2], [4,6], [5,0], [5,2], [5,6], [6,0], [6,2], [6,6], [7,0], [7,2], [7,6], [8,0], [8,2], [8,6]]
      - color: black
        locations: All other locations
  expected_output:
    objects:
      - color: blue
        locations: [[1,2], [2,2], [3,2], [4,2], [5,2], [6,2], [7,2], [8,2]]
      - color: red
        locations:  [[6,6], [7,6], [8,6]]
      - color: black
        locations: All other locations
  rule: "If a row contains a gray pixel in the 3rd column OR the seventh column, transform according to the original program.  If the 3rd column is gray, change it to blue. If the 7th column is gray, change it to red."
example2:
   input:
    objects:
      - color: gray
        locations: [[0,4], [1,4], [2,0], [2,4], [3,0], [3,4], [3,6], [4,0], [4,4], [4,6], [5,0], [5,4], [5,6], [6,0], [6,4], [6,6], [7,0], [7,2], [7,4], [7,6], [8,0], [8,2], [8,4], [8,6]]
      - color: black
        locations: All other locations
   expected_output:
      - color: blue
        locations: [[0,4], [1,4], [2,4], [3,4], [4,4], [5,4], [6,4], [7,4], [8,4]]
      - color: red
        locations: [[7,2], [8,2]]
      - color: black
        locations: All other locations
   rule: "If a row contains either a gray pixel in column 3 OR a gray pixel in column 7, check column 3 and 7 for gray pixels. If present, change the gray pixel in column 3 to blue, and the gray pixel in column 7 to red."