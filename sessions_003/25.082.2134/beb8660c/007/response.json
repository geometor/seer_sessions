{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nTransforms the input grid by identifying rows with non-black pixels (\"data rows\"), compressing the non-black pixels within each data row to the right, and stacking the modified data rows at the bottom of the output grid. Remaining rows at the top are filled with black pixels.\n\"\"\"\n\nimport numpy as np\n\ndef _is_data_row(row):\n    \"\"\"Checks if a row contains at least one non-black pixel.\"\"\"\n    return np.any(row != 0)\n\ndef _compress_row(row):\n    \"\"\"Compresses non-black pixels to the right, maintaining order.\"\"\"\n    non_black_pixels = row[row != 0]\n    compressed_row = np.zeros_like(row)\n    compressed_row[-len(non_black_pixels):] = non_black_pixels\n    return compressed_row\n\ndef transform(input_grid):\n    \"\"\"Transforms the input grid according to the described rule.\"\"\"\n    input_grid = np.array(input_grid)\n    rows, cols = input_grid.shape\n    output_grid = np.zeros_like(input_grid)\n\n    # Identify Data Rows\n    data_rows = []\n    data_rows_indices = []\n    for i, row in enumerate(input_grid):\n        if _is_data_row(row):\n            data_rows.append(row)\n            data_rows_indices.append(i)\n\n\n    # Compress Data Rows\n    compressed_rows = []\n    for row in data_rows:\n        compressed_rows.append(_compress_row(row))\n\n    # Stack Modified Rows\n    start_row = rows - len(compressed_rows)\n    for i, row in enumerate(compressed_rows):\n        output_grid[start_row + i, :] = row\n\n    return output_grid.tolist()\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 5272,
    "candidates_token_count": 413,
    "total_token_count": 5685,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.898498
}