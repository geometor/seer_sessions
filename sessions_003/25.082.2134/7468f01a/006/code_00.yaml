examples:
  - example_id: 1
    input_shape: [10, 15]
    output_shape: [4, 8]
    input_objects:
      - object_id: 1
        color: 8
        bounding_box: [5:10, 2:10] # row_start:row_end, col_start:col_end
      - object_id: 2
        color: 2
        bounding_box: [ 6:9, 3:5 ]
    output_objects:
        - object_id: 1 #re-using object ID even though structure might change after transform
          color: 8
        - object_id: 2
          color: 2
    transformation:
      type: sub_grid_transpose_rearrange
      details: |
          Selects the sub-grid defined by non-zero pixels.
          The sub-grid is transposed and rearranged to form the output.

  - example_id: 2
    input_shape: [12, 16]
    output_shape: [5, 5]
    input_objects:
      - object_id: 1
        color: 4
        bounding_box: [ 1:7, 3:8 ]
      - object_id: 2
        color: 1
        bounding_box: [ 3:7, 5:7]
    output_objects:
      - object_id: 1
        color: 4
      - object_id: 2
        color: 1
    transformation:
       type: sub_grid_transpose_rearrange
       details: |
          Selects the sub-grid defined by non-zero pixels.
          The sub-grid is transposed and rearranged to form the output.

  - example_id: 3
    input_shape: [15, 17]
    output_shape: [4, 6]
    input_objects:
        - object_id: 1
          color: 6
          bounding_box: [7:12, 2:8]
        - object_id: 2
          color: 3
          bounding_box: [ 7:12, 5:7]

    output_objects:
      - object_id: 1
        color: 6
      - object_id: 2
        color: 3
    transformation:
      type: sub_grid_transpose_rearrange
      details: |
        Select the sub-grid defined by non-zero pixels.
        The subgrid appears to be transposed and rearranged.