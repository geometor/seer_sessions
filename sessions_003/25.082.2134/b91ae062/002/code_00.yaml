observations:
  - task: "b91ae062"
    examples:
      - example_id: 1
        input_grid_dimensions: [3, 3]
        output_grid_dimensions: [6, 6]
        input_pixel_counts:  {0: 5, 6: 3, 7: 1}
        output_pixel_counts: {0: 20, 6: 12, 7: 4}
        replication_factor: [2, 2]
        pixel_count_multiplier: 4

      - example_id: 2
        input_grid_dimensions: [3, 3]
        output_grid_dimensions: [6, 6]
        input_pixel_counts: {0: 5, 1: 2, 4: 2}
        output_pixel_counts: {0: 20, 1: 8, 4: 8}
        replication_factor: [2, 2]
        pixel_count_multiplier: 4
      - example_id: 3
        input_grid_dimensions: [3, 3]
        output_grid_dimensions: [9, 9]
        input_pixel_counts: {0: 5, 3: 2, 2: 1, 7: 1}
        output_pixel_counts: {0: 45, 3: 18, 2: 9, 7: 9}
        replication_factor: [3, 3]
        pixel_count_multiplier: 9
      - example_id: 4
        input_grid_dimensions: [3, 3]
        output_grid_dimensions: [9, 9]
        input_pixel_counts: {0: 4, 8: 2, 6: 2, 9: 1}
        output_pixel_counts: {0: 36, 8: 18, 6: 18, 9: 9}
        replication_factor: [3, 3]
        pixel_count_multiplier: 9
      - example_id: 5
        input_grid_dimensions: [3, 3]
        output_grid_dimensions: [12, 12]
        input_pixel_counts: {0: 4, 2: 2, 4: 1, 3: 1, 8: 1}
        output_pixel_counts: {0: 64, 2: 32, 4: 16, 3: 16, 8: 16}
        replication_factor: [4, 4]
        pixel_count_multiplier: 16
    general_rule: "Each pixel in the input grid is replicated by a factor that increases the dimensions and multiplies pixel_counts."
