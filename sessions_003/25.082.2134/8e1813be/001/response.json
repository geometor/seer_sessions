{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nExtracts specific rows of uniform color from the input grid and stacks them to create the output grid.\n\"\"\"\n\nimport numpy as np\n\ndef is_uniform(row):\n    # Check if all elements in the row are the same.\n    return np.all(row == row[0])\n\ndef transform(input_grid):\n    # Initialize an empty list to hold the selected rows.\n    selected_rows = []\n\n    # Iterate through each row of the input grid.\n    for row in input_grid:\n        # Check if the row is uniform and not all zeros (black).\n        if is_uniform(row) and row[0] != 0:\n            # Add the row to the list of selected rows.\n            selected_rows.append(row)\n\n    # Convert the list of selected rows into a NumPy array.\n    # If no rows were selected, return an empty array of shape (0,0)\n    if not selected_rows:\n        return np.array([]).reshape(0, 0)\n    \n    first_row_len = len(selected_rows[0])\n    uniform_selected_rows = [row for row in selected_rows if len(row) == first_row_len]\n\n    output_grid = np.array(uniform_selected_rows)\n    \n    if output_grid.size == 0:\n      return np.array([]).reshape(0,0)\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3023,
    "candidates_token_count": 328,
    "total_token_count": 3351,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 5.92367
}