example_1:
  input:
    objects:
      - color: 3
        shape: rectangle
        size: 9 # pixels
      - color: 8
        shape: rectangle
        size: 8
      - color: 7
        shape: rectangle
        size: 8
      - color: 6
        shape: rectangle
        size: 8
      - color: 9
        shape: rectangle
        size: 8
      - color: 5
        shape: irregular # L-shapes, singletons, etc.
        size: 6
      - color: 0  # Treat 0 as structural, not just empty space
        shape: fill
        size: 34 # background matrix

  output:
      - color: 3
      - color: 8
      - color: 7
      - color: 6
      - color: 9
      - color: 0
    arrangement: 3x3 grid
    rule: "The output grid contains one instance of each contiguous non-zero color block's representative digit from the input grid. The color blocks are ordered from top to bottom, and left to right, and include zero regions between the color blocks"

example_2:
  input:
    objects:
      - color: 2
        shape: rectangle
        size: 9
      - color: 7
        shape: rectangle
        size: 8
      - color: 5
        shape: irregular
        size: 6
      - color: 0
        shape: fill
        size: 58
  output:
    arrangement: 3x3 grid
    objects:
      - color: 2
      - color: 7
      - color: 0
    rule: "The output grid contains one instance of each contiguous non-zero color blocks's representative digit from the input grid, ordered from top to bottom, and left to right, interspersed with zeros."