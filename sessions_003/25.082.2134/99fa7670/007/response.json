{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nTransforms an input grid by expanding non-zero pixels horizontally and vertically, inserting rows of zeros.\n\n1. Iterate through rows of the input grid.\n2. For each row, expand horizontally:\n   - If a non-zero pixel is found, fill the rest of the row with that pixel's value.\n3. Replicate Vertically:\n    - Place the expanded row in the output.\n    - For each subsequent row: insert a row of all zeros, then another copy of the expanded row.\n\"\"\"\n\nimport numpy as np\n\ndef expand_row_horizontally(row):\n    \"\"\"Expands a single row by filling to the right after a non-zero pixel.\"\"\"\n    expanded_row = np.copy(row)\n    found_non_zero = False\n    for i in range(len(row)):\n        if row[i] != 0:\n            expanded_row[i:] = row[i]\n            found_non_zero = True\n            break  # Stop after the first non-zero value\n    return expanded_row\n\ndef transform(input_grid):\n    \"\"\"Transforms the input grid according to the specified rules.\"\"\"\n    input_grid = np.array(input_grid)\n    rows, cols = input_grid.shape\n    output_grid = []\n\n    for row_index in range(rows):\n        # Horizontal Expansion\n        expanded_row = expand_row_horizontally(input_grid[row_index])\n\n        # Vertical Replication\n        output_grid.append(expanded_row)\n        for _ in range(row_index + 1, rows):\n           output_grid.append(np.zeros(cols, dtype=int))\n           output_grid.append(expanded_row)\n    return np.array(output_grid)\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3748,
    "candidates_token_count": 400,
    "total_token_count": 4148,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 6.848848
}