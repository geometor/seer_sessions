examples:
  - example_1:
      objects:
        - id: obj1
          type: L_shape
          color: 4
          pairs: [((1,1),(1,2)), ((1,1), (2,1))] # Pairs that could form this L
          output_position: (0,1),(0,2),(1,1),(1,2),(2,1),(2,2)
        - id: obj2
          type: L_shape
          color: 2
          pairs: [((3,2), (3,3)), ((3,3), (3,4)), ((3,3), (4,3))]
          output_position: None # The 2s don't make it to the output.

      actions:
        - action1:
            type: create_L
            input: obj1.pairs
            output: obj1
        - action2:
            type: create_L
            input: [((2, 3), (3, 3))]
            output: L_shape, color 2 # Not represented in output
        - action3:
            type: select
            input: obj1
            output: output_grid
        - action4:
            type: transform
            description: "Combine L shapes, prioritizing those with more connections"
            input: [obj1]
            output: output_grid
      output_shape: (3,3)


  - example_2:
      objects:
        - id: obj1
          type: L_shape
          color: 3
          pairs: [((1,1),(1,7))]
          output_position: (0,1),(0,2),(1,1),(1,2),(2,0),(2,3) #Positions in output
        - id: obj2
          type: L_shape
          color: 2
          pairs: [((2,3),(2,4)), ((2,3), (3,3)), ((2,4), (3,4))]
      actions:
         - action1:
             type: create_L
             input: obj1.pairs # Simplified representation of forming L
             output: obj1
         - action2:
            type: create_L
            input: [((2, 3), (2, 4))]
            output: L_shape, color 2
         - action3:
             type: transform
             description: "Combine L shapes and potentially rotate, prioritizing those with more connections."
             input: [obj1] # Only using obj1 related L's
             output: output_grid
      output_shape: (3,5)
  - example_3:
      objects:
       - id: obj1
         type: L_shape
         color: 6
         pairs: [((5,3),(10,3))]
         output_position: (0,1),(1,1),(2,0),(2,1),(2,2),(3,1),(3,2)
       - id: obj2
         type: L_shape
         color: 8
         pairs:  [((8, 4), (8, 5)), ((8, 5), (8, 6)), ((8, 5), (9, 5)), ((8, 6), (9, 6)), ((9, 5), (9, 6))]

      actions:
        - action1:
            type: create_L
            input: obj1.pairs
            output: obj1

        - action2:
            type: create_L
            input: obj2.pairs
            output: obj2 # Not represented
        - action3:
            type: select #select obj1
            input: obj1
            output: output_grid

        - action4:
            type: transform
            input: [obj1] # using L of color 6
            output: output_grid

      output_shape: (4,4)

  - example_4:
      objects:
       - id: obj1
         type: L_shape
         color: 8
         pairs: [((1,2),(1,11)),((1,2),(6,2)),((1,11),(6,11))]
         output_position: (0,3),(0,4),(1,2),(1,3),(2,7),(3,5),(3,6)
       - id: obj2
         type: L_shape
         color: 4
         pairs: [((2,6), (2,7)), ((2, 6), (3, 6)), ((3, 5), (3, 6)), ((4, 9), (5, 9))]

      actions:
        - action1:
            type: create_L
            input: obj1.pairs
            output: obj1

        - action2:
            type: create_L
            input: obj2.pairs
            output: obj2 # Not represented

        - action3:
            type: select #select obj1
            input: obj1
            output: output_grid

        - action4:
            type: transform
            input: [obj1]
            output: output_grid

      output_shape: (4,8)