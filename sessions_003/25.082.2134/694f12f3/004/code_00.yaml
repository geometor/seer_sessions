objects:
  - name: grid
    type: 2D array
    properties:
      shape: (rows, columns)
      cell_values: integers (0-9) representing colors
  - name: yellow_block
    type: contiguous_region
    properties:
      color: yellow (4)
      bounding_box: (min_row, max_row, min_col, max_col)
      inner_region: (inner_min_row, inner_max_row, inner_min_col, inner_max_col)
      inner_color: blue (1) or red (2)

actions:
  - name: find_contiguous_blocks
    input: grid, color
    output: list of yellow_blocks
  - name: get_bounding_box
    input: yellow_block
    output: bounding_box
  - name: get_inner_region
    input: bounding_box
    output: inner_region
    constraints: inner region is one pixel inset from the bounding box on all sides
  - name: determine_inner_region_color
    input: list of yellow_blocks, grid shape, bounding_boxes.
    output: list of colors for inner regions
    logic:
      - If one yellow_block, color based on horizontal position relative to grid center.
      - If multiple yellow_blocks:
            - Leftmost yellow block inner region gets color red (2).
            - Rightmost yellow block inner region gets color blue (1).
            - Other blocks inner regions get the background color (0).
  - name: transform_grid
    input: grid
    output: modified grid
    process: |
       1. Find all yellow blocks.
       2. Calculate bounding box for each yellow block.
       3. Determine the inner region for each yellow block
       4. Determine the color of each inner region based on position.
       5. Recolor the inner regions of the output grid.
