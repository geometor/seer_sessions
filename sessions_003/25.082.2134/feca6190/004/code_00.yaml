objects:
  - name: input_grid
    type: 1D array
    elements: integers (0-9)

  - name: output_grid
    type: 2D array
    elements: integers (0-9)
    properties:
      - shape: square (rows == columns)

actions:
  - name: determine_output_size
    input: input_grid
    logic: |
        Calculate the number of non-zero elements (N).
        Calculate the total elements of input grid (I).
        Output grid side length = I + (I-N)*2 = 3*I - 2N

  - name: place_elements
    input: input_grid, output_grid
    logic: |
      For each non-zero element in input_grid:
          - Determine the number of preceding zeros (Z).
          - Place the element at output_grid[Z][input_index].
          - Replicate the element diagonally (down-right).
          - Replicate the element anti-diagonally (down-left).

  - name: replicate_diagonally
      input: element, row, col, grid
      logic: |
          While row and col are within grid bounds:
              grid[row][col] = element
              row += 1
              col += 1
  - name: replicate_anti_diagonally
      input: element, row, col, grid
      logic: |
          While row is within bound, and col >= 0:
            grid[row][col] = element;
            row+=1
            col-=1
