objects:
  - name: input_grid
    type: grid
    properties:
      colors: [0, 1, 2]  # Black, Blue, Red
      blue_pixels: varies # Positions of blue pixels
  - name: output_grid
    type: grid
    properties:
      colors: [0,2]
      red_rectangle:
        top_row: 0       # Always starts at the top row
        left_column: varies  # Leftmost column with a blue pixel in input
        width: varies     # Number of columns containing a blue pixel on row 0
        height: varies # Depends if there are other blues below the first row

actions:
  - name: identify_blue_row0
    description: Find all blue pixels in the top row of the input grid.
  - name: identify_blue_below
    description: Find if there are any blue pixels below the top row
  - name: determine_width
    description: Calculate the width based on the columns containing blue in the top row.
  - name: determine_height
    description: If there are blues below, height = 2, otherwise height = 1
  - name: create_red_rectangle
    description: Create a red rectangle in the output grid based on calculated dimensions.
  - name: clear_other_pixels
    description: Set all non-red pixels to black.