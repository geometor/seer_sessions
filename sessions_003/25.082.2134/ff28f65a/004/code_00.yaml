task: "Detect 2x2 Red Blocks"
examples:
  - id: 1
    input_size: [5, 5]
    red_blocks: [[0, 0]]
    output_size: [3,3]
  - id: 2
    input_size: [5, 5]
    red_blocks: [[1, 1], [3, 3]]
    output_size: [3,3]
  - id: 3
    input_size: [7, 7]
    red_blocks: [[1, 1], [2, 4], [4, 2]]
    output_size: [3,3]
  - id: 4
    input_size: [6, 6]
    red_blocks: [[1, 1], [4, 2]]
    output_size: [3,3]
  - id: 5
    input_size: [3, 3]
    red_blocks: [[1, 1]]
    output_size: [3,3]
  - id: 6
    input_size: [7, 7]
    red_blocks: [[0, 4], [2, 1], [3, 4], [5, 1]]
    output_size: [3,3]
  - id: 7
    input_size: [7, 7]
    red_blocks: [[0, 4], [1, 1], [3, 5], [4, 0], [5, 3]]
    output_size: [3,3]
  - id: 8
    input_size: [7, 7]
    red_blocks: [[0, 2], [0, 5], [2, 0], [3, 3]]
    output_size: [3,3]
objects:
  - name: InputGrid
    type: Grid
    properties:
      - cells: Integer values (0-9 representing colors)
      - height: Variable (1-30)
      - width: Variable (1-30)
  - name: RedBlock
    type: Object
    properties:
      - color: Red (value 2)
      - shape: 2x2 square
      - position: Top-left corner coordinates [row, col] within InputGrid
  - name: OutputGrid
    type: Grid
    properties:
      - cells: Integer values (0 or 1)
      - height: derived from input grid
      - width: derived from input grid
actions:
  - name: DetectRedBlocks
    input: InputGrid
    output: List of RedBlock positions
    description: Iterates through all possible 2x2 subgrids within InputGrid and identifies RedBlocks.
  - name: CreateOutputGrid
    input: InputGrid, List of RedBlock positions
    output: OutputGrid
    description: Creates an OutputGrid where each cell represents the presence (1) or absence (0) of a RedBlock in the corresponding region of the InputGrid. The output grid height and width are one less than the corresponding input grid dimensions.
