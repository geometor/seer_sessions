observations:
  - task_id: "88a10436"
    example_1:
      input_objects:
        - object_1:
            pixels: [(0, 1), (1, 1), (2, 1), (2, 2), (1, 2), (1, 0)]
            bounding_box: (0, 2, 0, 2)
            color: [2,1,3]
        - object_2:
            pixels: [(5, 5)]
            bounding_box: (5, 5, 5, 5)
            color: [5]
      output_objects:
        - object_1:
            pixels: [(4, 5), (5, 5), (6, 5), (6, 6), (5, 6), (5, 4)]
            bounding_box: (4, 6, 4, 6)
            color: [2,1,3]
        - object_2:
            pixels:  [(5,5)] # this should not change color or location
            bounding_box: (5,5,5,5) #single pixel, bounding box = pixel location
            color: [5]
      transformations:
        - object_1 appears to be moved to where object_2 was and expanded, color is copied
        - object_2 appears to be removed and replaced
      notes:
        - "Single pixel objects in the input seem to serve as a reference/anchor for bigger objects."
        - "Transformation seems to depend on relative positioning between objects. "

    example_2:
      input_objects:
        - object_1:
            pixels: [(0, 4), (1, 4), (2, 4), (2, 5), (1, 5), (2, 6)]
            bounding_box: (0, 2, 4, 6)
            color: [6,1,2]
        - object_2:
            pixels: [(5, 1)]
            bounding_box: (5, 5, 1, 1)
            color: 5
      output_objects:
        - object_1:
            pixels: [(4, 0), (5, 0), (6, 0), (6, 1), (5, 1), (6, 2)]
            bounding_box: (4, 6, 0, 2)
        - object_2: # stays same location/color
            pixels: [(5,1)]
            bounding_box: (5,5,1,1)

      transformations:
        - object_1 is placed based on location of object_2 - then mirrored
      notes:
        - "Again, the single-pixel object acts as an anchor. The larger object is placed relative to this and expands."

    example_3:
      input_objects:
       - object_1:
          pixels: [(2, 4)]
          bounding_box: (2, 2, 4, 4)
          color: [5]
       - object_2:
          pixels: [(6, 1), (6, 2), (7, 2), (8, 2), (8, 3), (7, 3), (8, 1)]
          bounding_box: (6, 8, 1, 3)
          color: [2,3,1]
      output_objects:
        - object_1:  #stays same, gets additional mirroring pixels
            pixels: [(1, 3), (1, 4), (2, 4), (3, 4), (3, 5), (2, 5), (3, 3)]
            bounding_box: (1, 3, 3, 5)
        - object_2:  #stays same
            pixels: [(6,1),(6,2),(7,2),(8,2), (8,3),(7,3),(8,1)]
            bounding_box: (6,8,1,3)

      transformations:
        - it appears the single pixel expands to replace the multi pixel
      notes:
        - "The multi-pixel object remains unchanged. single pixel changes."