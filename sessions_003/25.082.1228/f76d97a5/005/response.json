{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\n1.  **Identify Edge Pixels:** An \"edge\" pixel is defined as any pixel located on the first row, last row, first column, or last column of the input grid.\n\n2.  **Preserve Edge Values:** If a pixel is an edge pixel, and its color appears on ANY edge in the grid, its value remains the same in the output grid.\n\n3.  **Zero Out Other Pixels:** If a pixel is not an edge pixel, its value is set to 0 in the output grid.\n\n4.  **Zero Non-Edge Values** If a pixel *is* an edge pixel, but its color *does not* appear in another edge, its value is set to 0 in the output grid.\n\"\"\"\n\nimport numpy as np\n\ndef is_edge_pixel(grid, row, col):\n    \"\"\"Checks if a pixel is on the edge of the grid.\"\"\"\n    rows, cols = grid.shape\n    return row == 0 or row == rows - 1 or col == 0 or col == cols - 1\n\ndef get_edge_values(grid):\n    \"\"\"Returns a set of unique values present on the edges of the grid.\"\"\"\n    rows, cols = grid.shape\n    edge_values = set()\n    for r in range(rows):\n        for c in range(cols):\n            if is_edge_pixel(grid, r, c):\n                edge_values.add(grid[r, c])\n    return edge_values\n\ndef transform(input_grid):\n    # initialize output_grid\n    output_grid = np.zeros_like(input_grid)\n    rows, cols = input_grid.shape\n    edge_values = get_edge_values(input_grid)\n\n    # change output pixels\n    for r in range(rows):\n        for c in range(cols):\n            if is_edge_pixel(input_grid, r, c):\n                if input_grid[r,c] in edge_values:\n                    output_grid[r, c] = input_grid[r, c]\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 4925,
    "candidates_token_count": 470,
    "total_token_count": 5395,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 5.811137
}