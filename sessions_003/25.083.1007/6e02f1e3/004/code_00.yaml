task: 6e02f1e3
observations:
  - example_1:
      input:
        values: [2, 3]
        counts: {2: 4, 3: 5}
        grid: [[2, 2, 2], [3, 2, 3], [3, 3, 3]]
      output:
        values: [0, 5]
        counts: {0: 6, 5: 3}
        grid: [[5, 0, 0], [0, 5, 0], [0, 0, 5]]
        description: "Input has 2 and 3. Output is diagonal of 5s."
  - example_2:
      input:
        values: [2, 3, 4]
        counts: {2: 3, 3: 3, 4: 3}
        grid: [[3, 3, 3], [4, 2, 2], [4, 4, 2]]
      output:
        values: [0]
        counts: {0: 9}
        grid: [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
        description: "Input has 2, 3, and 4. Output is all 0s."
  - example_3:
      input:
        values: [4]
        counts: {4: 9}
        grid: [[4, 4, 4], [4, 4, 4], [4, 4, 4]]
      output:
        values: [0, 5]
        counts: {0: 6, 5: 3}
        grid: [[5, 5, 5], [0, 0, 0], [0, 0, 0]]
        description: "Input has only 4. Output is top row of 5s."
  - example_4:
      input:
        values: [3]
        counts: {3: 9}
        grid: [[3, 3, 3], [3, 3, 3], [3, 3, 3]]
      output:
        values: [0, 5]
        counts: {0: 6, 5: 3}
        grid: [[5, 5, 5], [0, 0, 0], [0, 0, 0]]
        description: "Input has only 3. Output is top row of 5s."
  - example_5:
      input:
        values: [3, 4]
        counts: {3: 3, 4: 6}
        grid: [[4, 4, 4], [4, 4, 4], [3, 3, 3]]
      output:
        values: [0, 5]
        counts: {0: 6, 5: 3}
        grid: [[5, 0, 0], [0, 5, 0], [0, 0, 5]]
        description: "Input has 3 and 4. Output is diagonal of 5s."
prioritized_conditions:
  - condition: "Input contains only 2 and 3"
    action: "Output grid has a diagonal (top-left to bottom-right) of 5s, and 0s otherwise."
  - condition: "Input contains only 3 and 4"
    action: "Output grid has a diagonal (top-left to bottom-right) of 5s, and 0s otherwise."
  - condition: "Input contains only 2 and 4"
    action: "Output grid has an anti-diagonal (top-right to bottom-left) of 5s, and 0s otherwise."
  - condition: "Input contains 2, 3, and 4"
    action: "Output grid is all 0s."
  - condition: "Input contains only 3"
    action: "Output is top row of 5s, 0s otherwise"
  - condition: "Input contains only 4"
    action: "Output is top row of 5s, 0s otherwise"