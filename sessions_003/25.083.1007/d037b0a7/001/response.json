{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe rightmost non-zero color in each row is setting colors to the left, then the full row is propagated downwards, filling the output grid below that row with the color, and stopping with the grid boundary.\n\"\"\"\n\nimport numpy as np\n\ndef get_rightmost_nonzero(row):\n    \"\"\"Finds the index of the rightmost non-zero element in a 1D array.\"\"\"\n    non_zero_indices = np.nonzero(row)[0]\n    return non_zero_indices[-1] if non_zero_indices.size > 0 else None\n\ndef transform(input_grid):\n    \"\"\"Transforms the input grid according to the observed rule.\"\"\"\n    output_grid = np.copy(input_grid)\n    rows, cols = output_grid.shape\n\n    # Iterate through each row\n    for i in range(rows):\n        # Identify Seed: rightmost non-zero color\n        rightmost_index = get_rightmost_nonzero(output_grid[i])\n\n        #if no non-zero values, skip\n        if rightmost_index is None:\n          continue\n\n        #get the seed\n        seed_color = output_grid[i, rightmost_index]\n\n        # Propagation: go left setting colors\n        for j in range(cols):\n            if output_grid[i,j] != 0 and j < rightmost_index:\n              output_grid[i,j] = seed_color\n        \n    # Copy down: Copy all rows downwards\n    for i in range(rows):\n      # Identify Seed: rightmost non-zero color\n      rightmost_index = get_rightmost_nonzero(output_grid[i])\n      if rightmost_index is None:\n        continue\n\n      seed_color = output_grid[i, rightmost_index]\n      for k in range(i + 1,rows):\n        for l in range(cols):\n          if output_grid[k,l] != 0:\n            output_grid[k,l] = output_grid[i,l]\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 1657,
    "candidates_token_count": 471,
    "total_token_count": 2128,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 7.872807
}