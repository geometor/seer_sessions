objects:
  - name: input_grid
    type: 2D array
    properties:
      contains: integers [0-9] representing colors
      sections:
        - top_section:
            description: Contains only 0 and 9 before the first row containing 1.
            purpose: Source of information for transformation.
        - bottom_section:
            description: Starts from the first row containing 1.
            purpose: Ignored in the transformation.
  - name: output_grid
    type: 2D array
    properties:
      dimensions: 3x3
      contains: integers [0, 2] representing colors (white and red)
      purpose: Result of the transformation.
  - name: maroon_pixels
    type: pixels
    value: 9
    location: top_section of input_grid
  - name: red_pixels
    type: pixels
    value: 2
    location: output_grid

actions:
  - name: determine_top_section
    input: input_grid
    output: top_section
    rule: Extract rows from the input_grid until a row containing 1 is encountered.

  - name: map_maroon_to_red
    input: top_section, maroon_pixels
    output: output_grid, red_pixels
    rule: |
          The positions of the red pixels in output_grid are determined by a specific, consistent transformation of the positions of maroon pixels in the top_section. This is NOT based on counting rows/columns, but on direct positional mapping with a shift. After careful analysis, we can see the relation of indices is:
            output_grid[r][c] = 2 if input_grid contains 9 at position [(c, rows_top_section - r - 1)]
            and 0 elsewhere.
