"""
Transforms the input grid by identifying three 3x3 sections separated by two vertical gray lines. 
The first 3x3 section (SourceBlock) is copied to the output.
The second 3x3 section in the output (MiddleBlock) is generated by rotating the SourceBlock 90 degrees clockwise.
The third 3x3 section in the output (RightBlock) is generated by rotating the MiddleBlock 90 degrees clockwise.
The gray separators are preserved in their original locations.
"""

import numpy as np

def rotate_90_clockwise(block):
  """Rotates a 2D numpy array 90 degrees clockwise."""
  # Use np.rot90 with k=-1 for clockwise rotation
  return np.rot90(block, k=-1)

def transform(input_grid):
    """
    Applies the rotation transformation to the input grid sections.

    Args:
        input_grid (list of lists): The input grid.

    Returns:
        list of lists: The transformed output grid.
    """
    # Convert input to numpy array for easier slicing and rotation
    input_array = np.array(input_grid, dtype=int)
    
    # Initialize output_grid as a copy of the input_grid
    # This handles copying the source block and separators
    output_array = np.copy(input_array)

    # --- Identify Sections ---
    # Section 1 (SourceBlock): Columns 0-2
    source_block = input_array[:, 0:3]
    
    # Separator 1: Column 3 (already copied)
    
    # Section 2 (Placeholder1 / MiddleBlock destination): Columns 4-6
    # Separator 2: Column 7 (already copied)
    
    # Section 3 (Placeholder2 / RightBlock destination): Columns 8-10

    # --- Perform Transformations ---
    # 1. Create MiddleBlock by rotating SourceBlock 90 degrees clockwise
    middle_block = rotate_90_clockwise(source_block)

    # 2. Create RightBlock by rotating MiddleBlock 90 degrees clockwise
    right_block = rotate_90_clockwise(middle_block)

    # --- Construct Output Grid ---
    # Place the MiddleBlock into the output array at columns 4-6
    output_array[:, 4:7] = middle_block
    
    # Place the RightBlock into the output array at columns 8-10
    output_array[:, 8:11] = right_block

    # Convert the output numpy array back to a list of lists
    output_grid = output_array.tolist()

    return output_grid
