task_description: Compare pixels symmetrically across a central gray vertical line and mark non-white matches.

elements:
  - name: input_grid
    type: grid
    properties:
      height: 3
      width: 7
      pixels:
        colors: [white, blue, gray] # 0, 1, 5
        distribution:
          - color: gray (5)
            location: Forms a vertical line at the central column (index 3).
          - color: blue (1) / white (0)
            location: Occupy the remaining cells to the left and right of the gray line.
  - name: output_grid
    type: grid
    properties:
      height: 3
      width: 3 # Matches the width of the input grid's left section
      pixels:
        colors: [white, red] # 0, 2

relationships:
  - type: symmetry_axis
    source: input_grid
    target: gray_column
    details: The column containing only gray (5) pixels acts as a vertical axis of symmetry. In the examples, this is column index 3.
  - type: pixel_comparison
    source: input_grid
    target: output_grid
    details: |
      Each pixel `(r, c)` in the output grid corresponds to a pixel `(r, c)` in the left section (columns 0 to axis_col - 1) of the input grid.
      The value of `output[r][c]` depends on comparing `input[r][c]` with its symmetrical counterpart `input[r][width - 1 - c]` across the gray axis.
  - type: color_mapping
    source: pixel_comparison result
    target: output_grid pixel value
    details: |
      If `input[r][c]` equals `input[r][width - 1 - c]` AND `input[r][c]` is not white (0), then `output[r][c]` is red (2).
      Otherwise, `output[r][c]` is white (0).

constants:
  - name: axis_color
    value: gray (5)
  - name: background_color
    value: white (0)
  - name: primary_input_color
    value: blue (1)
  - name: output_match_color
    value: red (2)

assumptions:
  - The input grid will always have an odd number of columns.
  - There will always be exactly one column consisting entirely of the axis color (gray).