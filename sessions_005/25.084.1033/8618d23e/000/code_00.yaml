task_description: Split the input grid horizontally in the middle, create a larger output grid, and place the two halves shifted relative to each other, filling the gap with maroon (9).

grid_properties:
  - input_height: H
  - input_width: W
  - output_height: H + 1
  - output_width: W + 1
  - fill_color: 9 # maroon

definitions:
  - split_row_index: floor(H / 2) # Integer division, effectively H // 2

objects:
  - name: input_grid
    type: grid
    source: input
  - name: output_grid
    type: grid
    destination: output
    properties:
      height: H + 1
      width: W + 1
      initial_fill: 9 # maroon
  - name: top_half
    type: subgrid
    source: input_grid
    region: rows 0 to split_row_index - 1, all columns (0 to W - 1)
  - name: bottom_half
    type: subgrid
    source: input_grid
    region: rows split_row_index to H - 1, all columns (0 to W - 1)

actions:
  - action: create_grid
    target: output_grid
    properties:
      height: H + 1
      width: W + 1
      fill_value: 9
  - action: copy_subgrid
    source: top_half
    target: output_grid
    target_location: top-left corner (row 0, col 0)
    target_region: rows 0 to split_row_index - 1, columns 0 to W - 1
  - action: copy_subgrid
    source: bottom_half
    target: output_grid
    target_location: shifted bottom-right (row split_row_index + 1, col 1)
    target_region: rows split_row_index + 1 to H, columns 1 to W

relationships:
  - The output grid dimensions are derived directly from the input grid dimensions.
  - The input grid is partitioned horizontally into `top_half` and `bottom_half` based on `split_row_index`.
  - The `fill_color` (maroon) occupies the cells in the `output_grid` not overwritten by the `copy_subgrid` actions, notably including row `split_row_index` and column 0 from row `split_row_index` onwards.
