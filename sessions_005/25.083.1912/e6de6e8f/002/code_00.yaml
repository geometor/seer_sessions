observations:
  - example: 1
    input_grid:
      dimensions: [2, 10]
      red_pixels: 2
      red_pixel_positions: [[0, 2], [0, 8]]
    output_grid:
      dimensions: [15, 7]
      green_pixel_position: [0, 3]
      red_pixels: 18
      red_stripes: 2
      red_stripe_positions: [2,8]
  - example: 2
    input_grid:
      dimensions: [2, 9]
      red_pixels: 1
      red_pixel_positions: [[0, 7]]
    output_grid:
      dimensions: [12, 7]
      green_pixel_position: [0, 3]
      red_pixels: 6
      red_stripes: 1
      red_stripe_positions: [7]

  - example: 3
    input_grid:
      dimensions: [2, 10]
      red_pixels: 1
      red_pixel_positions: [[0, 8]]
    output_grid:
      dimensions: [14, 7]
      green_pixel_position: [0, 3]
      red_pixels: 9
      red_stripes: 1
      red_stripe_positions: [8]
objects:
  - name: input_grid
    type: 2D array
    properties:
      - dimensions: variable
      - colors: integer values (0-9)

  - name: output_grid
    type: 2D array
    properties:
      - dimensions:
        height: variable, derived from input width
        width: constant (7)
      - colors: integer values (0-9)

actions:
  - name: initialize_output
    description: Create output grid with all white pixels.
    parameters:
      - width: 7
      - height: derived from formula

  - name: place_green_pixel
    description: Place a single green pixel in the output grid.
    parameters:
      - position: [0, 3] (row 0, column 3)

  - name: place_red_stripes
    description: Place vertical red stripes based on input red pixel positions.
    parameters:
        - x_positions: column indices of red pixels in input grid
        - starting_row: 3
        - end_row: calculated based on example number and stripe index.
