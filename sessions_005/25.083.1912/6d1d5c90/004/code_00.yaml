facts:
  - observation: "Rows starting with '2' are removed."
    objects:
      - name: "row"
        properties:
          - starts_with: "2"
    actions:
      - "remove"

  - observation: "Rows starting with '6' are processed."
    objects:
      - name: "row"
        properties:
          - starts_with: "6"
    actions:
      - "process"

  - observation: "The first element ('6') of rows starting with '6' is removed."
    objects:
      - name: "row"
        properties:
          - starts_with: "6"
    actions:
      - "remove_first_element"

  - observation: "Remaining elements in processed '6' rows are truncated to the last six elements."
    objects:
      - name: "row_elements"
        properties: {}
    actions:
      - "truncate: 6"
      
  - observation: "The removed row elements are placed at the top of the grid."
      
  - observation: "All rows are truncated to 6 elements."
    objects:
      - name: "all_rows"
        properties:
          - length: "> 6"
    actions:
      - "truncate: 6"
      
  - observation: "Rows are ordered based on leading digit, then lexicographically."
    objects:
      - rows
    actions:
      - sort: "leading digit, lexicographic"

  - observation: "Digit Counts, across all examples, show that the input and expected outputs have the exact same digit counts, transformed output does not."
    examples:
      - input: "{2: 1, 1: 4, 9: 5, 8: 8, 6: 5, 4: 5, 3: 8, 5: 6}"
        expected: "{1: 4, 9: 5, 8: 8, 4: 5, 3: 8, 5: 6}"
        transformed: "{1: 1, 2: 1, 3: 9, 4: 6, 9: 6, 8: 7, 5: 6}"
      - input: "{6: 5, 8: 5, 4: 9, 9: 5, 3: 5, 2: 1, 1: 5, 5: 7}"
        expected:  "{4: 9, 1: 5, 5: 7, 8: 5, 9: 5, 3: 5}"
        transformed: "{2: 1, 3: 3, 4: 10, 8: 5, 9: 5, 1: 5, 5: 7}"
      - input: "{6: 5, 8: 6, 4: 8, 9: 6, 1: 4, 2: 1, 5: 6, 3: 6}"
        expected: "{5: 6, 3: 6, 1: 4, 4: 8, 8: 6, 9: 6}"
        transformed: "{2: 1, 8: 7, 9: 10, 1: 3, 4: 8, 5: 4, 3: 3}"
