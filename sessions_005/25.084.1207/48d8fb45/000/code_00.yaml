elements:
  - object: grid
    attributes:
      - type: input
      - size: variable (e.g., 10x10)
      - pixels: 
          - color: white (0) - background
          - color: gray (5) - marker (unique)
          - color: C (variable, e.g., yellow, blue, red) - pattern pixels
  - object: grid
    attributes:
      - type: output
      - size: 3x3
      - pixels:
          - color: white (0) - background
          - color: C (same as input pattern color)

definitions:
  - marker_pixel:
      description: The single pixel in the input grid with color gray (5).
      properties:
        - position: (row, column)
  - pattern_pixel_color:
      description: The color (C) of the pixels forming patterns, excluding white (0) and gray (5). This is the most frequent non-white, non-gray color.
  - pattern_component:
      description: A connected group of pixels (using 8-way adjacency) all having the pattern_pixel_color (C).
      properties:
        - pixels: list of (row, column) positions
        - bounding_box: (min_row, min_col, max_row, max_col)
        - top_left: (min_row, min_col)
  - distance:
      description: Manhattan distance between two pixels (r1, c1) and (r2, c2) calculated as |r1 - r2| + |c1 - c2|.
  - component_distance:
      description: The minimum Manhattan distance between the marker_pixel and any pixel belonging to a specific pattern_component.

relationships:
  - relation: selection_criterion
    description: The pattern_component relevant for the output is the one with the minimum component_distance to the marker_pixel.
  - relation: output_location
    description: The 3x3 output grid is extracted from the input grid starting at the top_left coordinates of the bounding_box of the selected pattern_component.

actions:
  - action: locate_marker
    description: Find the coordinates (r_g, c_g) of the gray (5) pixel.
  - action: identify_pattern_color
    description: Determine the most frequent pixel color (C) that is not white (0) or gray (5).
  - action: find_components
    description: Identify all connected components of pixels with color C.
  - action: calculate_distances
    description: Compute the component_distance for each pattern_component relative to the marker_pixel.
  - action: select_closest_component
    description: Choose the pattern_component with the smallest component_distance. If ties occur, a tie-breaking rule might be needed (e.g., lowest top_left row, then column), though not observed in examples.
  - action: determine_extraction_point
    description: Find the top-left corner (r_min, c_min) of the bounding box of the selected component.
  - action: extract_output
    description: Copy the 3x3 subgrid from the input starting at (r_min, c_min). Input[r_min : r_min+3, c_min : c_min+3].
