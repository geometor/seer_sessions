task_context:
  description: Isolate the largest object from the input grid.
  input_features:
    - grid: 2D array of integer colors (0-9)
    - background_color: white (0)
    - objects: Contiguous areas of non-background colors. All examples show exactly 3 objects.
  output_features:
    - grid: 2D array of integer colors (0-9)
    - content: Contains a single object from the input.
    - formatting: Cropped to the bounding box of the selected object.

transformation_rules:
  - action: identify_objects
    source: input_grid
    criteria: contiguous pixels with color != 0
    result: list of objects (each with pixel coordinates, color, and size)
  - action: calculate_object_sizes
    source: list of objects
    computation: count pixels for each object
    result: associating each object with its size (pixel count)
  - action: select_largest_object
    source: list of objects with sizes
    criteria: maximum size
    result: the single object with the most pixels (assuming uniqueness based on examples)
  - action: determine_bounding_box
    source: selected_largest_object
    computation: find min/max row and column indices of the object's pixels
    result: coordinates (min_row, min_col, max_row, max_col)
  - action: crop_and_create_output
    source: input_grid, selected_largest_object, bounding_box
    process: Create a new grid with dimensions derived from the bounding box. Copy the pixels from the input grid corresponding to the bounding box area. Only pixels belonging to the selected object retain their color; others within the bounding box become background (white '0'). *Correction*: Copy only the pixels within the bounding box from the input grid.
    result: output_grid