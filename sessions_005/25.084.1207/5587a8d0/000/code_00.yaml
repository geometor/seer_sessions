task_description: Create an output grid composed of concentric squares, where the colors and their order are determined by the frequency of non-background colors in the input grid.

elements:
  - element: grid
    description: A 2D array of pixels representing colors (0-9).
  - element: pixel
    description: A single cell in the grid with a color value.
  - element: background_color
    description: The most frequent color in the input grid, ignored during transformation. Identified by finding the mode of pixel values.
  - element: foreground_colors
    description: All unique colors present in the input grid, excluding the background color.
  - element: color_counts
    description: A mapping of each foreground color to its total count in the input grid.
  - element: sorted_colors
    description: Foreground colors sorted primarily by their count in ascending order. Ties are broken by sorting the colors by their numerical value in descending order.
  - element: output_grid
    description: A square grid whose size depends on the number of unique foreground colors (N). Size is (2N-1) x (2N-1).
  - element: concentric_squares
    description: The structure of the output grid, formed by layers of colors from the sorted_colors list. The color with the lowest count (first in sorted_colors) forms the center 1x1 square. The next color forms the surrounding 3x3 frame, and so on, until the outermost frame uses the color with the highest count.

relationships:
  - relationship: counts_determine_order
    description: The frequency of each foreground color in the input determines its position in the concentric squares of the output. Lower count means closer to the center.
  - relationship: number_of_colors_determines_size
    description: The number of unique foreground colors (N) determines the size of the output grid (2N-1) x (2N-1).

actions:
  - action: identify_background
    description: Find the most frequent pixel value in the input grid.
  - action: count_foreground_colors
    description: Count occurrences of all unique pixel values excluding the background color.
  - action: sort_colors
    description: Sort the foreground colors based on count (ascending) and then color value (descending for ties).
  - action: determine_output_size
    description: Calculate the side length of the output grid as S = 2 * (number of sorted colors) - 1.
  - action: construct_output
    description: Create an S x S grid and fill it with concentric squares using the sorted colors, starting from the center. The k-th color in the sorted list fills the pixels at Chebyshev distance k-1 from the center.