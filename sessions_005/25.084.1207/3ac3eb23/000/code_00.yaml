task_type: pattern_generation
grid_properties:
  - dimensions_preserved: true
  - background_color: 0 # white

objects:
  - type: pixel
    properties:
      - color: non-zero integer (1-9)
      - location: (row, column) coordinate in the input grid

actions:
  - name: identify_source_pixels
    inputs: input_grid
    outputs: list of source_pixel_objects (non-white pixels)

  - name: generate_vertical_pattern
    inputs:
      - source_pixel_object (color C, location (r, c))
      - grid_dimensions (height H, width W)
    outputs: set of new_pixel_locations and their color C
    description: |
      For each source pixel (C, (r, c)):
      1. Initialize a set of output pixels with {(r, c): C}.
      2. Iterate through rows i from r + 1 to H - 1.
      3. Calculate relative row difference: diff = i - r.
      4. If diff is odd:
         - Add (i, c - 1): C to the output set if c - 1 >= 0.
         - Add (i, c + 1): C to the output set if c + 1 < W.
      5. If diff is even:
         - Add (i, c): C to the output set.

  - name: construct_output_grid
    inputs:
      - grid_dimensions (H, W)
      - background_color (0)
      - list_of_generated_patterns (sets of {location: color})
    outputs: output_grid
    description: |
      1. Create an empty grid of dimensions H x W filled with the background color.
      2. For each generated pattern set associated with a source pixel:
         - Iterate through the {location: color} pairs in the set.
         - Place the color at the specified location in the output grid.
      (Note: Order might matter if patterns overlap, but in examples, they don't. Assume overwriting is acceptable if needed).

relationships:
  - The pattern generated by a source pixel depends only on its color, its location (r, c), and the grid dimensions.
  - The placement of new pixels in subsequent rows depends on the parity (odd/even) of the row difference relative to the source pixel's row.
  - Patterns from different source pixels are generated independently.