task_context:
  grid_dimensionality: 2D
  color_palette: 0-9 (white, blue, red, green, yellow, gray, magenta, orange, azure, maroon)

input_elements:
  - object: horizontal_line
    properties:
      - color: azure (8)
      - solid: true
      - orientation: horizontal
      - count: 1
  - object: vertical_line
    properties:
      - color: azure (8)
      - solid: true
      - orientation: vertical
      - count: 1
  - object: pattern_region
    properties:
      - shape: square
      - size: 6x6
      - content: predominantly green (3) and white (0) pixels
      - location: adjacent to both azure lines, in one of the four quadrants defined by their intersection
  - object: color_key_region
    properties:
      - shape: square
      - size: 2x2
      - content: four distinct non-azure, non-white pixels
      - location: adjacent to both azure lines, in the quadrant diagonally opposite to the pattern_region

transformation:
  - action: identify_lines
    actor: system
    inputs:
      - input_grid
    outputs:
      - horizontal_line_row_index
      - vertical_line_col_index
  - action: locate_regions
    actor: system
    inputs:
      - input_grid
      - horizontal_line_row_index
      - vertical_line_col_index
    outputs:
      - pattern_grid (6x6 subgrid)
      - color_key_grid (2x2 subgrid)
    description: >
      Determine the coordinates of the 6x6 pattern_grid and the 2x2 color_key_grid
      based on their positions relative to the intersection of the azure lines.
      The pattern grid contains green and white pixels. The color key grid contains
      four other colors. They are in diagonally opposite quadrants relative to the
      azure line intersection.
  - action: generate_output
    actor: system
    inputs:
      - pattern_grid
      - color_key_grid
    outputs:
      - output_grid (6x6)
    description: >
      Create a new 6x6 output grid. Divide the output grid and the pattern_grid
      into four 3x3 quadrants (top-left, top-right, bottom-left, bottom-right).
      Map each cell of the 2x2 color_key_grid to a corresponding quadrant:
      - color_key_grid[0, 0] -> top-left quadrant
      - color_key_grid[0, 1] -> top-right quadrant
      - color_key_grid[1, 0] -> bottom-left quadrant
      - color_key_grid[1, 1] -> bottom-right quadrant
      Iterate through each cell (r, c) in the 6x6 pattern_grid. Determine which
      3x3 quadrant it belongs to. Get the corresponding key_color from the
      color_key_grid. If pattern_grid[r, c] is green (3), set output_grid[r, c]
      to key_color. If pattern_grid[r, c] is white (0), set output_grid[r, c]
      to white (0).

output_elements:
  - object: output_grid
    properties:
      - shape: square
      - size: 6x6
      - content: derived from pattern_grid and color_key_grid