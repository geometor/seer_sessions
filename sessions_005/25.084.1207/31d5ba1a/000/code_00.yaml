task_description: Overlay two halves of the input grid using XOR logic to determine the output.

grid_properties:
  - input_grid_height: 6
  - input_grid_width: 5
  - output_grid_height: 3
  - output_grid_width: 5

color_properties:
  - input_colors: [0, 4, 9]  # White, Yellow, Maroon
  - output_colors: [0, 6] # White, Magenta
  - color_map: {0: white, 4: yellow, 9: maroon, 6: magenta}
  - spatial_constraint: Maroon (9) only in input rows 0-2. Yellow (4) only in input rows 3-5.

objects_and_layers:
  - name: top_layer
    description: The top 3 rows of the input grid (rows 0-2). Contains White (0) and Maroon (9).
    dimensions: 3x5
  - name: bottom_layer
    description: The bottom 3 rows of the input grid (rows 3-5). Contains White (0) and Yellow (4).
    dimensions: 3x5
  - name: output_layer
    description: The resulting 3x5 grid. Contains White (0) and Magenta (6).

transformation_rule:
  - name: elementwise_comparison
    description: Compares pixels at the same (row, column) position in the top_layer and bottom_layer.
    input1: Pixel color `C_top` at (r, c) from top_layer.
    input2: Pixel color `C_bottom` at (r, c) from bottom_layer (corresponding to input grid position (r+3, c)).
    output: Pixel color `C_out` at (r, c) in the output_layer.
    logic: |
      Define "active_top" as true if C_top is Maroon (9), false otherwise.
      Define "active_bottom" as true if C_bottom is Yellow (4), false otherwise.
      If active_top XOR active_bottom is true, then C_out is Magenta (6).
      Otherwise, C_out is White (0).