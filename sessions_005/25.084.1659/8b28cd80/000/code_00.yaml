task_context:
  description: "Transforms a 3x3 input grid containing a single colored pixel into a 9x9 output grid representing a fixed pattern associated with that pixel's color value."
  input_size: [3, 3]
  output_size: [9, 9]
  background_color: 0 # white

input_elements:
  - object: "colored_pixel"
    count: 1
    properties:
      - color: "Variable (non-white: 3, 4, 5, 7, 8 in examples)"
      - value: "The integer value corresponding to the color (e.g., 5 for gray)"
      - position: "Variable within the 3x3 grid"
  - object: "background"
    properties:
      - color: 0 # white
      - occupies: "All cells except the colored_pixel"

output_elements:
  - object: "digit_pattern"
    properties:
      - size: [9, 9]
      - structure: "A fixed 9x9 bitmap pattern specific to the input color's value."
      - colors:
          - foreground: "The color of the input colored_pixel"
          - background: 0 # white
      - relationship_to_input: "The pattern is selected based solely on the color value of the single non-white pixel in the input grid. The input pixel's position is ignored."

transformation:
  type: "Mapping"
  mapping_details:
    - input_property: "color value (digit) of the single non-white pixel"
    - output: "A predefined 9x9 grid pattern corresponding to that digit, rendered using the input color and white."
  predefined_patterns:
    - key: 3
      pattern: "9x9 grid for digit 3 (using color 3 and 0)"
    - key: 4
      pattern: "9x9 grid for digit 4 (using color 4 and 0)"
    - key: 5
      pattern: "9x9 grid for digit 5 (using color 5 and 0)"
    - key: 7
      pattern: "9x9 grid for digit 7 (using color 7 and 0)"
    - key: 8
      pattern: "9x9 grid for digit 8 (using color 8 and 0)"
    # Note: Patterns for other digits (0, 1, 2, 6, 9) might exist but are not shown in examples.