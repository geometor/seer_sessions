task_description: |
  Identify three non-background objects in the input grid. One object (mover) is positioned between the other two along a primary axis (vertical or horizontal) and its span along the perpendicular axis overlaps with the spans of the other two objects along that same perpendicular axis. The mover travels along the primary axis towards one of the other objects (split_object) until it reaches the grid edge. The split_object is modified: it is split along a line perpendicular to the mover's path, aligned with the mover's extent along that perpendicular dimension. The two resulting pieces are shifted apart along the mover's path by an amount equal to ceiling(mover's dimension perpendicular to path / 2). The third object (stable_object) remains unchanged. The final grid contains the stable_object, the two shifted pieces of the split_object, and the mover at the edge.

example_1:
  input_grid: 10x10, background Orange(7)
  objects_input:
    - {color: Maroon(9), shape: rect, bbox: [2,3,3,6], role: split_object}
    - {color: Green(3), shape: rect, bbox: [4,4,5,5], role: mover}
    - {color: Azure(8), shape: rect, bbox: [6,4,9,5], role: stable_object}
  relationships:
    - Green is vertically between Maroon and Azure.
    - Green's horizontal span (cols 4-5) overlaps Maroon (3-6) and Azure (4-5).
  actions:
    - Green moves Up (towards Maroon) to bbox [0,4,1,5].
    - Maroon is split vertically along cols 4-5 (aligned with Green's width=2).
    - Maroon pieces are shifted horizontally by ceil(2/2)=1. Left piece to [2,2,3,3], Right piece to [2,6,3,7].
    - Azure remains unchanged at [6,4,9,5].
  output_grid: Shows moved Green, split/shifted Maroon, stable Azure.

example_2:
  input_grid: 10x10, background Orange(7)
  objects_input:
    - {color: Magenta(6), shape: complex, bbox: [0,3,2,6], role: stable_object}
    - {color: Blue(1), shape: rect, bbox: [3,4,5,5], role: mover}
    - {color: Azure(8), shape: rect, bbox: [6,2,9,7], role: stable_object}
  relationships:
    - Blue is vertically between Magenta and Azure.
    - Blue's horizontal span (cols 4-5) overlaps Magenta (3-6) and Azure (2-7).
    - Note: Blue is closer to Magenta, but moves towards Azure based on expected output. Role assignment requires re-evaluation, but proceeding based on output implies Split=Azure.
  actions:
    - Blue moves Down (towards Azure) to bbox [7,4,9,5].
    - Azure is split vertically along cols 4-5 (aligned with Blue's width=2).
    - Azure pieces are shifted horizontally by ceil(2/2)=1. Left piece to [6,1,9,3], Right piece to [6,6,9,8].
    - Magenta remains unchanged at [0,3,2,6].
  output_grid: Shows moved Blue, split/shifted Azure, stable Magenta.

example_3:
  input_grid: 10x10, background Orange(7)
  objects_input:
    - {color: Yellow(4), shape: rect, bbox: [3,1,6,1], role: split_object}
    - {color: Blue(1), shape: rect, bbox: [4,6,5,7], role: mover}
    - {color: Red(2), shape: complex, bbox: [2,8,7,9], role: stable_object}
  relationships:
    - Blue is horizontally between Yellow and Red.
    - Blue's vertical span (rows 4-5) overlaps Yellow (3-6) and Red (2-7).
  actions:
    - Blue moves Left (towards Yellow) to bbox [4,0,5,1].
    - Yellow is split horizontally along rows 4-5 (aligned with Blue's height=2).
    - Yellow pieces are shifted vertically by ceil(2/2)=1. Top piece to [2,1,3,1], Bottom piece to [6,1,7,1].
    - Red remains unchanged at [2,8,7,9].
  output_grid: Shows moved Blue, split/shifted Yellow, stable Red.
