task_description: Perform a flood fill operation starting from a uniquely colored pixel (seed), bounded by another color (boundary).
definitions:
  - object: Grid
    properties:
      - type: 2D array of integers 0-9 (colors)
      - size: variable (up to 30x30)
  - object: Background Pixel
    properties:
      - color: The most frequent color in the input grid.
  - object: Seed Pixel
    properties:
      - color: The color that appears exactly once in the input grid.
      - location: The (row, column) coordinate of the unique pixel.
  - object: Boundary Pixels
    properties:
      - color: The third distinct color in the input grid (neither background nor seed).
      - arrangement: Forms a boundary or enclosure, although not always perfectly closed.
  - object: Fill Area
    properties:
      - location: The region of connected background pixels reachable from the seed pixel without crossing a boundary pixel or grid edge.
      - includes_seed: The seed pixel itself is part of the fill area.
actions:
  - action: Identify Colors
    inputs: Input Grid
    outputs: Background Color, Seed Color, Seed Location, Boundary Color
    logic:
      - Count frequency of each color.
      - Background Color = Most frequent color.
      - Seed Color = Color with frequency 1.
      - Seed Location = Coordinates of the seed color pixel.
      - Boundary Color = The color that is not the background or seed color. (Assumes exactly 3 colors).
  - action: Perform Bounded Flood Fill
    inputs: Input Grid, Background Color, Seed Color, Seed Location, Boundary Color
    outputs: Output Grid
    logic:
      - Initialize Output Grid as a copy of the Input Grid.
      - Start a fill process (e.g., BFS or DFS) from the Seed Location.
      - Maintain a set of visited locations.
      - For the current location being processed:
        - If the pixel at the current location in the Input Grid is the Background Color OR it is the Seed Location:
          - Change the color of the pixel at the current location in the Output Grid to the Seed Color.
          - Explore adjacent (cardinal directions) neighbors:
            - If a neighbor is within grid bounds, has not been visited, AND its color in the Input Grid is NOT the Boundary Color:
              - Mark the neighbor as visited and add it to the process queue/stack.
      - Pixels with the Boundary Color and pixels outside the fill area (including those separated by the boundary) remain unchanged from the Input Grid.
