InputGrid:
  Properties:
    - Contains 2x2 gray (5) squares.
    - Contains white (0) pixels acting as background and separators.
  Features:
    - Presence of rows consisting entirely of white pixels ("white rows").
    - Presence of columns consisting entirely of white pixels ("white columns").

OutputGrid:
  Properties:
    - Retains the original gray (5) squares in their positions.
    - White pixels from the input are replaced by white (0), red (2), or blue (1).

Transformation:
  Action: Color filling and marking based on geometry.
  Rule:
    - Identify all "white rows" and "white columns" in the input grid.
    - Copy the input grid to create the output grid.
    - For each pixel location (r, c):
      - If the input pixel `input[r][c]` is white (0):
        - Define `is_white_row = (row r consists entirely of white pixels in the input)`.
        - Define `is_white_col = (column c consists entirely of white pixels in the input)`.
        - If `is_white_row` AND `is_white_col`:
          - Set `output[r][c]` to blue (1).
        - Else if `is_white_row` OR `is_white_col`:
          - Set `output[r][c]` to red (2).
        - Else:
          - Keep `output[r][c]` as white (0). # Pixel was white but not in a full white row/col
      - Else (input pixel is not white):
        - Keep `output[r][c]` the same as `input[r][c]`. # Non-white pixels are preserved
  Relationships:
    - Red pixels appear in locations that were part of a "white row" or a "white column" in the input, but not both.
    - Blue pixels appear in locations that were the intersection of a "white row" and a "white column" in the input.
    - Gray pixels remain unchanged.