task_description: Fill specific white pixels based on nearest non-white pixels using Manhattan distance, with a complex tie-breaking rule, potentially preserving an existing complete white border.

grid_properties:
  - size: Variable (10x10 in examples)
  - colors: white (0) and a subset of other colors (blue, green, azure in examples)

objects:
  - type: Pixels
    properties:
      - color: Integer 0-9
      - location: (row, col)
  - type: Regions
    properties:
      - color: White (0) or Non-white
      - connectivity: Adjacent (including diagonal for distance, cardinal for border check)
      - location: Set of pixel coordinates
  - type: Border
    properties:
      - completeness: Whether it forms a full loop around the grid edge
      - color: White (0)

actions:
  - name: Identify_Target_White_Pixels
    input: Input grid
    output: Set of coordinates of white pixels to be filled
    logic: Check for a complete, connected, single-pixel-wide white border. If present, targets are all white pixels *not* on this border. If absent, targets are *all* white pixels.
  - name: Find_Nearest_Non_White
    input: Target white pixel coordinates, Set of all non-white pixel coordinates and colors
    output: List of (distance, color) for non-white pixels at minimum Manhattan distance
  - name: Apply_Tie_Breaking
    input: List of colors from nearest non-white pixels
    output: Final fill color
    logic:
      1. If green (3) is present, output green (3).
      2. Else, count occurrences of each color. If one color has max count, output that color.
      3. Else (counts tied), output the color with the minimum numerical index.
  - name: Fill_Pixel
    input: Output grid, Target white pixel coordinates, Final fill color
    output: Modified output grid

flow:
  - Initialize output grid as a copy of input.
  - Determine target white pixels using Identify_Target_White_Pixels.
  - Collect all non-white pixel locations and colors from input.
  - For each target white pixel coordinate:
    - Find nearest non-white pixels and their colors using Find_Nearest_Non_White.
    - Determine the fill color using Apply_Tie_Breaking.
    - Update the output grid at the target coordinate with the fill color using Fill_Pixel.
  - Return the final output grid.
