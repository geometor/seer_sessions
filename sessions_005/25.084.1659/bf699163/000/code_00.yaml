- perception:
    - input_grid_size: variable (e.g., 17x18, 17x16)
    - output_grid_size: fixed (3x3)
    - background_color: gray (5)
    - objects:
        - type: pattern
          name: hollow_square
          structure: 3x3 grid
          definition: |
            [[C, C, C],
             [C, 5, C],
             [C, C, C]]
            where C is a non-gray color (1-4, 6, 8-9) and the center is gray (5).
          properties:
            - color: C (variable)
            - instances: multiple per input grid, each with a unique color C among patterns present in that grid.
        - type: marker
          name: selector_pixels
          color: orange (7)
          properties:
            - location: scattered across the grid
            - function: defines a bounding box region
- relationships:
    - orange (7) pixels define a bounding box (min_row, min_col, max_row, max_col).
    - the output is the unique hollow_square pattern instance whose 3x3 area is fully contained within the orange bounding box.
- transformation:
    - step 1: Identify all orange (7) pixels.
    - step 2: Calculate the bounding box (min/max row/col) of orange pixels.
    - step 3: Find all instances of the hollow_square pattern.
    - step 4: Select the single hollow_square pattern instance located entirely within the orange bounding box.
    - step 5: Output the selected 3x3 pattern.