task_context:
  grid_size: All inputs and outputs are 3x3 grids.
  output_colors: All outputs consist only of gray (5) and white (0).
transformation_rules:
  - condition:
      input_grid: Monochromatic
      unique_colors: Contains only Green (3)
    output_pattern: Top row is gray (5), remaining rows are white (0).
    example_ref: 1
  - condition:
      input_grid: Monochromatic
      unique_colors: Contains only Yellow (4)
    output_pattern: Top row is gray (5), remaining rows are white (0).
    example_ref: 3
  - condition:
      input_grid: Polychromatic
      unique_colors: Contains Red (2) AND Yellow (4) (may contain others like Green(3))
    output_pattern: Anti-diagonal (top-right to bottom-left) is gray (5), rest are white (0).
    example_ref: 2
  - condition:
      input_grid: Polychromatic
      unique_colors: Contains Red (2) but NOT Yellow (4) (may contain others like Green(3))
    output_pattern: Main diagonal (top-left to bottom-right) is gray (5), rest are white (0).
    example_ref: 5
  - condition:
      input_grid: Polychromatic
      unique_colors: Does NOT contain Red (2)
    output_pattern: Main diagonal (top-left to bottom-right) is gray (5), rest are white (0).
    example_ref: 4
  - condition: # Assumption based on previous logic, needs validation
      input_grid: Monochromatic
      unique_colors: Contains only a single color other than Green (3) or Yellow (4).
    output_pattern: All cells are gray (5).
    example_ref: None (Implied)

color_map:
  0: white
  1: blue
  2: red
  3: green
  4: yellow
  5: gray
  6: magenta
  7: orange
  8: azure
  9: maroon

output_patterns:
  top_row_gray: [[5, 5, 5], [0, 0, 0], [0, 0, 0]]
  main_diagonal_gray: [[5, 0, 0], [0, 5, 0], [0, 0, 5]]
  anti_diagonal_gray: [[0, 0, 5], [0, 5, 0], [5, 0, 0]]
  all_gray: [[5, 5, 5], [5, 5, 5], [5, 5, 5]]