Input:
  - type: grid
    properties:
      height: 2
      width: W (variable, 6 in examples)
      pixels:
        - object: row_1
          color: C1 (uniform)
          location: row index 0
        - object: row_2
          color: C2 (uniform)
          location: row index 1
      constraints:
        - C1 != C2

Output:
  - type: grid
    properties:
      height: 2
      width: W (same as input)
      pixels:
        - derived_from: [row_1, row_2]
          pattern: checkerboard
          colors_used: [C1, C2]
      constraints:
        - Output grid dimensions match input grid dimensions.
        - Output[0, j] = C1 if j is even, C2 if j is odd
        - Output[1, j] = C2 if j is even, C1 if j is odd
          (where j is the column index, starting from 0)

Relationships:
  - The colors C1 and C2 in the output directly correspond to the colors of the first and second rows of the input, respectively.
  - The arrangement of pixels in the output depends on their row and column index (parity) and the original input colors.