objects:
  - name: gray_column
    type: column
    color: gray (5)
    property: vertical_position
    notes: "The input grid contains only one gray column."

  - name: red_pixels
    type: pixel
    color: red (2)
    count: 2
    property: position
    notes: "Two red pixels are placed in the output. Their positions are related to the position of the gray_column."

  - name: input_grid
    type: grid
    property: dimensions

  - name: output_grid
    type: grid
    dimensions: [3, 3]
    property: fixed_size

actions:
  - name: find_gray_column
    input: input_grid
    output: gray_column.vertical_position

  - name: calculate_offset
    input: gray_column.vertical_position, input_grid.dimensions
    output: offset_from_center

  - name: position_red_pixels
    input: offset_from_center, output_grid
    output: output_grid (with red pixels)
    rule: >
      There should be two red pixels.
      When the offset is 0:
        If there are any red pixels, they follow this rule.
        Red pixel 1:  row = 1, column = offset
        Red pixel 2: row = 2, column = 2 if there is a red pixel in (1,0)