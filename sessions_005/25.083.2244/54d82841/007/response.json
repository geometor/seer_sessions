{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nCopies the input grid to the output, and adds a yellow pixel at the bottom of each\ncolumn if there is a vertical line of at least two contiguous pixels with\nthe same non-zero color above it.\n\"\"\"\n\nimport numpy as np\n\ndef get_vertical_lines(grid):\n    \"\"\"\n    Checks each column for vertical lines of same, non-zero color.\n    Returns a list of column indices where such lines exist.\n    \"\"\"\n    rows, cols = grid.shape\n    valid_columns = []\n    for c in range(cols):\n        for r in range(rows - 1):  # Check for lines of at least length 2\n            if grid[r,c] != 0 and grid[r, c] == grid[r + 1, c]:\n                valid_columns.append(c)\n                break # move onto the next column once line detected\n    return valid_columns\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid according to the observed rule.\n    \"\"\"\n    output_grid = np.copy(input_grid)\n    rows, cols = input_grid.shape\n\n    # Find columns that have qualifying vertical lines\n    valid_columns = get_vertical_lines(input_grid)\n\n    # Add yellow pixel to the bottom of valid columns\n    for col in valid_columns:\n        output_grid[rows - 1, col] = 4\n\n    return output_grid\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 4674,
    "candidates_token_count": 327,
    "total_token_count": 5001,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 4.806234
}