{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nIterates through the input grid, examining vertical pairs of cells.\nIf the bottom cell's color is not 0, and is different than the cell directly above, \nthe color of the cell above is changed to match the bottom cell.\nThis propagation continues upwards until the edge of the grid is reached\nor a cell with the same color, or is not a different color, is encountered.\n\"\"\"\n\nimport numpy as np\n\ndef get_vertical_pairs(grid):\n    \"\"\"Extracts all vertically adjacent pairs of cells.\"\"\"\n    pairs = []\n    rows, cols = grid.shape\n    for r in range(rows - 1):\n        for c in range(cols):\n            pairs.append( ((r, c), (r + 1, c)) )\n    return pairs\n\ndef propagate_color(grid, row, col, color):\n    \"\"\"Propagates the given color upwards from the given position.\"\"\"\n    # output_grid is a copy, we modify this\n    while row >= 0 and grid[row,col] != color:\n        grid[row, col] = color\n        row -= 1\n\ndef transform(input_grid):\n    # initialize output_grid\n    output_grid = np.copy(input_grid)\n    rows, cols = input_grid.shape\n    \n    # get all vertical pairs - iterate from top down\n    pairs = get_vertical_pairs(input_grid)\n\n    # loop through pairs for replacement\n    for (top_row, top_col), (bottom_row, bottom_col) in pairs:\n        top_color = input_grid[top_row, top_col]\n        bottom_color = input_grid[bottom_row, bottom_col]\n\n        # change output pixels\n        if bottom_color != 0 and top_color != bottom_color:\n            propagate_color(output_grid, top_row, top_col, bottom_color)\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 9002,
    "candidates_token_count": 442,
    "total_token_count": 9444,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 6.958663
}