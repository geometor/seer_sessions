task_type: pattern_application
input_grid:
  description: A 2D grid containing primarily white pixels (0) and a sparse distribution of blue pixels (1).
  properties:
    - dimensions: variable (e.g., 10x10)
    - pixel_colors: [0, 1]
output_grid:
  description: A 2D grid derived from the input grid, with the original blue pixels preserved and additional colored pixels added around them.
  properties:
    - dimensions: same as input grid
    - pixel_colors: [0, 1, 2, 6, 7, 8]
objects:
  - type: pixel
    properties:
      - color: A value from 0-9.
      - position: (row, column) coordinates.
  - type: pattern
    description: A specific arrangement of colored pixels relative to a central point.
    properties:
      - shape: '+' shape (excluding center)
      - colors: [red(2), orange(7), magenta(6), azure(8)]
      - relative_positions:
          - red: (-1, 0)
          - orange: (0, -1)
          - magenta: (0, +1)
          - azure: (+1, 0)
actions:
  - name: find_pixels
    input: input_grid, color_value (blue=1)
    output: list of coordinates [(r1, c1), (r2, c2), ...]
  - name: apply_pattern
    input: target_grid, center_coordinate (r, c), pattern_definition
    output: modified_target_grid
    constraints:
      - Only apply pattern pixel if target coordinate is within grid bounds.
      - Only apply pattern pixel if target cell color is white (0).
relationships:
  - The output grid is initialized as a copy of the input grid.
  - Each blue pixel (1) in the input grid acts as an anchor point for placing the pattern in the output grid.
  - The position of each pattern pixel in the output is relative to the position of its corresponding blue anchor pixel.