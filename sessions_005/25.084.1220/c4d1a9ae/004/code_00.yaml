task_context:
  grid_properties:
    - size varies
    - contains multiple colors (0-9)
  transformation_type: conditional pixel modification based on color, target proximity, and location.

target_identification:
  primary_target_color: Red(2)
  secondary_target_color: Green(3)
  priority: If Red(2) exists, it is the target. Otherwise, if Green(3) exists, it is the target. If neither exists, the grid is unchanged.

distance_metric:
  type: Manhattan distance
  calculation: distance 'd' from each pixel to the nearest pixel of the target color.

transformation_rules:
  common_elements:
    - Invariant colors exist for each target type.
    - Pixels of specific colors change based on their distance 'd' to the target.
    - Column index 'c' acts as a secondary condition for some transformations.
  red_target_rules:
    - target_color: Red(2)
    - invariant_colors: [Red(2), Magenta(6), Gray(5)]
    - modified_color: Yellow(4)
    - conditions:
        - d=1: Magenta(6) if c <= 1, else Yellow(4)
        - d=2: Gray(5) if c == 3, else Yellow(4)
        - d=3: Gray(5) if c == 3 or c == 4, else Yellow(4)
        - d=4: Gray(5) if c == 4, Red(2) if c == 6, else Yellow(4)
        - d=5: Red(2) if c == 6, else Yellow(4)
        - d=6: Red(2) if c == 6, else Yellow(4)
        - d>6: Yellow(4)
  green_target_rules:
    - target_color: Green(3)
    - invariant_colors: [Green(3), Yellow(4), Maroon(9)]
    - modified_color: White(0)
    - conditions:
        - d=1: Maroon(9) if c == 4, else White(0)
        - d=2: Green(3) if c <= 2, Yellow(4) if c >= 6, else White(0)
        - d=3: Green(3) if c <= 2, Yellow(4) if c >= 6, else White(0)
        - d=4: Green(3) if c <= 1, Yellow(4) if c >= 6, else White(0)
        - d=5: Green(3)
        - d>5: White(0) # Includes d=0, which is handled by Green(3) invariance

output:
  grid: same dimensions as input, containing transformed pixels.