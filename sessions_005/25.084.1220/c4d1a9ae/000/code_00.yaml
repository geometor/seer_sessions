task_description: Transforms input grid colors based on proximity to a specific target color.
grid_properties:
  - dimensions_preserved: True
  - height: 10
  - width: 8

color_transformations:
  - type: Conditional substitution based on proximity and original color.
  - target_color_heuristic: Identify a specific color present in the input (e.g., Red(2) in Ex1, Green(3) in Ex2). Rule for selection needs confirmation (possibly based on pattern, frequency, or invariance).
  - distance_metric: Manhattan distance to the nearest target color pixel.
  - output_logic: Output color is a function of (distance_to_target, input_color, potentially_coordinates).

example_1_details:
  - input_colors: [2, 4, 5, 6]
  - output_colors: [2, 4, 5, 6]
  - target_color_candidate: 2 (Red)
  - modified_color: 4 (Yellow)
  - invariant_colors: [2, 5, 6]
  - transformation_rule: Yellow pixels change based on Manhattan distance 'd' to nearest Red pixel (d=1 -> 6 or 4, d=2/3 -> 5, d=4 -> 4, d=5 -> 2). Ambiguity at d=1 might depend on column index.

example_2_details:
  - input_colors: [0, 3, 4, 9]
  - output_colors: [0, 3, 4, 9]
  - target_color_candidate: 3 (Green)
  - background_color_candidate: 0 (White)
  - modified_colors: [0, 4, 9] (White, Yellow, Maroon) - Note: Initial analysis suggested Maroon changed, but re-evaluation indicates Maroon is invariant. Re-checking output grid vs input: Input Maroon locations (0,7), (1,6), (2,7), (3,7), (4,6), (5,7), (6,7), (7,6), (8,7), (9,7). Corresponding outputs are all 9. Therefore, Maroon is invariant. Colors 0 and 4 change.
  - invariant_colors: [3, 9] (Green, Maroon)
  - transformation_rule: Output color depends complexly on Manhattan distance 'd' to nearest Green pixel and the input color 'I'. (e.g., I=0 changes based on d, I=4 changes based on d, I=3 and I=9 remain unchanged).