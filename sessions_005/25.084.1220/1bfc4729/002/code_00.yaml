task_description: Create an output grid by drawing horizontal lines based on input pixel rows and grid edges, and vertical lines only at grid edges, with colors determined by the input pixels' colors and relative vertical positions.

grid_properties:
  - height: H (variable, matches input)
  - width: W (variable, matches input)
  - background_color: white (0)
  - vertical_midpoint_row_index: floor(H / 2)

objects:
  - name: input_pixel_1
    description: The non-white pixel with the smaller row index (or the first one found if row indices are equal).
    properties:
      - row: r1
      - column: c1
      - color: color1
  - name: input_pixel_2
    description: The non-white pixel with the larger row index.
    properties:
      - row: r2
      - column: c2
      - color: color2

actions:
  - action: find_pixels
    description: Identify the coordinates (row, column) and color of the two non-white pixels in the input grid.
  - action: sort_pixels
    description: Assign the pixel with the smaller row index to input_pixel_1 (r1, c1, color1) and the other to input_pixel_2 (r2, c2, color2).
  - action: initialize_output
    description: Create an output grid of the same dimensions (H x W) as the input, filled with the background color (white).
  - action: draw_vertical_edge_lines
    description: |
      Draw a vertical line at the left edge (column 0).
      Color cells from row 0 to (vertical_midpoint_row_index - 1) with color1.
      Color cells from row vertical_midpoint_row_index to (H - 1) with color2.
      Repeat for the right edge (column W - 1).
  - action: draw_horizontal_lines
    description: |
      Draw a horizontal line across the full width at the top edge (row 0) using color1.
      Draw a horizontal line across the full width at the bottom edge (row H - 1) using color2.
      Draw a horizontal line across the full width at row r1 using color1.
      Draw a horizontal line across the full width at row r2 using color2.
      These lines overwrite any existing colors, including the vertical edge lines at intersections.

output: The final state of the grid after all drawing actions are completed.