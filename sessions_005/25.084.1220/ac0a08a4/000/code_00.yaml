task_type: grid_transformation
transformation_name: pixel_scaling_by_count
input_characteristics:
  - grid_type: 2D array of integers (0-9)
  - grid_size: variable (e.g., 3x3 in examples)
  - elements: pixels represented by colors (0=white, 1-9=other colors)
output_characteristics:
  - grid_type: 2D array of integers (0-9)
  - grid_size: larger than input, specifically (input_height * F) x (input_width * F) where F is the scaling factor.
  - elements: pixels represented by colors.
objects:
  - type: pixel
    properties:
      - color (integer 0-9)
      - position (row, column)
  - type: block (in output)
    properties:
      - color (integer 0-9)
      - size (F x F, where F is the scaling factor)
      - position (top-left corner row, top-left corner column)
actions:
  - name: count_non_zero_pixels
    input: input_grid
    output: scaling_factor (integer F)
  - name: calculate_output_dimensions
    input: input_grid_dimensions (H, W), scaling_factor (F)
    output: output_grid_dimensions (H*F, W*F)
  - name: create_output_grid
    input: output_grid_dimensions
    output: empty_output_grid (e.g., filled with white/0)
  - name: map_and_fill
    input: input_pixel_color (C), input_pixel_position (r, c), scaling_factor (F), output_grid
    process: fills an F x F block in the output_grid starting at (r*F, c*F) with color C.
relationships:
  - each input pixel at (r, c) maps to a block in the output grid.
  - the top-left corner of the output block is determined by the input pixel's position (r, c) and the scaling factor F: (r * F, c * F).
  - the size of the output block (F x F) is determined by the scaling factor F.
  - the color of the output block is identical to the color of the corresponding input pixel.
  - the scaling factor F is determined by the total count of non-zero pixels in the entire input grid.