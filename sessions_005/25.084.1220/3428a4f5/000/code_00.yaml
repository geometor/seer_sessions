InputGrid:
  properties:
    height: 13
    width: 5
    colors_present: [white, red, yellow]
  objects:
    - type: horizontal_line
      color: yellow
      location: row_index_6
      role: separator
    - type: subgrid
      name: UpperGrid
      location: rows 0 through 5
      height: 6
      width: 5
      colors_present: [white, red]
    - type: subgrid
      name: LowerGrid
      location: rows 7 through 12
      height: 6
      width: 5
      colors_present: [white, red]

OutputGrid:
  properties:
    height: 6
    width: 5
    colors_present: [white, green]
  derivation: derived from combining UpperGrid and LowerGrid

Transformation:
  type: pixel_wise_combination
  input_elements: Corresponding pixels from UpperGrid and LowerGrid at position (r, c)
  output_element: Pixel in OutputGrid at position (r, c)
  rule:
    - if UpperGrid(r, c) is white AND LowerGrid(r, c) is white: OutputGrid(r, c) is white
    - if UpperGrid(r, c) is red AND LowerGrid(r, c) is white: OutputGrid(r, c) is green
    - if UpperGrid(r, c) is white AND LowerGrid(r, c) is red: OutputGrid(r, c) is green
    - if UpperGrid(r, c) is red AND LowerGrid(r, c) is red: OutputGrid(r, c) is white
  logical_equivalent: Bitwise XOR (white=0, red=1 -> white=0, green=1)