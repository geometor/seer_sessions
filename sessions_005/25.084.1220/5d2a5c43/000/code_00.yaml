task_context:
  description: "Combine two halves of an input grid based on a color rule, discarding a central separator."
  grid_properties:
    - input_dimensions: [6, 9] # Height, Width for all examples
    - output_dimensions: [6, 4] # Height, Width for all examples
    - input_colors: [0, 1, 4] # white, blue, yellow
    - output_colors: [0, 8] # white, azure
input_elements:
  - type: separator
    properties:
      - color: blue (1)
      - shape: vertical line
      - location: column index 4 (center column for 9-wide grid)
      - role: divides the grid into left and right halves
  - type: left_half
    properties:
      - location: columns 0 to 3
      - dimensions: [6, 4]
      - content_colors: [0, 4] # white, yellow
  - type: right_half
    properties:
      - location: columns 5 to 8
      - dimensions: [6, 4]
      - content_colors: [0, 4] # white, yellow
transformation:
  - operation: split
    target: input grid
    parameters:
      - separator_column_index: 4
    outputs:
      - left_half (columns 0-3)
      - right_half (columns 5-8)
      - separator (column 4) - discarded
  - operation: elementwise_combination
    target_1: left_half
    target_2: right_half
    output: output grid (6x4)
    rule: |
      For each cell at (row, col):
      - Get left_color = left_half[row, col]
      - Get right_color = right_half[row, col]
      - If left_color == 4 (yellow) OR right_color == 4 (yellow):
          output_grid[row, col] = 8 (azure)
      - Else (if both left_color == 0 and right_color == 0):
          output_grid[row, col] = 0 (white)
relationships:
  - type: correspondence
    description: "Each cell (r, c) in the output grid corresponds to cell (r, c) in the left half and cell (r, c) in the right half of the input grid."
  - type: color_mapping
    description: "Presence of yellow (4) in either corresponding input half maps to azure (8) in the output. Absence of yellow (4) in both maps to white (0)."