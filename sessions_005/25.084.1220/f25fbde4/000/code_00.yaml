Task: Scale a cropped region of the input grid.

Input_Grid:
  - Properties:
      - dimensions: variable (e.g., 9x9)
      - pixels: primarily white (0)
  - Objects:
      - Background:
          - color: white (0)
          - extent: majority of the grid
      - Shape:
          - color: yellow (4)
          - pixels: contiguous or near-contiguous block
          - count: 1 per grid
          - Properties:
              - bounding_box: the smallest rectangle enclosing all yellow pixels.

Output_Grid:
  - Properties:
      - dimensions: variable, determined by the input shape's bounding box scaled by 2. (height = bbox_height * 2, width = bbox_width * 2)
      - pixels: white (0) and yellow (4)
  - Objects:
      - Scaled_Shape:
          - derivation: Each pixel (r, c) within the input shape's bounding_box corresponds to a 2x2 block in the output grid starting at (2*r, 2*c).
          - color: Preserves the color of the corresponding input pixel within the bounding box.

Relationships:
  - The output grid dimensions are twice the dimensions of the bounding box of the yellow shape in the input grid.
  - The content of the output grid is determined by scaling the content (both yellow and white pixels) within the input shape's bounding box by a factor of 2x2.

Actions:
  1. Identify all yellow (4) pixels in the input grid.
  2. Calculate the minimum bounding box (min_row, min_col, max_row, max_col) that encloses all yellow pixels.
  3. Extract the subgrid corresponding to this bounding box from the input grid.
  4. Create a new output grid with height = (max_row - min_row + 1) * 2 and width = (max_col - min_col + 1) * 2.
  5. Iterate through each pixel (r, c) with color C in the extracted subgrid.
  6. Fill a 2x2 block in the output grid starting at position (r * 2, c * 2) with the color C.