task_context:
  description: Transforms a grid based on the position of a single unique pixel.
  grid_properties:
    background_color: 8 # azure
    content: Contains a single pixel of a non-background color.

input_elements:
  - object: unique_pixel
    properties:
      color: Any color except the background_color (e.g., 4, 9, 6).
      location: Defined by its row (R) and column (C).
      count: Exactly one per input grid.

output_elements:
  - object: corner_rectangle
    properties:
      color: Same as the unique_pixel color from the input.
      shape: Solid rectangle.
      location: Positioned in one of the four corners (top-left, top-right, bottom-left, bottom-right) of the output grid.
      size: Height and width determined by the calculation based on the unique_pixel's location.

transformation:
  rule: Find the smallest area quadrant defined by the unique pixel's location and fill the corresponding corner of the output grid with a rectangle of that quadrant's dimensions and the unique pixel's color.
  details:
    - Identify the unique_pixel (color P_Color, row R, column C) and grid dimensions (Height H, Width W).
    - Calculate areas of four potential rectangles (quadrants):
        - area_TL: (R + 1) * (C + 1)
        - area_TR: (R + 1) * (W - C)
        - area_BL: (H - R) * (C + 1)
        - area_BR: (H - R) * (W - C)
    - Find the minimum area among area_TL, area_TR, area_BL, area_BR.
    - Determine the corner and dimensions (Rect_H, Rect_W) corresponding to the minimum area.
    - Create an output grid of size H x W, filled with the background_color.
    - Fill the determined corner region with a rectangle of size Rect_H x Rect_W using P_Color.