task_type: object_selection_and_transformation

definitions:
  - object: A maximal connected component of non-white pixels (color > 0) using 4-way adjacency (up, down, left, right).
  - background_color: 0 (white).
  - minimum_color (c_min): The smallest color index (> 0) present anywhere in the input grid.
  - bounding_box: The smallest rectangle enclosing all pixels of an object.
  - solid_square: An object whose bounding box has equal height and width, consists of only one color, and contains no background pixels within that bounding box.

observations:
  - Input grids contain multiple distinct objects against a white background.
  - The output grid is derived from a single object selected from the input.
  - The primary selection criterion involves the minimum_color (c_min).

selection_rules:
  - Find all objects containing c_min. Let this set be O_min.
  - Rule_A (len(O_min) == 1): Select the single object 'obj' in O_min.
  - Rule_B (len(O_min) > 1): Select the unique object 'obj' from *all* input objects that is a solid_square.

output_generation:
  - If Rule_A applies:
    - If 'obj' contains multiple colors: Output the subgrid corresponding to the bounding_box of 'obj'.
    - If 'obj' contains only c_min: Output a vertical column (height = number of pixels in 'obj', width = 1) filled with c_min.
  - If Rule_B applies:
    - Output the subgrid corresponding to the bounding_box of the selected solid_square 'obj'.

examples_analysis:
  - train_1:
      - c_min: 2 (red).
      - Objects containing c_min: Two (red/azure shapes).
      - len(O_min) > 1 -> Rule_B applies.
      - Solid square object: The orange 2x2 square (color 7).
      - Output: The 2x2 orange square.
  - train_2:
      - c_min: 2 (red).
      - Objects containing c_min: One (the red L-shape).
      - len(O_min) == 1 -> Rule_A applies.
      - Selected object 'obj' (red L-shape) has only one color (c_min=2).
      - Number of pixels in 'obj': 4.
      - Output: A 4x1 vertical column of red (color 2).
  - train_3:
      - c_min: 1 (blue).
      - Objects containing c_min: One (the red/blue/green shape).
      - len(O_min) == 1 -> Rule_A applies.
      - Selected object 'obj' (red/blue/green shape) has multiple colors.
      - Output: The bounding box of 'obj' cropped from the input.