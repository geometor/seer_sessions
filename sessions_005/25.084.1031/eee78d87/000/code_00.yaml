task_context:
  description: Transforms a 6x6 input grid into a 16x16 output grid based on pixel color and the presence of a non-background shape.
  input_grid_size: [6, 6]
  output_grid_size: [16, 16]
  output_size_relation: "(Input_Dim * 3) - 2"
  background_color: 7 # orange
  shape_colors: [3, 1, 6] # green, blue, magenta seen in examples
  overlay_color: 9 # maroon
  overlay_trigger: Presence of any non-background color pixel in the input grid.
  overlay_shape: Fixed 6x6 square.
  overlay_position: Fixed at rows 5-10, columns 5-10 (0-indexed).

transformation_steps:
  - step: 1
    action: Initialize output grid
    parameters:
      height: "(Input_Height * 3) - 2"
      width: "(Input_Width * 3) - 2"
      fill_color: 0 # white
  - step: 2
    action: Iterate through input grid pixels
    parameters:
      input_pixel_coords: (r, c)
      input_pixel_value: color
  - step: 3
    condition: color == background_color (7)
    action: Place pattern in output grid
    parameters:
      pattern: [[7, 7], [7, 7]]
      output_top_left_coords: (r * 3, c * 3)
  - step: 4
    action: Check for non-background pixels
    parameters:
      input_grid: entire input grid
      background_color: 7
    result: stores boolean `shape_present`
  - step: 5
    condition: shape_present == True
    action: Place overlay pattern in output grid
    parameters:
      pattern: 6x6 block of overlay_color (9)
      output_top_row: 5
      output_bottom_row: 10
      output_left_col: 5
      output_right_col: 10
      behavior: Overwrite existing pixels

relationship_summary:
  - Each input pixel maps conceptually to a 3x3 area in the output grid.
  - Input background pixels generate a 2x2 orange pattern at the top-left of their mapped area.
  - Input non-background pixels do not directly generate a pattern based on their own color.
  - The existence of *any* non-background pixel triggers a constant maroon overlay in a fixed central position on the output grid.