task_description: Identify pixels of a specific "target" color that are orthogonally adjacent to pixels of a corresponding "trigger" color, and change those target pixels to white (0).

definitions:
  - &white 0
  - &blue 1
  - &red 2
  - &green 3
  - &yellow 4
  - &gray 5
  - &magenta 6
  - &orange 7
  - &azure 8
  - &maroon 9

objects:
  - type: grid
    description: Input and output are 2D arrays of pixels (0-9).
  - type: pixel_group
    description: Contiguous areas of non-white pixels form distinct objects or patterns.

relationships:
  - type: adjacency
    description: Orthogonal adjacency (sharing an edge) between pixels is critical. Diagonal adjacency is ignored.
  - type: color_pairing
    description: Specific pairs of colors determine the transformation rule. One color acts as the "target" to be potentially changed, and the other acts as the "trigger".

actions:
  - name: conditional_pixel_replacement
    target_pixels: Pixels with specific "target" colors.
    condition: The target pixel must be orthogonally adjacent to at least one pixel with the corresponding "trigger" color.
    effect: Change the target pixel's color to white (*white).
    color_pairs: # target_color -> trigger_color
      - target: *magenta # 6
        trigger: *yellow # 4
      - target: *orange # 7
        trigger: *green # 3
      - target: *maroon # 9
        trigger: *green # 3
      - target: *maroon # 9
        trigger: *magenta # 6
      - target: *orange # 7
        trigger: *magenta # 6
  - name: pixel_copy
    target_pixels: All pixels not meeting the condition for replacement.
    effect: Copy the pixel's color from the input grid to the output grid unchanged.

anomalies:
  - description: In each training example's output, a small number of pixels appear that were not present in the input and are not explained by the adjacency replacement rule. Their origin and placement logic are currently undetermined.