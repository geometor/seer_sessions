{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\n1.  **Identify Non-Zero Pixels:**  Locate all pixels in the input grid that have a value other than 0.\n\n2.  **Conditional Horizontal Propagation (Leftward):**\n    *   For each non-zero pixel, examine the pixels to its *left* in the same row.\n    *   If a pixel to the left has a value of 0, change that pixel's value to match the non-zero pixel.\n    *   Stop this leftward propagation when either the left edge of the grid is reached or a non-zero pixel is encountered.\n\n3.  **Conditional Vertical Propagation (Downward):**\n    *  For each pixel in the *output* grid:\n    * If a pixel is not zero valued, fill down with that value until the end of the column.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    # initialize output_grid\n    output_grid = np.copy(input_grid)\n    rows, cols = input_grid.shape\n\n    # Conditional Horizontal Propagation (Leftward)\n    for r in range(rows):\n        for c in range(cols):\n            if input_grid[r, c] != 0:\n                #fill left\n                for k in range(c - 1, -1, -1):\n                    if output_grid[r, k] == 0:\n                        output_grid[r, k] = input_grid[r, c]\n                    else:\n                        break  # Stop at non-zero pixel\n\n    # Conditional Vertical Propagation (Downward)\n    for r in range(rows):\n        for c in range(cols):\n            if output_grid[r, c] != 0:  # check output grid\n                #fill values down\n                for k in range(r + 1, rows):\n                    output_grid[k, c] = output_grid[r, c]\n\n    return output_grid\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2943,
    "candidates_token_count": 435,
    "total_token_count": 3378,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 6.49627
}