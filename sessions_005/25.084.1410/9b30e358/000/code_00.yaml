- task: Analyze input grid structure and identify pattern block based on colors.
- facts:
    - input_grid: A 2D array of color values.
    - output_grid: A 2D array of color values with the same dimensions as input_grid.
    - background_color:
        - definition: The color that occupies the largest area, often forming a contiguous block. Can be found by identifying the most frequent color in the grid.
        - example_1: Gray (5)
        - example_2: Green (3)
    - pattern_block:
        - definition: The minimal contiguous block of rows containing all pixels that are *not* the background_color.
        - identification: Find the minimum row index (`min_row`) and maximum row index (`max_row`) containing non-background pixels. The block consists of input rows from `min_row` to `max_row` inclusive.
        - properties:
            - rows: A list or sequence of 1D arrays representing the rows of the pattern.
            - height (H_p): The number of rows in the pattern block (`max_row` - `min_row` + 1).
        - example_1:
            - rows: Input rows 5 through 9.
            - height: 5
        - example_2:
            - rows: Input rows 6 through 9.
            - height: 4
    - transformation_rule:
        - condition: Based on the parity of pattern_block.height (H_p).
        - case_odd_height:
            - source_sequence: The pattern_block rows in their original order.
            - action: Repeat the source_sequence vertically until the output grid height is filled.
            - example: train_1 (H_p=5). Output is rows (5-9) repeated twice.
        - case_even_height:
            - preparation: Split pattern_block into top_half (first H_p/2 rows) and bottom_half (last H_p/2 rows).
            - source_sequence: Concatenate bottom_half followed by top_half.
            - action: Repeat the source_sequence vertically until the output grid height is filled.
            - example: train_2 (H_p=4). Split into rows (6,7) and (8,9). Swapped sequence is (8,9,6,7). Output repeats this sequence 2.5 times.
    - output_generation:
        - dimensions: Same height (H_in) and width (W_in) as the input grid.
        - content: Filled row by row using the appropriate source_sequence determined by the transformation_rule, repeating the sequence as needed. The i-th row of the output is the `(i % sequence_length)`-th row of the source_sequence.
