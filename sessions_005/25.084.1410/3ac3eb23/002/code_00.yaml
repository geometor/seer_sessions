- task: Downward diagonal cascade simulation.
- grid_properties:
    - dimensions: Height and width vary between examples.
    - background_color: White (0).
- objects:
    - type: Colored pixels (non-white).
    - behavior: Act as initial sources for a cascading effect.
- actions:
    - process: Simulation proceeds row by row, from top to bottom.
    - rule: A cell at `(r, c)` potentially receives color based on cells `(r-1, c-1)` and `(r-1, c+1)`.
    - propagation:
        - A white cell at `(r, c)` becomes colored if exactly one of the diagonal cells above it (`(r-1, c-1)` or `(r-1, c+1)`) in the previous row is non-white. The cell `(r, c)` takes the color of that non-white source cell.
        - If both diagonal cells above (`(r-1, c-1)` and `(r-1, c+1)`) are non-white:
            - If they have the *same* color, the cell `(r, c)` takes that color.
            - If they have *different* colors, the cell `(r, c)` remains white.
        - Cells outside the grid boundaries are treated as white (0).
    - state_dependency: The calculation for row `r` depends *only* on the state of row `r-1`.
    - initialization: The output grid starts as a copy of the input grid. The simulation effectively starts computing from row 1 based on row 0.