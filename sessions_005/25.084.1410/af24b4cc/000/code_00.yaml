input_grid_size:
  height: 9
  width: 10
output_grid_size:
  height: 4
  width: 5
elements:
  - element: background
    color: white (0)
    location: fills most of the grid, surrounds blocks/pixels
  - element: input_block
    description: 2x2 area containing colored pixels (1-9)
    count: 6 per input grid
    locations: top-left corners at (1,1), (1,4), (1,7), (5,1), (5,4), (5,7)
    properties: can contain up to 4 pixels, potentially of different colors
  - element: output_pixel
    description: single colored pixel (1-9) derived from an input_block
    count: 6 per output grid
    locations: (1,1), (1,2), (1,3), (2,1), (2,2), (2,3)
relationships:
  - type: mapping
    description: Each input_block maps to a specific output_pixel position.
    details:
      - input_block at (1,1) -> output_pixel at (1,1)
      - input_block at (1,4) -> output_pixel at (1,2)
      - input_block at (1,7) -> output_pixel at (1,3)
      - input_block at (5,1) -> output_pixel at (2,1)
      - input_block at (5,4) -> output_pixel at (2,2)
      - input_block at (5,7) -> output_pixel at (2,3)
transformation_rule:
  - step: identify_blocks
    description: Locate the six 2x2 input blocks based on their fixed top-left coordinates.
  - step: analyze_block
    description: For each 2x2 block, count the frequency of each non-white color.
  - step: select_color
    description: >
      Determine the color with the highest frequency within the block.
      If there is a unique most frequent color, select it.
      If there is a tie in frequency (which occurs when two colors appear twice),
      select the color located at the bottom-right position of the 2x2 block
      (relative coordinates [1, 1] within the block).
  - step: place_pixel
    description: Place the selected color into the corresponding position in the output grid.
  - step: finalize_output
    description: Ensure all other positions in the output grid are white (0).