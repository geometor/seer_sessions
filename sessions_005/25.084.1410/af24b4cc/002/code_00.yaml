Input_Global:
  Type: Grid
  Properties:
    Size: 9x10
    Background: White (0)
    Contains: Six distinct 2x2 colored blocks separated by white padding.

Output_Global:
  Type: Grid
  Properties:
    Size: 4x5
    Background: White (0)
    Structure: Contains a 2x3 arrangement of colored pixels (derived from input blocks) within the white background, specifically at rows 1-2, columns 1-3.

Objects:
  - Name: Input_Block
    Type: Subgrid (2x2)
    Source: Extracted from specific locations in Input_Global.
      Locations: (1,1), (1,4), (1,7), (5,1), (5,4), (5,7) (top-left corners)
    Properties:
      Pixels: Four pixels, each with a color (0-9).
      Non_White_Pixels: Pixels with color > 0.
      Color_Frequencies: Counts of each non-white color.

  - Name: Output_Pixel
    Type: Pixel
    Location: Mapped from Input_Block locations to specific coordinates in Output_Global.
      Mapping:
        (1,1) -> (1,1)
        (1,4) -> (1,2)
        (1,7) -> (1,3)
        (5,1) -> (2,1)
        (5,4) -> (2,2)
        (5,7) -> (2,3)
    Properties:
      Color: Determined by processing the corresponding Input_Block.

Actions:
  - Name: Extract_Blocks
    Input: Input_Global Grid
    Output: Six Input_Block objects (2x2 subgrids).
    Details: Slices the Input_Global grid at predefined coordinates.

  - Name: Determine_Block_Color
    Input: Input_Block object
    Output: A single color value (int 0-9).
    Rule:
      1. Count frequencies of non-white colors in the Input_Block.
      2. Identify the maximum frequency among non-white colors.
      3. If one color has the maximum frequency, return that color.
      4. If two colors (C1, C2) share the maximum frequency (must be 2):
          a. Get the block pixels: TL, TR, BL, BR.
          b. Get the bottom-right pixel color: BR_Color.
          c. Check if pattern is [[A, A], [B, B]] (TL=TR=A, BL=BR=B, A!=B).
          d. If pattern is [[A, A], [B, B]] AND A > B:
              Return color A.
          e. Else (not that specific pattern, or A <= B):
              Return BR_Color.
      5. If no non-white colors exist (should not happen based on examples), return 0 (White).

  - Name: Construct_Output
    Input: Six color values derived from the Input_Blocks.
    Output: Output_Global Grid (4x5).
    Details:
      1. Initialize a 4x5 grid with White (0).
      2. Place each determined block color into the Output_Global grid according to the specified coordinate mapping.