elements:
  - object: horizontal_segment
    description: The lowest horizontal line in the grid containing at least two different non-white colors.
    properties:
      - row_index: The row where the segment is located (r_seg).
      - colors: The set of non-white colors present in the segment.
      - structure: Sequence of colors along the segment's non-white portion.
  - object: central_pixel_color
    description: The color within the horizontal_segment that is not located at the absolute horizontal extremities of the segment's non-white pixels.
    symbol: C1
  - object: flanking_pixels
    description: Pixels within the horizontal_segment whose color is different from the central_pixel_color. These are typically at the ends of the segment but can include adjacent pixels of the same color.
    properties:
      - color: The color of the flanking pixels (C2).
      - locations: List of coordinates (r_seg, c_flank) for each flanking pixel.
  - object: projection_target_pixels
    description: White pixels in the input grid located above flanking_pixels where the central_pixel_color will be placed in the output.
    properties:
      - coordinates: (r_target, c_flank) where c_flank is the column of a flanking_pixel, and r_target is the highest row index < r_seg such that all pixels (r, c_flank) for r_target <= r < r_seg are white.
      - color: Should be white (0) in the input.

actions:
  - action: identify_segment
    description: Find the lowest row `r_seg` containing a horizontal sequence of non-white pixels with at least two distinct colors.
  - action: identify_colors
    description: Determine the central color (C1) and the flanking color(s) (C2) within the identified segment.
  - action: find_projection_targets
    description: For each flanking pixel at (r_seg, c_flank), trace upwards in column c_flank to find the highest white pixel at row `r_target` such that the path from `r_target` to `r_seg-1` in that column is clear (all white).
  - action: place_pixels
    description: Create the output grid by copying the input grid and changing the color of each projection_target_pixel to the central_pixel_color (C1).

relationships:
  - type: vertical_projection
    description: The central color (C1) is projected vertically upwards from the column position of each flanking pixel (C2).
  - type: boundary_condition
    description: The projection stops at the highest available white pixel below any obstruction or the top grid boundary in that column.