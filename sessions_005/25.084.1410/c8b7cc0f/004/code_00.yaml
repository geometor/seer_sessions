task_description: Transforms an input grid into a 3x3 output grid based on the count of a specific 'signal' color.
input_grid:
  properties:
    - Contains background pixels (white, 0).
    - Contains pixels of a 'distractor' color (blue, 1).
    - Contains pixels of a 'signal' color (a color other than white or blue).
    - Size varies.
output_grid:
  properties:
    - Always 3x3 size.
    - Contains background pixels (white, 0).
    - Contains pixels of the 'signal' color identified from the input.
structure:
  - object: signal_color_pixel
    definition: A pixel in the input grid whose color is not white (0) and not blue (1).
    property: color (C) - Determined dynamically for each input grid.
  - object: output_grid
    definition: A 3x3 grid derived from the input.
    properties:
      - row_1: All pixels are the signal color (C).
      - row_2: Contains M pixels of the signal color (C) starting from the left, followed by (3-M) white (0) pixels.
      - row_3: All pixels are white (0).
transformation:
  - action: identify_signal_color
    input: input_grid
    output: signal_color (C)
    rule: Find the color present in the input grid that is not white (0) and not blue (1).
  - action: count_signal_pixels
    input: input_grid, signal_color (C)
    output: count (N)
    rule: Count the total number of pixels with the signal_color (C) in the input_grid.
  - action: calculate_second_row_pixels
    input: count (N)
    output: second_row_count (M)
    rule: |
      Calculate the remainder R = N % 3.
      If R is 0, M = 1.
      If R is 1, M = 0.
      If R is 2, M = 2.
  - action: construct_output_grid
    input: signal_color (C), second_row_count (M)
    output: 3x3 output_grid
    rule: |
      Create a 3x3 grid initialized to white (0).
      Set all pixels in the first row (index 0) to signal_color (C).
      Set the first M pixels in the second row (index 1) to signal_color (C).
      The third row (index 2) remains white (0).