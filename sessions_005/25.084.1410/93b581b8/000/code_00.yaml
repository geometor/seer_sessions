task_description: Analyze a 6x6 input grid containing a single 2x2 non-white object and generate an output grid by adding four 2x2 corner objects whose colors are derived from the original object's pixels.

grid_properties:
  size: 6x6
  background_color: 0 # white

input_elements:
  - object_type: central_object
    shape: 2x2 rectangle
    composition: contiguous block of 4 different non-white pixels
    quantity: 1
    location: variable within the grid, but not overlapping edges

output_elements:
  - object_type: original_object
    description: A copy of the input grid's central_object.
    location: Same as in the input grid.
  - object_type: corner_object
    shape: 2x2 rectangle
    composition: solid color
    quantity: 4
    locations:
      - top_left: (rows 0-1, cols 0-1)
      - top_right: (rows 0-1, cols 4-5) # Assuming 6x6 grid, cols width-2 to width-1
      - bottom_left: (rows 4-5, cols 0-1) # Assuming 6x6 grid, rows height-2 to height-1
      - bottom_right: (rows 4-5, cols 4-5) # Assuming 6x6 grid, rows height-2 to height-1, cols width-2 to width-1

transformation_rules:
  - rule: Identify the single 2x2 non-white object in the input grid.
  - rule: Preserve the identified object in its original location in the output grid.
  - rule: Determine the colors of the four pixels within the identified object (TopLeft_Color, TopRight_Color, BottomLeft_Color, BottomRight_Color).
  - rule: Create four new 2x2 solid-colored objects in the output grid.
  - rule: Place the new objects in the four corners of the output grid.
  - rule: Map the colors based on diagonal opposition:
      - Top-left corner object color = BottomRight_Color of original object.
      - Top-right corner object color = BottomLeft_Color of original object.
      - Bottom-left corner object color = TopRight_Color of original object.
      - Bottom-right corner object color = TopLeft_Color of original object.

assumptions:
  - Input grid always contains exactly one 2x2 non-white object.
  - Input grid size is consistent (6x6 in examples, but rule should generalize).
  - The 2x2 object in the input does not touch the absolute edges of the grid (allowing space for corner objects).
