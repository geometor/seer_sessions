Input Grid:
  Properties:
    Height: 6
    Width: 5
    Colors: [white (0), maroon (9), yellow (4)]
  Structure:
    - Top Half: Rows 0-2, contains white (0) and maroon (9) pixels.
    - Bottom Half: Rows 3-5, contains white (0) and yellow (4) pixels.

Output Grid:
  Properties:
    Height: 3
    Width: 5
    Colors: [white (0), magenta (6)]

Transformation:
  Type: Overlay and Combine
  Rule: Cell-wise comparison between top and bottom halves of the input.
  Mapping:
    - For each position (row `r`, column `c`) from 0 <= `r` < 3 and 0 <= `c` < 5:
      - Let `top_pixel` = Input[`r`][`c`]
      - Let `bottom_pixel` = Input[`r` + 3][`c`]
      - Determine `output_pixel` at Output[`r`][`c`]:
        - If ( `top_pixel` is non-white AND `bottom_pixel` is white ) OR ( `top_pixel` is white AND `bottom_pixel` is non-white ):
            `output_pixel` = magenta (6)
        - Else (both white OR both non-white):
            `output_pixel` = white (0)
  Input Colors Involved:
    - maroon (9) in top half corresponds to non-white.
    - yellow (4) in bottom half corresponds to non-white.
    - white (0) corresponds to white.
  Output Colors Produced:
    - magenta (6) signifies an exclusive presence of non-white in one of the corresponding input half-pixels.
    - white (0) signifies either both corresponding input half-pixels are white or both are non-white.