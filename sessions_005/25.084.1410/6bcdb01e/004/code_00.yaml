objects:
  - type: grid
    properties:
      height: variable (1-30)
      width: variable (1-30)
      pixels:
        - color_code: 0-9
        - color_name: [white, blue, red, green, yellow, gray, magenta, orange, azure, maroon]

  - type: boundary
    properties:
      color: azure (8)
      role: separates the grid into distinct regions based on 4-way connectivity.

  - type: region
    properties:
      definition: A set of contiguous non-azure pixels connected via 4-way adjacency (up, down, left, right). Bounded by azure pixels or grid edges.
      contains_source: boolean (true if the region includes at least one green pixel in the input)

  - type: source_pixel
    properties:
      color: green (3)
      role: Acts as a trigger within its 4-connected region.

  - type: target_pixel
    properties:
      color: orange (7)
      role: Subject to transformation if located within a region containing a source pixel.

actions:
  - name: identify_regions
    details: Use a 4-way connectivity algorithm (like BFS or flood fill) starting from unvisited, non-azure pixels to find all distinct regions. Mark visited pixels during the search. For each region found, determine if it contains any green (3) pixels.

  - name: transform_pixels
    details: Iterate through all identified regions. If a region was determined to contain green (3) pixels in the input, change all pixels within that specific region that were originally orange (7) to green (3) in the output grid. Pixels in regions without initial green pixels, azure pixels, and other non-orange pixels remain unchanged.