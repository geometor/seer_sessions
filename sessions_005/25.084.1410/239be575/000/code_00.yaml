task_type: classification
input_features:
  - color: white (0)
  - color: red (2)
  - color: azure (8)
output_features:
  - single_value: 0 (white) or 8 (azure)
objects:
  - type: red_pixels
    color: 2
    # note: in examples, often form 2x2 squares, but the rule seems pixel-based
  - type: azure_pixels
    color: 8
    # note: form contiguous blocks of various shapes
relationships:
  - type: adjacency
    between: red_pixels, azure_pixels
    definition: sharing a side or a corner (8 neighbors)
rule_logic:
  condition: Check if any red pixel (color 2) is adjacent (including diagonally) to any azure pixel (color 8).
  outcome_true: Output is 0.
  outcome_false: Output is 8.