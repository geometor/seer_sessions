{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe transformation removes all white (0) and magenta (6) pixels.  Remaining colored regions are stacked vertically in each column, with the lowest color value at the bottom and the highest at the top. Regions of the same color are considered continuous if adjacent horizontally, but distinct if separated vertically.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid by removing white (0) and magenta (6) pixels and stacking the\n    remaining colored regions, maintaining relative vertical order within each column.\n    \"\"\"\n    input_grid = np.array(input_grid)\n    rows, cols = input_grid.shape\n    output_grid = np.zeros_like(input_grid)\n\n    # Iterate through each column\n    for j in range(cols):\n        # Collect non-white, non-magenta pixels in the column, preserving their original row order\n        column_pixels = []\n        for i in range(rows):\n            pixel = input_grid[i, j]\n            if pixel != 0 and pixel != 6:  # Filter out white and magenta\n                column_pixels.append(pixel)\n\n        # Sort the collected pixels by color value (ascending)\n        column_pixels.sort()\n\n        # Place the sorted pixels in the output column, starting from the top\n        for i, pixel in enumerate(column_pixels):\n            output_grid[i, j] = pixel\n\n    return output_grid.tolist()\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 12513,
    "candidates_token_count": 329,
    "total_token_count": 12842,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 10.465678
}