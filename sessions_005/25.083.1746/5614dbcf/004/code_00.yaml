examples:
  - id: 1
    input_grid:
      dimensions: [9, 9]
      unique_colors: [0, 2, 5, 7]
      block_structure: 3x3  # Indicates the division into 3x3 blocks
    output_grid:
      dimensions: [3, 3]
      unique_colors: [0, 2, 7]
    transform_notes: >
        The top-left 3x3 block of the input has a majority of 0s, resulting in a 0 in the output.
        The top-center 3x3 block is all 2s, resulting in a 2.
        The top-right 3x3 block is all 0s, resulting in a 0.
        The middle-left 3x3 block is all 0s, resulting in 0.
        The middle-center 3x3 block includes 0 and 5, and the result is 0.
        The middle-right 3x3 block is all 0s, resulting in 0.
        The bottom-left 3x3 block contains 0 and 5, with the result being 0.
        The bottom-center 3x3 block is all 7s, resulting in 7.
        The bottom-right 3x3 block is all 0s, resulting in 0.

  - id: 2
    input_grid:
      dimensions: [9, 9]
      unique_colors: [0, 3, 5, 6, 7, 8, 9]
      block_structure: 3x3
    output_grid:
      dimensions: [3, 3]
      unique_colors: [0, 3, 6, 7, 8, 9]
    transform_notes: >
        The top-left 3x3 block is all 3s, resulting in 3.
        The top-center 3x3 block is all 0s, resulting in 0.
        The top-right 3x3 block is mostly 8s, with one 5, resulting in 8.
        The middle-left 3x3 block is all 0s, resulting in 0.
        The middle-center 3x3 block is all 7s, resulting in 7.
        The middle-right 3x3 block is all 0s, resulting in 0.
        The bottom-left 3x3 block is all 6s, resulting in 6.
        The bottom-center 3x3 contains 0 and 5 and results in a 0.
        The bottom-right 3x3 block is mostly 9s, with a single 5, resulting in 9.