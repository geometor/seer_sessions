{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nYellow pixels above the bottom row consolidate downwards. If there are any yellow pixels in a column, all cells in that column from the top down to the bottom row become yellow.\n\"\"\"\n\nimport numpy as np\n\ndef get_yellow_pixels(grid):\n    \"\"\"\n    Finds coordinates of all yellow pixels in the grid.\n    \"\"\"\n    yellow_pixels = []\n    for row_idx, row in enumerate(grid):\n        for col_idx, pixel in enumerate(row):\n            if pixel == 4:\n                yellow_pixels.append((row_idx, col_idx))\n    return yellow_pixels\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid according to the described rule.\n    \"\"\"\n    input_grid = np.array(input_grid)\n    output_grid = np.copy(input_grid)\n    rows, cols = input_grid.shape\n\n    # Get all yellow pixel coordinates\n    yellow_pixels = get_yellow_pixels(input_grid)\n\n    # Iterate through columns\n    for col in range(cols):\n        # Check if there are any yellow pixels in the current column\n        has_yellow = any(c == col for _, c in yellow_pixels)\n\n        # If the column has any yellow pixels, fill the entire column down to the bottom row\n        if has_yellow:\n            for row in range(rows):\n                output_grid[row, col] = 4\n\n    return output_grid.tolist()\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 3957,
    "candidates_token_count": 336,
    "total_token_count": 4293,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 8.595836
}