example_1:
  input:
    dimensions: [6, 7]
    objects:
      - color: 4
        original_position: [0, 1]
  output:
    dimensions: [6, 7]
    pattern: |
      Alternating rows. Odd rows (starting at index 0) are
      the same as input row.  Even rows contain duplications
      of the non-zero pixels of the input row.
    object_transformations:
      - color: 4
        positions: [[0,2*1],[0,2*1+1],[2,2*1], [2,2*1+1], [4,2*1], [4, 2*1+1]] #y coordinate multiplied by 2 for odd rows, 2 and +1
example_2:
  input:
    dimensions: [6, 10]
    objects:
      - color: 2
        original_position: [0, 1]
      - color: 8
        original_position: [0, 5]
  output:
    dimensions: [6, 10]
    pattern: |
        Alternating rows. Odd rows are the same as the
        corresponding input row. Even rows dupliate the non-zero pixels.
    object_transformations:
      - color: 2
        positions: [[0, 2*1], [0, 2*1+1], [2, 2*1], [2, 2*1 + 1], [4, 2*1], [4, 2*1 + 1]]  #y coordinate multiplied by 2
      - color: 8
        positions:  [[0, 2*5], [0, 2*5 + 1], [2, 2*5], [2, 2*5 + 1], [4, 2*5], [4, 2*5+1]]