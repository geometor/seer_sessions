{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nCopy edge value to the edges.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    # initialize output_grid\n    output_grid = np.copy(input_grid)\n    rows, cols = input_grid.shape\n\n    # change output pixels\n    for i in range(rows):\n        # Find non-zero indices in the current row\n        non_zero_indices = np.nonzero(input_grid[i, :])[0]\n\n        # If there are non-zero elements in the row\n        if non_zero_indices.size > 0:\n            # Get the leftmost and rightmost non-zero indices\n            leftmost_index = non_zero_indices[0]\n            rightmost_index = non_zero_indices[-1]\n\n            # Fill values to the left\n            output_grid[i, :leftmost_index] = input_grid[i, leftmost_index]\n\n            # Fill the values between the non-zero values\n            for j in range(len(non_zero_indices) - 1):\n               left_index =  non_zero_indices[j]\n               right_index = non_zero_indices[j+1]\n               output_grid[i,left_index:right_index+1] = input_grid[i,left_index]\n\n            # Fill values to the right\n            output_grid[i, rightmost_index + 1:] = input_grid[i, rightmost_index]\n        \n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2087,
    "candidates_token_count": 348,
    "total_token_count": 2435,
    "cached_content_token_count": 0
  },
  "response_time": 4.498608
}