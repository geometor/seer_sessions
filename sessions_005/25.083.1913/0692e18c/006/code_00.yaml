observations:
  - example_1:
      input_objects:
        - object_1:
            color: 0
            shape: irregular
            pixels: [[0,0], [0,1], [1,0], [2,1]]
        - object_2:
              color: 6
              shape: irregular
              pixels: [[0, 2], [1, 1], [2, 0]]
      output_objects:
        - description: "The output grid appears to be composed of the input and transformed versions of it. It is difficult to determine the precedence rule in case of overlapping"
      transformations:
        - type: flip_horizontal
        - type: flip_vertical
        - type: superposition

  - example_2:
      input_objects:
        - object_1:
          color: '0'
          shape: 'irregular'
          pixels: [[0, 0], [0, 2], [2, 0], [2,2]]
        - object_2:
          color: 7
          shape: rectangle
          pixels:  [[0, 1], [1, 0], [1, 1], [1, 2], [2, 1]]
      output_objects:
        - description: "The output grid appears to be composed of the input and transformed versions of it. It is difficult to determine the precedence rule in case of overlapping"

      transformations:
        - type: flip_horizontal
        - type: flip_vertical
        - type: superposition

  - example_3:
       input_objects:
        - object_1:
          color: '0'
          shape: 'irregular'
          pixels: [[0, 2], [1, 0], [1, 1], [2, 0], [2,1]]
        - object_2:
          color: 4
          shape: rectangle
          pixels:  [[0, 0], [0, 1]]
       output_objects:
        - description: "The output grid appears to be composed of the input and transformed versions of it. It is difficult to determine the precedence rule in case of overlapping"

       transformations:
        - type: flip_horizontal
        - type: flip_vertical
        - type: superposition