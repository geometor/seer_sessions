{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nLocate red pixel(s) in the grid. Change the color from red (2) to blue (1) if certain adjacency condition is met. Specifically, change the lower-right most red pixel that is adjacent to at least one white pixel.\n\"\"\"\n\nimport numpy as np\n\ndef get_adjacent_pixels(grid, row, col):\n    \"\"\"Gets the values of adjacent pixels (including diagonals).\"\"\"\n    rows, cols = grid.shape\n    adjacent = []\n    for i in range(max(0, row - 1), min(rows, row + 2)):\n        for j in range(max(0, col - 1), min(cols, col + 2)):\n            if (i, j) != (row, col):\n                adjacent.append((i, j, grid[i, j]))\n    return adjacent\n\ndef transform(input_grid):\n    # initialize output_grid\n    output_grid = np.copy(input_grid)\n    rows, cols = output_grid.shape\n    red_pixels = []\n\n    # Iterate through each pixel to find red pixels\n    for r in range(rows):\n        for c in range(cols):\n            if output_grid[r, c] == 2:\n                red_pixels.append((r, c))\n\n    # check red pixels and see if they are next to white pixels.\n    target_pixel = None\n    for r, c in reversed(red_pixels):\n      adjacent_pixels = get_adjacent_pixels(output_grid,r,c)\n      for ar, ac, val in adjacent_pixels:\n        if val == 0:\n          target_pixel = (r,c)\n          break\n      if target_pixel:\n        break\n          \n    # change output pixels\n    if target_pixel:\n      output_grid[target_pixel[0],target_pixel[1]] = 1\n\n    return output_grid\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 1987,
    "candidates_token_count": 437,
    "total_token_count": 2424,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 5.551131
}