facts:
  - task_id: "Task XYZ (Example Set)"
  - input_grid_size: 3x3
  - output_grid_size: 3x3
  - transformations:
    - reorder_within_columns:
      - description: "Elements within each column are reordered based on an observed pattern related to frequency and possibly original position, but not solely on frequency."
      - details: "The most frequent element doesn't always go on top.  There is a complex interaction."
    - reorder_columns:
      - description: "Columns are reordered after the internal reordering, based on a pattern combining frequencies and original column positions."
      - details: "The current sorting method by the number of unique elements is insufficient. The correct ordering depends on a combination of intra-column frequencies, and original column positions. It is not clear yet exactly how this works"
  - objects:
    - type: "Grid"
      properties:
        - dimensions: "3x3"
        - elements: "Integers representing colors (0-9)"
    - type: "Column"
      properties:
        - elements: "List of integers"
        - derived_from: "Vertical slices of the input grid"
  - actions:
    - name: "_reorder_within_column"
      input: "A single column (list of integers)"
      output: "A reordered column (list of integers)"
      purpose: "Reorders elements within a column."
    - name: "_column_sort_key"
      input: "A reordered column (list of integers)"
      output: "A sorting key (currently length of set, but will change)"
      purpose: "Determines the order of columns after internal reordering."
    - name: "transform"
      input: "The input grid (list of lists)"
      output: "The transformed output grid (list of lists)"
      purpose: "Applies the complete transformation logic."
