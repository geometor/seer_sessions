{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nCounts the number of distinct regions of connected non-zero pixels in a 2D grid.\nTwo non-zero pixels are part of the same region if they have the same value\nand are directly adjacent (horizontally or vertically).\n\"\"\"\n\nimport numpy as np\n\ndef is_valid(r, c, grid):\n    \"\"\"Checks if a given row and column are within the grid bounds.\"\"\"\n    rows, cols = len(grid), len(grid[0])\n    return 0 <= r < rows and 0 <= c < cols\n\ndef dfs(r, c, grid, visited, color):\n    \"\"\"Performs Depth-First Search to mark all connected pixels of the same color.\"\"\"\n    rows, cols = len(grid), len(grid[0])\n    \n    # Check boundary conditions and if already visited or it's not the correct color\n    if not is_valid(r,c,grid) or (r, c) in visited or grid[r][c] != color:\n        return\n\n    visited.add((r, c))\n\n    # Recursively visit adjacent cells (up, down, left, right)\n    dfs(r + 1, c, grid, visited, color)\n    dfs(r - 1, c, grid, visited, color)\n    dfs(r, c + 1, grid, visited, color)\n    dfs(r, c - 1, grid, visited, color)\n\n\ndef transform(input_grid):\n    \"\"\"Counts distinct regions of same-colored, orthogonally connected, non-zero pixels.\"\"\"\n    grid = input_grid\n    rows, cols = len(grid), len(grid[0])\n    visited = set()\n    count = 0\n\n    # Iterate through all cells of the grid\n    for r in range(rows):\n        for c in range(cols):\n            # if unvisited and it is non-zero\n            if (r, c) not in visited and grid[r][c] != 0:\n                # Start a new DFS from this cell for a region of like colors\n                dfs(r, c, grid, visited, grid[r][c])\n                count += 1  # Increment region count\n\n    return count\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 1857,
    "candidates_token_count": 495,
    "total_token_count": 2352,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.0-pro-exp-02-05",
  "response_time": 11.292465
}