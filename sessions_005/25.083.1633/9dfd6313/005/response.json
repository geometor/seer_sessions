{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nThe transformation extracts all non-zero elements from the input grid, preserving their original order of appearance, and then repacks them into an output grid of the same size, starting from the top-left corner and filling each row completely before moving to the next.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid by repacking non-zero elements.\n    \"\"\"\n    input_grid = np.array(input_grid)\n    output_grid = np.zeros_like(input_grid)\n    \n    # 1. Identify and Extract non-zero elements\n    non_zero_elements = []\n    for r in range(input_grid.shape[0]):\n        for c in range(input_grid.shape[1]):\n            if input_grid[r, c] != 0:\n                non_zero_elements.append(input_grid[r, c])\n\n    # 2. Repack into Output Grid\n    output_row = 0\n    output_col = 0\n    for value in non_zero_elements:\n        # Place the value in the next available position\n        output_grid[output_row, output_col] = value\n        \n        # Update to the next position (row-major order)\n        output_col += 1\n        if output_col >= output_grid.shape[1]:\n            output_col = 0\n            output_row += 1\n\n    return output_grid.tolist()\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 4513,
    "candidates_token_count": 340,
    "total_token_count": 4853,
    "cached_content_token_count": 0
  },
  "response_time": 10.304054
}