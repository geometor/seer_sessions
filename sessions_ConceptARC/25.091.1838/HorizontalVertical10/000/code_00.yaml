task_description: Add a single line of a specific color to one border of the grid, based on the orientation of shapes within the input grid.

examples:
  train_1:
    input:
      grid_size: [10, 10]
      background_color: white (0)
      objects:
        - shape: horizontal line
          color: yellow (4)
          location: rows=[4], cols=[3, 4, 5]
          size: [1, 3]
        - shape: horizontal line
          color: red (2)
          location: rows=[5], cols=[3, 4, 5]
          size: [1, 3]
        - shape: horizontal line
          color: green (3)
          location: rows=[6], cols=[3, 4, 5]
          size: [1, 3]
      dominant_orientation: horizontal
    output:
      grid_size: [10, 10]
      base_grid: same as input
      added_feature:
        shape: vertical line
        color: azure (8)
        location: rows=[0-9], cols=[9] (rightmost column)
        size: [10, 1]
      relationship: Added vertical line on the right border because input shapes were horizontal. Color is azure (8).

  train_2:
    input:
      grid_size: [10, 10]
      background_color: white (0)
      objects: # Can be viewed as a block or individual columns
        - shape: vertical line
          color: orange (7)
          location: rows=[3, 4, 5, 6], cols=[2]
          size: [4, 1]
        - shape: vertical line
          color: azure (8)
          location: rows=[3, 4, 5, 6], cols=[3]
          size: [4, 1]
        - shape: vertical line
          color: maroon (9)
          location: rows=[3, 4, 5, 6], cols=[4]
          size: [4, 1]
        - shape: vertical line
          color: blue (1)
          location: rows=[3, 4, 5, 6], cols=[5]
          size: [4, 1]
      dominant_orientation: vertical # Based on constituent lines
    output:
      grid_size: [10, 10]
      base_grid: same as input
      added_feature:
        shape: horizontal line
        color: azure (8)
        location: rows=[0], cols=[0-9] (topmost row)
        size: [1, 10]
      relationship: Added horizontal line on the top border because input shapes were vertical. Color is azure (8).

derived_rules:
  - rule: Determine the dominant orientation of non-background objects/shapes in the input grid.
    details: Check if connected non-background pixels form shapes that are wider than tall (horizontal) or taller than wide (vertical).
  - rule: If the dominant orientation is horizontal, add a vertical line of azure (8) color to the rightmost column of the grid.
  - rule: If the dominant orientation is vertical, add a horizontal line of azure (8) color to the topmost row of the grid.
  - rule: If orientation is ambiguous (e.g., square shapes), assume a default or apply tie-breaking (example suggests vertical takes precedence if components are vertical). The examples provided have clear or component-based orientation.
  - rule: The added color is always azure (8).