Grid:
  Properties:
    - Size: Unchanged between input and output.
    - Background: Color white (0) is preserved. Acts as a separator.
Objects:
  Definition: Connected components of non-white pixels (pixels with value > 0).
  Properties:
    - Pixels: The set of coordinates belonging to the component.
    - Has_Gray: Boolean flag, true if any pixel in the component has value gray (5).
    - Primary_Color:
        - If Has_Gray is true: The non-gray, non-white color within the component (assuming one primary color exists besides gray based on examples).
        - If Has_Gray is false: The single non-white color of the component.
    - Shape: Defined by the `Pixels` coordinates. Preserved in the output (including internal white/0 pixels).
Transformation:
  Type: Color substitution within objects.
  Rule: Conditional based on the `Has_Gray` property of the object.
  Mappings:
    - Rule_Gray_Present: # Applied if Has_Gray is true
        Input_Color: Blue (1) -> Output_Color: Yellow (4)
        Input_Color: Red (2) -> Output_Color: Red (2)
        Input_Color: Yellow (4) -> Output_Color: Green (3)
        Input_Color: Green (3) -> Output_Color: Blue (1)
    - Rule_Gray_Absent: # Applied if Has_Gray is false
        Input_Color: Yellow (4) -> Output_Color: Magenta (6)
        Input_Color: Red (2) -> Output_Color: Orange (7)
        Input_Color: Magenta (6) -> Output_Color: Red (2)
        Input_Color: Orange (7) -> Output_Color: Yellow (4)
Action:
  - Iterate through each identified object in the input grid.
  - Determine `Has_Gray` and `Primary_Color` for the object.
  - Select the appropriate transformation mapping (Rule_Gray_Present or Rule_Gray_Absent).
  - Determine the `Output_Color` by applying the selected mapping to the `Primary_Color`.
  - For every pixel coordinate within the object's `Pixels` set, change the color in the output grid at that coordinate to the determined `Output_Color`.
  - Pixels that were originally white (0), whether background or internal holes, remain white (0).