task_description: Apply one of two transformations based on the connectivity of non-white pixels.

example_1:
  input_features:
    - objects: Multiple disconnected magenta (6) pixels (2 components).
    - count: 12 pixels.
    - background_color: white (0)
  output_features:
    - objects: A single solid magenta (6) object.
    - shape: Filled area approximating the convex hull of the input points.
    - count: 39 pixels.
    - background_color: white (0)
  action:
    - type: Geometric construction
    - name: Convex Hull Filling (Rasterized)
    - description: Calculate the convex hull of the input magenta pixels. Fill all grid cells whose centers fall within or on the boundary of this hull polygon with magenta.

example_2:
  input_features:
    - objects: A single connected green (3) object (1 component).
    - shape: Diamond (filled).
    - count: 23 pixels.
    - background_color: white (0)
  output_features:
    - objects: Multiple connected green (3) pixels forming a thin outline.
    - shape: Diamond (thin outline).
    - count: 10 pixels.
    - background_color: white (0)
  action:
    - type: Boundary extraction / Interior removal
    - name: Thin Outline Finding
    - description: Identify "interior" pixels within the input green object (pixels where all 8 neighbors are also green). Remove these interior pixels (set to white), keeping only the remaining green pixels.

general_logic:
  condition: Check connectivity of non-white pixels (using 8-way adjacency). Let C be the color of non-white pixels.
  if_single_connected_object: Apply Thin Outline Finding.
  if_multiple_disconnected_pixels_or_objects: Apply Convex Hull Filling (Rasterized) using color C.