task_description: Apply one of two geometric transformations based on the connectivity of the non-background pixels. Assumes a single non-background color.
background_color: white (0)

case_1:
  condition: Input non-background pixels form a single connected component (using 8-way adjacency).
  example: train_2
  input_features:
    - object: Single connected component (green diamond, color 3).
    - property: Contains interior pixels (pixels not adjacent to the background).
    - count: 23 pixels.
    - num_components: 1
  action:
    - type: Boundary Extraction
    - name: Outline Finding
    - description: Retain only the input pixels of the component that are adjacent (including diagonals) to at least one background (white) pixel. Change all other pixels (interior pixels of the original component) to the background color.
  output_features:
    - object: Outline of the input shape (green, color 3).
    - property: Pixels form the boundary of the original shape. No interior pixels relative to the original shape.
    - count: 10 pixels.
    - num_components: 2 (technical result of connectivity check on the outline pixels themselves)

case_2:
  condition: Input non-background pixels form multiple disconnected components or consist of isolated pixels.
  example: train_1
  input_features:
    - object: Multiple disconnected pixels/small components (magenta, color 6).
    - property: Pixels are scattered.
    - count: 12 pixels.
    - num_components: 2
  action:
    - type: Geometric Construction
    - name: Convex Hull Filling
    - description: Identify all coordinates of the non-background pixels. Compute the convex hull polygon enclosing these coordinates. Fill all grid cells that fall inside or on the boundary of this convex hull polygon with the input non-background color.
  output_features:
    - object: A single, solid, filled polygon (magenta, color 6).
    - shape: Convex hull of the input points.
    - property: All points within the hull are filled.
    - count: 39 pixels.
    - num_components: 1