task_description: Processes input grids based on the number and frequency of non-white colors.
grid_properties:
  - Grid dimensions remain constant between input and output.
  - Pixels are represented by integers 0-9 (colors).
  - White (0) pixels always remain white.
objects:
  - type: colored_pixel
    properties:
      - color (non-zero integer)
      - location (row, column)
      - neighbors (8 adjacent cells: Moore neighborhood)
      - is_isolated (boolean: true if no neighbor has the same color)
  - type: color_group
    properties:
      - color (non-zero integer)
      - pixels (list of locations of pixels with this color)
      - count (number of pixels in the group)
transformation_logic:
  - conditional_rule:
      condition: Number of distinct non-white colors in the input grid.
      cases:
        - case: count > 1
          actions:
            - Identify the non-white color with the minimum count ('target_color').
            - Change all pixels with 'target_color' to white (0).
            - Keep all other pixels unchanged.
        - case: count == 1
          actions:
            - Identify the single non-white color ('the_color').
            - For each pixel with 'the_color':
                - Check its 8 neighbors (Moore neighborhood) in the input grid.
                - If no neighbor has 'the_color', change the pixel to white (0) in the output.
                - Otherwise, keep the pixel's color unchanged.
        - case: count == 0 (all white input)
          actions:
            - Output grid is identical to the input grid. # Implicitly handled