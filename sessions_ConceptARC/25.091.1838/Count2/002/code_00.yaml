Input:
  - grid: 2D array of integers (0-9).
  - background_color: white (0).
  - objects:
    - type: single contiguous shape.
    - color: blue (1).
    - properties:
      - shape: varies (rectangle, V-shape, diamond-like).
      - vertices: specific points on the shape's boundary.

Output:
  - grid: 1D array (single row) of integers.
  - pixels:
    - color: orange (7).
    - count (N): equals the number of vertices identified in the input blue shape.

Vertex Definition:
  - A blue pixel (color 1) is considered a vertex if the count of its non-blue neighbors is 6 or more.
  - Neighbors: The 8 cells immediately adjacent (horizontally, vertically, diagonally) to the pixel.
  - Boundary Handling: Cells outside the grid boundary are counted as non-blue neighbors.

Transformation:
  - Iterate through each pixel in the input grid.
  - If a pixel is blue (color 1):
    - Count its 8 neighbors (adjacent and diagonal).
    - Count how many neighbors are non-blue (color != 1) or outside the grid boundaries.
    - If the non-blue neighbor count is 6 or greater, increment the total vertex count (N).
  - After checking all pixels, create a new output grid with dimensions 1 row and N columns.
  - Fill all cells of this output grid with the orange color (7).