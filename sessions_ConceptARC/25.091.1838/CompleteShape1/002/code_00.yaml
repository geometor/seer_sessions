task_type: pattern_completion
focus: local_horizontal_patterns
elements:
  - element: target_pattern
    property: sequence
    value: '0 0' (two adjacent white pixels)
    location: (r, c+1), (r, c+2)
  - element: immediate_context
    property: flanking_pixels
    value: C (pixel at (r, c)) and D (pixel at (r, c+3))
  - element: extended_context
    property: additional_flanking_pixels
    value: Y (pixel at (r, c-1)), X (pixel at (r, c-2)), Z (pixel at (r, c+4)), W (pixel at (r, c+5))
    condition: must exist within grid bounds for symmetry check.
  - element: symmetric_pattern
    property: reflection_around_target
    notation: 'X Y C 0 0 C Y X'
    condition: Requires C==D, Y==Z, X==W, and C>0, Y>0. Boundary checks apply.
  - element: fill_condition
    property: prerequisite_for_change
    value: Both immediate flanking pixels must be non-white (C > 0 AND D > 0).
actions:
  - action: find_pattern
    target: horizontal sequence 'C 0 0 D'.
  - action: check_fill_condition
    condition: C > 0 AND D > 0.
    if_false: No change to '0 0'.
  - action: evaluate_symmetry (if fill_condition is true)
    target: pattern 'X Y C 0 0 D Z W'
    condition: C==D, Y==Z, X==W, Y > 0 (requires bounds checks for X, Y, Z, W).
  - action: replace_pixels (if fill_condition is true)
    target: the '0 0' pair at (r, c+1), (r, c+2).
    rules:
      - if symmetric_pattern is true: replace '0 0' with 'Y Y'.
      - if symmetric_pattern is false: replace '0 0' with 'C C'.