Objects:
  - Type: Boundary
    Color: green (3)
    Role: Creates enclosed regions. Not modified.
  - Type: External Area
    Role: Pixels outside any green boundary, or reachable from the grid edge without crossing green.
    Colors: white (0), yellow (4), potentially others (though only 0 and 4 seen outside boundaries in examples).
    Transformation: Not modified.
  - Type: Enclosed Region
    Role: Area completely surrounded by green (3) pixels. Transformation target.
    Initial Content Variants:
      - Purely white (0) pixels (e.g., Example 2).
      - Mix of white (0) and yellow (4) pixels, often in a checkerboard pattern (e.g., Examples 1, 3, 4).
      - Potentially other compositions (not seen in examples).
    Transformation Rules: See Actions.
  - Type: Pixel
    Color: white (0)
    Location: Can be in External Area or Enclosed Region.
    Role: Subject to change *only if* inside an Enclosed Region and specific conditions are met.
  - Type: Pixel
    Color: yellow (4)
    Location: Can be in External Area or Enclosed Region.
    Role: Defines pattern within Enclosed Regions, or is the result color for transformed white pixels. Not modified itself.

Properties:
  - Enclosure: Defined by green (3) pixels.
  - Reachability: Pixels are reachable if a path exists to the grid edge without crossing green (3). Unreachable non-green pixels form enclosed regions.
  - Region Content: The set of pixel colors within an enclosed region (e.g., {0}, {0, 4}).
  - Checkerboard Parity: For regions containing yellow (4), the property `(row + col) % 2` associated with the yellow pixels determines the pattern.

Actions:
  - Identify Boundaries: Locate green (3) pixels.
  - Identify Reachable Pixels: Use BFS/Flood fill from the border, avoiding green (3) pixels.
  - Identify Enclosed Regions: Find connected components of non-green pixels that are not reachable.
  - Analyze Region Content: For each enclosed region, determine the set of colors present.
  - Conditional Fill/Pattern Completion:
    1. If an enclosed region contains *only* white (0): Change all pixels in the region to yellow (4).
    2. If an enclosed region contains *yellow (4)* (and possibly white(0)):
       a. Determine the parity `P = (row + col) % 2` of the existing yellow pixels. (Assume consistency within the region).
       b. Change any white (0) pixel `(r, c)` within that region to yellow (4) *if* `(r + c) % 2 == P`.
    3. Otherwise (region contains other colors, no white/yellow, etc.): Leave the region unchanged.

Relationships:
  - Spatial: Green pixels surround Enclosed Regions. White and yellow pixels exist within Enclosed Regions or External Areas.
  - Conditional Transformation: The change applied to a white pixel depends entirely on whether it's in an enclosed region and the overall content (pure white vs. containing yellow) of that specific region.