analysis:
  - task_type: object_filtering # Based on properties like color frequency and size/connectivity
  - background_color: 0 # white
  - non_background_colors_input_ex1: [1, 3] # blue, green
  - non_background_colors_input_ex2: [6, 8] # magenta, azure
  - processing_steps:
      - step: count_colors
        description: Count occurrences of each non-background color in the input grid.
        example_1: { color_1: 6, color_3: 21 }
        example_2: { color_6: 28, color_8: 10 }
      - step: identify_primary_color
        description: Determine the most frequent non-background color.
        example_1: color_3 # green (21 occurrences)
        example_2: color_6 # magenta (28 occurrences)
        tie_breaking: If multiple colors share the maximum frequency, all are considered primary (though not seen in examples).
      - step: find_objects
        description: Identify all contiguous objects (4-neighbor connectivity) for the primary color(s).
        example_1_color_3: [object_size_19, object_size_1, object_size_1]
        example_2_color_6: [object_size_15, object_size_15]
      - step: find_largest_objects
        description: Determine the maximum object size for the primary color(s).
        example_1_max_size: 19
        example_2_max_size: 15
      - step: filter_pixels
        description: Keep only the pixels belonging to the largest object(s) of the primary color(s). Set all other pixels to the background color (0).
        example_1_kept_pixels: Pixels belonging to the size 19 green object.
        example_2_kept_pixels: Pixels belonging to both size 15 magenta objects.
  - output_grid_content: Contains only the background color and the pixels from the largest object(s) of the most frequent input color.