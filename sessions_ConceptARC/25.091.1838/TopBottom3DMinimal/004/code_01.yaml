task_type: pixel_color_change_conditional
components:
  - type: grid
    properties:
      - background_color: always color 0 (white)
      - active_colors: exactly two non-background colors per task example
  - type: pixel
    properties:
      - color: integer 0-9
      - position: (row, column) coordinates
      - neighbors: set of 8 adjacent pixels (orthogonal and diagonal) in the input grid

relationships:
  - type: color_counts
    description: The total number of pixels for each of the two active colors in the input grid.
  - type: color_dominance
    based_on: color_counts
    rule: The active color with the strictly greater pixel count is the 'dominant' color (CD). The other active color is the 'recessive' color (CR).
    notes: Assumes exactly two active colors and no ties in counts based on examples. If counts are equal or fewer than two active colors exist, no transformation occurs.
  - type: neighbor_dominance_count
    for: recessive_pixel (pixel with color CR in the input grid)
    metric: The number of neighbors (out of 8 possible) that have the dominant color (CD) in the input grid.
  - type: conversion_threshold
    value: 3
    description: The minimum number of dominant neighbors required to trigger a color change.

actions:
  - type: conditional_color_conversion
    target: recessive_pixel
    condition: The pixel's neighbor_dominance_count is greater than or equal to the conversion_threshold (>= 3).
    input_source: input_grid (pixel color and neighbor colors are checked here)
    output_effect: The target pixel's color in the output grid becomes the dominant color (CD).
  - type: color_preservation
    target: all other pixels (background, dominant color pixels, recessive pixels not meeting the conversion condition)
    output_effect: The target pixel's color in the output grid remains the same as in the input grid.