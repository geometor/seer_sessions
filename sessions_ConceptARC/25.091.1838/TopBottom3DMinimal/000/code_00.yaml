task_type: pixel_color_change
components:
  - type: grid
    properties:
      - background_color: always color 0 (white)
      - active_colors: exactly two non-background colors per task example
  - type: pixel
    properties:
      - color: integer 0-9
      - position: (row, column) coordinates
      - neighbors: set of 8 adjacent pixels (orthogonal and diagonal)

relationships:
  - type: color_counts
    description: The total number of pixels for each of the two active colors in the input grid.
  - type: color_dominance
    based_on: color_counts
    rule: The color with the strictly greater pixel count is the 'dominant' color (CD). The other is the 'recessive' color (CR).
    notes: Assumes no ties in counts based on examples. If counts are equal, behavior is undefined by these examples.
  - type: adjacency_interaction
    between: recessive_pixel (pixel with color CR)
    and: dominant_neighbor (neighboring pixel with color CD)
    condition: A recessive_pixel has at least one neighbor (orthogonal or diagonal) that is a dominant_neighbor in the input grid.

actions:
  - type: color_conversion
    target: recessive_pixel
    condition: adjacency_interaction is true for the pixel in the input grid.
    result: The target pixel's color in the output grid becomes the dominant color (CD).
  - type: color_preservation
    target: all other pixels (background, dominant color pixels, recessive pixels not meeting the adjacency condition)
    result: The target pixel's color in the output grid remains the same as in the input grid.