Grid:
  type: object
  properties:
    dimensions: [rows, columns]
    cells: list[list[int]]
    background_value: 0

Block:
  type: object
  properties:
    value: int (non-zero digit)
    shape: [height, width]
    location:
      top_row: int
      left_col: int
      bottom_row: int
  relationships:
    - composed_of: same digit
    - contained_in: Grid

Transformation:
  action: rearrange_blocks
  input: Grid
  output: Grid
  steps:
    - identify_blocks: Find all contiguous rectangular non-zero Blocks in the input Grid.
    - calculate_properties: Determine height, width, and top-left corner for each Block.
    - determine_sort_order: Sort Blocks first by ascending height, then by ascending width.
    - find_anchor: Identify the maximum row index occupied by any Block in the input Grid (anchor_bottom_row).
    - reconstruct_grid:
        - Create an empty output Grid of the same dimensions.
        - Place the sorted Blocks vertically stacked.
        - Start placing from the bottom: the last block in the sorted list has its bottom row at anchor_bottom_row.
        - Each subsequent block (moving up the stack) is placed immediately above the previous one.
        - Maintain the original left_col for each Block.
        - Fill remaining cells with the background_value.