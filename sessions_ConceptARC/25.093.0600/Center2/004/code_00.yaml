task_elements:
  - object: input_sequence
    properties:
      - type: Sequence (e.g., List, Tuple, potentially NumPy array requiring element conversion)
      - content: Integers or objects convertible to integers
      - example_1: [3, 1, 4, 2, 7, 8, 9]
      - example_2: [8, 3, 3, 3, 7, 3, 3, 3, 4]
      - example_3: [4, 3, 1, 3, 4]
  - object: integer_list
    properties:
      - derived_from: input_sequence, ensuring all elements are Python integers
      - example_1: [3, 1, 4, 2, 7, 8, 9]
      - example_2: [8, 3, 3, 3, 7, 3, 3, 3, 4]
      - example_3: [4, 3, 1, 3, 4]
  - object: element_counts
    properties:
      - derived_from: integer_list by counting occurrences of each integer
      - type: Dictionary or Counter object mapping integers to their frequencies
      - example_1: {3:1, 1:1, 4:1, 2:1, 7:1, 8:1, 9:1}
      - example_2: {8:1, 3:6, 7:1, 4:1}
      - example_3: {4:2, 3:2, 1:1}
  - object: unique_element_indices
    properties:
      - description: List of 0-based indices where elements appearing exactly once occur in the integer_list. The order reflects the appearance in the original list.
      - derived_from: integer_list and element_counts
      - example_1: [0, 1, 2, 3, 4, 5, 6]
      - example_2: [0, 4, 8]
      - example_3: [2]
  - object: median_unique_index_position
    properties:
      - description: The index identifying the median position *within* the unique_element_indices list. Calculated as floor((length - 1) / 2).
      - calculated_from: unique_element_indices list length
      - example_1: 3 # Index 3 in [0, 1, 2, 3, 4, 5, 6]
      - example_2: 1 # Index 1 in [0, 4, 8]
      - example_3: 0 # Index 0 in [2]
  - object: target_index
    properties:
      - description: The actual index in the original integer_list corresponding to the unique element found at the median position. This is the value stored at the median_unique_index_position within the unique_element_indices list.
      - derived_from: unique_element_indices and median_unique_index_position
      - example_1: 3 # unique_element_indices[3]
      - example_2: 4 # unique_element_indices[1]
      - example_3: 2 # unique_element_indices[0]
  - object: output_integer
    properties:
      - description: The integer element from the original integer_list located at the target_index.
      - derived_from: integer_list and target_index
      - example_1: 2 # integer_list[3]
      - example_2: 7 # integer_list[4]
      - example_3: 1 # integer_list[2]

relationships:
  - input_sequence might require element-wise conversion to create integer_list.
  - element_counts are derived by counting elements in integer_list.
  - unique_element_indices are identified by checking element_counts and recording indices from integer_list.
  - median_unique_index_position is calculated based on the number of unique elements found.
  - target_index is retrieved from the unique_element_indices list using the median_unique_index_position.
  - output_integer is the element retrieved from integer_list at the target_index.