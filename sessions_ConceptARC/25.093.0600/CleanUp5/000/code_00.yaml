task_description: "Filter a 2D grid of digits, setting non-zero digits to zero if they lack neighbors of the same value."
elements:
  - object: grid
    properties:
      - type: 2D array (matrix)
      - content: non-negative single digits
      - dimensionality: [rows, columns] (variable)
  - object: cell
    properties:
      - value: integer (0-9)
      - position: [row_index, column_index]
      - neighbors: set of 8 adjacent cells (Moore neighborhood)
relationships:
  - type: adjacency
    between: cell
    details: A cell is adjacent to up to 8 other cells (horizontally, vertically, diagonally). Boundary cells have fewer neighbors.
actions:
  - action: process_grid
    actor: system
    input: input_grid
    output: output_grid
    rule: "Iterate through each cell of the input grid."
  - action: evaluate_cell
    actor: system
    input: current_cell (value, position), input_grid
    output: output_cell_value
    rule: |
      1. Get the value (v) and position of the current cell.
      2. If v is 0, the output_cell_value is 0.
      3. If v is non-zero:
         a. Examine the values of the 8 neighboring cells (Moore neighborhood) in the input_grid. Handle boundary conditions (ignore non-existent neighbors).
         b. Check if any neighbor has the same value v.
         c. If at least one neighbor has value v, the output_cell_value is v.
         d. If no neighbor has value v, the output_cell_value is 0.
  - action: construct_output
    actor: system
    input: results of evaluate_cell for all cells
    output: output_grid
    rule: "Assemble the output_cell_values into a new grid with the same dimensions as the input grid."
