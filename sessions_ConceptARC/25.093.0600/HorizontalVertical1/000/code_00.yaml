elements:
  - object: grid
    properties:
      - type: 2D array of integers
      - role: represents a colored canvas
  - object: cell
    properties:
      - value: integer color (0 = background, non-zero = shape color)
      - position: (row, column)
  - object: shape
    properties:
      - composition: connected cells of the same non-zero color
      - color: the specific non-zero integer value
  - object: background_region
    properties:
      - composition: connected cells of color 0
  - object: enclosed_region
    properties:
      - type: background_region
      - condition_1: does not touch the grid boundary
      - condition_2: all adjacent non-zero cells belong to a single shape (have the same 'boundary_color')
  - object: fill_color
    properties:
      - possible_values: [3, 7]
      - determination_rule: dependent on boundary_color and the set of all non-zero colors in the input grid

properties_ Mappings:
  - name: input_color_set
    description: The set of unique non-zero colors present in the input grid.
  - name: fill_assignment_rule
    description: A rule mapping a boundary_color to a fill_color (3 or 7).
    details:
      - case: if input_color_set has 2 colors {c1, c2} (c1<c2), map c1->3, c2->7.
      - case: if input_color_set has 3 colors {c1, c2, c3} (c1<c2<c3), map c1->7, c2->3, c3->3.

actions:
  - identify_unique_colors: Scan the input grid to find the set of unique non-zero colors.
  - establish_fill_map: Based on the identified unique colors, determine the specific fill color (3 or 7) for each potential boundary color according to the fill_assignment_rule.
  - detect_enclosed_regions:
      - Iterate through background (0) cells.
      - For each unvisited background cell, perform a search (like BFS/DFS) to find connected background cells.
      - During the search, track if the region touches the grid boundary and collect the colors of all adjacent non-zero cells.
      - If the region does not touch the boundary and all adjacent non-zero cells have the *same* color (the boundary_color), identify it as an enclosed_region.
  - apply_fill: For each detected enclosed_region, find its boundary_color, look up the corresponding fill_color from the established fill_map, and update the cells of the region in the output grid with this fill_color.
  - preserve_others: Copy all cells from the input to the output that are not part of a filled enclosed_region.

relationships:
  - adjacency: Cells sharing an edge (not just a corner) are adjacent.
  - connectivity: Cells of the same color form connected components/regions/shapes through adjacency.
  - enclosure: A shape encloses a background_region if the region is finite and all adjacent cells outside the region belong to that single shape.
  - dependency: The fill_color choice depends on both the local boundary_color and the global input_color_set.