task_elements:
  - type: grid
    properties:
      - content: integers (0 for background, non-zero for objects)
      - dimensionality: 2D
  - type: object
    properties:
      - definition: maximal connected component of identical non-zero cells
      - attributes:
          - color: integer value of the cells
          - coordinates: list of (row, col) tuples for cells belonging to the object
          - bounding_box: (min_row, max_row, min_col, max_col)
          - min_row: topmost row index
          - min_col: leftmost column index
  - type: layout
    properties:
      - overall_bounding_box: (min_r, max_r, min_c, max_c) encompassing all non-zero cells
      - overall_height: max_r - min_r + 1
      - overall_width: max_c - min_c + 1
      - primary_axis: derived from overall dimensions ('horizontal' if overall_width > overall_height, else 'vertical')
  - type: gap
    properties:
      - definition: contiguous rows/columns of zeros separating objects along the primary_axis
      - size: number of rows (for vertical axis) or columns (for horizontal axis)
      - location: relative position between objects in the input order

actions:
  - action: identify_objects
    inputs: input_grid
    outputs: list of object descriptions (color, coordinates, bbox, etc.)
  - action: determine_axis
    inputs: list of objects (or overall_bounding_box)
    outputs: primary_axis ('horizontal' or 'vertical')
  - action: identify_gaps
    inputs: input_grid, list of objects, primary_axis
    outputs: list of gap sizes between adjacent objects along the axis in input order
  - action: sort_objects
    inputs: list of objects, primary_axis
    outputs: list of objects in the new order
    logic:
      - if primary_axis is 'vertical': sort by object.min_row descending
      - if primary_axis is 'horizontal': identify rightmost object (max of min_col); sort remaining objects by object.color descending; append rightmost object
  - action: reconstruct_grid
    inputs: output grid dimensions, sorted list of objects, list of gaps
    outputs: output_grid
    logic: place objects and gaps sequentially along the primary axis starting from the top/left

relationships:
  - relationship: object rearrangement
    notes: The core transformation is the reordering of objects.
  - relationship: gap preservation
    notes: The spacing between objects along the primary axis is maintained.
  - relationship: axis-dependent sorting
    notes: The rule for ordering objects depends on whether they are arranged primarily horizontally or vertically.