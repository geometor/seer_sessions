task_description: Conditionally copy patterns within the grid based on the presence of magenta.

conditions:
  - condition_type: check_color_presence
    color: magenta (6)
    outcome_if_false: rule_no_magenta
    outcome_if_true: rule_magenta_present

rule_no_magenta:
  assumption: Grid width W is even.
  input_objects:
    - object_type: connected_components
      source_area: Left half of grid (cols 0 to W/2 - 1)
      properties:
        - color != white (0)
      name: left_half_objects
  action:
    type: copy_objects_conditionally
    source_objects: left_half_objects
    destination_rule: For each object, translate its coordinates by (0, W/2).
    target_grid: output_grid (initially copy of input)
    overwrite: true # Copying the object overwrites destination pixels
    preserve: Pixels in the right half *not* covered by a copied object remain unchanged from the input. Left half is unchanged.

rule_magenta_present:
  input_objects:
    - object_type: connected_components
      source_area: Full grid
      properties:
        - color != white (0)
      name: all_objects
  derived_objects:
    - object_type: specific_component
      source: all_objects
      selection_criteria:
        - filter: colors != {magenta} # Not only magenta
        - metric: bounding_box_area (maximize)
        - tiebreaker: min_row (minimize), then min_col (minimize)
      name: main_pattern (P)
    - object_type: specific_component
      source: all_objects
      selection_criteria:
        - filter: magenta in colors
        - filter: bounding_box[1] (min_col) > main_pattern.bounding_box[3] (max_col)
        - metric: bounding_box[0] (min_row, minimize)
        - tiebreaker: bounding_box[1] (min_col, minimize)
      name: marker (M)
  action:
    type: copy_region
    source_grid: input_grid
    source_region: Bounding box of main_pattern (P)
    destination_rule: Top-left corner is (marker.bounding_box[0] + 2, marker.bounding_box[1])
    target_grid: output_grid (initially copy of input)
    overwrite: true # Copying the region overwrites destination pixels
    preconditions: Both main_pattern (P) and marker (M) must be found. If not, no action is taken.

output_grid_properties:
  - dimensions: Same as input.
  - content: Modified based on the applied rule (rule_no_magenta or rule_magenta_present).