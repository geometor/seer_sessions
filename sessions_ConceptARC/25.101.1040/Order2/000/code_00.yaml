task_type: pixel_rearrangement
background_color: 0 # white
examples:
  train_1:
    input_grid_size: [10, 11]
    output_grid_size: [10, 11]
    objects:
      - type: scattered_pixels
        color: 4 # yellow
        count: 10
        is_triangular_count: true
        output_shape_type: triangle
        output_shape_details: Height H=4, pixels satisfy r>=6, c<=3, r+c>=9
        location: bottom-left
  train_2:
    input_grid_size: [9, 10]
    output_grid_size: [9, 10]
    objects:
      - type: scattered_pixels
        color: 6 # magenta
        count: 13
        is_triangular_count: false
        output_shape_type: column_fill
        output_shape_details: Pixels filled column-by-column (0 to max_c), bottom-up (max_r to 0) until count reaches 13.
        location: bottom-left

properties:
  - Pixel count is conserved between input and output.
  - Only one non-background color exists in the input and output.
  - The final shape is always placed in the bottom-left corner.
  - The final shape depends on whether the pixel count is a triangular number.