Grid Properties:
  - dimensions: [18, 3] (constant)
  - colors_used: [White (0), Green (3)]
  - structure: Composed of uniform horizontal rows (all pixels in a row share the same color).

Objects:
  - Row: A horizontal line of pixels of the same color, identified by index `i`.
  - Input_Color: The color (White or Green) of a row in the input grid.
  - Output_Color: The color (White or Green) of a row in the output grid.

Transformation:
  - scope: Row-based. The Output_Color for row `i` depends on `i`, the Input_Color of row `i`, and potentially context (neighboring rows, specific example context).
  - base_rule:
      - If `i % 4 == 0` or `i % 4 == 1`: Default action is Flip (White <-> Green).
      - If `i % 4 == 2` or `i % 4 == 3`: Default action is Keep (Output_Color = Input_Color).
  - exceptions:
      - Rule_Override_1 (Keep):
          - Condition: `i == 0` or `i == 1`.
          - Action: Keep Input_Color, overriding the base rule (which would Flip).
          - Applies: Consistently in both examples.
      - Rule_Override_2 (Keep):
          - Condition: Input_Color is Green, `i % 4 == 1`.
          - Action: Keep Input_Color (Green), overriding the base rule (which would Flip).
          - Applies: In Example 1 (rows 5, 17). Does *not* apply in Example 2 (rows 9, 17 follow base Flip rule). The exact trigger condition distinguishing these cases is unclear (potentially neighbor-dependent).
      - Rule_Override_3 (Flip):
          - Condition: `i % 4 == 3`.
          - Action: Flip Input_Color, overriding the base rule (which would Keep).
          - Applies: Only in Example 2 (row 7 Green->White, row 11 White->Green). Does *not* apply in Example 1 (rows 3, 7, 11, 15 follow base Keep rule). The exact trigger condition is unclear (potentially neighbor-dependent, e.g., requires both neighbors to be Green in input).

Actions:
  - Keep: Set Output_Color for row `i` to be the same as Input_Color for row `i`.
  - Flip: Set Output_Color for row `i` to be the opposite of Input_Color for row `i` (White -> Green, Green -> White).