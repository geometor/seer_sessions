task_description: Draw a line or path based on a trigger pixel and a barrier structure.

examples:
  - example_index: 1
    input_description: Grid with a vertical gray line at x=1 and a single yellow pixel at (5, 11).
    output_description: Input grid with an added horizontal yellow line from (5, 2) to (5, 11).
    objects:
      - id: barrier
        type: vertical_line
        color: gray
        position: column 1
      - id: trigger
        type: pixel
        color: yellow
        position: (5, 11)
    action:
      type: draw_line
      color: yellow
      orientation: horizontal
      start_position: adjacent to barrier (column 2) on trigger's row (row 5)
      end_position: right grid edge (column 11) on trigger's row (row 5)
    relationship: Trigger is to the right of the barrier. Line is drawn on trigger's row, from barrier towards grid edge.

  - example_index: 2
    input_description: Grid with a horizontal orange/white pattern at y=1 and a single orange pixel at (7, 8).
    output_description: Input grid with an added vertical orange line from (2, 8) to (7, 8).
    objects:
      - id: barrier
        type: horizontal_pattern_line
        color: orange/white
        position: row 1
      - id: trigger
        type: pixel
        color: orange
        position: (7, 8)
    action:
      type: draw_line
      color: orange
      orientation: vertical
      start_position: adjacent to barrier (row 2) in trigger's column (column 8)
      end_position: row before trigger (row 7) in trigger's column (column 8)
    relationship: Trigger is below the barrier. Line is drawn in trigger's column, from barrier towards (but stopping before) trigger row.

  - example_index: 3
    input_description: Grid with scattered green pixels suggesting a diagonal line (y=x) and a single red pixel at (6, 0).
    output_description: Input grid with added red pixels at (5, 1) and (4, 2).
    objects:
      - id: barrier
        type: diagonal_implicit_line
        color: green
        positions: (0,0), (2,2), (4,4), (6,6) - suggests y=x
      - id: trigger
        type: pixel
        color: red
        position: (6, 0)
    action:
      type: draw_path_trace
      color: red
      path_direction: diagonal up-left (-1 row, -1 column)
      start_position: adjacent to trigger (5, 1)
      end_position: position before hitting barrier line (4, 2) -> next step (3,3) would be on/near barrier
    relationship: Trigger is below/right of the implicit barrier line. Path moves towards the barrier, leaving a trace, stopping before intersection.