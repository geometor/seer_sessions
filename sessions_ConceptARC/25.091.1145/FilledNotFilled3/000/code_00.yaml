task_description: Identify an object B completely enclosed within another object A, where A and B have different non-white colors, and output the color of B. If no such enclosure exists, output a 2x2 white grid.

definitions:
  - object: A contiguous block of pixels of the same non-white color.
  - enclosed: An object B is enclosed by object A if all pixels adjacent (including diagonally) to any pixel of B are either part of B itself or part of A.
  - background_color: white (0)

examples:
  - example_index: 1
    input_features:
      - object_A: color=green (3), shape=square
      - object_B: color=blue (1), shape=pixel
      - relationship: object_B is enclosed by object_A
      - other_objects:
        - color=yellow (4), shape=square
        - color=orange (7), shape=square
    output_feature:
      - grid: [[1]] # color of enclosed object B (blue)
  - example_index: 2
    input_features:
      - object_A: color=yellow (4), shape=hollow_square, encloses=white(0)
      - other_objects:
        - color=yellow (4), shape=rectangle
        - color=magenta (6), shape=square
      - relationship: No non-white object encloses another non-white object.
    output_feature:
      - grid: [[0, 0], [0, 0]] # Default output when enclosure condition not met.
  - example_index: 3
    input_features:
      - object_A: color=azure (8), shape=square
      - object_B: color=gray (5), shape=pixel
      - relationship: object_B is enclosed by object_A
      - other_objects:
        - color=green (3), shape=rectangle
        - color=maroon (9), shape=square
    output_feature:
      - grid: [[5]] # color of enclosed object B (gray)

constraints:
  - The enclosing object (A) and the enclosed object (B) must both be non-white.
  - The enclosing object (A) and the enclosed object (B) must have different colors.
  - There appears to be at most one such enclosure pair (A, B) per input grid in the examples.