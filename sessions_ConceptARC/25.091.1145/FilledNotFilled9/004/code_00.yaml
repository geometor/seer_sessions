task_type: horizontal_fill_between_markers
elements:
  - object: background
    color: 0 # white
    role: fillable_space
  - object: horizontal_marker
    color: 1 # blue
    role: defines_start_and_end_of_fill_range_per_row
  - object: fill_content
    color: 2 # red
    role: fill_color / ignored_if_present_in_fill_range
properties:
  - scope: row_based # Transformation is applied independently to each row.
  - condition: requires_markers # A row must contain at least two blue (1) pixels to be modified.
  - range: horizontal_extent # The fill range is between the leftmost and rightmost blue (1) pixels in a row.
actions:
  - scan_rows: Iterate through each row of the grid.
  - find_markers: In the current row, locate all blue (1) pixels.
  - check_condition: Proceed only if two or more blue (1) pixels are found in the row.
  - define_range: Determine the minimum (`min_col`) and maximum (`max_col`) column indices of the blue (1) pixels.
  - fill_horizontal_segment: For each column `c` where `min_col < c < max_col`, if the input pixel at `(row, c)` is white (0), change it to red (2).
transformation_rule:
  - Process the grid one row at a time.
  - For each row, identify the column positions of all blue (1) pixels.
  - If a row contains fewer than two blue pixels, it remains unchanged.
  - If a row contains two or more blue pixels, find the column index of the leftmost blue pixel (`min_col`) and the rightmost blue pixel (`max_col`).
  - Change the color of all white (0) pixels located at `(row, c)` where `min_col < c < max_col` to red (2).
unchanged_elements:
  - Blue (1) pixels.
  - Red (2) pixels already present.
  - White (0) pixels in rows with fewer than two blue (1) pixels.
  - White (0) pixels in columns less than or equal to `min_col` or greater than or equal to `max_col` in rows that *do* contain two or more blue pixels.