task_description: Repeat a section of the input grid based on the count, alignment, and position of blue pixels, inserting white separators.

elements:
  - object: input_grid
    description: The initial grid provided.
  - object: output_grid
    description: The transformed grid to be generated.
  - object: blue_pixels
    description: Pixels with color 1 in the input_grid. They act as control signals.
    properties:
      - count: N, the total number of blue pixels.
      - alignment: Whether all blue pixels are in the same row ('horizontal') or same column ('vertical').
      - location: The minimum row index (r_min) or minimum column index (c_min) containing a blue pixel.
  - object: pattern_unit
    description: The subgrid extracted from the input_grid to be repeated.
    derivation:
      - if blue_pixels.alignment is 'horizontal': pattern_unit = input_grid columns from 0 to c_min - 1.
      - if blue_pixels.alignment is 'vertical': pattern_unit = input_grid rows from 0 to r_min - 1.
  - object: separator
    description: A line of white pixels (color 0) used between repetitions of the pattern_unit.
    properties:
      - orientation: 'column' if blue_pixels.alignment is 'horizontal', 'row' if 'vertical'.
      - size: Same height as pattern_unit if 'column', same width as pattern_unit if 'row'.

actions:
  - action: locate_and_analyze_blue_pixels
    inputs: [input_grid]
    outputs: [blue_pixels.count, blue_pixels.alignment, blue_pixels.location]
    description: Find all pixels with color 1, count them, determine their alignment, and find the minimum row/column index.
  - action: extract_pattern_unit
    inputs: [input_grid, blue_pixels.alignment, blue_pixels.location]
    outputs: [pattern_unit]
    description: Select the appropriate rows or columns from the input_grid based on alignment and location.
  - action: create_separator
    inputs: [pattern_unit, blue_pixels.alignment]
    outputs: [separator]
    description: Create a white row or column matching the pattern_unit's dimension.
  - action: construct_output
    inputs: [pattern_unit, separator, blue_pixels.count, blue_pixels.alignment]
    outputs: [output_grid]
    description: Concatenate the pattern_unit and separator N times, followed by one final pattern_unit, according to the alignment direction. The pattern_unit appears N+1 times in total.

relationships:
  - The properties of the blue_pixels (count, alignment, location) fully determine the pattern_unit, the separator, and the structure (repetition count and direction) of the output_grid.
  - The blue_pixels themselves are excluded from the pattern_unit and the final output_grid (effectively replaced by the separator logic or simply not copied).