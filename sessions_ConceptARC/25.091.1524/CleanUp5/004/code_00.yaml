task_type: grid_transformation
grid_properties:
  - dimensions_preserved: True
  - background_color: White (0)
objects:
  - type: pixel
    colors: [Red (2), Green (3), Yellow (4)] # Non-background colors observed
    attributes:
      - position: (row, column)
      - color: integer value
      - neighborhood: 8 adjacent pixels (Moore neighborhood)
      - is_isolated: Boolean (True if all neighbors are background color)
relationships:
  - type: color_frequency
    description: Non-background colors have different counts within each input grid.
    property: count
  - type: distinct_color_count
    description: The number of unique non-background colors present in the grid.
    property: count
actions:
  - name: count_distinct_colors
    description: Determine the number of unique non-background colors.
    inputs: [input_grid]
    outputs: [distinct_color_count]
  - name: find_min_frequency_color
    description: Identify the non-background color(s) with the lowest frequency.
    inputs: [input_grid]
    outputs: [min_frequency_color(s)]
  - name: remove_all_pixels_of_color
    description: Change all pixels of specified color(s) to the background color.
    inputs: [grid, color(s)_to_remove]
    outputs: [modified_grid]
  - name: remove_isolated_pixels_of_color
    description: Change pixels of a specified color to the background color only if they have no non-background neighbors.
    inputs: [grid, color_to_check]
    outputs: [modified_grid]
transformation_rule:
  - description: The transformation depends on the number of distinct non-background colors.
  - input: input_grid
  - steps:
      - Count the number of distinct non-background colors (count_distinct).
      - If count_distinct > 1:
          - Identify the non-background color(s) with the minimum frequency (target_color(s)).
          - Create an output grid by changing *all* pixels matching the target_color(s) in the input grid to the background color (0). Other pixels remain unchanged.
      - Else if count_distinct == 1:
          - Identify the single non-background color (target_color).
          - Create an output grid initialized as a copy of the input grid.
          - For each pixel in the input grid:
              - If the pixel's color is the target_color:
                  - Check its 8 neighbors in the input grid.
                  - If all neighbors are the background color (0):
                      - Set the corresponding pixel in the output grid to the background color (0).
      - Else (count_distinct == 0):
          - The output grid is an identical copy of the input grid.
  - output: output_grid