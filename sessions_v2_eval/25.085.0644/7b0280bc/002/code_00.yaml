task_context:
  problem_type: color_transformation_based_on_enclosure_and_border
  grid_properties:
    - variable_size
    - uses_multiple_colors (0-9)
  background_color_determination: color_of_top_left_pixel

objects:
  - object: background
    definition: contiguous area of the background color reachable from the grid borders
    properties:
      - color: determined_by_top_left_pixel
      - location: extends_from_borders_inward

  - object: enclosure_border
    definition: contiguous structure of one or more non-background pixels separating an 'inside' area from the 'outside' background
    properties:
      - color: non_background_color
      - location: forms_boundary
      - role: potentially_triggers_transformation

  - object: enclosed_pixel
    definition: a single pixel not belonging to the background and not reachable by a flood fill starting from the background pixels on the border
    properties:
      - color: non_background_color
      - location: inside_an_enclosure
      - neighbors: adjacent_pixels_(4_directions)

actions_and_transformations:
  - action: identify_background_color
    source: pixel at (0, 0)
    target: global_variable (bg_color)

  - action: identify_outside_area
    method: flood_fill
    start_points: all background-colored pixels on the grid borders
    fill_color: background_color
    result: marks all reachable background pixels ('outside')

  - action: identify_candidate_pixels_for_change
    definition: pixels that are not 'outside' and not the background color
    condition: must be fully surrounded by non-background colors (check 4 neighbors)

  - action: determine_immediate_border_color
    input: candidate_pixel
    method: check the color of all 4-directional neighbors
    condition: requires neighbors to be consistent non-background color for transformation trigger (assumption: border is uniform color for trigger)
    output: border_color

  - action: apply_color_transformation
    target: candidate_pixels
    conditions:
      - candidate_pixel's location is 'inside' (not marked by flood fill)
      - candidate_pixel is not background_color
      - candidate_pixel's immediate border color matches the specific 'trigger_border_color' associated with the background_color
      - candidate_pixel's color matches one of the 'original_colors' in the rule set for the current background_color and trigger_border_color
    rule_sets:
      - condition: background_color == 8 (azure) AND trigger_border_color == 0 (white)
        rules:
          - original_color: 0 (white) => new_color: 5 (gray)
          - original_color: 2 (red) => new_color: 3 (green)
      - condition: background_color == 9 (maroon) AND trigger_border_color == 4 (yellow)
        rules:
          - original_color: 4 (yellow) => new_color: 5 (gray)
          - original_color: 7 (orange) => new_color: 3 (green)
      - condition: background_color == 7 (orange) AND trigger_border_color == 6 (magenta)
        rules:
          - original_color: 1 (blue) => new_color: 3 (green)
          - original_color: 6 (magenta) => new_color: 5 (gray)
    effect: changes the color of the matching candidate_pixel in the output grid

  - action: preserve_color
    target: all other pixels (background, outside pixels, enclosed pixels not meeting transformation conditions)
    effect: color remains unchanged in the output grid