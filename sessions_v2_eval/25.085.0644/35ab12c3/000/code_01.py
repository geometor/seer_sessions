import numpy as np

# Example visualization of train_1 input (replace with actual grid later)
train_1_input_vis = """
....................
....................
.......M............
....................
....................
...O................
...M...........BA.B.
.....GG.............
............M.......
....................
..G.......G.........
....................
...................B
.....GG.............
..............BB....
....................
....................
.....Y.......Y......
....................
....................
"""

# Conceptual check of rules on train_1
# has_magenta_source = True (M at 2,7; 6,3; 8,13)
# has_orange_anywhere = True (O at 5,3)
# Expansion map: M(6)->O(7), A(8)->B(1), Y(4)->Y(4) (special connect), G(3)->G(3), B(1)->B(1), O(7)->O(7) (non-sources)
# Yellow connect: Row 17, fill 6-11 with Y(4).
# BFS: Start from M(6) and A(8) coords. Use O(7) and B(1) as fill colors respectively. Avoid original non-white, newly filled Y(4), and contested cells.

# Conceptual check of rules on train_2
# has_magenta_source = True (M at 5,11; 5,13; 8,16; 12,11)
# has_orange_anywhere = False
# Expansion map: A(8)->B(1), M(6)->M(6), Y(4)->Y(4), B(1)->B(1), G(3)->G(3)
# Yellow connect: None applicable.
# BFS: Start from A(8), M(6), Y(4), B(1) coords. Use B(1), M(6), Y(4), B(1) as fill colors. Avoid original G(3) and contested cells.

# Conceptual check of rules on train_3
# has_magenta_source = False
# has_orange_anywhere = True (O at 4,4; 4,10; 5,11; 6,11; etc.) - Actually, source O7 at (4,4), (4,10), (5,11), (10,4), (10,6)
# Expansion map: A(8)->A(8), B(1)->B(1), O(7)->O(7), Y(4)->Y(4), R(2)->R(2)
# Yellow connect: Row 10, fill 5 with Y(4).
# BFS: Start from A(8), B(1), O(7), Y(4), R(2) coords. Use respective colors for fill. Avoid newly filled Y(4) and contested cells.
