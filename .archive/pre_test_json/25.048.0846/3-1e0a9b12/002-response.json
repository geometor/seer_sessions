{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\n\"\"\"\nMoves all non-white cells to the last row, preserving their original horizontal order, and setting all other cells to white.\n\"\"\"\n\nimport numpy as np\n\ndef transform(input_grid):\n    \"\"\"\n    Transforms the input grid by moving non-white objects to the bottom row,\n    preserving their horizontal order.\n    \"\"\"\n    input_grid = np.array(input_grid)\n    output_grid = np.zeros_like(input_grid)\n    rows, cols = input_grid.shape\n\n    # Find non-white cells and their column indices\n    non_white_cells = []\n    for r in range(rows):\n        for c in range(cols):\n            if input_grid[r, c] != 0:\n                non_white_cells.append((c, input_grid[r, c]))\n\n    # Sort non-white cells by their column index (original horizontal order)\n    non_white_cells.sort()\n\n    # Place non-white cells in the last row of the output grid\n    for i, (col, color) in enumerate(non_white_cells):\n        output_grid[rows - 1, i] = color\n\n    return output_grid.tolist()\n```\n"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 2124,
    "candidates_token_count": 278,
    "total_token_count": 2402,
    "cached_content_token_count": 0
  },
  "token_totals": {
    "prompt": 42166,
    "candidates": 8584,
    "total": 50750,
    "cached": 0
  },
  "timing": {
    "response_time": 0.000292,
    "total_elapsed": 106.834869,
    "response_times": [
      0.000386,
      0.000133,
      0.000117,
      0.000121,
      0.000222,
      0.000123,
      0.000282,
      0.000131,
      0.000116,
      0.000136,
      0.000279,
      0.000292
    ]
  }
}