examples:
  - example_1:
      input_grid: [[1, 2], [3, 8]]
      output_grid: [[0, 1, 2, 0], [1, 1, 2, 2], [3, 3, 8, 8], [0, 3, 8, 0]]
      input_dimensions: [2, 2]
      output_dimensions: [4, 4]
      transformation: "Each input pixel becomes itself in the output, and output has border 0"
      objects:
          - type: pixel
            properties: color, position
            actions: copy
  - example_2:
      input_grid: [[1, 8, 4], [8, 3, 8]]
      output_grid: [[0, 1, 8, 4, 0], [1, 1, 8, 4, 4], [8, 8, 3, 8, 8], [0, 8, 3, 8, 0]]
      input_dimensions: [2, 3]
      output_dimensions: [4, 5]
      transformation:  "Each input pixel becomes itself in the output, and output has border 0"
      objects:
          - type: pixel
            properties: color, position
            actions: copy
  - example_3:
      input_grid: [[2, 1, 4], [8, 0, 2], [3, 2, 8]]
      output_grid: [[0, 2, 1, 4, 0], [2, 2, 1, 4, 4], [8, 8, 0, 2, 2], [3, 3, 2, 8, 8], [0, 3, 2, 8, 0]]
      input_dimensions: [3, 3]
      output_dimensions: [5, 5]
      transformation:  "Each input pixel becomes itself in the output, and output has border 0"
      objects:
        - type: pixel
          properties: color, position
          actions: copy

general:
    dimension_change: "Output grid is always 2 rows and 2 columns larger than the input grid."
    border: "The output grid has a border of 0s."
    pixel_transformation: "Input pixels are copied directly, without expansion.  It's not a 2x2 duplication."