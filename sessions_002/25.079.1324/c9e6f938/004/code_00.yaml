observations:
  - object: grid
    properties:
      - rows: 3
      - columns: input_cols * 2 (output)
    actions:
      - transform: Each row is processed independently.

  - object: pixel
    properties:
      - color: 0 (white) or 7 (orange)
    actions:
      - duplicate: 7s are duplicated in each row.
      - expand: 0s effectively double in count, occupying the newly created space.
      - arrange: the final arrangement appears that 7's duplicate, and white
        pixels occupy the expanded space

  - example_1:
    - input: "0 7 0\n0 0 7\n0 7 7"
    - output: "0 7 0 0 7 0\n0 0 7 7 0 0\n0 7 7 7 7 0"
    - row_1: 7s are duplicated; 0s expand to fill spaces
    - row_2: 7s are duplicated; 0s expand to fill spaces
    - row_3: 7s are duplicated; 0s expand to fill spaces

  - example_2:
    - input: "0 0 0\n0 7 7\n0 0 0"
    - output: "0 0 0 0 0 0\n0 7 7 7 7 0\n0 0 0 0 0 0"
    - row_1: all 0, expands with 0s
    - row_2: 7s are duplicated; 0s expand to fill spaces
    - row_3: all 0, expands with 0s

  - example_3:
    - input: "0 0 0\n7 0 0\n0 0 0"
    - output: "0 0 0 0 0 0\n7 0 0 0 0 7\n0 0 0 0 0 0"
    - row_1: all 0, expands with 0s
    - row_2: 7s are duplicated; 0s expand to fill spaces, the second 7
      appears at the mirrored position from the end
    - row_3: all 0, expands with 0s