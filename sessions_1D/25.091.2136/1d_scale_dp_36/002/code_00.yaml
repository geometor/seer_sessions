Task: Fill horizontal white space left of a marker within a row
Examples: 3
Grid_Type: 2D NumPy array (all examples are 1xN, single-row grids)
Colors:
  - Marker: Orange (7)
  - Background/Target: White (0)
  - Source_Colors: Any non-white, non-orange color (Red(2), Blue(1), Gray(5) observed)
Objects:
  - Grid: A 2D NumPy array of integers representing colors.
  - Marker_Pixel: The pixel with the color Orange (7). There appears to be only one per grid.
  - Fill_Segment: A contiguous horizontal sequence of one or more White (0) pixels within a single row.
  - Source_Pixel: The pixel located immediately to the left of the Fill_Segment, within the same row.
Relationships:
  - The Fill_Segment is always located immediately to the left of the Marker_Pixel, within the same row.
  - The Source_Pixel is always located immediately to the left of the Fill_Segment, within the same row.
Actions:
  - Iterate through each row of the input grid.
  - Within each row, find the column index of the Marker_Pixel (Orange, 7), if present.
  - If a Marker_Pixel is found in a row:
    - Starting from the column index immediately to the left of the Marker_Pixel, search leftward within the same row as long as the pixels encountered are White (0). Record the column indices of these White pixels.
    - If one or more adjacent White pixels were found:
        - Identify the column index of the pixel immediately to the left of the leftmost identified White pixel (this is the Source_Pixel's column index).
        - Get the color of the Source_Pixel. This is the "fill color".
        - In the corresponding row of the output grid, change the color of all identified White pixels (from the search step) to the "fill color".
Constraints:
  - The transformation only affects White pixels immediately preceding an Orange marker *within the same row*.
  - Only horizontal adjacency (leftward) is considered for finding the White segment and the source pixel.
  - The Orange marker itself and pixels to its right, or in other rows, are unchanged relative to this specific transformation rule.