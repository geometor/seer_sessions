grid_properties:
  input_shape: [6, 7] # height, width
  output_shape: [6, 7] # height, width
  background_color: 0 # white

objects:
  - name: marker
    description: A single non-white pixel present in each row of the input grid.
    properties:
      color: The color of the marker pixel (e.g., 5 for gray, 6 for magenta).
      location: Defined by its row index (r) and column index (c).

actions:
  - name: process_row
    description: Transforms each row based on the properties of the marker pixel and the row index.
    logic:
      - identify_marker: Find the marker's color (clr), row index (r), and column index (c).
      - check_row_parity: Determine if the row index 'r' is even or odd.
      - apply_transformation: Based on 'r' and 'c', modify the corresponding output row.
        - conditions:
            - if r is even:
                - if c == 0: Fill output row r, columns 0-6, with clr.
                - if c == 3: Fill output row r, columns 3-6, with clr.
                - if c == 6: Copy input row r to output row r (no change beyond marker).
                - else: Copy input row r to output row r (no change beyond marker). # Assumption based on lack of other examples
            - if r is odd:
                - if c == 4: Fill output row r, columns 0-5, with clr. Set column 6 to 0 (white).
                - if c == 0: Copy input row r to output row r (no change beyond marker).
                - else: Copy input row r to output row r (no change beyond marker). # Assumption based on lack of other examples
      - default_state: Initialize the output grid with the background color (white). If a row doesn't meet a specific transformation condition, it effectively retains its original state from the input (containing only the single marker pixel against a white background).
