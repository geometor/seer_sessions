task_context:
  grid_representation: 2D array of integers (0-9) representing colors.
  background_color: 0 (white)
  processing_unit: Row

input_elements:
  - type: grid
    properties:
      - height
      - width
  - type: row
    properties:
      - index
      - list_of_pixels

output_elements:
  - type: grid
    properties:
      - same height as input
      - same width as input
      - derived pixel values based on row processing

transformation:
  - name: fill_horizontal_span_per_row
    scope: independent for each row
    steps:
      - for each row in the input grid:
          - identify non_background_pixels (pixels where color != 0)
          - if no non_background_pixels exist:
              - copy the row to the output grid unchanged (all background)
          - if non_background_pixels exist:
              - determine the unique non_background_color C present in the row's non_background_pixels (assumption: only one color C per row)
              - find the minimum column_index (min_col) of pixels with color C in this row
              - find the maximum column_index (max_col) of pixels with color C in this row
              - create the corresponding output row:
                  - fill pixels from column min_col to max_col (inclusive) with color C
                  - fill all other pixels in the output row (columns < min_col or > max_col) with the background_color (0)

relationships:
  - pixels within the same row define the span
  - leftmost non_background_pixel (min_col) in a row determines the start of the span
  - rightmost non_background_pixel (max_col) in a row determines the end of the span
  - horizontal span between min_col and max_col (inclusive)

assumptions:
  - Each input row contains at most one type of non-background color if any non-background pixels are present.
  - The transformation is applied independently to each row.
  - The output grid has the same dimensions as the input grid.
  - Background color is consistently 0.