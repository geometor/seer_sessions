task_type: grid_transformation
scope: row_based # Transformation is applied independently to each row.
grid_properties:
  dimensionality: 2D
  input_output_relation:
    grid_dimensions: preserved # Output grid has the same height and width as the input.
    color_palette: preserved # No new colors are introduced in the output.
objects:
  - type: pixel
    attributes: [color, position(row, column)]
  - type: background_pixel
    isa: pixel
    color: white (0)
  - type: marker_pixel
    isa: pixel
    color: non-white (1-9)
    constraints: # Properties observed in input grids
      - count_per_row: exactly_two
      - color_relation_per_row: identical_color_within_pair
      - spatial_relation_per_row: separated_horizontally # Not adjacent
row_structure: # Describes the typical input row pattern
  - contains: exactly two marker_pixels (identical color C != 0)
  - contains: zero or more background_pixels
  - layout: [background_pixels*, marker_pixel(C), background_pixels+, marker_pixel(C), background_pixels*] # Simplified regex-like notation
transformation_rule:
  action: fill_segment
  target_pixels: background_pixels (color 0)
  condition_for_fill: target_pixel must be located in a row R, between the columns of the two marker_pixels in that same row R.
  fill_color: use the color C of the marker_pixels found in row R.
invariants: # What remains unchanged
  - position and color of all marker_pixels.
  - position and color of all background_pixels not located horizontally between the marker pair in their row.
  - grid dimensions.
  - set of unique colors present.