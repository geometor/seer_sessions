task_type: pattern_completion
scope: row-wise_within_2D_grid
input_output_shape: identical # Input and output grids have the same dimensions
grid_properties:
  - height: variable (e.g., 3 in examples)
  - width: variable (e.g., 11 in examples)
objects:
  - type: grid
    properties:
      - dimensions: (height, width)
      - rows: list of row objects
  - type: row
    properties:
      - index: integer (0 to height-1)
      - pixels: list of pixel colors (integer values 0-9)
      - contains_non_white_pixels: boolean
  - type: pixel
    properties:
      - color: (white: 0, green: 3, gray: 5)
      - position: (row_index, column_index)
actions:
  - name: find_non_white_pixel_indices_in_row
    on: row
    returns: list of column indices where pixel color != 0
  - name: find_min_column_index
    on: list of column indices
    returns: minimum column index (or null if list is empty)
  - name: find_max_column_index
    on: list of column indices
    returns: maximum column index (or null if list is empty)
  - name: get_pixel_color
    at: (row_index, column_index)
    returns: color value (integer)
  - name: fill_row_segment
    target: output grid row
    from: start_column_index
    to: end_column_index (inclusive)
    with: color_value
relationships:
  - type: horizontal_span
    description: The segment within a row defined by the leftmost and rightmost non-white pixels.
transformation:
  - for each row in the input grid (indexed `r` from 0 to height-1):
    - find all column indices (`cols`) in row `r` where the pixel color is not white (0).
    - if `cols` is not empty:
      - determine the minimum column index (`min_col`) from `cols`.
      - determine the maximum column index (`max_col`) from `cols`.
      - determine the fill color (`C`) by taking the color of any non-white pixel in that row (e.g., the pixel at `input_grid[r][min_col]`). All non-white pixels in a row seem to share the same color in the examples.
      - in the corresponding output grid row `r`, set the color of all pixels from column `min_col` to `max_col` (inclusive) to `C`.
    - else (if `cols` is empty, meaning the row is all white):
      - copy the input row `r` directly to the output grid row `r`.