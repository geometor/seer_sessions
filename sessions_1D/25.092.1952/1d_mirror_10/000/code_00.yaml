task_type: object_manipulation
grid_dimensionality: 1D # Effectively 1 row

components:
  - id: background
    type: area
    color: white (0)
    role: fills_empty_space

  - id: marker
    type: pixel
    color: maroon (9)
    quantity: 1
    attributes:
      - stationary # Position remains constant from input to output.
      - reference_point # The block's final position depends on the marker's position.

  - id: main_block
    type: object # Contiguous block of pixels
    color: variable (gray(5) or magenta(6) in examples)
    shape: horizontal_line
    quantity: 1
    attributes:
      - color_preserved # Color does not change.
      - length_preserved # Length does not change.
      - moves # Position changes from input to output.
      - initial_position: always to the left of the marker.
      - final_position: always to the right of the marker.

relationships:
  - type: relative_positioning
    source: main_block
    target: marker
    rule: |
      The distance 'd' between the marker's position and the rightmost pixel
      of the main_block in the input grid determines the starting position
      of the main_block in the output grid.
      The output starting position is marker's position + d.

actions:
  - action: identify
    target: marker
    details: Find the pixel with color 9 and note its index (marker_idx).
  - action: identify
    target: main_block
    details: Find the contiguous block of non-white, non-maroon pixels. Note its color (block_color), length (block_len), and the index of its rightmost pixel (block_right_idx).
  - action: calculate_distance
    value: d = marker_idx - block_right_idx
  - action: calculate_position
    target: main_block (output)
    value: output_start_idx = marker_idx + d
  - action: generate_output
    details: Create a new grid of the same size filled with the background color (0).
  - action: place
    target: marker
    position: marker_idx (in the output grid)
  - action: place
    target: main_block
    position: starting at output_start_idx (in the output grid), using block_color and block_len.
