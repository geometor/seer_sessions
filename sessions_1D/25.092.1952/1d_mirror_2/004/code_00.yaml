task_elements:
  - grid_dimensions:
      type: variable # Examples show 1x18, but could vary. Assuming 1D.
      value_observed: 1x18
  - background_color:
      id: 0
      name: white
  - marker:
      id: 9
      name: maroon
      shape: single pixel
      role: fixed reference point for reflection
      property: position remains unchanged in the output grid.
      identified_by: unique color (maroon, 9).
      found_at_index:
        example1: 6
        example2: 8
        example3: 9
  - movable_object:
      property: contiguous block of pixels of the same color.
      color: non-white (0) and non-maroon (9).
      color_observed:
        example1: 4 (yellow)
        example2: 5 (gray)
        example3: 5 (gray)
      role: element to be relocated.
      identified_by: first contiguous block of non-background, non-marker color.
      original_position: # (start_index, end_index)
        example1: (0, 4)
        example2: (2, 5)
        example3: (3, 7)
      output_position: # (start_index, end_index) calculated based on marker and original position.
        example1: (8, 12)
        example2: (11, 14)
        example3: (11, 15)
  - action:
      type: reflect and move
      target: movable_object
      reference: marker pixel
      destination: new position calculated relative to the marker.
      details:
        - The original position of the movable_object is filled with the background_color (white).
        - The marker pixel remains in its original position.
        - The new starting index (`new_start_index`) for the movable_object is calculated using the formula: `new_start_index = 2 * marker_index - original_end_index`, where `marker_index` is the index of the marker pixel and `original_end_index` is the ending index of the object in the input grid.
        - The object is placed at this `new_start_index` in the output grid.