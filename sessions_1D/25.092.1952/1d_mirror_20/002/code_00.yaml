task_description: Transform a 1D sequence by repositioning a colored block relative to a fixed pivot pixel.
representation: 1D sequence (list of integers)
background_color: white (0)
elements:
  - element: pivot
    color: maroon (9)
    count: 1
    properties:
      - fixed_position: Its index in the sequence remains unchanged.
      - separator: Acts as a reference point for positioning the block.
  - element: block
    color: any color except white (0) or maroon (9)
    count: 1
    properties:
      - contiguous: Forms an unbroken sequence of identical pixels.
      - mobile: Its position changes relative to the pivot.
      - preserves_shape: Its length and color remain unchanged.
  - element: gap
    color: white (0)
    properties:
      - location: Situated between the pivot and the block.
      - preserves_size: The number of white pixels between the pivot and the block remains constant.
      - content: Consists only of background pixels.
relationships:
  - type: relative_position_swap
    element1: block
    element2: pivot
    description: If the block is before the pivot in the input, it moves to after the pivot in the output, and vice-versa.
  - type: constant_adjacency
    element1: block
    element2: pivot
    property: gap_size
    description: The number of background pixels separating the block and the pivot is maintained during the transformation.
input_output_mapping:
  - input_state:
      pivot_index: P
      block_indices: [S_in, E_in] (where E_in < P)
      block_color: C
      block_length: L = E_in - S_in + 1
      gap_size: G = P - E_in - 1
  - output_state:
      pivot_index: P (unchanged)
      block_color: C (unchanged)
      block_length: L (unchanged)
      gap_size: G (unchanged)
      block_indices: [S_out, E_out] where S_out = P + 1 + G, E_out = S_out + L - 1
      other_indices: Filled with background color (0)
  - input_state:
      pivot_index: P
      block_indices: [S_in, E_in] (where S_in > P)
      block_color: C
      block_length: L = E_in - S_in + 1
      gap_size: G = S_in - P - 1
  - output_state:
      pivot_index: P (unchanged)
      block_color: C (unchanged)
      block_length: L (unchanged)
      gap_size: G (unchanged)
      block_indices: [S_out, E_out] where E_out = P - 1 - G, S_out = E_out - L + 1
      other_indices: Filled with background color (0)
