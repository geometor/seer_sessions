Task: Reposition a horizontal line based on an anchor pixel.

Input_Objects:
  - Type: Pixel
    Color: Maroon (9)
    Identifier: Anchor
    Quantity: 1
  - Type: Line
    Orientation: Horizontal
    Color: Any (non-Maroon, non-White)
    Identifier: Payload
    Quantity: 1
  - Type: Background
    Color: White (0)

Anchor_Properties:
  - Position: (row, column) - denoted as (R_anchor, C_anchor)

Payload_Properties:
  - Color: C_payload (constant)
  - Length: L_payload (constant)
  - Input_Position:
      Row: R_payload_in
      Column_Start: C_payload_start_in
      Column_End: C_payload_end_in

Relationships:
  - The Anchor pixel is unique (only one maroon pixel).
  - The Payload line is unique (only one horizontal line of a specific non-maroon color).
  - In the input examples, R_payload_in is different from R_anchor.

Actions:
  - Identify the Anchor pixel and its position (R_anchor, C_anchor).
  - Identify the Payload line, its color (C_payload), length (L_payload), and its input starting column (C_payload_start_in).
  - The Anchor pixel's position in the output remains (R_anchor, C_anchor).
  - Calculate the Payload line's output starting column: C_payload_start_out = C_payload_start_in + C_anchor
  - The Payload line's output position is:
      Row: R_anchor
      Column_Start: C_payload_start_out
      Column_End: C_payload_start_out + L_payload - 1
  - Reconstruct the output grid with the Anchor and the repositioned Payload line on a white background.

Output_Objects:
  - Type: Pixel
    Identifier: Anchor
    Position: (R_anchor, C_anchor) # Unchanged from input
    Color: Maroon (9)
  - Type: Line
    Identifier: Payload
    Orientation: Horizontal
    Color: C_payload # Unchanged from input
    Length: L_payload # Unchanged from input
    Position:
      Row: R_anchor
      Column_Start: C_payload_start_out
      Column_End: C_payload_start_out + L_payload - 1
  - Type: Background
    Color: White (0)
