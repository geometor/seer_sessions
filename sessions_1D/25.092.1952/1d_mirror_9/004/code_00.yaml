task_description: Relocate the entire row containing a colored object based on the row position of a marker pixel.
input_format: Flattened list representing a 2D grid. Assumed dimensions are 4x6 for the examples.
output_format: Flattened list representing the transformed 2D grid.

elements:
  - element_type: background
    color_code: 0
    color_name: white
    role: Fills empty space in the output grid.
  - element_type: marker
    color_code: 9
    color_name: maroon
    role: Marks a specific row (marker_row) and column. Its row index determines the destination row for the object_row. Its position is preserved in the output.
    properties:
      - count: 1 per grid
  - element_type: object_row
    role: The entity that is moved. It's an entire row from the input grid.
    properties:
      - identifier: Contains pixel(s) of a single color C, where C is not white (0) and not maroon (9). May also contain white pixels.
      - count: 1 per grid (one row fitting the description).
      - structure: A complete row of the grid.

transformation:
  - action: reshape_input
    details: Convert the input flat list into a 2D grid (e.g., 4x6 numpy array).
  - action: initialize_output
    details: Create a new 2D grid of the same dimensions as the input, filled entirely with the background color (white, 0).
  - action: locate_marker
    target: marker (9)
    details: Find the row index (R_marker) and column index (C_marker) of the marker pixel in the input grid.
  - action: locate_object_row
    target: object_row
    details: Find the row index (R_object_source) of the row in the input grid that contains the non-white, non-maroon colored pixels. Store the contents of this entire row.
  - action: calculate_destination_row
    target: object_row
    details: Determine the destination row index (R_object_dest) for the object_row in the output grid using the formula R_object_dest = R_marker + 1.
  - action: place_object_row
    target: object_row
    destination: output grid
    details: Copy the contents of the object_row (from R_object_source in the input) into the output grid at row R_object_dest, checking for boundary conditions (if R_object_dest is outside the grid height).
  - action: place_marker
    target: marker (9)
    destination: output grid
    details: Copy the marker pixel (maroon, 9) into the output grid at its original coordinates (R_marker, C_marker). This ensures the marker remains in place, potentially overwriting a pixel placed by the object_row if their final positions overlap (which doesn't happen in the examples).
  - action: flatten_output
    details: Convert the final 2D output grid back into a flattened list (if required by the specific task format, though usually list-of-lists is expected).

relationships:
  - type: relative_positioning (vertical)
    source: object_row
    reference: marker row
    details: The object_row is placed in the output grid one row directly below the original row of the marker.
  - type: preservation
    target: marker position
    details: The marker (9) appears in the output grid at the exact same row and column index as in the input grid.
  - type: replacement
    target: original position of object_row
    replacement: background color (white, 0)
    details: The original row of the object_row in the input grid is replaced by background color in the output grid (unless overwritten by the marker or the moved object row itself).