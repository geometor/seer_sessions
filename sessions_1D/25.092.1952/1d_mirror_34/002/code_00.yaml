task_type: grid_manipulation_1d
grid_format: numpy_array # Updated: Input is specifically a NumPy array
grid_dimensions:
  input: [1, 12]
  output: [1, 12]
objects:
  - id: anchor_pixel
    description: A single pixel with value 9 (maroon).
    properties:
      color: maroon
      value: 9
      count: 1
  - id: colored_block
    description: A contiguous block of 3 identical pixels, neither white (0) nor maroon (9).
    properties:
      color: variable (non-white, non-maroon)
      length: 3
      count: 1
  - id: pre_anchor_pixel # Conceptually useful, but action directly places a 0
    description: The pixel immediately preceding the anchor_pixel in the input.
    properties:
      color: white
      value: 0
      location: index = anchor_pixel_index - 1
  - id: background_pixel
    description: Pixels with value 0 (white) used for filling space.
    properties:
      color: white
      value: 0
relationships:
  - type: relative_position
    object1: colored_block
    object2: anchor_pixel
    relation: colored_block appears before anchor_pixel in the input examples.
  - type: adjacency
    object1: pre_anchor_pixel
    object2: anchor_pixel
    relation: pre_anchor_pixel is immediately before anchor_pixel in the input.
actions:
  - action: identify
    target: anchor_pixel (in input NumPy array)
    result: store its index (anchor_idx)
  - action: identify
    target: colored_block (in input NumPy array)
    result: store its pixel values (block_pixels)
  - action: create_grid
    target: output grid (as NumPy array)
    properties:
      size: same as input
      initial_value: background_pixel (0)
  - action: place
    target: output grid (NumPy array)
    object: anchor_pixel (value 9)
    location: anchor_idx
  - action: place
    target: output grid (NumPy array)
    object: background_pixel (value 0) # Placing the value directly
    location: anchor_idx + 1
  - action: place
    target: output grid (NumPy array)
    object: colored_block (block_pixels)
    location: starting at anchor_idx + 2 (using array slicing)