task_type: pattern_replacement
grid_dimensionality: 1D (or single row 2D)
objects:
  - type: sequence
    description: Contiguous horizontal block of identical non-white pixels.
    properties:
      - color: The color (1-9) of the pixels in the sequence.
      - length: The number of pixels in the sequence.
      - position: The starting index (column) of the sequence.
pattern_object:
  description: The first identified sequence with length > 1 when scanning left-to-right.
  identified_by: Scanning left-to-right.
  properties:
    - pattern_color: The color (C) of the pattern object.
    - pattern_length: The length (L) of the pattern object.
target_objects:
  description: Pixels with color C that form a sequence of length = 1.
  identified_by: Scanning the entire input grid.
  properties:
    - target_color: Must match pattern_color (C).
    - target_index: The index (i) of the single pixel.
    - condition: Pixel at i-1 (if exists) has color != C, and pixel at i+1 (if exists) has color != C.
action:
  type: replace
  condition: A target object (single pixel of color C at index i) is found.
  mechanism: >
    Replace a segment in the output grid with the pattern sequence 
    (color C, length L). The replacement segment starts at index max(0, i - 1) 
    and ends at index max(0, i - 1) + L - 1 (clipped by grid boundary).
background:
  color: white (0)
  behavior: Preserved, unless overwritten by a replacement action.
output_generation:
  - Initialize output as a copy of the input.
  - Identify the pattern object (color C, length L). If none, return copy.
  - Iterate through the input grid to find target objects (single pixels of color C at index i).
  - For each target object found at index i:
      - Calculate the start position for replacement: `start_pos = max(0, i - 1)`.
      - Calculate the end position for replacement (exclusive): `end_pos = min(grid_width, start_pos + L)`.
      - Modify the output grid: set pixels from `start_pos` to `end_pos - 1` to color C.