task_description: "Fill incomplete patterns based on an initial template pattern within a single row."
elements:
  - element: "pixel"
    properties:
      - color: "Integer 0-9 (white, blue, red, green, yellow, gray, magenta, orange, azure, maroon)"
  - element: "background"
    properties:
      - color: "white (0)"
  - element: "pattern_block"
    properties:
      - color: "A single non-white color (C)"
      - structure: "A contiguous sequence of pixels of color C in the input row."
      - role: "Acts as a template."
  - element: "pattern_instance_start"
    properties:
      - color: "The same non-white color C."
      - structure: "A single pixel of color C occurring after the initial pattern_block."
      - role: "Indicates where the template pattern should be applied."
relationships:
  - type: "templating"
    description: "The first contiguous block of the non-white color serves as a template."
  - type: "application_trigger"
    description: "A pixel matching the non-white color found after the template block triggers the application of the template."
actions:
  - action: "identify_template"
    inputs: ["input_row"]
    outputs: ["template_pattern", "template_color", "template_length"]
    description: "Find the first contiguous block of non-white pixels. Record its color, content, and length."
  - action: "scan_and_replace"
    inputs: ["input_row", "template_pattern", "template_color", "template_length"]
    outputs: ["output_row"]
    description: >
      Iterate through the input row starting after the initial template pattern.
      If a pixel matches the template_color, replace the segment of the row starting
      at that pixel and having length equal to template_length with the template_pattern.
      Ensure the replacement does not go beyond the bounds of the row.