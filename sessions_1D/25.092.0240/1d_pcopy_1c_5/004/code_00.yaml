task_description: "Replicate an initial template pattern at subsequent trigger points within a 1D grid."
elements:
  - element: "grid"
    properties:
      - type: "1D numpy array"
      - content: "Pixels represented by integers 0-9."
      - background_color: "white (0)"
  - element: "template_pattern"
    properties:
      - derivation: "The first contiguous sequence of non-white pixels in the input grid."
      - color: "A single non-white color (C)."
      - length: "L (number of pixels in the sequence)."
      - role: "The pattern to be replicated."
  - element: "trigger_pixel"
    properties:
      - identification: "A pixel in the input grid with color C located *after* the initial template_pattern."
      - role: "Indicates the starting position for replicating the template_pattern in the output grid."
relationships:
  - type: "identification"
    description: "The template_pattern is identified based on the first block of non-white pixels in the input."
  - type: "triggering"
    description: "A trigger_pixel in the input grid initiates the replication action."
  - type: "replication"
    description: "The template_pattern replaces a segment of the output grid starting at the position of the trigger_pixel."
actions:
  - action: "identify_template"
    inputs: ["input_grid"]
    outputs: ["template_pattern", "template_color", "template_length", "template_end_index"]
    description: "Scan the input_grid to find the first contiguous block of non-white pixels. Record its pattern, color, length, and the index where it ends."
  - action: "scan_and_replicate"
    inputs: ["input_grid", "template_pattern", "template_color", "template_length", "template_end_index"]
    outputs: ["output_grid"]
    description: >
      Initialize output_grid as a copy of input_grid.
      Scan the input_grid starting from the index after template_end_index.
      If a pixel at index `i` in the input_grid matches template_color (a trigger_pixel):
      Check if the template pattern fits (i.e., `i + template_length` <= grid length).
      If it fits, replace the segment in output_grid from index `i` to `i + template_length - 1` with the template_pattern.
      Advance the scanning index `i` by template_length steps.
      If the pixel does not match or the pattern doesn't fit, advance the scanning index `i` by 1 step.
      Return the final output_grid.