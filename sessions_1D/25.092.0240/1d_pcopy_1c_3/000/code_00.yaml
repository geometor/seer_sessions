task_description: Horizontally expand isolated non-white pixels into 1x3 blocks.

elements:
  - element: grid
    description: A 2D array of pixels representing colors (0-9).
    properties:
      - height: number of rows
      - width: number of columns
  - element: pixel
    description: A cell within the grid.
    properties:
      - position: (row, column) coordinates.
      - color: Integer value (0=white, 1-9=non-white).
  - element: isolated_pixel
    definition: A non-white pixel P at (r, c) in the input grid.
    condition: >
      Pixel P is isolated if its left neighbor (r, c-1) is white (0) or doesn't exist (c=0),
      AND its right neighbor (r, c+1) is white (0) or doesn't exist (c=width-1).
  - element: expansion_target
    definition: A 1x3 horizontal area centered on an isolated pixel.
    components:
      - center: The position (r, c) of the isolated pixel.
      - left: The position (r, c-1), if c > 0.
      - right: The position (r, c+1), if c < width-1.

actions:
  - action: find_isolated_pixels
    description: Iterate through the input grid to identify all pixels that meet the 'isolated_pixel' condition.
    input: input_grid
    output: List of isolated pixel positions and their colors.
  - action: apply_expansion
    description: For each identified isolated pixel, update the corresponding 1x3 expansion target area in the output grid with the isolated pixel's color.
    input: isolated_pixel_info (position, color), output_grid
    output: Modified output_grid.

relationships:
  - relationship: horizontal_neighborhood
    description: Defines the relationship between a pixel and its immediate left and right neighbors in the same row.
  - relationship: isolation_check
    description: Uses the horizontal_neighborhood to determine if a non-white pixel is isolated based on neighbor colors or grid boundaries.

transformation_logic:
  - step: Initialize an output grid as a copy of the input grid.
  - step: Identify all 'isolated pixels' by examining each non-white pixel in the *input* grid and checking its horizontal neighbors (or boundary conditions) according to the isolation definition.
  - step: For each isolated pixel found at position (r, c) with color C in the input grid:
      - Set the pixel at (r, c) in the *output* grid to color C.
      - If column c > 0, set the pixel at (r, c-1) in the *output* grid to color C.
      - If column c < width-1, set the pixel at (r, c+1) in the *output* grid to color C.
  - step: Return the final state of the output grid after processing all isolated pixels from the input grid.