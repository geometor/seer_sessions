Data_Structure: 1D array (list) of integers (colors). Length is 33 in all examples.

Objects:
  - Name: Background
    Color: white (0)
    Structure: Individual pixels/elements in the array.
  - Name: CCC Pattern
    Color: A non-white color C (3: green, 8: azure in examples)
    Structure: Three consecutive elements in the array with value C. (e.g., C at index i, i+1, i+2)
    Occurrence: Exactly one instance found per example.
  - Name: Trigger Pixel
    Color: Same color C as the CCC Pattern.
    Structure: An individual element with value C located at an index `j` *after* the CCC Pattern (j > i+2).
    Occurrence: Can be multiple instances per example.

Transformation_Rule:
  - Identification:
      1. Find the first occurrence of a CCC Pattern (Color C, starting at index `i`).
      2. Find all Trigger Pixels (Color C) at indices `j` where `j > i+2`.
  - Action:
      1. For each identified Trigger Pixel at index `j`:
         - If index `j-1` is valid (>= 0), change the value at `j-1` to C.
         - If index `j+1` is valid (< array_length), change the value at `j+1` to C.
  - Result: The output array reflects these changes. Elements not part of the CCC Pattern, Trigger Pixels, or their modified neighbors remain unchanged. The values at `j-1` and `j+1` are overwritten with C, regardless of their original value (though they were always 0 in the examples).

Examples_Summary:
  - Example 1: C=3, CCC at [2,3,4]. Trigger at j=9. Changes at j-1=8 and j+1=10.
  - Example 2: C=8, CCC at [2,3,4]. Triggers at j=7, j=11, j=15. Changes at (6,8), (10,12), (14,16).
  - Example 3: C=3, CCC at [1,2,3]. Triggers at j=8, j=14. Changes at (7,9), (13,15).