task_type: grid_manipulation
dimensionality: 2D # Explicitly state 2D, even if height is 1
grid_properties:
  - height: constant (1 in examples)
  - width: constant (12 in examples)
  - symmetry: none obvious
elements:
  - type: object
    name: movable_block
    description: A contiguous horizontal sequence of identical pixels within the first row, excluding white (0) and orange (7).
    properties:
      - color: The color of the pixels in the block (e.g., 1, 8, 5).
      - length: The number of pixels (width) of the block.
      - row_index: 0 (always in the first row).
      - start_col_index: The starting column index of the block in the input grid.
  - type: object
    name: anchor_pixel
    description: A single pixel with the color orange (7) within the first row.
    properties:
      - color: 7 (orange)
      - row_index: 0 (always in the first row).
      - col_index: The column index of the pixel in the input grid.
  - type: background
    name: empty_space
    description: Pixels with the color white (0).
    properties:
      - color: 0 (white)
transformation:
  - type: spatial_shift
    target: movable_block
    details:
      - direction: right (increase in column index)
      - magnitude: 2 columns
      - reference: original column position of the movable_block
  - type: static_position
    target: anchor_pixel
    details: Remains in its original row and column index position.
  - type: fill
    target: empty_space
    details: Fills all positions in the output grid's first row not occupied by the shifted movable_block or the anchor_pixel. Other rows (if any) remain unchanged (or are implicitly assumed to be non-existent/white based on examples).
output_grid_generation:
  - step: Initialize an output grid of the same dimensions as the input, filled with white (0).
  - step: Copy the anchor_pixel to its original position in the output grid.
  - step: Calculate the new starting column index for the movable_block (original start_col_index + 2).
  - step: Copy the movable_block (using its color and length) to the output grid, starting at the new column index in row 0.
  - step: Ensure the anchor_pixel takes precedence if the shifted block overlaps its position.
constraints:
  - Input grid height is 1.
  - The input grid's first row always contains exactly one movable_block.
  - The input grid's first row always contains exactly one anchor_pixel.
  - The movable_block and anchor_pixel do not overlap in the input grid's first row.
  - The shift operation does not cause the movable_block to go beyond the grid's width boundary.