task_type: Array transformation
dimensionality: 1D
grid_properties:
  size_relation: input and output grids have the same dimensions
colors_present:
  - white (0)
  - magenta (6)
  - gray (5)
objects:
  - object_type: block
    identifier: moving_block
    color: magenta (6) # In this specific example; generally non-white, non-gray
    properties:
      - contiguous
  - object_type: pixel
    identifier: anchor_pixel
    color: gray (5)
    properties:
      - fixed position relative to the right boundary
relationships:
  - relation_type: spatial
    initial_state: moving_block is located to the left of anchor_pixel, potentially separated by white pixels.
    final_state: the rightmost pixel of moving_block is immediately adjacent to the left of anchor_pixel.
actions:
  - action_type: identify
    target: moving_block
    details: Find the contiguous block of non-white (0) and non-gray (5) pixels.
  - action_type: identify
    target: anchor_pixel
    details: Find the gray (5) pixel.
  - action_type: calculate_position
    target: moving_block
    details: Determine the target end position (index adjacent to anchor_pixel) and start position based on block length.
  - action_type: reconstruct_grid
    details: Create the output grid by placing the anchor_pixel and pixels to its right, placing the moving_block in its calculated target position, and filling the remaining pixels to the left with white (0).
state_change:
  - element: moving_block
    attribute: position
    change: shifted rightwards
  - element: pixels
    attribute: color
    change: pixels between original start of moving_block and target start of moving_block become white (0).
assumptions:
  - There is exactly one anchor_pixel (gray).
  - There is exactly one contiguous block of non-white, non-gray color to the left of the anchor_pixel.
  - The task operates on a 1D array.