Task: Move a colored block to be adjacent to a target pixel using NumPy arrays.

Input_Features:
  - Grid: Represented as a 1D NumPy array.
  - Objects:
    - Red_Pixel:
        Color: 2
        Count: 1
        Role: Target_Marker. Its absolute index remains unchanged in the output.
    - Colored_Block:
        Color: Any color except 0 (white) and 2 (red).
        Property: Contiguous sequence of pixels of the same color in the NumPy array.
        Position: Located to the left of the Red_Pixel.
        Count: 1
    - White_Separator_Pixels:
        Color: 0
        Count: 2
        Position: Located immediately between the right end of the Colored_Block and the Red_Pixel (at indices `red_index - 2` and `red_index - 1`).
    - Background_Pixels:
        Color: 0
        Position: Elsewhere in the array (leading/trailing segments relative to the block/separators/red pixel sequence).

Relationships:
  - Spatial (Input): `[Leading_Background..., Colored_Block, White_Separator_Pixel_1, White_Separator_Pixel_2, Red_Pixel, Trailing_Background...]`

Transformation:
  - Action: Rearrangement of array segments.
  - Rule: Swap the position of the `Colored_Block` segment and the `White_Separator_Pixels` segment using NumPy array manipulation.

Output_Features:
  - Grid: Rearranged 1D NumPy array with the same shape as the input.
  - Structure: `[Leading_Background..., White_Separator_Pixel_1, White_Separator_Pixel_2, Colored_Block, Red_Pixel, Trailing_Background...]`
  - Invariant:
    - The Red_Pixel maintains its absolute index.
    - The content (colors and counts) of all segments remains the same, only their order is changed via the swap.
    - The overall shape of the array remains the same.