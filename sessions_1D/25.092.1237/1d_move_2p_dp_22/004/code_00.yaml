task_type: array_transformation
grid_dimensionality: 1D # Represented as [[row_data]]
grid_size_input: [1, 14] # Consistent across examples
grid_size_output: [1, 14] # Same as input
objects:
  - id: main_block
    description: A contiguous sequence of pixels of the same color, excluding white (0) and maroon (9).
    properties:
      color: variable (e.g., green '3', orange '7')
      contiguity: true
      position: occurs before the marker_pixel
  - id: marker_pixel
    description: A single maroon (9) pixel.
    properties:
      color: maroon (9)
      count: 1
      position: occurs after the main_block
  - id: background_pixels
    description: White (0) pixels, potentially separating main_block and marker_pixel, and padding the ends.
    properties:
      color: white (0)
relationships:
  - type: relative_position
    object1: main_block
    object2: marker_pixel
    details: main_block always starts at an index less than the marker_pixel index.
  - type: separation
    object1: main_block
    object2: marker_pixel
    details: May be separated by zero or more background_pixels (white).
actions:
  - id: identify_main_block
    description: Locate the start index and pixel values of the main_block.
  - id: identify_marker
    description: Locate the index of the marker_pixel (9).
  - id: create_combined_sequence
    description: Form a new sequence by appending the marker_pixel directly after the main_block pixels.
  - id: calculate_target_position
    description: Determine the starting index for the combined_sequence in the output grid.
    details: target_start_index = main_block_start_index + 2
  - id: construct_output
    description: Create the output grid.
    details: Initialize an output grid of the same size as the input, filled with white (0). Place the combined_sequence starting at the calculated target_position, overwriting the white pixels. Handle potential boundary conditions (ensure placement does not exceed grid limits, truncate if necessary).