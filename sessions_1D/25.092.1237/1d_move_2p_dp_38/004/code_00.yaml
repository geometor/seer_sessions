Facts:
  Grid:
    type: 1D array (linear sequence of pixels)
    size:
      input: Consistent size within a task (e.g., 16 pixels in examples).
      output: Same size as the input grid. (Assumption based on examples 1, 2 and correcting perceived typo in example 3).
  Objects:
    - id: Movable Block
      description: The single contiguous sequence of pixels with a color other than white (0) or azure (8).
      properties:
        - color: Any color except white(0) or azure(8). (e.g., yellow(4), green(3))
        - contiguous: Pixels are adjacent in the 1D array.
        - count: Exactly one such block exists in the input.
      state:
        - initial_index: Starting position (index) in the input grid.
        - length: Number of pixels in the block.
    - id: Anchor Pixel
      description: A single pixel with azure (8) color.
      properties:
        - color: azure (8)
        - count: Exactly one such pixel exists in the input.
      state:
        - index: Position (index) in the input grid.
    - id: Background
      description: Pixels filling the rest of the grid.
      properties:
        - color: white (0)
  Transformation:
    actions:
      - Identify the Movable Block (color, initial_index, length).
      - Identify the Anchor Pixel (index).
      - Create a new grid of the same size as the input, filled with Background color (white).
      - Place the Anchor Pixel in the new grid at its original index.
      - Calculate the new index for the Movable Block: `new_index = initial_index + 2`.
      - Place the Movable Block (using its color and length) into the new grid starting at `new_index`, respecting grid boundaries (do not wrap or write past the end).