task_description: Rearrange segments of a single-row grid based on the position of a specific marker pixel (Maroon).
grid_dimensionality: 1D (single row, 1xN)
persistent_elements:
  - All pixels from the input row are preserved in the output row.
  - The length (number of columns) of the row remains constant.
  - The set and count of colors remain the same.
key_objects:
  - marker_pixel:
      color: Maroon (9)
      count: Exactly one per input row.
      role: Defines the segmentation points for rearrangement. Must not be at index 0 or 1 for the transformation to apply.
  - pivot_elements:
      count: 2
      location: The two pixels immediately preceding the marker_pixel (at indices `marker_index - 2` and `marker_index - 1`).
      color: White (0) in all training examples.
      role: These two pixels are moved to the beginning of the output row.
  - prefix_segment:
      location: All pixels from the start of the row up to (but not including) the pivot_elements (indices 0 to `marker_index - 3`). Can be empty if `marker_index` is 2.
      role: This segment is placed immediately after the pivot_elements in the output row.
  - suffix_segment:
      location: All pixels from the marker_pixel to the end of the row (indices `marker_index` to end).
      role: This segment is placed after the prefix_segment in the output row.
actions:
  - identify: Locate the index (`marker_index`) of the single Maroon (9) pixel in the input row.
  - validate: Check if `marker_index` is valid (exists) and is 2 or greater. If not, the transformation is not applied (output should be identical to input).
  - segment: If validation passes, divide the input row into three parts:
      1. `pivot_elements` = pixels at `marker_index - 2` and `marker_index - 1`.
      2. `prefix_segment` = pixels from index 0 to `marker_index - 3`.
      3. `suffix_segment` = pixels from `marker_index` to the end.
  - rearrange: Construct the output row by concatenating the segments in the following order: `pivot_elements`, then `prefix_segment`, then `suffix_segment`.
relationships:
  - positional: The transformation is entirely determined by the position of the Maroon pixel.
  - sequential: The relative order of pixels within the `prefix_segment` and `suffix_segment` is maintained during rearrangement.