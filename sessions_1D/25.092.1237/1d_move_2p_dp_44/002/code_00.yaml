task_type: rearrangement
grid_dimensionality: 2D (manifesting as 1xN in examples)
element_type: pixels
properties:
  - color: (represented by integers 0-9)
  - position: index within the sequence (row or column)
  - contiguity: groups of adjacent pixels sharing a property (e.g., non-white, white) along the primary sequence dimension.
objects:
  - object_type: pixel_sequence
    description: The effective 1D sequence of pixels contained within the 1xN or Nx1 input grid.
  - object_type: contiguous_block
    description: A sequence of one or more adjacent pixels within the pixel_sequence sharing a property.
    properties:
      - color_type: (all white (0) or all non-white (>0))
      - start_index: position of the first pixel in the block within the sequence
      - end_index: position of the last pixel in the block within the sequence
      - length: number of pixels in the block
actions:
  - action_type: identify
    description: Locate specific blocks within the pixel_sequence based on criteria.
    criteria:
      - 1: The first contiguous block of non-white pixels starting from the beginning of the sequence.
      - 2: The contiguous block of white pixels immediately following the block identified in step 1.
  - action_type: swap
    description: Exchange the positions of the two identified blocks within the pixel_sequence.
relationships:
  - relationship_type: adjacency
    description: One block immediately follows another in the pixel_sequence.
  - relationship_type: ordering
    description: The relative order of blocks and pixels in the sequence.
constraints:
  - The dimensions (shape) of the grid remain constant.
  - The count of each color pixel remains constant.
  - Only the identified non-white block and the adjacent white block change positions relative to each other. All other pixels (leading white pixels, if any, and pixels after the swapped blocks) retain their original relative order.
  - The transformation operates along the single dimension containing the sequence (row for 1xN, column for Nx1).