Data_Structure:
  - type: 2D grid (list of lists or numpy array)
  - shape: 1 row, N columns (N=14 in examples)
  - element_type: integer (color code 0-9)

Objects:
  - type: Contiguous_Row_Block
    properties:
      - grid_row: occurs in the single row of the grid
      - color: non-white (e.g., green '3', orange '7')
      - pixels: identical non-white color
      - location: defined by start and end column indices within the row
      - uniqueness: exactly one such block per grid
      - context: horizontally adjacent pixels are white ('0') except within the block

Transformation:
  - name: Horizontal_Shift
  - target: Contiguous_Row_Block
  - parameters:
      - direction: right (increasing column index)
      - distance: 2 columns
  - process:
      - Identify the block (color, start_col, end_col) in the single row.
      - Create a new output grid of the same shape, initialized with white ('0').
      - Calculate the new start column: `new_start_col = start_col + 2`.
      - Calculate the new end column: `new_end_col = new_start_col + length`.
      - Place the block's pixels (using its original color) into the single row of the output grid from `new_start_col` to `new_end_col`.
  - constraints:
      - Grid dimensions remain unchanged.
      - Block color and length remain unchanged.
      - Assumes the shifted block fits within the grid boundaries.