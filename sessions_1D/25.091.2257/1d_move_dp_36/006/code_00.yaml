task_description: Rearranges segments of a 1D array based on blocks defined by color and adjacency, relative to a marker pixel.
grid_dimensionality: 1D (represented as 1xN 2D grid)
objects:
  - type: input_row
    description: The single row of pixels extracted from the input grid.
  - type: marker
    description: The first occurrence of a maroon (9) pixel. Acts as a boundary.
    properties:
      - index: Location within the input_row.
  - type: transform_region
    description: The segment of the input_row *before* the marker's index.
  - type: suffix
    description: The segment of the input_row starting from the marker's index to the end. Remains unchanged.
  - type: prefix
    description: The contiguous sequence of white (0) pixels at the beginning of the transform_region, before any non-white pixel. Can be empty.
    properties:
      - content: sequence of pixels (all 0s)
      - length: number of pixels
  - type: colored_block
    description: The first contiguous sequence of identical non-white pixels within the transform_region.
    properties:
      - content: sequence of pixels
      - color: The specific non-white color value.
      - length: number of pixels
      - start_index: Index within transform_region where it begins.
      - end_index: Index within transform_region where it ends (exclusive).
  - type: white_block
    description: The contiguous sequence of white (0) pixels within the transform_region that *immediately* follows the colored_block. Can be empty.
    properties:
      - content: sequence of pixels (all 0s)
      - length: number of pixels
      - start_index: Index within transform_region where it begins (must equal colored_block.end_index).
actions:
  - extract_row: Get the 1D array from the 1xN input grid.
  - find_marker: Locate the index of the first maroon (9) pixel.
  - partition: Split the row into transform_region and suffix based on the marker index.
  - identify_blocks: Within the transform_region:
      - find_colored_block: Locate the first non-white contiguous block.
      - find_prefix: Identify the leading white pixels before the colored_block.
      - find_white_block: Identify the contiguous white pixels immediately after the colored_block.
  - rearrange: Construct the new transform_region by concatenating prefix, white_block, and colored_block in that order. Handle cases where blocks might be empty.
  - reconstruct_output: Combine the rearranged transform_region and the original suffix into a new 1D array.
  - format_output: Wrap the resulting 1D array into a list to match the 1xN grid format.
relationships:
  - boundary: The marker separates the transform_region from the fixed suffix.
  - adjacency: The white_block must start exactly where the colored_block ends.
  - ordering: The output arrangement within the transformed region is strictly prefix, then white_block, then colored_block.