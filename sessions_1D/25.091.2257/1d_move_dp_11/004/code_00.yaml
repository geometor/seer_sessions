task_description: Rearrange elements in a 1D grid by moving a colored block to be immediately adjacent (left side) to a fixed marker pixel.
grid_dimensionality: 1D (single row)
objects:
  - type: background
    color: white (0)
    count: variable
  - type: colored_block
    description: A single contiguous horizontal sequence of pixels of the same color, where the color is not white (0) and not magenta (6).
    properties:
      color: variable (e.g., azure(8), green(3), orange(7))
      length: variable (e.g., 4, 17, 3)
      start_index: variable (e.g., 6, 2, 12)
    count: 1
  - type: marker_pixel
    description: A single pixel used as a fixed reference point.
    color: magenta (6)
    shape: single pixel
    properties:
      index: variable but fixed between input and output (e.g., 15, 23, 21)
    count: 1
relationships:
  - type: spatial_input
    description: In the input, the colored_block is always to the left of the marker_pixel, potentially separated by white pixels.
  - type: spatial_output
    description: In the output, the colored_block's rightmost pixel is at index (marker_pixel_index - 1). The marker_pixel remains at its original index.
actions:
  - action: identify_marker
    target: grid
    output: index of the magenta (6) pixel (marker_index).
  - action: identify_block
    target: grid
    output: color, start_index, and length of the colored_block.
  - action: calculate_new_position
    inputs: marker_index, block_length
    output: new_start_index = marker_index - block_length.
  - action: generate_output_grid
    details:
      - Create a new grid of the same dimensions as the input, filled with white (0).
      - Place the marker_pixel at its original marker_index in the new grid.
      - Place the colored_block (using its identified color and length) into the new grid, starting at the calculated new_start_index.
  - action: alternative_generate_output_grid
    details:
      - Create a copy of the input grid.
      - Set the pixels occupied by the original colored_block to white (0).
      - Place the colored_block (using its identified color and length) into the copied grid, starting at the calculated new_start_index, overwriting existing pixels.
