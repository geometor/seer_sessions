task_type: sequence_manipulation
grid_dimensionality: 1D # Input is technically 2D (1xN), but functionally 1D sequence.
input_format: numpy.ndarray (shape: 1xN)
output_format: numpy.ndarray (shape: 1xN)
color_palette: [white(0), green(3), orange(7), azure(8), maroon(9)] # Colors observed in examples
objects:
  - type: block
    description: The first contiguous sequence of identical non-white pixels in the input row. Denoted as BlockA.
    properties:
      - color: Varies (orange, green, azure in examples)
      - length: Varies (3 in examples)
      - position: Starts at index 0 in examples.
  - type: block
    description: The contiguous sequence of white (0) pixels immediately following BlockA. Denoted as BlockB.
    properties:
      - color: white (0)
      - length: Varies (2 or 3 in examples)
      - position: Immediately follows BlockA.
  - type: separator
    description: A single maroon (9) pixel.
    properties:
      - color: maroon (9)
      - position: Immediately follows BlockB.
  - type: prefix
    description: Sequence of pixels preceding BlockA.
    properties:
      - content: Empty in all examples.
  - type: suffix
    description: Sequence of pixels including and following the Separator.
    properties:
      - content: Contains the Separator and any subsequent pixels. Can be just the Separator or include other pixels (e.g., white(0) in Example 2).
relationships:
  - type: adjacency
    description: BlockA is immediately followed by BlockB.
  - type: adjacency
    description: BlockB is immediately followed by the Separator.
action:
  - type: swap
    description: The positions of BlockA and BlockB are swapped relative to each other.
    operands: [BlockA, BlockB]
  - type: concatenation
    description: The output sequence is constructed by concatenating Prefix, BlockB, BlockA, and Suffix in that order.
    operands: [Prefix, BlockB, BlockA, Suffix]
constraints:
  - The specific pattern (BlockA -> BlockB -> Separator) must exist for the transformation to occur. BlockA must be non-white, BlockB must be white, and the Separator must be maroon(9).
  - If the pattern is not found, the input is returned unchanged.