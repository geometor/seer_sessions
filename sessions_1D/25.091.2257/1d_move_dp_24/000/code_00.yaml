task_description: Shift a contiguous block of color towards a stationary marker pixel based on the number of background pixels between them.

elements:
  - element: grid
    description: A 1D array of pixels representing colors.
  - element: background
    properties:
      - color: white (0)
      - role: Fills empty space, defines separation.
  - element: main_block
    properties:
      - color: Any color other than white (0) or azure (8).
      - shape: A single contiguous horizontal block.
      - role: The object being moved.
  - element: marker
    properties:
      - color: azure (8)
      - count: Exactly one instance.
      - role: A stationary reference point determining the shift distance.

transformation:
  - action: identify
    target: background pixel (0)
  - action: identify
    target: marker pixel (8) and its position.
  - action: identify
    target: main_block (contiguous, non-background, non-marker color) and its start and end positions.
  - action: calculate_distance
    inputs:
      - end position of main_block
      - position of marker pixel
    method: Count the number of background pixels strictly between the main_block's end and the marker's position.
    output: shift_distance
  - action: shift
    target: main_block
    direction: Rightward (towards the marker in these examples)
    distance: shift_distance
  - action: update_grid
    details:
      - Create the output grid, initially identical to the input.
      - Move the pixels of the main_block rightward by shift_distance.
      - Fill the original starting positions of the main_block (equal to shift_distance) with the background color.
      - Ensure the marker pixel remains unchanged.
      - Ensure other background pixels remain unchanged.

assumptions:
  - The input is a 1D array.
  - There is exactly one marker pixel (azure, 8).
  - There is exactly one contiguous main_block of a single color (not white or azure).
  - The marker pixel is located to the right of the main_block.
  - There are sufficient background pixels between the block and the marker to accommodate the shift without overlapping the marker.