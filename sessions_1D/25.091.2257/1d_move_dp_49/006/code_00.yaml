task_context:
  grid_representation: 1D array (single row grid)
  colors_present:
    - white (0): background
    - azure (8): static anchor point
    - variable color (C): forms a single contiguous horizontal line (e.g., orange=7, yellow=4, red=2)
objects:
  - object_type: anchor_pixel
    color: azure (8)
    count: 1
    properties:
      - static position: its index remains the same between input and output.
  - object_type: colored_line
    color: variable (C), non-white (0), non-azure (8)
    count: 1
    shape: contiguous horizontal segment
    properties:
      - constant length (L)
      - constant color (C)
      - dynamic position
relationships:
  - relation_type: spatial_adjacency
    object1: colored_line (right end)
    object2: anchor_pixel (left side)
    state_in_output: object1's rightmost pixel is at index `anchor_index - 1`.
actions:
  - action_type: identify_anchor
    input: input_grid
    target_color: azure (8)
    constraint: must be exactly one pixel of this color
    output: anchor_index (integer)
  - action_type: identify_line
    input: input_grid
    target_colors: any color except white (0) and azure (8)
    constraint: must be a single contiguous segment of the same color
    output: line_color (integer), line_length (integer)
  - action_type: create_output_grid
    input: input_grid_size
    output: new grid filled with white (0)
  - action_type: place_anchor
    target: output_grid
    input: anchor_index, anchor_color (8)
    effect: sets `output_grid[anchor_index] = 8`
  - action_type: calculate_line_position
    input: anchor_index, line_length
    output: new_line_start_index (`anchor_index - line_length`), new_line_end_index (`anchor_index`)
  - action_type: place_line
    target: output_grid
    input: new_line_start_index, new_line_end_index, line_color
    constraint: `0 <= new_line_start_index < new_line_end_index <= grid_size`
    effect: sets `output_grid[new_line_start_index : new_line_end_index] = line_color`