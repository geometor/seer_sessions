task_context:
  grid_representation: 1D array (confirmed by metrics script shape (N,))
  grid_size: Variable length (e.g., 29 in examples)
  colors_present:
    - white (0): Background filler
    - azure (8): Static anchor point
    - variable_color (C): Forms a single contiguous horizontal line (e.g., orange=7, yellow=4, red=2)
objects:
  - object_type: anchor_pixel
    color: azure (8)
    count: 1 (confirmed by metrics script)
    properties:
      - static_position: Index remains unchanged between input and output (confirmed).
  - object_type: colored_line
    color: variable (C), non-white, non-azure
    count: 1 (confirmed by metrics script finding one segment)
    shape: contiguous horizontal segment (1D)
    properties:
      - constant_color: Color C remains unchanged (confirmed).
      - constant_length: Length L remains unchanged (confirmed).
      - dynamic_position: Start and end indices change between input and output.
relationships:
  - relation_type: spatial_adjacency
    object1: colored_line (rightmost pixel index)
    object2: anchor_pixel (index)
    state_in_input: Variable, generally not adjacent.
    state_in_output: Adjacent (line_end_index == anchor_index - 1) (confirmed by metrics script).
actions:
  - action_type: identify_anchor
    input: input_grid
    output: anchor_index (integer)
  - action_type: identify_line
    input: input_grid
    output: line_color (integer), line_length (integer)
  - action_type: construct_output_grid
    input: grid_size (integer), anchor_index (integer), line_color (integer), line_length (integer)
    steps:
      1. Create a new 1D array of `grid_size` filled with white (0).
      2. Place the anchor pixel (8) at `anchor_index`.
      3. Calculate the target start index for the line: `target_line_start = anchor_index - line_length`.
      4. Place the `line_color` pixels in the range [`target_line_start`, `anchor_index`) in the new array.
    output: output_grid (1D array)
