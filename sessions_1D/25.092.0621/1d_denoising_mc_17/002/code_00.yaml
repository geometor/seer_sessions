task_type: noise_reduction # or color_homogenization
dimensionality: 2D # Input/Output are 2D grids, specifically 1xN in examples
input_grid_properties:
  - shape: variable (1x33 in examples)
  - contains: pixels with values 0-9
  - structure: Usually a central contiguous block of non-white pixels flanked by white (0) pixels.
output_grid_properties:
  - shape: same as input grid
  - structure: White pixels preserved from input. All non-white pixels from the input are replaced by a single color.
objects:
  - type: pixel
    properties:
      - color: integer 0-9
      - position: (row, column)
  - type: background_pixels
    description: Pixels with color white (0).
  - type: foreground_pixels
    description: Pixels with non-white color (1-9).
relationships:
  - White pixels in the input maintain their position and color in the output.
  - All foreground pixels in the output have the same color.
  - The color used for all output foreground pixels is determined by the input foreground pixels.
actions:
  - name: identify_foreground_pixels
    inputs: input_grid
    outputs: list of colors of all non-white pixels
  - name: determine_dominant_color
    inputs: list of foreground pixel colors
    outputs: the most frequent color in the list
    condition: only if foreground pixels exist
  - name: generate_output_grid
    inputs:
      - input_grid
      - dominant_color (if foreground pixels exist)
    outputs: output_grid
    description: Create a grid of the same shape as the input. Iterate through each pixel of the input grid. If the input pixel color is white (0), set the corresponding output pixel to white (0). If the input pixel color is non-white, set the corresponding output pixel to the determined dominant_color. If no non-white pixels existed in the input, the output grid is identical to the input grid.