task_type: grid_transformation_2d # Explicitly 2D, even if 1 row high
input_format: numpy_array
output_format: numpy_array
grid_properties:
  dimensionality: 2
  height: 1 # Based on examples
  width: variable (32 in examples)
background_color: 0 (white)
objects:
  - id: reference_object
    description: A contiguous horizontal block of non-background pixels.
    properties:
      color: C1 (non-zero)
      size: S (number of pixels, S > 1)
      location: Defined by start and end column indices within the single row.
      shape: horizontal line segment
  - id: target_object
    description: A single non-background pixel.
    properties:
      color: C2 (non-zero, C2 != C1)
      size: 1
      location: Defined by a single column index (P) within the single row.
      shape: point
relationships:
  - reference_object and target_object exist simultaneously in the input.
  - They have different colors.
  - They are separated by background pixels.
transformation:
  action: resize_and_replace
  target: target_object
  reference_property: size (S) of reference_object
  result:
    description: A new contiguous horizontal block replacing the target_object and potentially adjacent background pixels.
    properties:
      color: C2 (same as target_object)
      size: S (same as reference_object)
      location: Centered horizontally at the original target_object's column index (P). The new block spans columns from `P - floor(S/2)` to `P - floor(S/2) + S - 1`.
  constraints:
    - The reference_object remains unchanged in the output grid.
    - Pixel modifications are confined within the grid boundaries.