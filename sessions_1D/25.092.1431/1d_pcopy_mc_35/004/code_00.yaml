Data Structure:
  Type: 1D list of integers (representing pixels)
  Background Color: white (0)
  Length: Constant between input and output

Objects:
  - Type: Isolated Pixel
    Properties:
      - Color: Non-white (1-9)
      - Index: `i`
      - Context: `input[i-1]` is white (0) or `i=0`, AND `input[i+1]` is white (0) or `i=last_index`.
    Action: Triggers expansion in the output list.
  - Type: Non-Isolated Pixel
    Properties:
      - Color: Non-white (1-9)
      - Context: At least one adjacent horizontal neighbor is non-white.
    Action: No direct action triggered; pixel value is copied to the output unless overwritten by an adjacent expansion.
  - Type: Background Pixel
    Properties:
      - Color: white (0)
    Action: Copied to the output unless overwritten by an adjacent expansion.

Transformation:
  Rule: Expand isolated non-white pixels horizontally into 3-pixel blocks of the same color.
  Mechanism:
    - Create a copy of the input list for the output.
    - Iterate through the *original* input list by index `i`.
    - Identify all indices `i` corresponding to "Isolated Pixels" based on the *original* input list's context.
    - For each identified isolated pixel at index `i` with color `C` in the *input* list:
      - Set `output[i-1] = C` if `i > 0`.
      - Set `output[i] = C` (already done by copying, but conceptually important).
      - Set `output[i+1] = C` if `i < last_index`.
  Concurrency: Identification of isolated pixels is based solely on the initial input state. Modifications are applied to the output copy.
  Invariance: Pixels in the output retain their value from the input copy unless they are adjacent (left or right) to an isolated pixel identified in the input.