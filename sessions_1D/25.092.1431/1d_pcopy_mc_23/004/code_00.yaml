task_type: sequence_transformation
data_format: 1D_array_of_integers
grid_constraints:
  dimensionality: 1D
elements:
  - type: background_pixel
    color_name: white
    color_value: 0
  - type: foreground_pixel
    color_name: non-white
    color_value: [1, 2, 3, 4, 5, 6, 7, 8, 9] # Any color except white
patterns:
  - name: isolated_pixel_pattern
    input_sequence_indices: [i-1, i, i+1]
    input_values: [0, C, 0] # where C is a foreground_pixel color_value
    output_sequence_indices: [i-1, i, i+1]
    output_values: [C, C, C]
  - name: unchanged_pixels
    description: Any pixel not part of the central position 'i' in a matched isolated_pixel_pattern. This includes existing blocks of identical colors and background pixels not adjacent to an isolated foreground pixel.
actions:
  - name: scan_and_replace
    description: Iterate through the input sequence, identifying all instances of the isolated_pixel_pattern based on the original input values. For each match found centered at index 'i', update the corresponding indices [i-1, i, i+1] in a separate output sequence with the expanded color C.
invariance:
  - All pixels in the input sequence that are not part of a matched `[0, C, 0]` pattern (specifically, not the 0s flanking C, nor C itself) retain their original color and position in the output sequence.
  - The length of the sequence remains unchanged.
  - The relative order of elements not involved in a replacement is preserved.
processing_strategy:
  - Create a copy of the input sequence for the output.
  - Iterate through the *original* input sequence to find patterns.
  - Apply changes to the *copy* (output sequence). This prevents a change made early in the sequence from affecting pattern matching later in the same sequence scan.