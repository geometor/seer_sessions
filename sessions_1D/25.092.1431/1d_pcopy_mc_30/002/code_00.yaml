grid_dimensions:
  rows: 4
  cols: 8
background_color: 0 # white
objects:
  - type: pixel
    properties:
      color: non-zero
      state: source_for_expansion
    identification:
      description: A non-white pixel whose horizontal neighbors (left and right, with column wrap-around) have different colors than the pixel itself.
      logic: input_grid[r, c] != 0 AND input_grid[r, (c-1+8)%8] != input_grid[r, c] AND input_grid[r, (c+1+8)%8] != input_grid[r, c]
  - type: pixel_group
    properties:
      color: non-zero (consistent within group)
      shape: horizontal_line
      length: 3
      state: preserved
    identification:
      description: A non-white pixel that is part of a 3-pixel horizontal line of the same color in the input grid. These are pixels that are *not* sources for expansion.
      logic: input_grid[r, c] != 0 AND (input_grid[r, (c-1+8)%8] == input_grid[r, c] OR input_grid[r, (c+1+8)%8] == input_grid[r, c])
actions:
  - name: expand_pixel
    input_object: pixel (state: source_for_expansion)
    output_description: Creates a 3-pixel horizontal line in the output grid using the input pixel's color.
    placement:
      center_pixel: at the source pixel's original coordinates (r, c).
      left_pixel: at column (c-1+8)%8. Row is 'r' unless c=0, then row is (r-1+4)%4.
      right_pixel: at column (c+1+8)%8. Row is 'r' unless c=7, then row is (r+1+4)%4.
    effect: Overwrites pixels at the target coordinates in the output grid.
  - name: copy_grid
    input_object: entire input grid
    output_description: Creates the initial state of the output grid as a direct copy of the input grid.
    effect: Preserves pixels that are not overwritten by the expand_pixel action (including the 'preserved' pixel_groups).
output_grid_construction:
  - Initialize output grid as a copy of the input grid.
  - Identify all 'source_for_expansion' pixels in the input grid.
  - For each source pixel, perform the 'expand_pixel' action, writing the resulting 3-pixel line onto the output grid.