task_domain: sequence transformation
input_data_type: 1D sequence of integers (pixel colors)
output_data_type: 1D sequence of integers (pixel colors)
sequence_length: 33 (consistent across examples)
background_color: white (0)
foreground_colors: green (3), red (2), orange (7), magenta (6), gray (5), azure (8), yellow (4) # Observed colors 1-9
objects:
  - type: isolated_pixel
    description: A single non-white pixel C flanked by white pixels.
    representation: The triplet `[white, C, white]` (i.e., `[0, C, 0]` where `C != 0`) at indices `[i-1, i, i+1]` in the input sequence.
  - type: colored_block
    description: A contiguous sequence of two or more identical non-white pixels.
    representation: `[C, C, ...]` where `C != 0`.
transformation:
  action: pattern replacement
  input_pattern: `[0, C, 0]` (isolated_pixel pattern)
  output_pattern: `[C, C, C]` (using the color C from the input pattern's center pixel)
  condition: Applied to all occurrences of the input pattern found in the original input sequence.
  effect: Replaces the `[0, C, 0]` triplet in the output sequence corresponding to the matched location in the input.
unaffected_elements:
  - white pixels not part of a matched `[0, C, 0]` pattern.
  - colored_block objects.
  - non-white pixels adjacent to other non-white pixels (unless they are the center of a `[0,C,0]` that gets overwritten). # Example: `[0,3,3,3,0]` - the 3s are untouched.
processing_mode: Iterative scan over the input sequence, checking for the pattern at each possible center position. Transformations are based solely on the original input state.