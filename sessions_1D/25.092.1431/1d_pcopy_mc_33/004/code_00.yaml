grid_properties:
  dimensionality: Effectively 1D (operates on a single row).
  input_output_size_relation: Identical dimensions (height=1, same width).
  height: 1
  width: Variable (32 in examples).

pixel_colors:
  - background: 0 (white)
  - active: Non-zero colors (1-9) involved in the transformation.

objects_and_patterns:
  - object: Isolated Pixel
    definition: A single non-white pixel (C) surrounded horizontally by white pixels (0).
    pattern: `[0, C, 0]` where C != 0.
  - object: Solid Triplet
    definition: Three consecutive identical non-white pixels (C).
    pattern: `[C, C, C]` where C != 0.
  - object: Background
    definition: White pixels (0).

actions:
  - action: Expansion
    input: An 'Isolated Pixel' pattern `[0, C, 0]` found in the input grid at indices `[i-1, i, i+1]`.
    output: Replaces the corresponding triplet in the output grid with a 'Solid Triplet' `[C, C, C]` at indices `[i-1, i, i+1]`.
  - action: Preservation
    input: Any pixel or pattern in the input grid that is *not* part of an 'Isolated Pixel' pattern identified for expansion. This includes existing 'Solid Triplets' and 'Background' pixels not adjacent to an expanded 'Isolated Pixel'.
    output: The pixel or pattern is copied directly to the corresponding position in the output grid.

processing_flow:
  - step: Create an output grid as an exact copy of the input grid.
  - step: Scan the *input* grid row for all occurrences of the 'Isolated Pixel' pattern `[0, C, 0]`. Iterate through possible center indices `i` from 1 to `width-2`.
  - step: For each occurrence found in the *input* grid centered at index `i` with color `C`:
      - Modify the *output* grid at indices `i-1`, `i`, and `i+1` by setting all three pixels to color `C`.
  - step: After checking all possible center positions `i` in the input grid, the final state of the output grid is the result. (Note: Checks are always against the original input state).