task_context:
  grid_dimensionality: 2D
  grid_properties: 1 row, variable width (32 in examples)
  colors_present: white (background), gray, magenta, maroon, red, yellow, blue (non-background)
objects:
  - type: horizontal_block
    definition: A contiguous sequence of one or more identical non-white pixels in a row.
    properties:
      - color: The color of the pixels in the block.
      - length: The number of pixels in the block (horizontally).
      - position: The starting column index of the block.
  - type: singleton_pixel
    definition: A non-white pixel that does not have an identical non-white neighbor immediately to its left or right.
    properties:
      - color: The color of the pixel.
      - position: The column index of the pixel.
relationships:
  - type: adjacency
    direction: horizontal
    description: Pixels are adjacent if they are next to each other in the same row. Used to identify singletons and blocks.
actions:
  - name: identify_singletons
    input: input_grid
    output: list_of_singleton_pixels (color, position)
    description: Find all non-white pixels where the pixel to the left (if exists) has a different color AND the pixel to the right (if exists) has a different color.
  - name: expand_singleton_centered
    input: singleton_pixel (color C, position j), grid_width W
    output: modifications to output grid
    description: Modify the output grid by setting the color C at indices j-1, j, and j+1. This action is only performed if the respective indices are within the grid bounds [0, W-1]. Specifically, index j-1 is only modified if j > 0, and index j+1 is only modified if j < W-1. Index j is always modified.
  - name: copy_unchanged
    input: input_grid
    output: initial_output_grid
    description: Pixels are initially copied from input to output. Only pixels involved in an expansion are subsequently changed. White pixels and pixels part of multi-pixel blocks in the input remain unchanged unless overwritten by an expansion.
transformation_rule:
  - Iterate through the input grid to identify all 'singleton_pixels'.
  - Create an output grid as a copy of the input grid.
  - For each identified 'singleton_pixel' (color C, position j):
    - Perform the 'expand_singleton_centered' action on the output grid using color C and position j, respecting grid boundaries.
  - The final state of the output grid after all expansions is the result.