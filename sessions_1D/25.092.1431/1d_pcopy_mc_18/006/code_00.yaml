task_context:
  grid_dimensionality: 1D (represented as a single list `list[int]`)
  colors_used:
    - 0 (white): background/separator
    - 1-9: various foreground colors (maroon, azure, green, yellow, gray)

objects:
  - id: isolated_single_pixel
    description: A non-white pixel P (value > 0) at index `i` in the input list where the pixel at `i-1` is white (0) and the pixel at `i+1` is white (0). This applies only for `0 < i < width - 1`.
    properties:
      - color: The color value (1-9) of the pixel P.
      - index: The position `i` in the list.
  - id: segment_len3
    description: A contiguous sequence of exactly three identical non-white pixels in the input list.
    properties:
      - color: The color value (1-9) of the pixels in the segment.
      - indices: The starting, middle, and ending indices of the segment.
  - id: background_pixel
    description: A white pixel (value 0).
  - id: other_non_white_pixel
    description: Any non-white pixel that is not an `isolated_single_pixel` (e.g., part of `segment_len3` or adjacent to another non-white pixel).

relationships:
  - type: adjacency
    description: Pixels are evaluated based on their immediate left (`i-1`) and right (`i+1`) neighbors in the list.
  - type: isolation
    description: A property of `isolated_single_pixel`, defined by white neighbors.

actions_on_input:
  - action: identify_isolated_pixels
    description: Scan the input list (from index 1 to width-2) to find all pixels matching the `isolated_single_pixel` definition. Record their index and color.
  - action: copy_input_to_output
    description: Create an initial output list by copying the input list.

transformation:
  - based_on: identified `isolated_single_pixel` at input index `i` with color `c`.
  - action: expand_pixel_in_output
    target: output list
    effect: Set the pixels at output indices `i-1`, `i`, and `i+1` to color `c`. This overwrites the values copied initially.

processing_notes:
  - The identification of isolated pixels must happen based entirely on the input list state.
  - The output list is constructed by first copying the input, then applying the `expand_pixel_in_output` transformation for all identified isolated pixels. Pixels not affected by an expansion retain their original copied value.
  - The input and output are single lists (`list[int]`), not lists of lists.