task_type: color_replacement_by_length
grid_dimensionality: 1D # Single row grids (1xN)
input_colors:
  - white (0)
  - gray (5)
output_colors:
  - white (0)
  - blue (1) # Replaces gray blocks of length 2
  - green (3) # Replaces gray blocks of length 3
  - yellow (4) # Replaces gray blocks of length 1
input_constraints:
  - Input is a list containing a single list of integers (1xN grid).
output_constraints:
  - Output is a list containing a single list of integers (1xN grid).
  - Output grid has the same dimensions as the input grid.
objects:
  - type: contiguous_horizontal_segment # Block of same-colored adjacent pixels in the row
    color: gray (5)
    property: length # Number of pixels in the segment
  - type: background_pixel
    color: white (0)
actions:
  - identify: Locate contiguous horizontal segments of gray (5) pixels in the input row.
  - measure: Determine the length of each identified gray segment.
  - map_color: Assign a new color based on the measured length of the gray segment using a specific rule.
  - replace: Substitute all gray (5) pixels within a segment with the mapped color in the output row.
  - preserve: Copy white (0) pixels from the input row to the corresponding position in the output row.
relationships:
  - mapping: Length of gray segment to output color.
    rules:
      - length: 1 => color: yellow (4)
      - length: 2 => color: blue (1)
      - length: 3 => color: green (3)
      - length: other => color: gray (5) # Implicit: blocks of other lengths remain unchanged (though not seen in examples)
  - iteration: Process the input row from left to right. When a gray segment is processed, skip its pixels in subsequent iterations.