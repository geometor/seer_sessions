task_type: grid_manipulation
grid_properties:
  dimensionality: 2D
  height: fixed at 2 rows
  width: variable (16 in examples)
components:
  - role: grid_element
    location: first row (index 0)
    description: Pixels in this row are candidates for modification based on local context in the input grid.
  - role: grid_element
    location: second row (index 1)
    description: Pixels in this row are unconditionally modified in the output.
transformation:
  - action: initialize_output
    target: output grid
    based_on: input grid dimensions
    initial_state: copy of input grid
  - action: replace_row
    target: output grid, second row (index 1)
    condition: unconditional
    value: white (0)
  - action: conditionally_replace_pixel
    target: output grid, first row (index 0), column c
    condition:
      all_true:
        - input_grid[0, c] is not white (0)
        - input_grid[1, c] is white (0)
        - input_grid[0, c-1] is white (0) (Treat left edge c=0 as having a white neighbor)
        - input_grid[0, c+1] is white (0) (Treat right edge c=width-1 as having a white neighbor)
    value: white (0)
    fallback: Keep original value copied from input_grid[0, c]
relationship:
  - type: positional_and_contextual
    focus: pixels in the first row
    rule: Modification depends on the pixel's own value, the value below it, and its horizontal neighbors in the *input* grid.
  - type: positional
    focus: pixels in the second row
    rule: All pixels are unconditionally set to white.
invariance:
  - property: grid dimensions (height, width) remain the same.
  - property: color palette (only colors present in input or white).