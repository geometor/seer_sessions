task_description: Identify the longest contiguous horizontal segment(s) of the single non-white color present in the 1D input sequence and output only that/those segment(s) against a white background.

definitions:
  - object:
      type: Color Segment
      description: A contiguous sequence of one or more identical non-white pixels within the 1D input array.
      properties:
        - color: The specific non-white color (integer 1-9).
        - length: The number of pixels in the sequence.
        - start_index: The starting position (0-based index) of the sequence in the 1D array.
        - end_index: The ending position (0-based index) of the sequence in the 1D array.
  - background:
      type: Pixel
      description: Pixels with the white color (0).

input_characteristics:
  - format: 1D array (list) of integers (0-9).
  - background_color: Predominantly white (0).
  - foreground_color: Contains exactly one non-white color per input.
  - object_distribution: The non-white color forms one or more contiguous horizontal segments of varying lengths, separated by white pixels.

output_characteristics:
  - format: 1D array (list) of integers (0-9), same size as input.
  - background_color: Always white (0).
  - content: Contains only the pixels corresponding to the single longest contiguous segment(s) of the non-white color found in the input. All other positions are white (0).

transformation:
  - name: Isolate Longest Segment(s)
  - steps:
      - Identify the non-white color (C) present in the input sequence. If none exists, return a sequence of zeros.
      - Scan the input sequence to find all contiguous segments composed solely of color C. Record each segment's start index, end index, and length. If no segments are found, return a sequence of zeros.
      - Determine the maximum length among all found segments.
      - Identify all segments possessing this maximum length.
      - Create an output sequence of the same size as the input, initialized with white (0).
      - For each identified longest segment, copy its color (C) to the corresponding positions (from start index to end index) in the output sequence.