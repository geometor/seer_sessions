task_type: grid_transformation
grid_properties:
  dimensionality: 2D
  background_color: 0 # white
  assumed_dimensions: 4x8 # Based on element count 32
input_characteristics:
  - contains_background: true
  - contains_single_foreground_color: true # Based on examples
  - foreground_colors_observed: [1, 6, 8] # blue, magenta, azure
  - foreground_pixels_form_objects: true # Contiguous blocks of same color
output_characteristics:
  - contains_background: true
  - contains_subset_of_input_foreground_pixels: true
  - kept_pixels_form_specific_object: true
transformation_logic:
  object_identification:
    - find_foreground_color: Determine the non-white color C.
    - find_connected_components: Identify all distinct objects (connected components) composed of color C in the input grid. Connectivity includes adjacent (up, down, left, right) pixels.
  object_selection:
    - find_max_row: Determine the row index `max_row_idx` that contains the highest count of color C. If multiple rows share the highest count, select the topmost row (smallest index).
    - identify_target_objects: Find all objects identified in the identification step that have at least one pixel located within the `max_row_idx`.
  output_construction:
    - create_background_grid: Generate an output grid of the same dimensions as the input, filled entirely with the background color (0).
    - copy_target_objects: For every pixel belonging to any of the `target_objects`, copy its color C to the corresponding position in the output grid.
uncertainties:
  - diagonal_connectivity: Assumed connectivity is cardinal (up, down, left, right) only, not diagonal.
  - multiple_objects_in_max_row: Assumed if multiple objects intersect the max row, all are kept.
  - prompt_output_discrepancy: The provided expected outputs for examples 1 and 3 do not perfectly match this rule, although example 2 does. This rule is the most consistent hypothesis derived.