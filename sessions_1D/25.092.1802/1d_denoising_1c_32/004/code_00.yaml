task_type: object_selection_by_size
description: For each row in the input grid, identify the longest contiguous horizontal segment of non-white pixels and keep only that segment, replacing all other pixels in the row with white.
input_format: 2D grid (list of lists or NumPy array)
output_format: 2D grid with the same dimensions as the input.
elements:
  - type: grid
    description: A 2D array of pixels with integer values 0-9.
  - type: row
    description: A horizontal line of pixels within the grid.
  - type: background_pixel
    color: white (0)
  - type: segment
    description: A contiguous horizontal sequence of pixels of the same non-white color within a single row.
    properties:
      - color: The specific non-white color (e.g., red, yellow, gray). Varies per example but is consistent within a segment. Assumed to be only one non-white color per row based on examples.
      - length: The number of pixels in the segment.
      - position: The starting and ending column index of the segment within its row.
relationships:
  - type: contained_in
    description: Segments are contained within rows. Rows are contained within the grid.
  - type: comparison
    description: Segments within the same row are compared based on their length.
actions:
  - type: iterate_rows
    description: Process each row of the input grid independently.
  - type: identify_color
    description: In the current row, identify the single non-white color present (if any).
  - type: find_segments
    description: Find all contiguous horizontal segments of the identified non-white color in the current row. Record start index, end index (exclusive), and length for each.
  - type: find_longest
    description: Determine the segment with the maximum length among those found in the current row. If there's a tie, select the one that appears earliest (smallest start index).
  - type: filter_and_construct
    description: Create a new output row of the same length as the input row, filled with the background color (white). If a longest segment was found, copy its pixels from the input row to the corresponding positions in the output row.
  - type: assemble_output
    description: Collect all the processed output rows to form the final output grid.
assumptions:
  - Each row contains at most one non-white color.
  - If multiple segments share the maximum length in a row, the transformation keeps the one that starts at the leftmost position.