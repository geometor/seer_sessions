task_context:
  grid_representation: 2D grid (NumPy array). Examples provided have shape (1, N).
  colors_involved:
    - background: 0 (white)
    - target: 2 (red)
    - replacement: 8 (azure)
  pertinent_objects:
    - type: contiguous_block
      color: 2 (red)
      orientation: horizontal (within a single row)
      properties:
        - length
        - start_index
        - end_index
transformation_rule:
  scope: Applied independently to each row of the input grid. (Based on examples, only one row is present/relevant).
  input_scan: Iterate through each row of the input grid. For each row:
  object_identification: Locate all distinct contiguous horizontal blocks (segments) of the target color (red: 2).
  selection_criterion:
    - property: length
    - rule: Find the maximum length among all red segments *within the current row*.
    - assumption: If multiple segments share the maximum length, the examples do not specify behavior. Current logic implicitly handles the first one found during a standard left-to-right scan if lengths are equal, but the examples only show unique longest segments.
  action:
    - target_object: The segment(s) matching the maximum length criterion in that row.
    - modification: Change the color of all pixels within the selected segment(s).
    - color_change: From target color (red: 2) to replacement color (azure: 8).
  output_generation: The output grid is identical to the input grid, except for the pixels within the identified longest red segment(s) in each relevant row, which are changed to azure.