- task_type: array_manipulation_translation
- grid_dimensionality: 1D (input and output are single rows)
- grid_size:
    - width: 26 pixels (consistent across examples)
    - height: 1 pixel (consistent across examples)
- elements:
    - type: pixel
      attributes:
        - color: integer (0=white, 1-9=other colors)
        - position: index (0-based) within the row
- objects:
    - type: contiguous_block
      description: A single, unbroken sequence of adjacent pixels sharing the same non-white color.
      attributes:
        - color: The specific non-white color (e.g., red, orange, gray).
        - length: The number of pixels in the block (variable).
        - start_index: The 0-based index where the block begins.
      relationships:
        - Surrounded by white pixels (color 0).
      constraints:
        - Exactly one such block exists in each input row.
- actions:
    - action: horizontal_shift
      target: contiguous_block
      parameters:
        - direction: right
        - distance: 1 pixel
      effects:
        - The start_index of the block increases by 1.
        - The pixel at the original start_index becomes white (0).
        - The pixel at the original start_index + block_length (i.e., the pixel immediately to the right of the block's original end) takes the color of the block.
        - All other pixels retain their original color (white).
        - The color and length of the block remain unchanged.
        - The overall dimensions of the row remain unchanged.
- transformation_rule:
    1. Locate the single contiguous block of non-white pixels within the input row.
    2. Determine its color, starting index, and length.
    3. Generate an output row of the identical dimensions, initially filled with white pixels (0).
    4. Reconstruct the identified block in the output row, placing its starting position at an index exactly one greater than its original starting index. Ensure the block's color and length are preserved.