task_type: grid_transformation
grid_dimensionality: 1D # All examples are single rows
input_features:
  - description: Contains exactly one contiguous block of a single non-white color (color != 0).
  - description: The non-white block is surrounded by white pixels (color 0).
output_features:
  - description: Same dimensions (length) as the input grid.
  - description: Contains the same non-white block as the input (same color, same length).
  - description: The non-white block is positioned exactly one step to the right compared to its position in the input grid.
  - description: All pixels not part of the shifted block are white (color 0).
objects:
  - type: contiguous_block
    description: The single sequence of identical non-white pixels in the input grid.
    properties:
      color: The non-white color value (varies: 4, 8, 6).
      length: The number of pixels in the block (varies: 16, 15, 5).
      start_index_input: The 0-based index where the block begins in the input (varies: 0, 0, 4).
      end_index_input: The 0-based index *after* the last pixel of the block in the input (varies: 16, 15, 9).
  - type: background
    description: White pixels (color 0).
    properties: Fills the grid space not occupied by the non-white block.
action:
  type: shift_block_right
  parameters:
    shift_amount: 1
  description: >
    Identify the single contiguous block of non-white pixels in the input grid.
    Determine its color, start index, and end index (exclusive).
    Create a new grid of the same size as the input, initialized with the background color (white, 0).
    Calculate the new start index for the block by adding 1 to the original start index.
    Calculate the new end index for the block by adding 1 to the original end index.
    Fill the portion of the new grid from the new start index up to (but not including) the new end index with the identified block color.
constraints:
  - Assumes exactly one contiguous non-white block exists in the input.
  - Assumes the shifted block will fit within the grid boundaries (new end index <= grid size).