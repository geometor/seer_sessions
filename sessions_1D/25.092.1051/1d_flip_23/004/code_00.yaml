task_description: "Swap the colors of the first and last pixels of a specific contiguous horizontal segment within a single-row grid."
grid_properties:
  dimensionality: 1D (represented as a 1xN grid/array)
  background_color: 0 (white)
  data_type: Likely NumPy array based on execution error.
objects:
  - id: target_segment
    description: "A contiguous horizontal sequence of non-background pixels starting with a unique 'marker' color, followed by one or more pixels of a second, consistent color different from the marker."
    properties:
      location: Found by scanning the row for the first non-background pixel.
      structure: Consists of two parts:
        - marker_pixel: The first pixel of the segment.
        - sequence_pixels: One or more pixels immediately following the marker, all having the same color, which differs from the marker color.
      colors:
        - marker_color: Variable (e.g., red, blue, yellow).
        - sequence_color: Variable (e.g., orange, magenta), consistent within the sequence.
    identification_rule:
      1. Find the index `marker_idx` of the first non-zero pixel.
      2. Check pixel at `marker_idx + 1`. It must exist, be non-zero, and have a different color (`sequence_color`) than the marker.
      3. Find the last index `sequence_end_idx` such that all pixels from `marker_idx + 1` to `sequence_end_idx` have the `sequence_color`.
      4. The segment spans from `marker_idx` to `sequence_end_idx`.
relationships:
  - type: adjacency
    object1: marker_pixel
    object2: sequence_pixels
    details: The marker_pixel is immediately to the left of the sequence_pixels.
  - type: composition
    parent: target_segment
    children: [marker_pixel, sequence_pixels]
    details: The target_segment is formed by the marker_pixel followed by the sequence_pixels.
actions:
  - action: swap_colors
    object: target_segment
    details: "Swap the color of the pixel at the start index (`marker_idx`) with the color of the pixel at the end index (`sequence_end_idx`) of the identified segment."
    input_indices: [`marker_idx`, `sequence_end_idx`]
    input_colors: [`marker_color`, `sequence_color`] # Note: sequence_color is read from index marker_idx + 1
    output_effect:
      - grid[`marker_idx`] becomes `sequence_color`.
      - grid[`sequence_end_idx`] becomes `marker_color`.
invariants:
  - Grid dimensions remain unchanged.
  - Background pixels (color 0) remain unchanged.
  - Pixels outside the identified `target_segment` remain unchanged.
  - Pixels within the `target_segment` *between* the first and last pixels retain their original color (`sequence_color`).