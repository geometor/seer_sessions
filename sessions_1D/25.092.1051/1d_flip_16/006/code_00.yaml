task_type: array_manipulation
grid_dimensionality: 1D # Effectively 1xN grids
background_color: 0 # white
input_format: Potentially list of lists or NumPy array (must be handled robustly)
output_format: list of lists (1xN)
objects:
  - name: active_segment
    description: The contiguous sequence of non-background (non-zero) pixels.
    properties:
      - location: Bounded by background pixels (0) or grid edges.
      - composition: Contains exactly two distinct non-zero colors.
      - structure: One color appears once (singleton), the other appears multiple times contiguously (block).
  - name: singleton
    description: The pixel within the active_segment whose color appears only once in that segment.
    properties:
      - color: variable (non-zero)
      - count: 1 (within the active_segment)
  - name: block
    description: The contiguous sequence of pixels within the active_segment whose color appears multiple times.
    properties:
      - color: variable (non-zero, different from singleton color)
      - count: >1 (within the active_segment)
      - contiguous: true
relationships:
  - type: adjacency
    objects: [singleton, block]
    description: The singleton and the block are immediately adjacent within the active_segment.
  - type: spatial_containment
    objects: [singleton, block, active_segment]
    description: The singleton and block together constitute the entirety of the active_segment.
  - type: boundary
    objects: [active_segment, background_color]
    description: The active_segment is surrounded by the background color (0) or grid boundaries.
actions:
  - name: identify_active_segment
    description: Find the start and end indices of the first contiguous sequence of non-zero pixels in the input row.
  - name: analyze_segment_composition
    description: Within the active segment, identify the unique colors and their counts. Verify exactly two non-zero colors exist, one with count 1 (singleton) and one with count > 1 (block). Verify the block pixels are contiguous.
  - name: determine_original_order
    description: Check if the first pixel of the active_segment is the singleton color or the block color.
  - name: swap_components
    objects: [singleton, block]
    description: Create a new sequence where the order of the singleton pixel and the entire block of pixels is reversed compared to their order in the input active_segment.
  - name: reconstruct_output
    description: Create the output row by replacing the original active_segment slice with the newly created swapped sequence, keeping all other pixels (background) unchanged. Format as a 1xN list of lists.
