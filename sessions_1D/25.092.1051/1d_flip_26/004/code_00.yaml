task_description: Rearrange elements in a 1xN grid by moving a single 'marker' pixel across an adjacent 'block' of pixels.
grid_properties:
  - dimensionality: 1xN (represented as a 2D NumPy array with shape (1, N))
  - background_color: 0 (white)

elements:
  - object: marker_pixel
    description: The first non-background pixel encountered when scanning the row from left to right.
    properties:
      - color: Any color except background (0). Varies per example (magenta, yellow, blue).
      - position: Index `i` where the first non-zero pixel occurs.
  - object: pixel_block
    description: A contiguous sequence of one or more pixels immediately following the marker_pixel. All pixels in the block must have the same color, which must be different from both the background and the marker_pixel color.
    properties:
      - color: Any color except background (0) and marker_pixel color. Varies per example (red, gray, yellow).
      - position: Starts at index `i+1`.
      - length: `L` (number of contiguous pixels with the block color, L >= 1).
  - object: background
    description: Pixels representing empty space.
    properties:
      - color: 0 (white)

relationships:
  - type: adjacency
    objects: [marker_pixel, pixel_block]
    details: The marker_pixel is at index `i`, and the pixel_block starts at index `i+1`.
  - type: constraint
    objects: [marker_pixel, pixel_block]
    details: marker_pixel.color != pixel_block.color
  - type: constraint
    objects: [marker_pixel, background]
    details: marker_pixel.color != background.color (0)
  - type: constraint
    objects: [pixel_block, background]
    details: pixel_block.color != background.color (0)

actions:
  - action: identify_pattern
    description: Scan the input row from left to right to find the first sequence matching the 'marker_pixel' followed immediately by a valid 'pixel_block'.
  - action: rearrange
    description: If the pattern is found, modify a copy of the input row.
    steps:
      - Copy the pixel_block's color to the indices from `i` to `i + L - 1`.
      - Copy the marker_pixel's color to the index `i + L`.
    condition: The pattern (marker followed by valid block) must be present. If not found, the grid remains unchanged.