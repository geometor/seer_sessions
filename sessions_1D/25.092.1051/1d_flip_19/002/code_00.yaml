task_type: array_manipulation
grid_dimensionality: 2D # Input is technically 2D, though often 1xN or Nx1
grid_size: Variable (specifically 1xN for all training examples)
pixel_colors: 0-9 representing colors (0=white, 1-9=non-white)

input_features:
  - grid: A 2D array, observed as 1xN in examples.
  - target_row: The single row within the 1xN grid.
  - background:
      color: white (0)
      location: Pixels outside the non-white block within the target_row.
  - object:
      description: A single contiguous block of non-white pixels within the target_row.
      composition: Sequence of non-white colors (1-9).
      location: Varies across examples within the target_row.
      size: Varies across examples (length >= 2).

output_features:
  - grid: A 2D array with the same dimensions as the input.
  - target_row: The modified row.
  - background:
      description: Identical in position and color to the input background pixels within the target_row.
  - object:
      description: The same contiguous block region as in the input target_row, but with rearranged colors.
      composition: The sequence of non-white colors from the input object, cyclically shifted left by one position.
      location: Same indices within the target_row as the input object block.
      size: Same length as the input object block.

transformation:
  - identify_row: Since inputs are 1xN, select the first (and only) row as the target_row.
  - identify_block: Locate the start and end indices of the contiguous block of non-white pixels within the target_row.
  - extract: Get the sequence of colors (sub-list/sub-array) within this block from the target_row.
  - manipulate: Perform a left cyclic shift on the extracted sequence (move the first element to the end).
  - replace: Place the manipulated sequence back into the target_row at the original start and end indices.
  - construct_output: Create the output grid with the modified target_row.
  - invariant: White pixels (value 0) remain unchanged. Grid dimensions remain unchanged.