task: Relocate a uniquely colored pixel within a contiguous block of otherwise uniformly colored pixels.
grid_properties:
  - type: 1D array (single row)
  - background_color: white (0)
elements:
  - type: colored_block
    description: A single contiguous horizontal sequence of non-white pixels.
    properties:
      - location: Does not change between input and output.
      - length: Does not change between input and output.
      - composition: Contains exactly two distinct non-white colors.
  - type: marker_pixel
    description: The pixel within the colored_block whose color appears exactly once.
    properties:
      - color: Varies between examples (green, orange, blue). Preserved in output.
      - input_position: Always located at the leftmost end (index 0) of the colored_block.
      - output_position: Always located at the rightmost end (index N-1) of the colored_block.
  - type: body_pixels
    description: The pixels within the colored_block that are not the marker_pixel.
    properties:
      - color: All body pixels share the same color, distinct from the marker. Varies between examples (yellow, gray). Preserved in output.
      - quantity: Fills the rest of the colored_block (length - 1). Preserved in output.
      - input_arrangement: Occupy indices 1 to N-1 of the colored_block.
      - output_arrangement: Occupy indices 0 to N-2 of the colored_block. Maintain relative order implicitly by filling the space.
transformation:
  action: Modify the arrangement of pixels within the colored_block.
  condition: The transformation applies only if a block exists that meets the composition criteria (one marker, N body pixels) AND the marker pixel is at the leftmost position (index 0) of the block.
  steps:
    1. Identify the start and end indices of the single contiguous non-white block.
    2. Extract the block.
    3. Analyze the block's colors to find the marker color (count=1) and body color (count>1).
    4. Verify the marker color is at the first position (index 0) of the extracted block.
    5. If verified, construct a new block of the same length:
       a. Fill positions 0 to N-2 with the body color.
       b. Place the marker color at position N-1 (the last position).
    6. Replace the original block segment in the grid with the newly constructed block.
    7. If the condition (marker at start) is not met, or the block structure is invalid, return the input grid unchanged.
  invariants:
    - The background (white pixels) remains unchanged.
    - The overall position (start/end indices) of the colored_block remains unchanged.
    - The length of the colored_block remains unchanged.
    - The marker color and body color remain unchanged.
    - The total count of each color within the block remains unchanged.