task_type: object_color_transformation_by_property
grid_dimensionality: 1D (1xN)
background_color: white (0)
input_object_color: orange (7)
output_object_colors: [green (3), maroon (9)]
objects:
  - type: contiguous_horizontal_segment
    input_color: orange (7)
    properties:
      - length: determines the output color (odd length -> green (3), even length -> maroon (9))
      - start_index: integer >= 0
      - end_index: integer >= start_index
transformation_logic:
  - action: identify_objects
    filter: color == orange (7) AND type == contiguous_horizontal_segment
  - action: map_property_to_color
    input_property: length (of orange segment)
    mapping_rule:
      - condition: length % 2 == 1 (odd)
        output_color: green (3)
      - condition: length % 2 == 0 (even)
        output_color: maroon (9)
  - action: replace_object_color
    input_object: orange segment
    output_color: determined by mapping_rule based on length
  - action: preserve_background
    filter: color == white (0)
invariants:
  - grid dimensions (1xN)
  - position of background (white) pixels
  - start and end indices of segments (object locations)
variables:
  - color of object segments (changes based on length)
examples_summary:
  - example: 1
    input_dims: 1x18
    output_dims: 1x18
    input_segments: [(3,5,len=3), (8,9,len=2), (13,16,len=4)]
    output_mapping: [len=3 -> 3 (green), len=2 -> 9 (maroon), len=4 -> 9 (maroon)]
  - example: 2
    input_dims: 1x18
    output_dims: 1x18
    input_segments: [(1,6,len=6), (8,10,len=3), (12,14,len=3)]
    output_mapping: [len=6 -> 9 (maroon), len=3 -> 3 (green), len=3 -> 3 (green)]
  - example: 3
    input_dims: 1x18
    output_dims: 1x18
    input_segments: [(3,5,len=3), (8,9,len=2), (11,14,len=4), (17,17,len=1)]
    output_mapping: [len=3 -> 3 (green), len=2 -> 9 (maroon), len=4 -> 9 (maroon), len=1 -> 3 (green)]