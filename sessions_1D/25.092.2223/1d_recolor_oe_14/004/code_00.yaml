elements:
  - type: grid
    description: 2-dimensional array of pixels, consistently 1xN in these examples.
    properties:
      - shape: (height, width) - e.g., (1, 29)
      - pixels: integer values from 0-9 representing colors.
  - type: pixel
    properties:
      - color: integer value (0, 1, 8, 9 observed)
      - position: (row, column)

objects:
  - type: run
    description: A contiguous horizontal sequence of pixels of the same color within the single row of the grid.
    properties:
      - color: The color of the pixels in the run.
      - length: The number of pixels in the run.
      - start_col: The starting column index of the run.
      - end_col: The ending column index of the run.

transformations:
  - type: grid_restructuring
    input: 2D grid (1xN)
    output: 1D sequence (length N)
    description: Flatten the input grid to simplify run processing.
  - type: color_change_by_parity
    input_objects:
      - type: run
        properties:
          - color: 9 (maroon)
    output_objects:
      - type: run
        properties:
          - color: 1 (blue) if input length is even, 8 (azure) if input length is odd.
          - length: same as input run length
          - start_col: same as input run start_col
          - end_col: same as input run end_col
    condition: Applies only to runs of maroon pixels in the flattened sequence.
  - type: color_preservation
    input_objects:
      - type: run
        properties:
          - color: 0 (white)
    output_objects:
      - type: run
        properties:
          - color: 0 (white)
          - length: same as input run length
          - start_col: same as input run start_col
          - end_col: same as input run end_col
    condition: Applies only to runs of white pixels in the flattened sequence.
  - type: grid_restructuring_reverse
    input: 1D sequence (length N) resulting from transformations
    output: 2D grid (1xN)
    description: Reshape the transformed 1D sequence back to the original grid shape.

relationships:
  - type: shape_preservation
    description: The output grid has the same dimensions (shape) as the input grid.
  - type: run_mapping
    description: Each contiguous run of pixels in the (flattened) input maps to a contiguous run of pixels of the same length in the (flattened) output. The color mapping depends on the input run's color and length parity.