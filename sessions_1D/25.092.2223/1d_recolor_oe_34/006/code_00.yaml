elements:
  - element: grid
    description: A 1-dimensional array (single row) of pixels.
    properties:
      - height: Always 1.
      - width: Variable (e.g., 29 in examples).
      - pixels: Ordered sequence of color values.
  - element: pixel
    properties:
      - color: Integer value (0-9). In this task, input uses 0 (white) and 3 (green); output uses 0 (white), 1 (blue), and 5 (gray).
      - position: The index within the 1D grid row.
  - element: object
    description: A contiguous horizontal sequence (block) of green (3) pixels in the input grid.
    identifier: Sequence of one or more adjacent pixels with color 3.
    properties:
      - length: The number of pixels in the sequence (integer >= 1).
      - parity: The property of the length being odd or even.
      - start_index: The position of the first pixel in the block.
      - end_index: The position of the last pixel in the block.
      - pixels: The set of pixels (identified by position) constituting the object.
actions:
  - action: copy_grid
    description: Create an output grid initialized with the same dimensions and pixel values as the input grid.
  - action: identify_green_blocks
    description: Iterate through the input grid to find all contiguous horizontal sequences of green (3) pixels. For each block, record its start index, end index, and length.
  - action: determine_block_parity
    description: For each identified green block, check if its length is even or odd.
  - action: recolor_block_in_output
    description: Modify the pixels in the output grid corresponding to the positions of an identified green block from the input grid. The new color depends on the block's length parity.
    conditions:
      - if: block length is even
        then: change color of corresponding output pixels to blue (1).
      - if: block length is odd
        then: change color of corresponding output pixels to gray (5).
  - action: preserve_white_pixels
    description: Ensure that pixels that were white (0) in the input grid remain white (0) in the output grid at the same positions. (This is implicitly handled by copying first and only modifying green blocks).
relationships:
  - relationship: input_output_pixel_correspondence
    description: Each pixel in the output grid derives its state from the pixel at the same position in the input grid and its context (if it's part of a green block).
    rules:
      - if: input pixel at index `i` is white (0)
        then: output pixel at index `i` is white (0).
      - if: input pixel at index `i` is green (3) and belongs to a block of even length
        then: output pixel at index `i` is blue (1).
      - if: input pixel at index `i` is green (3) and belongs to a block of odd length
        then: output pixel at index `i` is gray (5).