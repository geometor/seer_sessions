task_type: color_transformation
grid_dimensionality: 2D (specifically 1xN)
input_colors: [0, 1] # white, blue
output_colors: [0, 6, 7] # white, magenta, orange
objects:
  - type: contiguous_horizontal_segment
    input_color: 1 # blue
    source: input_grid[0] # The single row of the input grid
    properties:
      - start_index
      - end_index (exclusive)
      - length
      - order_of_appearance (left-to-right in the row)
    output_color_rule: assigned sequentially based on order, starting from 6 (magenta), then 7 (orange), etc.
background:
  - color: 0 # white
    transformation: remains unchanged
relationships:
  - Input and output grids have the same shape (1xN).
  - White pixels map directly to white pixels at the same index.
  - Each contiguous segment of blue pixels in the input row corresponds exactly in position and length to a segment of a single color (6 or 7) in the output row.
  - The color assigned (6 or 7) depends on the left-to-right sequence of the blue segment in the input row.
actions:
  - Create a deep copy of the input grid (which is a list containing one list/row).
  - Access the single row within the input grid (at index 0).
  - Identify all contiguous segments of blue (1) pixels within this row, noting their start and end indices.
  - Initialize a color counter to 6 (magenta).
  - Iterate through the identified blue segments in their left-to-right order.
  - For each segment:
    - Access the corresponding row in the copied output grid (at index 0).
    - Change the color of all pixels within that segment's range (from start_index to end_index-1) in the output row to the current value of the color counter.
    - Increment the color counter.
  - Return the modified output grid.