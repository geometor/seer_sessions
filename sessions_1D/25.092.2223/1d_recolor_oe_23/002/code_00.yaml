task_context:
  grid_dimensionality: 1D (single row)
  colors_present_input: [white, orange]
  colors_present_output: [white, red, magenta]
  input_output_length_match: true

objects:
  - type: pixel_segment
    description: Contiguous horizontal sequence of pixels of the same color in the input grid.
    relevant_colors: [orange]
    properties:
      - color: orange (7)
      - length: The number of pixels in the segment.
      - length_parity: Whether the length is odd or even.

transformation:
  description: Changes the color of orange (7) pixel segments based on the parity (odd/even) of their length. White (0) pixels remain unchanged.
  rules:
    - condition: Input pixel is white (0).
      action: Output pixel remains white (0).
    - condition: Input pixel is orange (7) and belongs to a contiguous segment of orange pixels.
      action: Determine the length of the segment.
      sub_rules:
        - condition: The segment length is odd.
          action: Change all pixels in that segment to red (2) in the output.
        - condition: The segment length is even.
          action: Change all pixels in that segment to magenta (6) in the output.
  unchanged_elements: White (0) background pixels.

relationships:
  - type: color_mapping_by_segment_length_parity
    input_color: orange (7)
    output_color_conditions:
      - condition: segment length is odd
        output_color: red (2)
      - condition: segment length is even
        output_color: magenta (6)

derived_observations:
  - The transformation preserves the positions of non-orange pixels.
  - Each contiguous segment of orange pixels in the input maps to a contiguous segment of a single color (either red or magenta) in the output, with the same length and position.
  - The transformation rule (odd length -> red, even length -> magenta) is consistent across all three training examples.