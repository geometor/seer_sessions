task_description: Retain only the endpoints of a single contiguous non-white horizontal segment found in the first row of the input grid.
objects:
  - type: grid # Input and Output are 2D grids, though examples primarily show transformation on the first row.
    properties:
      - dimensions: height (number of rows), width (number of columns)
      - pixels: 2D array of color values (0-9)
  - type: segment # A contiguous horizontal block of non-white pixels within a single row.
    properties:
      - row_index: The index of the row containing the segment (assumed to be 0 based on examples).
      - color: The single non-white color of the segment (e.g., azure, red).
      - start_column_index: The column index of the first pixel in the segment.
      - end_column_index: The column index of the last pixel in the segment.
      - length: Number of pixels in the segment (end_column_index - start_column_index + 1).
actions:
  - identify_input_properties: Determine the dimensions (height, width) of the input grid.
  - locate_segment: Scan the first row (index 0) of the input grid to find the single contiguous segment of non-white pixels.
  - identify_segment_properties: Determine the color, start_column_index, and end_column_index of the segment found in the first row. Handle the case where no segment exists.
  - create_output_grid: Generate a new grid of the same dimensions as the input, initially filled with white (0) pixels.
  - preserve_endpoints: If a segment was found in the first row of the input:
      - Copy the pixel color from the input grid at `[0][start_column_index]` to the output grid at the same position.
      - Copy the pixel color from the input grid at `[0][end_column_index]` to the output grid at the same position. (Note: If segment length is 1, start and end indices are the same, correctly placing one pixel).
relationships:
  - input_output_dimensions: The output grid must have the same height and width as the input grid.
  - modification_rule: The output grid is identical to an all-white grid of the same dimensions, except that the first and last pixels of the non-white segment found in the *first row* of the input grid retain their original color and position in the first row of the output grid. All other pixels in the output grid are white (0).
assumptions:
  - Only one non-white contiguous segment exists in the first row.
  - The transformation logic only applies to the first row. Other rows, if present in the input, do not affect the output (output rows other than the first remain white).
  - Input data might be provided as a NumPy array, requiring handling or conversion.