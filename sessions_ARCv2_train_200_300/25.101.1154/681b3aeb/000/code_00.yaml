task_description: Overlay two shapes based on priority, filling the background.

definitions:
  object: A contiguous block of non-white pixels of the same color.
  bounding_box: The smallest rectangle enclosing all pixels of an object.
  bbox_content: The 2D array of pixels within the bounding box, preserving relative positions.
  bbox_area: height * width of the bounding box.
  max_dimension: The maximum of height and width of a bounding box.

input_features:
  grid_size: Variable (e.g., 10x10).
  background_color: White (0).
  objects: Exactly two distinct colored objects per input grid.

output_features:
  grid_size: Square grid (S x S).
  size_determination: S = max(object1.max_dimension, object2.max_dimension).
  content: Combination of the two input object shapes based on specific rules.

transformation_steps:
  1. Identify the two colored objects (O1, O2) in the input grid.
  2. For each object, determine its color (C1, C2), bounding_box (B1, B2), and bbox_content (Shape1, Shape2). Calculate bbox_area (A1, A2) and max_dimension (S1, S2).
  3. Determine the output grid dimension: S = max(S1, S2).
  4. Determine the Winner (W) and Loser (L) objects:
     - If A1 != A2: Winner = object with larger Area.
     - If A1 == A2: Winner = object with lower Color index.
  5. Pad Winner's shape (ShapeW) and Loser's shape (ShapeL) to S x S grids (PW, PL).
  6. Create the initial overlay grid (Overlay) of size S x S:
     - For each cell (r, c):
       - Overlay[r, c] = PW[r, c] if PW[r, c] != 0 else PL[r, c]
  7. Create the final output grid (Output) by filling background:
     - For each cell (r, c):
       - Output[r, c] = Overlay[r, c] if Overlay[r, c] != 0 else ColorL (Loser's color).

relationships:
  - Output grid size depends on the maximum dimension of the input objects' bounding boxes.
  - Pixel colors in the output depend on the colors of both input objects.
  - Pixel placement depends on the relative shapes within the bounding boxes.
  - Precedence during overlay depends on bounding box area and color index.
  - Background color in the output depends on the color of the "Loser" object.