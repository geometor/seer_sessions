elements:
  - role: input
    type: grid
    description: A 2D array of pixels representing colors (0-9), including white (0).
  - role: output
    type: color_value
    description: A single integer (1-9) representing the selected non-white color.
  - role: intermediate
    type: pixel_counts
    description: A map of non-white colors to their total frequency (count) in the input grid.
  - role: intermediate
    type: object_counts
    description: A map of non-white colors to the number of distinct contiguous objects formed by that color. Adjacency is horizontal/vertical, not diagonal.
  - role: concept
    type: object
    description: A contiguous block of one or more pixels of the same non-white color, connected horizontally or vertically.
task_logic:
  - process: analyze_pixels
    description: Count the occurrences of each distinct non-white color (1-9) within the input grid.
  - process: find_minimum_pixel_frequency
    description: Identify the minimum count among all counted non-white colors.
  - process: identify_frequency_candidates
    description: Find all non-white colors that have this minimum pixel frequency count.
  - process: evaluate_candidates
    description: >
      Check if there is only one candidate color based on pixel frequency.
      If yes, this color is the result.
      If no (there's a tie in pixel frequency), proceed to the object counting tie-breaker.
  - process: analyze_objects_for_tie_breaker
    description: >
      For each color involved in the pixel frequency tie, count the number of distinct contiguous objects formed by that color.
      Connectivity is defined by horizontal and vertical adjacency (not diagonal).
  - process: find_maximum_object_count
    description: Identify the maximum object count among the tied colors.
  - process: identify_object_candidates
    description: Find the color (from the frequency tie) that has this maximum object count.
  - process: select_output
    description: >
      The output color is the one identified either directly by unique minimum pixel frequency,
      or by having the maximum number of objects among those tied for minimum pixel frequency.
      (The examples show this resolves the tie uniquely).
relationships:
  - input_grid -> pixel_counts -> minimum_pixel_frequency -> frequency_candidates
  - frequency_candidates -> select_output (if unique candidate based on frequency)
  - frequency_candidates -> object_counts (for tied candidates) -> maximum_object_count -> select_output (candidate with max objects)
properties:
  - white_color (0): Ignored during pixel and object analysis.
  - non_white_colors: Colors considered for frequency/object counting and output selection (values 1-9).
  - minimum_pixel_frequency: The lowest pixel count observed among non-white colors.
  - maximum_object_count: The highest object count used as a tie-breaker among colors with minimum pixel frequency.
  - connectivity: Horizontal and vertical adjacency defines objects; diagonal adjacency does not.