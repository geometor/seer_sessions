Input Grid:
  - object: grid
  - properties:
      - height: H
      - width: W
      - pixels: Located at (r, c), have a color C (0=white, 1-9 non-white)

Output Grid:
  - object: grid
  - properties:
      - height: 2H
      - width: 2W
      - pixels: Colors derived from input grid based on 2x2 blocks

Transformation Rules:
  - rule: Scaling
    - relationship: Each input pixel (r, c) maps to a 2x2 output block starting at (2*r, 2*c).
  - rule: Pattern Replacement based on Input Color
    - input_pixel: color C at (r, c)
    - output_block: 2x2 block starting at (2*r, 2*c)
    - condition: If C is non-white (C > 0)
      - action: Fill output_block with color C. -> [[C, C], [C, C]]
    - condition: If C is white (C == 0)
      - sub_condition: Check unknown property P(r, c) related to the input pixel's context (neighbourhood, position, etc.).
        - if P(r, c) is True: Set output_block to [[blue(1), white(0)], [white(0), blue(1)]].
        - if P(r, c) is False: Set output_block to [[white(0), white(0)], [white(0), white(0)]].
      - observation: The property P(r,c) is not simply whether all cardinal neighbours are white, nor whether any Moore neighbour is non-white. P(r,c) is true for some white pixels completely surrounded by white (e.g., Ex2 (3,3)), and false for others (e.g., Ex2 (2,3)).
