task_type: grid_transformation
input_data:
  type: 2D_grid
  cell_type: integer_digit
output_data:
  type: 2D_grid
  cell_type: integer_digit
  relationship_to_input: same_dimensions
transformation_logic:
  primary_discriminator: presence_of_6
  secondary_discriminator: value_at_input[0][0] # Used if 6 is not present
  types:
    - id: Type 1 # Triggered if no 6 and input[0][0] == 2
      description: Applies top-right frame, modifies row 8, sets one specific cell.
      actions:
        - action: copy_input_to_output
        - action: frame_boundary
          properties:
            corner_location: [0, last_col]
            corner_value: 0
            edge_1: top # row 0
            edge_1_fill_value: 1
            edge_1_range: [0, last_col - 1]
            edge_2: right # col last_col
            edge_2_fill_value: 8
            edge_2_range: [1, last_row]
        - action: modify_row_pattern
          properties:
            target_row_index: 8
            start_column_index: 4
            condition: column_index_is_even
            value_from: 2
            value_to: 8
        - action: modify_specific_cell
          properties:
            location: [1, 10]
            value_to: 1
    - id: Type 2 # Triggered if no 6 and input[0][0] != 2
      description: Applies top-left frame, sets two specific cells.
      actions:
        - action: copy_input_to_output
        - action: frame_boundary
          properties:
            corner_location: [0, 0]
            corner_value: 0
            edge_1: top # row 0
            edge_1_fill_value: 3
            edge_1_range: [1, last_col]
            edge_2: left # col 0
            edge_2_fill_value: 2
            edge_2_range: [1, last_row]
        - action: modify_specific_cell
          properties:
            location: [1, 9]
            value_to: 3
        - action: modify_specific_cell
          properties:
            location: [5, 1]
            value_to: 2
    - id: Type 3 # Triggered if 6 is present in input
      description: Overwrites last row, applies column pattern based on 6 location.
      actions:
        - action: copy_input_to_output
        - action: find_first_occurrence
          properties:
            value_to_find: 6
            result_storage: [six_r, six_c]
        - action: overwrite_edge
          properties:
            edge: last_row
            fill_value: 6
        - action: modify_column_pattern
          properties:
            target_column_index: six_c
            start_row_index: six_r + 2
            condition: row_index_is_processed # i.e., process rows six_r+2, six_r+4, ...
            step: 2
            value_from: 3
            value_to: 6
