task_description: Fill a rectangular area between two anchor points derived from input shapes.

elements:
  - object: grid
    properties:
      - type: 2D array
      - dimensions: 15x15 (constant across examples)
      - value_type: integer
      - colors:
          - 0: black (background)
          - 2: blue (shape component)
          - 5: green (shape component)
          - 4: red (fill color, output only)

  - object: blue_shape
    properties:
      - count: 2 per input grid
      - composition: primarily color 2 (blue)
      - structure: forms a boundary (approx 3x3)
      - contains:
          - one pixel of color 5 (green)
          - one pixel of color 0 (black) within its minimal bounding box
    derived_properties:
      - anchor_point: the coordinates of the single black (0) pixel within the shape's bounding box.

  - object: red_fill
    properties:
      - color: 4 (red)
      - presence: only in output grid
      - shape: rectangle
      - location: defined by the anchor points of the two blue_shapes

relationships:
  - relation: defines
    subject: anchor_point (of blue_shape 1)
    object: corner_1 (of red_fill rectangle)
  - relation: defines
    subject: anchor_point (of blue_shape 2)
    object: corner_2 (of red_fill rectangle)
  - relation: transformation
    input_pixels: black (0) within the red_fill rectangle boundary
    output_pixels: red (4)
  - relation: preservation
    input_pixels: blue (2) or green (5) within the red_fill rectangle boundary
    output_pixels: same as input (blue or green)
  - relation: preservation
    input_pixels: all pixels outside the red_fill rectangle boundary
    output_pixels: same as input

actions:
  - action: identify_shapes
    input: input grid
    output: two blue_shape objects
  - action: find_anchor_points
    input: two blue_shape objects, input grid
    output: coordinates P1=(r1, c1), P2=(r2, c2)
  - action: determine_bounding_box
    input: P1, P2
    output: min_row, max_row, min_col, max_col
  - action: fill_rectangle
    input: input grid, bounding_box
    output: output grid (with red fill applied)