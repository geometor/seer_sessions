task_type: grid_transformation
grid_elements:
  - type: integer
    value_range: 0-9 (based on examples)
    role: background (0), object_color (non-zero)
objects:
  - id: cell
    properties:
      - value: integer
      - row_index: integer
      - column_index: integer
      - neighbors: list of adjacent cells (orthogonal)
relationships:
  - type: adjacency
    between: [cell, cell]
    definition: Two cells are adjacent if they share an edge (orthogonally: up, down, left, right).
actions:
  - name: evaluate_cell
    input: cell (from input grid)
    condition: cell.value != 0
    sub_actions:
      - name: check_neighbors
        input: cell, input_grid
        output: keep_flag (boolean)
        logic: |
          Iterate through orthogonal neighbors.
          If any neighbor exists and has a value `v` such that `v != 0` and `v != cell.value`,
          set `keep_flag = False` and stop checking neighbors.
          Otherwise, `keep_flag = True`.
      - name: update_output_cell
        input: cell, keep_flag
        target: corresponding cell in output grid
        logic: |
          If `keep_flag` is False, set output cell value to 0.
          Otherwise, set output cell value to input cell value.
  - name: copy_zero_cell
    input: cell (from input grid)
    condition: cell.value == 0
    target: corresponding cell in output grid
    logic: Set output cell value to 0.
transformation_goal: Create an output grid where non-zero cells from the input are set to 0 if they have any orthogonal neighbor with a different non-zero value.