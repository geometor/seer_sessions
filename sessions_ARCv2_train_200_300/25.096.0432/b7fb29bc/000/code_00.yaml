objects:
  - name: grid
    type: 2D array of integers
    properties:
      - dimensions: 15x15
      - cell_values: [0, 2, 3, 4] (0, 3 in input; 0, 2, 3, 4 in output)
  - name: frame
    type: structure within the grid
    properties:
      - composed_of: cells with value 3
      - shape: rectangular
      - function: defines a boundary
  - name: internal_area
    type: region within the grid
    properties:
      - location: enclosed by the frame
      - initial_content: cells with value 0 and potentially isolated cells with value 3
      - final_content: cells with values 2, 3, 4
  - name: obstacles
    type: cells within the internal_area
    properties:
      - value: 3 (in both input and output)
      - location: isolated within the internal_area in the input
  - name: fill_cells
    type: cells within the internal_area
    properties:
      - initial_value: 0
      - final_value: 2 or 4

relationships:
  - type: adjacency
    between: grid cells
    definition: Cells sharing a horizontal or vertical edge.
  - type: containment
    subject: internal_area
    object: frame
    definition: The internal_area is spatially located inside the boundary defined by the frame.

actions:
  - name: identify_frame
    input: input_grid
    output: set of coordinates for frame cells (value 3)
  - name: identify_internal_area
    input: input_grid, frame coordinates
    output: set of coordinates for internal cells (initially 0 or 3)
  - name: identify_obstacles
    input: internal_area coordinates, input_grid
    output: set of coordinates for internal obstacle cells (value 3)
  - name: conditional_fill
    input: input_grid, internal_area coordinates, obstacle coordinates, frame coordinates
    output: output_grid
    logic:
      - Iterate through each cell (r, c) in the internal_area.
      - If input_grid[r][c] is 0:
        - Check its neighbors (up, down, left, right).
        - If any neighbor has value 3 (either part of the frame or an obstacle):
          - Set output_grid[r][c] to 4.
        - Else:
          - Set output_grid[r][c] to 2.
      - If input_grid[r][c] is 3 (an obstacle):
        - Set output_grid[r][c] to 3.
      - Copy all other cells (frame and outside area) from input_grid to output_grid.
