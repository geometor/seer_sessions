Task: Grid Transformation based on Segmented Digit Recognition

Input:
  Type: 2D Grid (List of Lists of Integers)
  Properties:
    - Contains blocks of non-zero numbers separated by zero-padding.
    - Non-zero blocks often contain a dominant number ('drawing_color') forming a pattern ('digit_shape').
    - Some blocks may contain other non-zero numbers ('markers') replacing the 'drawing_color' at certain positions.
  Objects:
    - grid: The entire input data structure.
    - block: A rectangular subgrid containing a non-zero pattern, bounded by zeros.
    - drawing_color: The most frequent non-zero integer within a block (e.g., 2 in train_1, 1 in train_2).
    - digit_shape: The visual pattern formed by the 'drawing_color' within a block, interpretable as a digit (1-8).
    - marker: A non-zero integer within a block that is different from the 'drawing_color'.

Output:
  Type: 2D Grid (List of Lists of Integers)
  Properties:
    - Smaller dimensions than the input grid.
    - Retains the relative block structure.
    - Each block from the input is represented by a solid-colored rectangular subgrid ('fill_color').
    - Separator rows/columns between blocks are filled with a specific 'separator_color'.
  Objects:
    - grid: The entire output data structure.
    - subgrid: A rectangular area in the output corresponding to an input block.
    - fill_color: The single integer value used to fill an output subgrid.
    - separator_color: The integer value used to fill the rows/columns separating the subgrids.

Relationships & Actions:
  - Segmentation: Input grid is segmented into 'blocks' based on zero padding.
  - Identification: For each 'block':
      - Identify 'drawing_color'.
      - Identify visual 'digit_shape'.
      - Identify any 'marker'(s).
  - Color Determination:
      - Determine 'fill_color' for each block:
          - If one or more 'marker' exists AND the value of any 'marker' equals the 'digit_shape' value, 'fill_color' = 'digit_shape' value.
          - Otherwise (no markers OR no marker matches the shape value), 'fill_color' = 'digit_shape' value.
      - Determine 'separator_color': Seems to be the 'drawing_color' of the first (top-left) block in the input (e.g., 2 for train_1, 1 for train_2).
  - Construction: Build the output grid by:
      - Calculating the dimensions of output 'subgrids' (removing input zero padding).
      - Filling each 'subgrid' with its determined 'fill_color'.
      - Filling the separator rows/columns with the 'separator_color'.
