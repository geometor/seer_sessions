- item: Input Grid
  properties:
    - type: 2D array of integers
    - structure: Contains four main quadrants separated by bands of zeros.
    - elements: Integers, including zero and other non-zero values.
    - zero_bands:
        - horizontal: One or more contiguous rows containing only zeros.
        - vertical: One or more contiguous columns containing only zeros.
        - function: Separate the grid into four quadrants.

- item: Quadrants
  properties:
    - count: 4 (Top-Left, Top-Right, Bottom-Left, Bottom-Right)
    - definition: Regions of the grid defined by the boundaries of the zero bands.
    - content: Subsets of the input grid's numbers.

- item: Output Grid
  properties:
    - type: 2D array of integers
    - relationship_to_input: Is an exact copy of one of the four quadrants from the input grid.

- item: Transformation Rule
  properties:
    - goal: Select one quadrant from the input grid.
    - steps:
        1.  Identify the largest contiguous block of all-zero rows (horizontal band). Record start row index `hr_start` and end row index `hr_end`.
        2.  Identify the largest contiguous block of all-zero columns (vertical band). Record start column index `vc_start` and end column index `vc_end`.
        3.  Define the four quadrants based on these indices:
            - TL: `input[0:hr_start, 0:vc_start]`
            - TR: `input[0:hr_start, vc_end+1:]`
            - BL: `input[hr_end+1:, 0:vc_start]`
            - BR: `input[hr_end+1:, vc_end+1:]`
        4.  Determine the set of unique non-zero numbers present in each quadrant.
        5.  Identify which non-zero numbers appear in *only one* of the four quadrants.
        6.  If such unique numbers exist:
            - Find the maximum value among these uniquely located numbers.
            - Select the quadrant containing this maximum unique value.
        7.  If no number is unique to a single quadrant:
            - Find the overall maximum non-zero value (`M`) present anywhere in the input grid.
            - Identify all quadrants that contain this value `M`.
            - Apply a tie-breaker based on quadrant position: Bottom-Right > Bottom-Left > Top-Right > Top-Left.
            - Select the highest-priority quadrant among those containing `M`.
    - output: The selected quadrant.
