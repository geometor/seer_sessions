Grid:
  Properties:
    - dimensions: 11x11
    - cell_values: digits 0-9
  Structure:
    - divider_rows: [3, 7] # 0-indexed
      value: 5
    - divider_cols: [3, 7] # 0-indexed
      value: 5
    - sections: 9 distinct 3x3 blocks defined by dividers
      indices: # row-major, 0-indexed
        - 0 (Top-Left)
        - 1 (Top-Mid)
        - 2 (Top-Right)
        - 3 (Mid-Left)
        - 4 (Mid-Mid)
        - 5 (Mid-Right)
        - 6 (Bottom-Left)
        - 7 (Bottom-Mid)
        - 8 (Bottom-Right)

Input_Grid (grid_I):
  Properties:
    - inherits: Grid.Properties
    - non_divider_sum: A calculated integer sum of all cell values excluding those in divider rows/columns.

Output_Grid (grid_O):
  Properties:
    - inherits: Grid.Properties
  Content:
    - divider rows/columns have value 5.
    - exactly one 3x3 section contains non-zero values copied from grid_I.
    - all other 3x3 sections contain only zeros.

Transformation:
  Action: Copy_Section
  Input: grid_I
  Output: grid_O
  Rule:
    1. Calculate `non_divider_sum` for grid_I.
    2. Determine `source_section_index` (from grid_I) and `target_section_index` (for grid_O) based on `non_divider_sum`:
       - if sum == 167: source=8, target=3
       - if sum == 108: source=7, target=5
       - if sum == 91: source=7, target=1
       - if sum == 166: source=6, target=2
       - else: (undefined for other sums)
    3. Initialize grid_O as an 11x11 grid of zeros.
    4. Copy divider rows (3, 7) and columns (3, 7) with value 5 into grid_O.
    5. Copy the 3x3 block of values from `grid_I` at `source_section_index` coordinates to `grid_O` at `target_section_index` coordinates.