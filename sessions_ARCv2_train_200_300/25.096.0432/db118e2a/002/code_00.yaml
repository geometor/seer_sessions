task_elements:
  - object: input_grid
    properties:
      - type: 2D array of integers
      - dimensions: variable (H rows, W columns)
  - object: output_grid
    properties:
      - type: 2D array of integers
      - dimensions: fixed (15 rows, 15 columns)
      - background_color: 7
      - initial_state: filled with background_color
  - object: copy_1
    properties:
      - source: input_grid
      - placement_offset: (row=2, column=3) # 0-based index
  - object: copy_2
    properties:
      - source: input_grid
      - placement_offset: (row=8, column=9) # 0-based index
actions:
  - name: initialize_output
    actor: system
    target: output_grid
    details: Create a 15x15 grid filled entirely with the background_color (7).
  - name: place_copy_1
    actor: system
    source: input_grid
    target: output_grid
    details: Copy the input_grid onto the output_grid starting at copy_1's placement_offset. Clip the copy operation at the output_grid boundaries. Overwrites initial background values.
  - name: place_copy_2_conditionally
    actor: system
    source: input_grid
    target: output_grid
    details: Iterate through each pixel input[r][c] of the input_grid. Calculate the target position output[R][C] using copy_2's placement_offset (R=8+r, C=9+c). If the target position [R][C] is within the output_grid bounds AND the value input[r][c] is NOT equal to the background_color (7), then update output[R][C] with the value input[r][c]. Otherwise, leave output[R][C] unchanged.
relationships:
  - type: composition
    from: input_grid
    to: output_grid
    details: The output grid is composed by sequentially applying place_copy_1 and place_copy_2_conditionally onto the initialized output grid.
  - type: precedence_conditional_overwrite
    between: [place_copy_1, place_copy_2_conditionally]
    details: The second copy operation happens after the first. It only overwrites values (from the background or the first copy) if the corresponding source pixel in the input grid is not the background color (7).