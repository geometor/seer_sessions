task_type: grid_transformation
input_elements:
  - type: grid
    dtype: integer
    colors: [0, 2, 3]
output_elements:
  - type: grid
    dtype: integer
    colors: [0, 1, 2, 3]
objects:
  - id: background
    value: 0
    role: fillable_space, boundary_connected_space
  - id: boundary
    value: 2
    role: immutable_structure, fill_barrier
  - id: pattern
    value: 3
    role: immutable_structure
  - id: filled_space
    value: 1
    role: output_only, indicates_enclosed_background
relationships:
  - type: spatial_connectivity
    from: background (0)
    to: background (0)
    description: Background cells can be adjacent horizontally or vertically.
  - type: blocking
    blocker: boundary (2)
    blocked: spatial_connectivity between background (0) cells
  - type: adjacency
    element1: pattern (3)
    element2: boundary (2)
    description: Patterns (3) are often adjacent to boundaries (2).
actions:
  - action: identify_border_connected_zeros
    description: Find all background (0) cells that can reach the grid edge by moving only through other background (0) cells.
    constraints: Movement is blocked by boundary (2) cells.
  - action: replace_unconnected_zeros
    target: background (0) cells not identified in the previous step
    result: change cell value to filled_space (1)
  - action: preserve_cells
    target: boundary (2) cells, pattern (3) cells, border_connected_zeros
    result: cell value remains unchanged in the output
