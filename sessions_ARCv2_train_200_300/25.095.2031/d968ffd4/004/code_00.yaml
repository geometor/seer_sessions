task_description: Fill the background area between two distinct objects based on proximity, respecting a central line for odd gaps.

grid_properties:
  - type: 2D list of integers
  - background_color: Most frequent integer in the grid. Remains mostly unchanged.
  - contains_objects: Exactly two distinct, connected regions (objects) with colors different from the background.

object_properties:
  - count: 2
  - color: Unique integer value per object, different from background.
  - shape: Appears rectangular in examples, but connectedness is key.
  - separation: Separated strictly horizontally or strictly vertically by at least one row/column of background color.

transformation:
  - name: Gap Filling
  - inputs: Input grid, identified objects, background color.
  - actions:
      1. Determine the axis of separation (horizontal or vertical).
      2. Identify the range of rows/columns forming the gap between the objects along the separation axis.
      3. Identify the range of rows/columns where the objects overlap along the non-separation axis.
      4. Define the fill region: The intersection of the gap range (on the separation axis) and the *expanded* overlap range (on the non-separation axis, expanded by 1 cell outwards, clamped to grid boundaries).
      5. Calculate the size of the gap along the separation axis.
      6. **If gap size is even:**
         - Calculate the midpoint boundary within the gap range.
         - For each background cell within the fill region:
           - Fill with the color of the object on the 'first half' side of the midpoint boundary.
           - Fill with the color of the object on the 'second half' side of the midpoint boundary.
      7. **If gap size is odd:**
         - Calculate the index of the exact middle row/column within the gap range.
         - For each background cell within the fill region:
           - If the cell is *not* in the middle row/column:
             - Fill with the color of the object closer to that cell along the separation axis.
           - If the cell *is* in the middle row/column:
             - Leave the cell unchanged (it retains the background color).
  - output: A new grid with the gap filled according to the rules. Original objects and non-fill-region background are preserved.