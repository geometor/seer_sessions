import copy

"""
The transformation takes a 4x9 input grid and produces a 4x4 output grid.
The input grid can be viewed as two 4x4 grids separated by a column of 5s.
Let the first 4x4 subgrid (columns 0-3) be LeftGrid and the second 4x4 subgrid (columns 5-8) be RightGrid.
The output grid is generated by combining LeftGrid and RightGrid.
For each cell (row r, column c) in the output grid:
- If the value in RightGrid at (r, c) is non-zero, use this value for the output cell (r, c).
- Otherwise (if the value in RightGrid at (r, c) is zero), use the value from LeftGrid at (r, c) for the output cell (r, c).
"""

def transform(input_grid: list[list[int]]) -> list[list[int]]:
    """
    Transforms the input 4x9 grid into a 4x4 output grid based on the rule:
    output[r][c] = RightGrid[r][c] if RightGrid[r][c] != 0 else LeftGrid[r][c].

    Args:
        input_grid: A list of lists representing the 4x9 input grid.

    Returns:
        A list of lists representing the 4x4 output grid.
    """

    # Determine grid dimensions
    rows = len(input_grid)
    if rows == 0:
        return []
    cols = len(input_grid[0])
    output_rows = 4
    output_cols = 4

    # Initialize the output grid (can start with LeftGrid)
    output_grid = [[0 for _ in range(output_cols)] for _ in range(output_rows)]

    # Iterate through the dimensions of the output grid (4x4)
    for r in range(output_rows):
        for c in range(output_cols):
            # Get the value from the corresponding position in the LeftGrid (columns 0-3)
            left_val = input_grid[r][c]

            # Get the value from the corresponding position in the RightGrid (columns 5-8)
            # Adjust column index for RightGrid (add 5)
            right_val_col_index = c + 5
            right_val = input_grid[r][right_val_col_index]

            # Apply the transformation rule
            if right_val != 0:
                # If the RightGrid value is non-zero, use it for the output
                output_grid[r][c] = right_val
            else:
                # Otherwise, use the LeftGrid value
                output_grid[r][c] = left_val

    return output_grid