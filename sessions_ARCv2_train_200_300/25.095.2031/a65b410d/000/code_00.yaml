task_elements:
  - object: Grid
    properties:
      - type: 2D array
      - cell_values: [0, 1, 2, 3] # 0=background, 1=fill_below, 2=segment, 3=fill_above
      - dimensions: variable (rows x columns)
  - object: Segment
    properties:
      - value: 2
      - orientation: horizontal
      - uniqueness: single instance per input grid
      - location: defined by row_index, start_column, end_column
      - derived_property: length (end_column - start_column + 1)
    relationships:
      - located_within: Grid
      - determines: placement and shape of FilledArea objects
  - object: FilledArea
    properties:
      - value: 1 (below segment) or 3 (above segment)
      - shape: roughly triangular, left-aligned
      - location: relative to Segment (above or below)
      - size: depends on Segment length and distance from Segment
    relationships:
      - generated_by: transformation rule based on Segment
      - located_within: Grid
actions:
  - name: LocateSegment
    description: Find the row index (r), start column (c_start), and end column (c_end) of the horizontal segment of 2s. Calculate its length (L).
  - name: FillBelow
    description: Starting from the row below the segment (r+1), fill cells with 1s. The number of 1s in row `r+k` (where k >= 1) is `L-k`, starting from column `c_start`. Stop when the number of 1s is zero or less, or grid boundary is reached.
  - name: FillAbove
    description: Starting from the row above the segment (r-1), fill cells with 3s. The number of 3s in row `r-k` (where k >= 1) is `L+k`, starting from column `c_start`. Stop when the row index is less than 0, or grid boundary is reached.
  - name: PreserveSegment
    description: The original segment of 2s remains unchanged in the output grid.
  - name: InitializeOutput
    description: Create an output grid of the same dimensions as the input, initially filled with 0s or copied from input. (Copying seems more direct).
