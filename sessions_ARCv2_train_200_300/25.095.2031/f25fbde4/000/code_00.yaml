task_description: Scale a shape defined by non-zero elements within a grid and crop the output to the scaled shape's bounding box.
elements:
  - element: grid
    properties:
      - type: 2D array
      - content: integers (0 and 4)
      - role: input and output container
  - element: shape
    properties:
      - composed_of: cells with value 4 in the input grid
      - connectivity: typically connected, but not necessarily
      - location: variable within the input grid
  - element: background
    properties:
      - value: 0
      - fills: space not occupied by the shape
actions:
  - action: identify_shape
    input: input grid
    output: coordinates of all cells with value 4
  - action: calculate_bounding_box
    input: coordinates of shape cells
    output: top-left corner (min_row, min_col), height, width
  - action: scale_shape
    input: shape cells relative to bounding box top-left
    parameters:
      - scale_factor: 2
    output: coordinates of 2x2 blocks in the output grid
  - action: create_output_grid
    parameters:
      - dimensions: (bounding_box_height * 2, bounding_box_width * 2)
      - initial_value: 0
    output: initialized output grid
  - action: place_scaled_shape
    input:
      - output grid
      - scaled shape coordinates (as 2x2 blocks)
      - value: 4
    output: output grid with the scaled shape placed
relationships:
  - relation: scaling
    subject: input shape cell (value 4)
    object: 2x2 block of cells (value 4) in the output grid
    details: Each input '4' maps to a 2x2 block of '4's.
  - relation: bounding
    subject: output grid dimensions
    object: scaled shape
    details: Output grid dimensions are determined by twice the height and width of the input shape's bounding box.
  - relation: positioning
    subject: scaled shape in the output grid
    object: input shape within its bounding box
    details: The relative position of a '4' within the input bounding box determines the position of its corresponding 2x2 block in the output grid. (Relative row `r_rel`, relative col `c_rel`) maps to output top-left block position (`r_rel * 2`, `c_rel * 2`).