objects:
  - input_grid:
      type: grid (matrix)
      properties:
        dimensions: Variable (e.g., 8x8 in examples)
        cells: Contain integer digits (0-9)
  - output_grid:
      type: grid (matrix)
      properties:
        dimensions: Same as input_grid
        cells: Contain integer digits (0-9)
  - substitution_map:
      type: mapping (dictionary-like)
      properties:
        keys: Input digit values present in a specific input_grid
        values: Corresponding output digit values
        constraints:
          - Derived uniquely for each input/output grid pair.
          - Consistent within a single pair (one input digit maps to only one output digit).
          - Always includes {4: 4, 7: 7} if 4 and 7 are present in the input.
          - Other mappings form pairs (swaps) or cycles specific to the example pair.

actions:
  - derive_map:
      actor: system
      input: input_grid, output_grid
      output: substitution_map
      description: Compare input_grid and output_grid cell-by-cell to determine the unique mapping from each input digit to its corresponding output digit for this specific example pair.
  - apply_substitution:
      actor: system
      input: input_grid, substitution_map
      output: transformed_grid
      description: Create a new grid with the same dimensions as input_grid. Iterate through each cell of the input_grid, find the corresponding output value using the provided substitution_map, and place it in the corresponding cell of the new grid.

relationships:
  - cell_wise_transformation: The value of each cell in the output_grid is determined exclusively by the value of the corresponding cell in the input_grid according to the derived substitution_map.
  - example_specific_rule: The substitution_map is defined by the relationship between a *given* input_grid and its *corresponding* output_grid. It is not a fixed global rule but one determined per example.