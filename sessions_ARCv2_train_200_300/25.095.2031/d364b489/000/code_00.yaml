task_elements:
  - object: grid
    properties:
      - type: 2D array
      - dimensions: 10x10
      - cell_type: integer
  - object: input_grid
    inherits: grid
    properties:
      - cell_values: [0, 1]
      - role: source_data
  - object: output_grid
    inherits: grid
    properties:
      - cell_values: [0, 1, 2, 6, 7, 8]
      - role: transformed_data
  - object: pattern_seed
    properties:
      - location: cell in input_grid
      - condition: value == 1
  - object: output_pattern
    properties:
      - shape: cross/plus
      - center_value: 1 (at seed location)
      - top_value: 2 (relative position [r-1, c])
      - bottom_value: 8 (relative position [r+1, c])
      - left_value: 7 (relative position [r, c-1])
      - right_value: 6 (relative position [r, c+1])
      - constraints: pattern elements must be within grid boundaries
actions:
  - name: generate_output
    steps:
      - initialize output_grid with all zeros
      - iterate through each cell (r, c) of input_grid
      - if input_grid[r][c] is a pattern_seed (value == 1):
          - apply output_pattern centered at (r, c) onto output_grid
          - overwrite existing values in output_grid if overlap occurs
relationships:
  - type: mapping
    from: input_grid cell with value 1 at (r, c)
    to: output_pattern centered at (r, c) in output_grid
  - type: relative_position
    defines: values (2, 8, 7, 6) in output_pattern based on offset from center (1)