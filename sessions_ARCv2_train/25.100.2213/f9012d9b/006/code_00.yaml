task_elements:
  - object: input_grid
    properties:
      - type: 2D array of integers
      - dimensions: variable (Rows x Columns)
      - values: non-negative integers, including 0
  - object: output_pattern
    properties:
      - type: 2D array of integers (subgrid)
      - dimensions: 1x1 or 2x2
      - source: extracted from input_grid based on frequency rules and grid size
      - constraint: consists of non-zero numbers from the input
  - object: subgrid_pattern
    properties:
      - type: 2D array (1x1 number or 2x2 grid)
      - constraint: must contain only non-zero numbers to be considered in frequency analysis (for 2x2) or value analysis (for 1x1)
      - attributes:
          - value: the number itself (for 1x1) or tuple representation (for 2x2)
          - frequency: count of occurrences in the input grid
          - occurrences: list of top-left coordinates (row, col) of each occurrence, sorted primarily by row, secondarily by column.
          - first_occurrence: the coordinate pair at index 0 of the sorted 'occurrences' list.
          - last_occurrence: the coordinate pair at the last index of the sorted 'occurrences' list.
actions:
  - action: check_grid_size
    description: Determine if grid dimensions (Rows x Columns) are both <= 4 or if either is > 4.
  - action: find_1x1_patterns
    description: Identify unique non-zero numbers, count their frequencies.
  - action: find_2x2_patterns
    description: Identify unique 2x2 subgrids containing only non-zero numbers, count their frequencies, and record all occurrence coordinates (sorted).
  - action: filter_patterns_by_frequency
    description: Create subsets of 2x2 patterns based on frequency (e.g., frequency = 1, frequency > 1).
  - action: find_min_frequency
    description: Find the minimum frequency within a specified set of patterns (e.g., all 1x1, or 2x2 with F>1).
  - action: select_candidate_patterns
    description: Identify all patterns matching a target frequency criterion.
  - action: apply_tie_breaking
    description: Resolve cases where multiple patterns are candidates after frequency selection, using specific rules based on context.
    rules:
      - rule: tie_break_1x1
        context: Grid <= 4x4, multiple 1x1 patterns share the minimum frequency.
        logic: Select the pattern (number) with the largest numerical value.
      - rule: tie_break_2x2_f_eq_1
        context: Grid > 4x4, all identified non-zero 2x2 patterns have frequency = 1.
        logic: Select the pattern whose single occurrence ('first_occurrence' and 'last_occurrence' are identical) has the maximum row index, breaking ties with the maximum column index.
      - rule: tie_break_2x2_f_gt_1
        context: Grid > 4x4, patterns with frequency > 1 exist, and multiple patterns share the minimum frequency *among those with F>1*.
        logic: Select the pattern whose 'first_occurrence' coordinate has the maximum row index, breaking ties with the minimum column index.
relationships:
  - relationship: size_determines_primary_logic
    description: Grid size (<=4x4 vs >4x4) dictates whether the core analysis focuses on 1x1 or 2x2 patterns.
  - relationship: frequency_filters_candidates
    description: Frequency analysis identifies the pool of potential output patterns based on specific criteria (min freq for 1x1; existence and frequency values for 2x2).
  - relationship: tie_breaking_selects_final
    description: Context-dependent tie-breaking rules resolve ambiguity when multiple patterns meet the frequency criteria, ensuring a single deterministic output.