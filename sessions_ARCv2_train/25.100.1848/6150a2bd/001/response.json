{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "```python\nimport numpy as np\n\ndef transform(input_grid: list[list[int]]) -> list[list[int]]:\n    \"\"\"\n    Transforms the input grid by rotating it 180 degrees.\n\n    Each element at position [row][col] in the input grid is moved to\n    position [N - 1 - row][M - 1 - col] in the output grid, where N is the\n    total number of rows and M is the total number of columns.\n    \"\"\"\n\n    # Convert input list of lists to a numpy array for easier manipulation\n    input_array = np.array(input_grid, dtype=int)\n\n    # Get the dimensions (number of rows N, number of columns M)\n    n_rows, n_cols = input_array.shape\n\n    # Initialize the output grid with zeros, same dimensions as input\n    output_array = np.zeros_like(input_array)\n\n    # Iterate through each element of the input grid\n    for r in range(n_rows):\n        for c in range(n_cols):\n            # Calculate the target position in the output grid for 180-degree rotation\n            target_row = n_rows - 1 - r\n            target_col = n_cols - 1 - c\n\n            # Assign the value from the input grid to the target position in the output grid\n            output_array[target_row, target_col] = input_array[r, c]\n\n    # Convert the output numpy array back to a list of lists\n    output_grid = output_array.tolist()\n\n    return output_grid\n\n```"
          }
        ],
        "role": "model"
      },
      "finish_reason": 1,
      "index": 0,
      "safety_ratings": [],
      "token_count": 0,
      "grounding_attributions": [],
      "avg_logprobs": 0.0
    }
  ],
  "usage_metadata": {
    "prompt_token_count": 1091,
    "candidates_token_count": 623,
    "total_token_count": 1714,
    "cached_content_token_count": 0
  },
  "model_version": "gemini-2.5-pro-preview-03-25",
  "response_time": 4.825019,
  "retries": 1
}