task_elements:
  - object: grid
    properties:
      - type: 2D array # Assumed list of lists based on Python type hints
      - dimensions: variable (e.g., 3x3 in examples)
      - cell_type: integer
      - background_value: 0
  - object: cell
    properties:
      - value: integer
      - state:
          - zero (background/empty)
          - non-zero (content/value to propagate)
actions:
  - action: copy_grid
    description: Create an initial output grid identical to the input grid.
  - action: process_columns
    description: Apply transformation logic independently to each column.
    sub_actions:
      - scan_column_downwards: Iterate through rows from top to bottom within a column.
      - track_last_non_zero: Maintain the most recent non-zero value encountered *above* the current cell in the column scan.
      - fill_zero: If the current input cell is zero and a non-zero value was tracked, update the corresponding output cell with the tracked value.
relationships:
  - relationship: vertical_dependency
    description: The value of a zero cell in the output depends on the first non-zero cell found above it in the same column of the *input* grid.
  - relationship: value_preservation
    description: Non-zero cells from the input grid retain their value and position in the output grid.
constraints:
  - Propagation is strictly downwards within a column.
  - Only the *first* encountered non-zero value from above influences subsequent zeros below it in that column until another non-zero value is encountered.
  - The transformation uses the state of the *input* grid to determine the output values; changes are not cascading within the output grid during the process.