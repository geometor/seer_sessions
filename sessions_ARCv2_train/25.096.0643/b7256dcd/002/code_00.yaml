elements:
  - element: Grid
    properties:
      - rows: integer
      - columns: integer
      - cells: list of list of integers
  - element: Cell
    properties:
      - value: integer (0-9)
      - row_index: integer
      - column_index: integer
      - is_background: boolean (true if value is 7)
  - element: Component
    properties:
      - cells: list of Cell objects (represented by their coordinates)
      - value: integer (the common value of cells in the component, must not be 7)
      - size: integer (number of cells in the component)
      - connectivity: 4-directional (horizontal and vertical adjacency)

actions:
  - action: Identify Components
    description: Scan the input grid using BFS or DFS to find connected regions (components) of cells sharing the same non-7 value. Use 4-directional adjacency. Keep track of visited cells to process each component only once.
    inputs:
      - input_grid: Grid
    outputs:
      - components: list of Component objects (each containing list of cell coordinates, original value, size)

  - action: Determine New Value
    description: Calculate the new value for all cells within a component based on its original value and size according to specific transformation rules.
    inputs:
      - component: Component (value and size properties are used)
    outputs:
      - new_value: integer

  - action: Update Output Grid
    description: Modify the corresponding cells in the output grid with the calculated new value for a given component.
    inputs:
      - output_grid: Grid
      - component_cells: list of cell coordinates
      - new_value: integer
    outputs:
      - modified_output_grid: Grid

transformation_rules:
  - rule: Background Preservation
    condition: Cell value in the input grid is 7.
    action: Keep cell value as 7 in the output grid.
  - rule: Component Transformation (for non-7 values)
    condition: A connected component of non-7 values is identified.
    action: Determine the new value based on component value and size, then update all cells of the component in the output grid.
    sub_rules_for_new_value:
      - condition: Component value is NOT 6.
        sub_rules:
          - condition: Component size is 1.
            action: Set new_value to 7.
          - condition: Component size > 1.
            action: Set new_value to the original component value.
      - condition: Component value IS 6.
        sub_rules:
          - condition: Component size is 1.
            action: Set new_value to 6. # Default assumption
          - condition: Component size is 2.
            action: Set new_value to 3. # From train_1
          - condition: Component size is 3.
            action: Set new_value to 6. # Default assumption
          - condition: Component size is 4.
            action: Set new_value to 1. # From train_2 (Comp 2), contradicts train_2 (Comp 1) expected output
          - condition: Component size is 5.
            action: Set new_value to 4. # From train_1
          - condition: Component size > 5.
            action: Set new_value to 6. # Default assumption

relationships:
  - relationship: Adjacency
    description: Cells are adjacent if they share an edge (horizontally or vertically). Relevant for component identification.
  - relationship: Component Membership
    description: A cell belongs to a component if it shares the same non-7 value as other cells in the component and is connected to them through a path of adjacent cells with that same value.