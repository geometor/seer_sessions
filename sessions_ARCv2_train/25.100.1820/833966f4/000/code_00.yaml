Input:
  type: list
  elements:
    type: integer
    range: single digit (0-9)
Output:
  type: list
  elements:
    type: integer
    content: same elements as input, reordered
Transformation:
  action: pairwise swapping
  process:
    - Iterate through the input list taking elements two at a time (step of 2).
    - For each pair (element at index `i`, element at index `i+1`), swap their positions.
    - If the list has an odd number of elements, the last element remains in its final position without being swapped.
  Relationship: Output is a permutation of the input based on adjacent swaps.