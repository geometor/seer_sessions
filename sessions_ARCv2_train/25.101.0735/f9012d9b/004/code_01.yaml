Task: Identify and extract a specific pattern from an input grid.

Input:
  Type: Grid
  Properties:
    - Rectangular shape (Height H, Width W)
    - Elements are single digits (0-9)
    - Size varies.

Output:
  Type: Grid
  Properties:
    - Rectangular shape, smaller than or equal to input.
    - Elements are single digits.
    - Size is determined by rule: 1x1 or 2x2.

Relationships_and_Actions:
  - Rule_Case_1: # Applies if the main diagonal is monochromatic
      Condition: The main diagonal (elements grid[i][i]) is non-empty and all its elements are identical.
      Action: Output a 1x1 grid containing the single element value from the main diagonal.
  - Rule_Case_2: # Applies if the main diagonal is not monochromatic or the grid is too small for a diagonal
      Condition: The main diagonal contains different elements, is empty, or the grid cannot form a 2x2 subgrid.
      Action_Output_Size: The output grid will be 2x2 (unless the input is smaller than 2x2, in which case output is likely empty or undefined by examples).
      Action_Selection_Process:
        1. Identify all unique 2x2 subgrids within the input grid.
        2. For each unique 2x2 subgrid pattern, calculate:
            - `sum`: The sum of its four elements.
            - `frequency`: The total count of its occurrences in the input grid.
            - `last_position`: The (row, column) coordinates of the top-left corner of its *last* occurrence when scanning the input grid (row by row, then column by column).
        3. Determine `max_sum`: The highest sum found among all unique 2x2 subgrids.
        4. Filter to keep only the subgrids whose `sum` equals `max_sum`. Let this be the "Max Sum Set".
        5. Determine `min_freq`: The lowest frequency found among the subgrids in the "Max Sum Set".
        6. Filter the "Max Sum Set" to keep only the subgrids whose `frequency` equals `min_freq`. Let this be the "Candidate Set".
        7. If the "Candidate Set" contains only one subgrid, select that subgrid.
        8. If the "Candidate Set" contains multiple subgrids (tied on max sum and min frequency), select the subgrid whose `last_position` is the "latest" (highest row index, breaking ties with the highest column index).
        9. Output the selected 2x2 subgrid pattern.

Derived_Objects:
  - Main_Diagonal: Sequence of elements grid[i][i] for i from 0 to min(H, W) - 1.
  - Subgrid_2x2: A 2x2 section of the main grid, identified by its content (pattern).
  - Properties_of_Subgrid_2x2:
      - Sum: Sum of the 4 elements.
      - Frequency: Count of occurrences of the pattern.
      - First_Position: Coordinates (row, col) of the first occurrence.
      - Last_Position: Coordinates (row, col) of the last occurrence.