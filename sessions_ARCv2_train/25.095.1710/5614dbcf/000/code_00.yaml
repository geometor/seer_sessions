task_description: "Transform a 9x9 input grid into a 3x3 output grid by analyzing 3x3 subgrids."
grid_dimensions:
  input: "9x9"
  output: "3x3"
subgrid_dimensions: "3x3"
mapping: "Input subgrid at block-row 'R', block-column 'C' maps to output cell at row 'R', column 'C'."
objects:
  - name: input_grid
    type: grid (9x9)
    properties: contains digits 0-9
  - name: output_grid
    type: grid (3x3)
    properties: contains digits 0-9 derived from input
  - name: subgrid
    type: grid (3x3)
    properties: partition of input_grid
  - name: digit_5
    type: integer
    properties: acts as a potential zeroing signal
transformation_rule:
  - action: partition_input
    details: "Divide the 9x9 input grid into nine non-overlapping 3x3 subgrids."
  - action: process_subgrid
    details: "For each 3x3 subgrid, determine the corresponding output cell value."
    sub_steps:
      - find_frequencies: "Count the occurrences of each non-zero digit within the subgrid."
      - identify_most_frequent: "Find the non-zero digit with the highest frequency (if any)."
      - check_for_5: "Determine if the digit '5' is present in the subgrid and count its frequency."
      - determine_output_value:
          conditions:
            - if: "Digit '5' is present AND (no other non-zero digit exists OR '5' is the most frequent non-zero digit OR '5' frequency >= most frequent other non-zero digit frequency)"
              then: "Output cell value is 0."
            - if: "Digit '5' is present AND another non-zero digit is strictly more frequent than '5'"
              then: "Output cell value is the most frequent non-zero digit."
            - if: "Digit '5' is NOT present AND at least one non-zero digit exists"
              then: "Output cell value is the most frequent non-zero digit."
            - if: "Subgrid contains only zeros"
              then: "Output cell value is 0."
  - action: construct_output
    details: "Assemble the calculated values into the 3x3 output grid."
