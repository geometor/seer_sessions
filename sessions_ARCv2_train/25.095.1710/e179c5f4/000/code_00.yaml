Task: Grid Transformation based on a Bouncing Path

Input:
  Type: Grid (List of Lists)
  Properties:
    - Contains numerical values (0 and 1)
    - Variable dimensions (height x width)
    - Contains a single '1' object located at the bottom-left cell (index: [height-1, 0])
    - All other cells contain '0'

Output:
  Type: Grid (List of Lists)
  Properties:
    - Same dimensions as the input grid
    - Contains numerical values (1 and 8)

Transformation:
  Action: Generate output grid based on input grid properties.
  Rule:
    1. Initialize an output grid of the same dimensions as the input, filled with a default value ('8').
    2. Identify the starting position: bottom-left cell (row = height-1, col = 0).
    3. Define a path starting from this position.
    4. Path movement:
       - Initial direction: Up-Right (row decrement by 1, column increment by 1).
       - Boundary interaction:
         - If the next step hits or goes beyond the right boundary (column index >= width - 1), change direction to Up-Left (row decrement by 1, column decrement by 1).
         - If the next step hits or goes beyond the left boundary (column index <= 0), change direction to Up-Right (row decrement by 1, column increment by 1).
    5. Path tracing:
       - Mark the starting cell in the output grid with '1'.
       - Iteratively move along the path, updating the direction based on boundary reflections.
       - Mark each cell visited by the path in the output grid with '1'.
       - Stop when the path reaches the top row (row index = 0).
    6. Finalization: All cells in the output grid not marked '1' remain '8'.

Relationships:
  - Output grid dimensions depend on input grid dimensions.
  - The pattern of '1's in the output originates from the position of the '1' in the input.
  - The specific path of '1's depends on the grid width and the reflection logic at the boundaries.
  - The value '8' acts as a background or default fill for non-path cells.