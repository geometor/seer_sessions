Elements:
  - Grid:
      description: A 2D array of integers representing the input and output states.
      properties:
        - dimensions: [rows, columns] (variable)
        - cells: Contains integer values.
  - Cell:
      description: An individual unit within the grid.
      properties:
        - value: Integer.
        - position: [row, column].
        - type: 'background' (value 7) or 'active' (value != 7).
  - Connected Component:
      description: A maximal group of adjacent 'active' cells (using Von Neumann neighborhood). 'Background' cells act as boundaries.
      properties:
        - cells: A list of cell positions [(r1, c1), (r2, c2), ...] belonging to the component.
        - size: The number of cells in the component.
        - unique_values: The set of distinct integer values present in the component's cells based on the input grid.
        - min_value: The minimum integer value among the component's cells based on the input grid.

Transformation:
  description: Modifies the values of 'active' cells based on the properties of the Connected Component they belong to. Background cells are unchanged.
  process:
    - Identify all Connected Components of 'active' cells in the input grid.
    - For each component, determine which single rule applies based on its properties (size, unique_values).
    - Apply the transformation dictated by that rule to all cells within the component in the output grid.
  rules:
    - Rule_Size1:
        condition: component.size == 1
        action: All cells in the component change to 7.
    - Rule_Size4_Only6:
        condition: component.size == 4 AND component.unique_values == {6}
        action: All cells in the component remain 6.
    - Rule_Size5_Only6:
        condition: component.size == 5 AND component.unique_values == {6}
        action: All cells in the component change to 4.
    - Rule_General:
        condition: None of the above rules apply.
        action:
          - For each cell in the component:
            - If cell.value == component.min_value (in the input grid), change the cell to 7 in the output grid.
            - If cell.value != component.min_value (in the input grid), change the cell to component.min_value in the output grid.