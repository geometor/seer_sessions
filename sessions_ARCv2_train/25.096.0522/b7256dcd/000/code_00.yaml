task_type: grid_transformation
components:
  - object: grid
    properties:
      - type: 2D array of integers
      - preserves_dimensions: true
  - object: cell
    properties:
      - value: integer (representing color)
      - position: (row, column)
  - object: color
    properties:
      - role: background (color 7)
      - role: mutable (color 6)
      - role: source (colors 1, 3, 4)
actions:
  - action: identify_components
    target: color 6
    connectivity: 4-neighbor (horizontal/vertical)
    output: sets of coordinates for each connected component of 6s
  - action: find_neighbors
    target: component of 6s
    scope: adjacent cells (non-diagonal)
    filter: unique non-6, non-7 colors
    output: set of unique adjacent source colors
  - action: change_color
    target: cells in a component of 6s
    condition: based on adjacent source colors or global presence of color 4
    outcome: target cells adopt source color or default color (4) or remain unchanged
  - action: neutralize_source
    target: source color cells (1, 3, 4)
    condition:
      - if adjacent to a 6-component that changed color due to it
      - if not adjacent to any 6-component
    outcome: target cell value becomes 7
  - action: check_global_presence
    target: color 4
    scope: entire input grid
    output: boolean (true if color 4 exists anywhere, false otherwise)
relationships:
  - type: adjacency
    between: cells (horizontal/vertical)
  - type: membership
    between: cell (color 6) and connected component