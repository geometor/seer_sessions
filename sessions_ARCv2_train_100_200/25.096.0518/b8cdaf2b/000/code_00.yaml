task_description: Projecting a pattern upwards from a source element in the bottom row.

elements:
  - object: grid
    properties:
      - type: 2D array of integers (colors)
      - size: variable rows and columns
  - object: cell
    properties:
      - coordinates: (row, column)
      - color: integer (0 is background)
  - object: bottom_row
    properties:
      - location: last row of the grid
      - contains: patterns of non-zero colors
  - object: source_block
    properties:
      - location: within the bottom row
      - type: contiguous horizontal sequence of non-zero cells
      - centrality: typically the single centrally located block
      - length: number of cells in the block
  - object: source_cell
    properties:
      - location: central cell within the source_block
      - coordinates: (R, C) where R is the last row index
      - color: X (the color value of the cell)
  - object: projected_points
    properties:
      - location: cells above the source_cell (row < R)
      - color: same as source_color X
      - condition: only added if the target cell is initially background color (0)
      - pattern: symmetrical around the source_cell's column C

relationships:
  - type: dependency
    from: projected_points.location
    to: source_cell.location
    details: Points (r, c) are generated based on (R, C).
  - type: dependency
    from: projected_points.color
    to: source_cell.color
    details: Projected points take the color X.
  - type: dependency
    from: projected_points.pattern
    to: source_block.length (L)
    details: |
      The relationship between vertical distance (k = R - r) and horizontal distance (d = abs(c - C)) depends on L.
      If L == 1, then d = k - 1.
      If L > 1, then d = k.
  - type: constraint
    on: projected_points
    details: Projection starts from k=2 (i.e., r = R - 2), not the row immediately above (k=1). Projection occurs only within grid boundaries.

actions:
  - action: identify_source
    steps:
      - locate bottom row R
      - find contiguous non-zero blocks in row R
      - select the central block
      - find the central cell (R, C) and its color X within that block
      - determine block length L
  - action: project_pattern
    steps:
      - copy input grid to output grid
      - determine projection rule based on L (d = k-1 or d = k)
      - iterate k from 2 up to R
      - calculate target row r = R - k
      - calculate target columns c1 = C - d, c2 = C + d
      - for each target (r, c):
        - check if (r, c) is within grid bounds
        - check if output[r][c] is 0
        - if both true, set output[r][c] = X