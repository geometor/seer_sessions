task_description: Transform a 7x7 grid of digits by applying a specific transformation to 3x3 subgrids centered on the digit 7.
elements:
  - object: grid
    properties:
      - type: 2D array of integers
      - dimensions: 7x7 fixed size
      - contains: cells
  - object: cell
    properties:
      - location: (row, column) coordinates
      - value: integer digit (0-9)
  - object: background_cell_value
    description: The digit 7 often acts as a background or pivot, but can be part of the transformation.
    properties:
      - value: 7
  - object: target_block
    description: A 3x3 subgrid identified for transformation.
    properties:
      - dimensions: 3x3
      - location: defined by top-left corner (r, c) within the main grid
      - trigger_condition: The center cell of the block (at grid coordinates r+1, c+1) must contain the digit 7.
    actions:
      - identify: Scan the grid for all 3x3 blocks whose center cell is 7.
      - transform: Apply the 'Rotate_and_Swap_Corners' sequence to the digits within the block.
relationships:
  - The output grid has the same dimensions (7x7) as the input grid.
  - Cells that are *not* part of any identified target_block remain unchanged from input to output.
  - Identified target_blocks in the input are transformed and their resulting digits are placed into the corresponding 3x3 area in the output grid. Overlapping transformations might occur if multiple centers are close, but the examples suggest transformations are applied independently based on the input grid state.
transformation_rule:
  - name: Rotate_and_Swap_Corners_on_Center_7
  - steps:
    - 1: Initialize an output grid as a copy of the input grid.
    - 2: Iterate through all possible top-left corners (r, c) for a 3x3 block within the grid (i.e., `r` from 0 to 4, `c` from 0 to 4).
    - 3: For each potential block, check if the center cell (at input grid coordinates `r+1`, `c+1`) contains the digit 7.
    - 4: If the center cell is 7:
      - a: Extract the 3x3 block starting at (r, c) from the *input* grid.
      - b: Perform a 90-degree clockwise rotation on the extracted block.
      - c: Swap the element at the rotated block's relative coordinates (0, 0) with the element at (2, 2).
      - d: Swap the element at the rotated block's relative coordinates (0, 2) with the element at (2, 0). (Note: these swaps use the values resulting from step 4c if applicable, but the indices are distinct).
      - e: Place the resulting transformed 3x3 block into the *output* grid at the position starting at (r, c), overwriting the values copied in step 1.
    - 5: Return the final output grid.