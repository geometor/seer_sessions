elements:
  - role: grid
    description: A 2D array of pixels with colors 0-9 (white, blue, red, green, yellow, gray, magenta, orange, azure, maroon). Input and Output.
  - role: pixel
    properties:
      - color: integer 0-9
      - position: (row, column) coordinates
  - role: object
    description: Contiguous areas of non-white pixels. May represent shapes or lines.
  - role: special_object
    value: Gray pixel (color 5)
    description: A marker pixel that transforms based on its neighbors and potentially triggers column removal based on its context.
    properties:
      - neighbor_color: In these examples, each gray pixel has exactly one distinct non-white, non-gray neighbor color (C) in its 8-neighbourhood. The gray pixel's location adopts this color in the output.
      - position: (row, column) coordinates.
      - context: Positional relationship to the bounding box of all non-white pixels in the input grid.
  - role: bounding_box
    description: The smallest rectangle enclosing all non-white pixels in the input grid.
    properties:
      - min_row
      - min_col
      - max_row
      - max_col

relationships:
  - type: adjacency
    description: Pixels are adjacent if they share an edge or corner (8 neighbours).
  - type: gray_neighbourhood
    description: The set of non-white, non-gray pixels adjacent to a gray pixel. Always contains pixels of only one distinct color C in these examples.
  - type: position_within_bounding_box
    description: Whether a gray pixel's coordinates (r, c) fall strictly between the min/max row and column of the bounding box.

actions:
  - name: find_bounding_box
    description: Determine the min/max row/column for all non-white pixels in the input grid.
  - name: identify_gray_pixels
    description: Find all pixels with color 5 and determine their unique neighbor color C.
  - name: determine_columns_to_remove
    description: Identify columns containing gray pixels whose position (r, c) is strictly inside the bounding box (min_row < r < max_row AND min_c < c < max_c). Mark these columns for removal. (Note: This rule is only fully correct for Example 4).
  - name: apply_color_transformation
    description: Create a working copy of the grid. Change each gray pixel at (r, c) to its determined neighbor color C in the working copy.
  - name: remove_columns
    description: Construct the final output grid by excluding the columns marked for removal from the modified working copy, preserving the relative order of the remaining columns.