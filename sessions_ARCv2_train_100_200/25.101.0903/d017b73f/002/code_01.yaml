task_context:
  grid_properties:
    - height_constant: True # Grid height remains the same (H=3 in examples).
    - width_variable: True # Grid width decreases.
    - background_color: 0 # White '0' is the background color.
  objects:
    - type: column # Columns are key units of operation.
    - property: empty # Columns can be empty (all background).
    - property: non_empty # Columns containing non-background pixels.
  object_interrelations:
    - type: relative_order # Relative horizontal order of non-empty columns is preserved.
actions:
  - name: identify_empty_columns
    input: input_grid
    description: Find all columns in the input grid that consist entirely of the background color (0).
  - name: filter_columns
    input: input_grid, empty_column_indices
    output: list_of_non_empty_columns, mapping_c_to_c_new
    description: Create a list of non-empty columns and a mapping from original index `c` to new index `c_new`.
  - name: determine_column_shift
    input: original_column_index_c, grid_height_H
    output: shift_amount_S
    # description: Calculate the vertical shift amount S for the column based on its original index c. Candidate rule: S = c // H. (Note: This rule works for Ex1 but failed manual checks for Ex2,3,4).
    description: Calculate the vertical shift amount S for the column based on its original index `c`. The rule `S = c // 3` (since H=3) appears to be correct for the first example but incorrect for others, suggesting the rule is more complex or context-dependent.
  - name: apply_vertical_cyclic_shift
    input: column_data, shift_amount_S, grid_height_H
    output: shifted_column_data
    description: Shift the elements of a column vertically and cyclically by S positions. Pixel at row `r` moves to `(r + S) % H`.
  - name: construct_output_grid
    input: list_of_shifted_non_empty_columns, H, W_out
    output: output_grid
    description: Assemble the output grid by placing the shifted non-empty columns in their new positions (`c_new`).
relationships:
  - type: column_mapping
    description: A direct mapping exists between the original index `c` of non-empty columns and their new index `c_new` in the output grid, preserving order. `c_new` is the 0-based index in the sequence of non-empty columns.
  - type: vertical_shift_rule
    # description: The vertical cyclic shift amount `S` applied to a column seems determined by its original index `c` and the grid height `H`. Candidate rule: `S = c // H`. This needs further validation as it doesn't hold for all examples.
    description: The vertical cyclic shift amount `S` applied to a column appears related to its original index `c`. The rule `S = c // 3` works for Example 1 but not others. The true rule remains elusive and might depend on other factors.