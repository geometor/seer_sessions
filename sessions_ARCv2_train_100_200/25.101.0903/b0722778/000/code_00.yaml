Input Grid Structure:
  - Property: Partitioned by white rows/columns.
  - Details: White separators create a macro-grid structure.
  - Objects: 2x2 blocks of non-white pixels within the macro-grid.

Output Grid Structure:
  - Property: Preserves input height and separator rows.
  - Property: Fixed width of 2 columns.
  - Objects: 2x2 blocks arranged vertically.

Relationship: Input -> Output
  - Action: Selection.
    - Input: The three 2x2 blocks in a specific block row of the input.
    - Rule: Based on comparing the sum of pixel values within each block.
      - General Case: Select block with maximum sum (rightmost tie-break).
      - Special Case: For the second block row (index 1), select block with minimum sum.
    - Output: One selected 2x2 input block per block row.
  - Action: Transformation.
    - Input: The selected 2x2 block, denoted `[[a, b], [c, d]]`.
    - Rule: Determined by the internal pattern/symmetry of the selected block:
      - If a=c and c=d: Horizontal Reflection -> `[[b, a], [d, c]]`.
      - Else if a=b and c=d: Pattern T_ca -> `[[c, a], [c, a]]`.
      - Else if a=c and b=d: Pattern T_bbaa -> `[[b, b], [a, a]]`.
      - Else if a=c: Pattern T_ccb -> `[[c, c], [c, b]]`.
      - Else if c=d: Pattern T_abab -> `[[a, b], [a, b]]`.
      - Else if a=b: Pattern T_abbc -> `[[a, b], [b, c]]`.
      - Else (Fallback): Horizontal Reflection -> `[[b, a], [d, c]]`.
    - Output: A transformed 2x2 block.
  - Action: Construction.
    - Input: Transformed 2x2 blocks for each block row.
    - Rule: Place each transformed block into the corresponding rows of the output grid, maintaining separator rows.

Key Concepts:
  - Grid partitioning
  - Object identification (2x2 blocks)
  - Selection based on aggregate property (sum) with row-dependent criteria (max/min)
  - Transformation based on local object properties (internal symmetry)
  - Hierarchical transformation rules