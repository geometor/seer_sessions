task_description: Replace blue pixels in 'target' regions with the color found in an adjacent 'source' region. Adjacency is defined by the regions being separated by exactly one row or column composed entirely of yellow pixels between their overlapping extents.

grid_properties:
  - dimensions_preserved: Yes
  - background_color: white (0)

elements:
  - type: separator
    color: yellow (4)
    description: A full row or column composed entirely of yellow pixels that separates adjacent non-yellow regions.
    persistence: Unchanged between input and output.

  - type: source_region
    description: A contiguous region of non-yellow pixels containing exactly one unique non-white/yellow/blue color and no blue pixels.
    properties:
      - source_color: The unique distinguishing color (not 0, 1, or 4).
      - location: Bounded by separators or grid edges.
      - bounding_box: (min_row, min_col, max_row, max_col)
    persistence: Unchanged.
    role: Provides the replacement color.

  - type: target_region
    description: A contiguous region of non-yellow pixels containing one or more blue (1) pixels and no other unique non-white/yellow colors.
    properties:
      - target_pixels: Coordinates of all blue (1) pixels.
      - location: Bounded by separators or grid edges.
      - bounding_box: (min_row, min_col, max_row, max_col)
    persistence: Blue pixels are replaced.
    role: Defines areas for color replacement.

relationships:
  - type: partitioning
    element1: separator (yellow rows/columns)
    element2: grid
    description: Yellow rows/columns divide the grid into distinct non-yellow regions.

  - type: correspondence
    element1: target_region
    element2: source_region
    description: |
      Each target region corresponds to exactly one source region based on adjacency across a single yellow separator:
      1. Vertical Adjacency: The source region is above the target region such that `source_max_row + 1 == target_min_row - 1`, AND the intervening row (`source_max_row + 1`) is entirely yellow within their horizontally overlapping columns.
      OR
      2. Horizontal Adjacency: The source region is to the left of the target region such that `source_max_col + 1 == target_min_col - 1`, AND the intervening column (`source_max_col + 1`) is entirely yellow within their vertically overlapping rows.

actions:
  - action: identify_regions
    inputs: [grid]
    outputs: [list_of_regions]
    description: Find contiguous areas of non-yellow pixels, using yellow pixels as boundaries.

  - action: classify_regions
    inputs: [list_of_regions, grid]
    outputs: [list_of_source_regions, list_of_target_regions]
    description: Analyze pixel content of each region to classify as 'source' or 'target' and extract properties (source_color, blue_coords, bbox).

  - action: map_regions
    inputs: [list_of_source_regions, list_of_target_regions, grid]
    outputs: [dictionary_mapping_target_to_source_color]
    description: For each target region, find the unique source region satisfying either the vertical or horizontal adjacency rule across a single yellow separator row/column. Store the mapping from target region coordinates to the corresponding source color.

  - action: replace_pixels
    inputs: [target_region_pixels, source_color, output_grid]
    outputs: [modified_output_grid]
    description: In the output grid, change the color of all identified blue pixels within a target region to the source color determined by the mapping.