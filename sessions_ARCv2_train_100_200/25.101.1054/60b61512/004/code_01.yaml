task_context:
  grid_size: 9x9 in examples, potentially variable.
  colors_used:
    - white (0) - background
    - yellow (4) - input shapes
    - orange (7) - output derived color
objects:
  - type: shapes
    color: yellow (4)
    description: Contiguous blocks of yellow pixels forming distinct shapes. Remain unchanged in the output.
  - type: background
    color: white (0)
    description: The background color. Specific white pixels change to orange based on local patterns.
transformation:
  type: pattern_based_fill
  input_pixels_preserved:
    - yellow (4)
    - white (0) pixels not matching specific patterns
    - all other colors (if any were present)
  input_pixels_changed:
    - white (0) pixels whose local neighborhood matches predefined patterns.
  output_pixels_created:
    - orange (7)
  rule_description: >
    Identifies white pixels (0) in the input grid whose Moore neighborhood
    (8 surrounding pixels) contains yellow pixels (4) forming specific geometric patterns.
    Each distinct pattern of relative yellow neighbor coordinates corresponds to a condition
    for changing the central white pixel to orange (7). The observed patterns
    correspond to filling various types of concavities or corners in the yellow shapes.
    There are multiple such patterns involving 1, 2, 3, 4, 5, or 6 yellow neighbors.
relationship:
  - Orange pixels only appear in the output where white pixels existed in the input.
  - The transformation rule is local, depending only on the 3x3 neighborhood around each white pixel in the input.
  - The set of triggering patterns appears fixed across the examples.
uncertainty:
  - The exact definition of *all* possible triggering patterns is based only on the training examples. There might be other valid patterns not seen yet.
  - A concise geometric description covering all identified patterns (beyond "filling concavities") is elusive. The definition relies on listing the specific relative coordinate sets.