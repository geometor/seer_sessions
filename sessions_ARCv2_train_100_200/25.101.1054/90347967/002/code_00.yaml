Transformation: Geometric Rotation

Input Grid Properties:
  - dimensions: Variable (H, W)
  - background_color: white (0)
  - content: Contains one or more non-white pixels, potentially forming objects or patterns.
  - non_white_pixel_count: Preserved between input and output.
  - bounding_box_content: The arrangement of non-white pixels within their minimal bounding box.
  - bounding_box_size: Preserved between input and output (e.g., train_1: 3x2 -> 3x2, train_2: 3x4 -> 3x4, train_3: 3x4 -> 3x4).

Output Grid Properties:
  - dimensions: Same as input (H, W)
  - background_color: white (0)
  - content: Transformed version of input content.

Relationships & Actions (Hypothesized Rule based on train_1, train_2):
  - rule: Rotate the entire input grid by 180 degrees around its center.
  - pixel_mapping: Each pixel at input coordinate (r, c) moves to output coordinate (H - 1 - r, W - 1 - c).
  - color_preservation: The color of each pixel is preserved during the transformation.
  - scope: The rotation applies globally to all pixels in the grid.

Discrepancy:
  - train_3: The expected output provided for train_3 does not match the result of applying the 180-degree global rotation rule.
    - Input BB: (2,0) to (4,3)
    - Expected Output BB: (0,3) to (2,6)
    - 180-degree Rotation Output BB: (4,5) to (6,8)
  - The transformation rule required to match the train_3 expected output appears different and specific to that example, possibly involving rotation/reflection of content within the bounding box combined with a specific relocation of the bounding box itself.
  - Given the inconsistency, the 180-degree global rotation is retained as the primary hypothesis as it explains the majority (2/3) of the examples.
