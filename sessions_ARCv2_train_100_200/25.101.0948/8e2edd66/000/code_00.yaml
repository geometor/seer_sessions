task_context:
  grid_dimensions:
    input: 3x3
    output: 9x9
  scaling_factor: 3
  colors:
    background: white (0)
    active: one non-white color (varies per example: 8, 9, 7)
    persistence: active color is preserved from input to output

transformation_elements:
  - object: input_grid (I)
    properties:
      - size: 3x3
      - contains: background color (0) and one active color (C)
  - object: inverse_pattern (InvP)
    properties:
      - size: 3x3
    derivation:
      - Based on input_grid I and active_color C
      - Rule: InvP[r, c] = C if I[r, c] == 0, else InvP[r, c] = 0
  - object: output_grid (O)
    properties:
      - size: 9x9
      - composition: 3x3 grid of 3x3 subgrids
    derivation:
      - Initialize O with background color (0)
      - Iterate through input_grid I at coordinates (R_sub, C_sub)
      - Condition: Check if I[R_sub, C_sub] == 0
      - Action: If condition is true, copy inverse_pattern InvP to the subgrid of O starting at (R_sub * 3, C_sub * 3)

relationships:
  - output grid structure is determined by input grid values
  - the pattern placed in output subgrids is the inverse of the input grid pattern
  - placement occurs only where the corresponding input grid cell is the background color (0)