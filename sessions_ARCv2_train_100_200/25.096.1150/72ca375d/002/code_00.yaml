task_description: Identify distinct non-zero objects, calculate properties, apply a selection rule prioritizing density (with exception for single-cell full density objects) and using area/mass for tie-breaking, then extract the selected object's bounding box.

input_elements:
  - type: grid
    rows: 10
    columns: 10
    cell_type: digit (0-9)
    properties:
      - background_value: 0
      - objects:
          description: Connected components of identical non-zero digits.
          connectivity: orthogonal

output_elements:
  - type: grid
    properties:
      - content: Subgrid extracted from the input grid.
      - source: Corresponds to the bounding box of a selected object from the input.

transformation_steps:
  - action: identify_objects
    description: Find all distinct connected components of non-zero cells.
    inputs: input_grid
    outputs: list_of_objects
      - object_properties:
          - id
          - color
          - cell_coordinates
  - action: calculate_object_properties
    description: For each object, calculate mass, bounding box, area, and density.
    inputs: list_of_objects
    outputs: list_of_objects_with_properties
      - object_properties:
          - id
          - color
          - cell_coordinates
          - mass: count of cells
          - bounding_box: (min_r, max_r, min_c, max_c)
          - area: bounding_box_height * bounding_box_width
          - density: mass / area
  - action: filter_objects
    description: Create a filtered list of candidate objects, excluding any object where density is 1.0 AND mass is 1. If filtering removes all objects, use the original list.
    inputs: list_of_objects_with_properties
    outputs: candidate_objects_list
  - action: find_max_density_candidates
    description: Identify the maximum density among the candidate objects.
    inputs: candidate_objects_list
    outputs: max_density_value
  - action: select_primary_candidates
    description: Select all candidate objects that have the max_density_value.
    inputs:
      - candidate_objects_list
      - max_density_value
    outputs: primary_candidate_objects
  - action: tie_break_by_area
    description: If multiple primary candidates exist, select the one(s) with the maximum bounding box area.
    inputs: primary_candidate_objects
    outputs: secondary_candidate_objects
  - action: tie_break_by_mass
    description: If multiple secondary candidates exist, select the one(s) with the maximum mass.
    inputs: secondary_candidate_objects
    outputs: tertiary_candidate_objects
  - action: select_final_object
    description: Select the first object from the final list of candidates (tertiary, or secondary/primary if no ties occurred at those stages).
    inputs: tertiary_candidate_objects (or secondary/primary)
    outputs: target_object
  - action: extract_output
    description: Extract the subgrid defined by the bounding box of the target_object.
    inputs:
      - input_grid
      - target_object.bounding_box
    outputs: output_grid
