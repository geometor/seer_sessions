Grid:
  type: 2D array
  elements: integers (0-9)
  background_color: 0

Objects:
  - Cell:
      properties: [row, column, color (integer value)]
  - HorizontalSegment:
      properties: [row, start_column, end_column, color, length]
  - PatternInstance:
      properties:
        - lowest_row_index: r (must be > 0 for pattern to be possible)
        - flanker_color: F (non-zero)
        # Widest pair of F in row r defines boundaries
        - flanker_left_col: c_left (minimum column index where grid[r, col] == F)
        - flanker_right_col: c_right (maximum column index where grid[r, col] == F)
        # First C segment found between *widest* flankers
        - contained_color: C (C != F, C != 0)
        - contained_start_col: c_start
        - contained_end_col: c_end
        - structure_valid: boolean # Aggregates checks below
        - check_intermediate_left: boolean (cells grid[r, c_left+1 : c_start] must all be F)
        - check_intermediate_right: boolean (cells grid[r, c_end+1 : c_right] must all be F)
        - check_above_contained: boolean (cells grid[r-1, c_start : c_end+1] must all be F)
        - contained_touches_flankers: boolean (c_start == c_left + 1 AND c_end == c_right - 1) # Based on widest flankers

Relationships:
  - spatial: [above, below, left_of, right_of, between, adjacent_to, contained_within]
  - value: [equal_color, different_color, non_zero]

Actions:
  - Find Lowest Non-Zero Row: Identify index 'r'.
  - Find Widest Flanker Pair: For a color F in row r, find min(c) and max(c) where grid[r,c]==F.
  - Scan Segment: Iterate through cells in a horizontal segment.
  - Identify Contained Segment: Find the first contiguous non-zero segment with color != F between flankers.
  - Validate Structure: Perform the three checks (intermediate left, intermediate right, above contained).
  - Copy Grid: Duplicate input to create initial output.
  - Place Elements: Modify output grid by setting cell colors based on pattern type and coordinates (c_left, c_right, C).

Placement Rules:
  - Rule_Type_1 (if contained_touches_flankers is true):
      - Add color C at (r-2, c_left)
      - Add color C at (r-2, c_right)
      - Constraints: Placement occurs only if target rows/columns are within grid bounds.
  - Rule_Type_2 (if contained_touches_flankers is false):
      - Add color C at (r-3, c_left)
      - Add color C at (r-3, c_right)
      - Add color C at (r-2, c_left + 1)
      - Add color C at (r-2, c_right - 1)
      - Constraints: Placement occurs only if target rows/columns are within grid bounds.