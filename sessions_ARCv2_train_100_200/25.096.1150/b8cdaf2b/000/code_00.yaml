Grid:
  type: 2D array
  elements: integers (0-9)
  background_color: 0

Objects:
  - Cell:
      properties: [row, column, color (integer value)]
  - HorizontalSegment:
      properties: [row, start_column, end_column, color, length]
  - PatternInstance:
      properties:
        - lowest_row_index: r
        - flanker_color: F
        - flanker_left_col: c_left
        - flanker_right_col: c_right
        - contained_color: C (C != F)
        - contained_start_col: c_start
        - contained_end_col: c_end
        - structure_valid: boolean (checks intermediate F's in row r, and F's above C in row r-1)
        - contained_touches_flankers: boolean (c_start == c_left + 1 AND c_end == c_right - 1)

Relationships:
  - spatial: [above, below, left_of, right_of, between, adjacent_to]
  - value: [equal_color, different_color]

Actions:
  - Find Lowest Non-Zero Row: Identify index 'r'.
  - Scan Row: Iterate through cells in a row.
  - Identify Pattern: Match the specific structure (Flankers, Contained, Intermediates, Above).
  - Copy Grid: Duplicate input to create initial output.
  - Place Elements: Modify output grid by setting cell colors based on pattern type.

Placement Rules:
  - Rule_Type_1 (if contained_touches_flankers is true):
      - Add color C at (r-2, c_left)
      - Add color C at (r-2, c_right)
  - Rule_Type_2 (if contained_touches_flankers is false):
      - Add color C at (r-3, c_left)
      - Add color C at (r-3, c_right)
      - Add color C at (r-2, c_left + 1)
      - Add color C at (r-2, c_right - 1)