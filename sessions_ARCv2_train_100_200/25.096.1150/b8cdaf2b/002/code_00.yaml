Grid:
  type: 2D array
  elements: integers (0-9)
  background_color: 0

Objects:
  - Cell:
      properties: [row, column, color (integer value)]
  - HorizontalSegment:
      properties: [row, start_column, end_column, color, length]
  - PatternInstance:
      properties:
        - found: boolean
        - lowest_row_index: r
        - flanker_color: F
        - flanker_left_col: c_left
        - flanker_right_col: c_right
        - contained_color: C (C != F)
        - contained_start_col: c_start
        - contained_end_col: c_end
        - structure_valid: boolean # Aggregates checks below
        - intermediates_before_valid: boolean # Checks F's between left flanker and C in row r
        - intermediates_after_valid: boolean # Checks F's between C and right flanker in row r
        - above_valid: boolean # Checks F's above C in row r-1
        - contained_touches_flankers: boolean # c_start == c_left + 1 AND c_end == c_right - 1

Relationships:
  - spatial: [above, below, left_of, right_of, between, adjacent_to, aligned_horizontally_with]
  - value: [equal_color, different_color]

Actions:
  - Find_Lowest_Non_Zero_Row: Identify index 'r'.
  - Scan_Row_For_Pattern:
      - Identify pairs of cells with same non-zero color F (flankers) at (r, c_left), (r, c_right).
      - Identify contiguous non-zero segment C between flankers (color != F) from c_start to c_end.
      - Validate intermediate cells in row r (must be F).
      - Validate cells above C in row r-1 (must be F).
  - Copy_Grid: Duplicate input to create initial output.
  - Place_Elements: Modify output grid based on pattern type and coordinates.

Placement_Rules:
  - Rule_Type_1:
      condition: pattern.found AND pattern.contained_touches_flankers
      action: Add color C at (r-2, c_left) and (r-2, c_right)
  - Rule_Type_2:
      condition: pattern.found AND NOT pattern.contained_touches_flankers
      action: Add color C at (r-3, c_left), (r-3, c_right), (r-2, c_left + 1), and (r-2, c_right - 1)