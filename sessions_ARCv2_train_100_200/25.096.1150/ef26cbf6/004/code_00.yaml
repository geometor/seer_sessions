task_elements:
  - type: grid
    properties:
      - numeric_cells
      - 2D_structure
objects:
  - object: cell
    properties:
      - value: digit (0-9)
      - position: (row, column)
  - object: horizontal_separator
    properties:
      - type: row
      - composition: all cells contain '4'
      - role: divides grid into horizontal segments
      - behavior: remains unchanged
  - object: vertical_separator
    properties:
      - type: column
      - composition: contains '4' at intersection with horizontal_separator rows
      - role: divides segments into vertical regions
  - object: horizontal_segment
    properties:
      - type: set_of_rows
      - location: between horizontal_separators (or grid edge and separator)
      - role: unit of processing for key analysis and replacement
  - object: vertical_region
    properties:
      - type: set_of_columns
      - location: between vertical_separators (or grid edge and separator)
      - role: defines scope for key association
  - object: placeholder_digit
    properties:
      - value: 1
      - role: target for replacement
  - object: key_digit
    properties:
      - value: non-zero digit, not '1', not '4' (e.g., 2, 3, 5, 6, 7, 8)
      - role: source value for replacement
  - object: region_key_map
    properties:
      - type: dictionary
      - structure: {region_index: key_digit}
      - role: stores the representative key for each region within a segment
  - object: key_memory
    properties:
      - type: dictionary
      - structure: {region_index: key_digit}
      - role: holds the region_key_map from the most recent segment that contained any keys
relationships:
  - relationship: segment_contains_cells
  - relationship: region_contains_cells
  - relationship: cell_has_value
  - relationship: cell_has_position
  - relationship: key_digit_belongs_to_region
actions:
  - action: identify_separators
    target: grid
    output: horizontal_separator_rows, vertical_separator_columns
  - action: define_segments
    based_on: horizontal_separator_rows
  - action: define_regions
    based_on: vertical_separator_columns
    output: mapping from column_index to region_index
  - action: process_segment
    target: horizontal_segment
    inputs:
      - segment_data (from input_grid)
      - key_memory (from previous processed segment)
    steps:
      - find_keys_and_map_to_regions: Identify all key_digits and create the segment's region_key_map (first key per region).
      - count_unique_keys: Determine the number of unique key_digits in the segment.
      - apply_replacement_rule:
          - if unique_keys == 1: replace '1's in the current segment (output_grid) with the single key.
          - if unique_keys == 0: replace '1's in the current segment (output_grid) using the key_memory map based on cell's region_index.
          - if unique_keys > 1: do not replace '1's in the current segment.
      - update_key_memory: If keys were found in this segment (region_key_map is not empty), update the key_memory with this segment's region_key_map.
    output:
      - modified_segment (in output_grid)
      - updated_key_memory