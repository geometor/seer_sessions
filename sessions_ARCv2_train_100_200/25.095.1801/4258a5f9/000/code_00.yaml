task_elements:
  - object: Grid
    description: A 2D array of numerical values.
    properties:
      - dimensions (rows, columns)
      - cells
  - object: Cell
    description: An individual element within the grid.
    properties:
      - coordinates (row, column)
      - value (integer)
  - object: Input Grid
    inherits: Grid
    description: The initial state of the grid provided as input.
    contains_values: [0, 5]
  - object: Output Grid
    inherits: Grid
    description: The transformed state of the grid produced as output.
    contains_values: [0, 1, 5]
  - value: 5
    role: Source marker
    persistence: Preserved from input to output at its original location.
    action_trigger: Causes adjacent cells to change value in the output.
  - value: 1
    role: Generated marker
    generation: Appears in the output grid in cells neighboring a '5' in the input grid.
    condition: Only appears in cells that were originally '0' in the input grid.
  - relationship: Adjacency (Moore Neighborhood)
    description: Cells are considered adjacent if they share an edge or a corner (8 surrounding cells).
    applies_to: Cells within the grid.
    relevance: Determines where '1's are generated relative to '5's.
actions:
  - action: Identify Source Cells
    description: Locate all cells in the input grid containing the value 5.
  - action: Generate Neighbor Markers
    description: For each source cell (containing 5), identify its adjacent cells (Moore neighborhood).
  - action: Update Output Grid
    description: Create the output grid based on the input grid and identified adjacencies.
    steps:
      - Initialize output grid with the same dimensions as the input, filled with 0s.
      - For each cell (r, c):
        - If input[r][c] is 5, set output[r][c] to 5.
        - Else (if input[r][c] is 0):
          - Check if any of the 8 neighbors of (r, c) in the *input* grid contain the value 5.
          - If yes, set output[r][c] to 1.
          - If no, output[r][c] remains 0.