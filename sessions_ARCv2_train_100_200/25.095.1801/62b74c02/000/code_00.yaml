task_elements:
  - object: line
    properties:
      - type: sequence of integers
      - structure: initial non-zero subsequence followed by zero padding
      - length: L (variable per example, constant within line transformation)
  - object: initial_sequence (S_initial)
    properties:
      - type: subsequence of integers
      - location: prefix of the input line
      - content: all non-zero elements at the start
      - length: N
  - object: first_element
    properties:
      - type: integer
      - source: the first element of S_initial
  - object: tail_sequence
    properties:
      - type: subsequence of integers
      - source: all elements of S_initial except the first
      - length: N - 1
  - object: zero_padding
    properties:
      - type: subsequence of integers
      - content: consists only of zeros
      - location: follows S_initial in the input line
      - length: L - N
  - object: middle_fill
    properties:
      - type: subsequence of integers
      - content: repetitions of first_element
      - length: calculated based on other lengths (L - N - (N - 1))
  - object: output_line
    properties:
      - type: sequence of integers
      - length: L (same as input line)
      - structure: concatenation of S_initial, middle_fill, and tail_sequence

relationships:
  - input_line transforms_to output_line
  - output_line length equals input_line length
  - S_initial is the prefix of both input_line (before zeros) and output_line
  - tail_sequence is the suffix of the output_line's generated part
  - middle_fill content is determined by first_element
  - middle_fill length is determined by L, N

actions:
  - identify: S_initial in the input line
  - extract: first_element from S_initial
  - extract: tail_sequence from S_initial
  - calculate: length of middle_fill needed (num_repeats = L - N - (N - 1))
  - generate: middle_fill by repeating first_element num_repeats times
  - construct: output_line by concatenating S_initial, middle_fill, tail_sequence