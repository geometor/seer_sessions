task_description: Transform an input grid containing two non-zero markers by drawing horizontal and vertical lines corresponding to each marker's position and value onto an output grid, handling line intersections specifically.

grid_properties:
  type: 2D array of integers
  dimensions: 9x9 # Based on examples
  background_value: 0

objects:
  - object: marker
    description: A non-zero cell in the input grid acting as a seed for the transformation.
    count: 2 # Exactly two markers per input grid.
    properties:
      - value: v (integer, e.g., 8 or 7 in examples)
      - coordinates: (row, column) # 0-based index

derived_elements:
  - element: horizontal_line
    description: A full row in the output grid associated with a marker.
    properties:
      - row_index: Matches the marker's row index.
      - primary_value: Matches the marker's value.
  - element: vertical_line
    description: A full column in the output grid associated with a marker.
    properties:
      - column_index: Matches the marker's column index.
      - primary_value: Matches the marker's value.
  - element: intersection_point
    description: A cell where a horizontal line from one marker crosses a vertical line from the other marker.
    properties:
      - coordinates: (marker1_row, marker2_col) or (marker2_row, marker1_col)
      - value: 2 # Specific value for these cross-intersections.

transformation_rule:
  inputs:
    - name: grid_input
      type: 2D array
  outputs:
    - name: grid_output
      type: 2D array
  steps:
    - step: 1
      action: find_markers
      description: Identify the two non-zero cells in grid_input. Store their values as v1, v2 and coordinates as (r1, c1), (r2, c2).
    - step: 2
      action: initialize_output
      description: Create grid_output with the same dimensions as grid_input, filled with the background_value (0).
    - step: 3
      action: draw_line_set_1
      description: Fill row r1 and column c1 of grid_output with value v1.
    - step: 4
      action: draw_line_set_2
      description: Fill row r2 and column c2 of grid_output with value v2. (Note: This overwrites values from step 3 where lines overlap).
    - step: 5
      action: set_intersections
      description: Set grid_output[r1][c2] to 2. Set grid_output[r2][c1] to 2.
    - step: 6
      action: restore_originals
      description: Set grid_output[r1][c1] to v1. Set grid_output[r2][c2] to v2. (Ensures original marker locations have correct values after potential overwrites).

constants:
  intersection_marker_value: 2