task_description: Construct a 3x3 output grid by selecting specific elements from a 5x7 input grid based on index mappings, with a conditional rule for the central element.

input_grid:
  properties:
    - dimensions: 5 rows x 7 columns
    - element_type: non-negative integers
    - structure: 2D array

output_grid:
  properties:
    - dimensions: 3 rows x 3 columns
    - element_type: non-negative integers
    - structure: 2D array

transformation:
  type: selection / subsampling with conditional logic
  details: Most cells in the output grid correspond to a specific cell in the input grid via fixed mapping. The central cell's mapping is conditional.
  fixed_mapping:
    # Row mapping: output_row -> input_row
    # Col mapping: output_col -> input_col
    (0, 0): (0, 0)
    (0, 1): (0, 5)
    (0, 2): (0, 6)
    (1, 0): (1, 0)
    # (1, 1) is conditional
    (1, 2): (1, 6)
    (2, 0): (4, 0)
    (2, 1): (4, 5)
    (2, 2): (4, 6)
  conditional_mapping:
    target_cell: Output[1, 1]
    condition_check_cell: Input[1, 5]
    primary_source_cell: Input[1, 5]
    alternative_source_cell: Input[3, 5]
    rule: Output[1, 1] = Input[1, 5] if Input[1, 5] != 0 else Input[3, 5]
  rule_summary: For Output[r_out, c_out]:
    if (r_out, c_out) == (1, 1):
      if Input[1, 5] != 0:
        value = Input[1, 5]
      else:
        value = Input[3, 5]
    else:
      r_in = map_row[r_out] # map_row = {0:0, 1:1, 2:4}
      c_in = map_col[c_out] # map_col = {0:0, 1:5, 2:6}
      value = Input[r_in, c_in]
    Output[r_out, c_out] = value

examples_consistency: The revised mapping (fixed + conditional) holds true for all provided training examples.