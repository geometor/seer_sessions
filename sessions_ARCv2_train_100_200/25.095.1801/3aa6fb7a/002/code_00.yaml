objects:
  - grid: A 2D array of integers representing the state.
  - cell: An individual element within the grid, identified by row and column index.
  - neighbors: The set of up to 8 cells directly or diagonally adjacent to a given cell.

properties:
  - cell.value: The integer value of a cell (0 or 8 in input, 0, 1, or 8 in output).
  - cell.position: The (row, column) coordinates of a cell.
  - grid.dimensions: The height and width of the grid.

actions:
  - transform_grid: Creates a new output grid based on the input grid according to specific rules.
  - count_neighbors: Determines the number of neighbors for a given cell that have a specific value (e.g., 8).
  - update_cell_value: Sets the value of a cell in the output grid based on its corresponding input cell's value and neighbor count.

relationships:
  - rule: The value of a cell in the output grid is determined by its value and the values of its neighbors in the input grid.
  - condition_0_to_1: An input cell with value 0 transitions to value 1 in the output grid if and only if it has exactly three neighbors with value 8 in the input grid.
  - condition_0_to_0: An input cell with value 0 remains value 0 in the output grid if it has any number of 8-neighbors other than exactly three.
  - condition_8_to_8: An input cell with value 8 remains value 8 in the output grid, regardless of its neighbors.
  - invariance: Grid dimensions remain constant between input and output.
  - discrepancy_observed: In train_1, cell (4, 3) has value 0 and exactly three 8-neighbors in the input, but its expected output value is 0, contradicting the general rule observed in all other cases. The transformation code produces 1 at this location based on the general rule.